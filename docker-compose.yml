networks:
  zenfleet_network:
    driver: bridge

volumes:
  zenfleet_postgres_data:
  zenfleet_redis_data:

services:
  # --- Service PHP (Application Laravel) ---
  php:
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
      args:
        USER_ID: ${UID:-1000}
        GROUP_ID: ${GID:-1000}
    container_name: zenfleet_php
    restart: unless-stopped
    dns:
      - 8.8.8.8
      - 1.1.1.1
    volumes:
      - ./:/var/www/html
    networks:
      - zenfleet_network
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
      pdf-service:
        condition: service_healthy

  # --- Service Nginx (Serveur Web) ---
  nginx:
    image: nginx:1.25-alpine
    container_name: zenfleet_nginx
    restart: unless-stopped
    ports: ["80:80"]
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/zenfleet.conf:/etc/nginx/conf.d/default.conf
    networks:
      - zenfleet_network
    depends_on:
      - php

  # --- Base de Données (PostgreSQL) ---
  database:
    image: postgis/postgis:16-3.4-alpine
    container_name: zenfleet_database
    restart: unless-stopped
    ports: ["5432:5432"]
    volumes:
      - zenfleet_postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    networks:
      - zenfleet_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # --- Cache & Queues (Redis) ---
  redis:
    image: redis:7-alpine
    container_name: zenfleet_redis
    restart: unless-stopped
    volumes:
      - zenfleet_redis_data:/data
    networks:
      - zenfleet_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
  
  # --- Service Node.js pour le DÉVELOPPEMENT (yarn, vite) ---
  node:
    build:
      context: .
      dockerfile: ./docker/node_dev/Dockerfile
      args:
        USER_ID: ${UID:-1000}
        GROUP_ID: ${GID:-1000}
    container_name: zenfleet_node_dev
    volumes:
      - .:/var/www/html
    dns:
      - 8.8.8.8
      - 1.1.1.1
    working_dir: /var/www/html
    tty: true

  # --- Microservice de Génération de PDF ---
  pdf-service:
    build:
      context: ./pdf-service
    container_name: zenfleet_pdf_service
    restart: unless-stopped
    networks:
      zenfleet_network:
        aliases:
          - node
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
