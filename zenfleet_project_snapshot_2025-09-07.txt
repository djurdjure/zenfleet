Snapshot complet du projet ZenFleet - Sun Sep  7 14:24:01 CET 2025
===================================================

////////////////////////////////////////////////////////////////
CHEMIN : ./.env
////////////////////////////////////////////////////////////////

#===============================================================================
# üöÄ ZENFLEET ENTERPRISE - CONFIGURATION ENVIRONNEMENT
#===============================================================================
# Version: Enterprise v1.0
# Derni√®re mise √† jour: 2025-09-06
# Niveau de s√©curit√©: Production Ready
#===============================================================================

#-------------------------------------------------------------------------------
# üì± APPLICATION CORE SETTINGS
#-------------------------------------------------------------------------------
APP_NAME=ZenFleet
APP_ENV=local
APP_KEY=base64:8WWgKSWhsypIcEcojZl8q9k0HmecY7oORuGSQCjHmMs=
APP_DEBUG=true
APP_URL=http://localhost
APP_TIMEZONE=Europe/Paris
APP_LOCALE=fr
APP_FALLBACK_LOCALE=en

#-------------------------------------------------------------------------------
# üõ°Ô∏è S√âCURIT√â ET AUTHENTIFICATION
#-------------------------------------------------------------------------------
# Chiffrement et hashing
BCRYPT_ROUNDS=12
HASH_DRIVER=bcrypt

# Sessions s√©curis√©es
SESSION_DRIVER=redis
SESSION_LIFETIME=480
SESSION_ENCRYPT=true
SESSION_HTTP_ONLY=true
SESSION_SAME_SITE=lax
SESSION_SECURE_COOKIES=false

# Protection CSRF et s√©curit√© web
SANCTUM_STATEFUL_DOMAINS=localhost,127.0.0.1,zenfleet.local
CSRF_COOKIE_NAME=zenfleet_token
CSRF_HEADER_NAME=X-CSRF-TOKEN

# Limitation des tentatives de connexion
LOGIN_THROTTLE_MAX_ATTEMPTS=5
LOGIN_THROTTLE_DECAY_MINUTES=60

# Mots de passe - Politique de s√©curit√©
PASSWORD_MIN_LENGTH=8
PASSWORD_REQUIRE_UPPERCASE=true
PASSWORD_REQUIRE_LOWERCASE=true
PASSWORD_REQUIRE_NUMBERS=true
PASSWORD_REQUIRE_SYMBOLS=true
PASSWORD_EXPIRY_DAYS=90

#-------------------------------------------------------------------------------
# üìä LOGGING ENTERPRISE - ‚úÖ CONFIGURATION CORRIG√âE
#-------------------------------------------------------------------------------
# Configuration principale - ‚úÖ CORRECTION: Utiliser daily au lieu de stack temporairement
LOG_CHANNEL=daily
LOG_DEPRECATIONS_CHANNEL=null
LOG_LEVEL=debug

# R√©tention des logs par type (en jours)
LOG_RETENTION_DAYS=30
AUDIT_RETENTION_DAYS=365
SECURITY_RETENTION_DAYS=180
AUTH_RETENTION_DAYS=90
AUTHZ_RETENTION_DAYS=90
PERFORMANCE_RETENTION_DAYS=30
DB_RETENTION_DAYS=14
API_RETENTION_DAYS=30
ERROR_RETENTION_DAYS=60
CRITICAL_RETENTION_DAYS=180

# Logs m√©tier ZenFleet
TRACKING_RETENTION_DAYS=90
MAINTENANCE_RETENTION_DAYS=180
ASSIGNMENT_RETENTION_DAYS=60

# Configuration rotation et monitoring
LOG_ROTATION_ENABLED=true
LOG_MAX_SIZE=100MB
LOG_COMPRESS=true
LOG_MONITORING_ENABLED=false
LOG_ALERT_THRESHOLD=100

# Niveaux de log sp√©cialis√©s
DB_LOG_LEVEL=warning
SLACK_LOG_LEVEL=error
TEAMS_LOG_LEVEL=critical

#-------------------------------------------------------------------------------
# üóÑÔ∏è BASE DE DONN√âES - PostgreSQL OPTIMIS√â
#-------------------------------------------------------------------------------
DB_CONNECTION=pgsql
DB_HOST=database
DB_PORT=5432
DB_DATABASE=zenfleet_db
DB_USERNAME=zenfleet_user
DB_PASSWORD=zenfleet_pass

# Configuration avanc√©e PostgreSQL
DB_SCHEMA=public
DB_CHARSET=utf8
DB_COLLATION=utf8_unicode_ci
DB_PREFIX=
DB_SSLMODE=prefer
DB_TIMEZONE=Europe/Paris

# Pool de connexions et performance
DB_POOL_SIZE=20
DB_MAX_CONNECTIONS=100
DB_TIMEOUT=60
DB_SLOW_QUERY_LOG=true
DB_SLOW_QUERY_TIME=1000

#-------------------------------------------------------------------------------
# üöÄ CACHE ET PERFORMANCE - Redis CLUSTER
#-------------------------------------------------------------------------------
CACHE_DRIVER=redis
CACHE_PREFIX=zenfleet_cache
CACHE_TTL=3600

# Configuration Redis
REDIS_HOST=redis
REDIS_PASSWORD=null
REDIS_PORT=6379
REDIS_DB=0
REDIS_CACHE_DB=1
REDIS_SESSION_DB=2
REDIS_QUEUE_DB=3

# Redis Cluster (pour production)
REDIS_CLUSTER_ENABLED=false
REDIS_SENTINEL_ENABLED=false
REDIS_PERSISTENT_CONNECTIONS=true

#-------------------------------------------------------------------------------
# üîÑ QUEUES ET WORKERS
#-------------------------------------------------------------------------------
QUEUE_CONNECTION=redis
QUEUE_FAILED_DRIVER=database-uuids
QUEUE_PREFIX=zenfleet_queue

# Configuration workers
QUEUE_RETRY_AFTER=90
QUEUE_MAX_TRIES=3
QUEUE_TIMEOUT=60

# Queues sp√©cialis√©es ZenFleet
QUEUE_MAINTENANCE_ALERTS=high
QUEUE_TRACKING_UPDATES=default
QUEUE_NOTIFICATIONS=low
QUEUE_REPORTS_GENERATION=low

#-------------------------------------------------------------------------------
# üìß EMAIL ET NOTIFICATIONS
#-------------------------------------------------------------------------------
MAIL_MAILER=smtp
MAIL_HOST=mailpit
MAIL_PORT=1025
MAIL_USERNAME=null
MAIL_PASSWORD=null
MAIL_ENCRYPTION=null
MAIL_FROM_ADDRESS="noreply@zenfleet.com"
MAIL_FROM_NAME="${APP_NAME}"

# Configuration SMTP s√©curis√©e pour production
# MAIL_HOST=smtp.mailtrap.io
# MAIL_PORT=587
# MAIL_USERNAME=your_username
# MAIL_PASSWORD=your_password
# MAIL_ENCRYPTION=tls

# Notifications syst√®me
ADMIN_EMAIL=admin@zenfleet.app
TECHNICAL_EMAIL=tech@zenfleet.app
SECURITY_EMAIL=security@zenfleet.app

# Templates et branding
MAIL_LOGO_URL="${APP_URL}/images/logo.png"
MAIL_THEME=zenfleet
MAIL_MARKDOWN_THEME=default

#-------------------------------------------------------------------------------
# üì± NOTIFICATIONS EXTERNES - ‚úÖ ALERTES CORRIG√âES
#-------------------------------------------------------------------------------
# ‚úÖ CORRECTION CRITIQUE: URLs vides pour √©viter l'erreur cURL 3
# Slack Integration - LAISSER VIDE si non configur√©
LOG_SLACK_WEBHOOK_URL=
SLACK_CHANNEL=#zenfleet-alerts
SLACK_USERNAME=ZenFleet-Bot
SLACK_ICON=:truck:

# Microsoft Teams Integration - LAISSER VIDE si non configur√©
LOG_TEAMS_WEBHOOK_URL=
TEAMS_TITLE="ZenFleet Alert"

# Discord Integration (optionnel) - LAISSER VIDE si non configur√©
DISCORD_WEBHOOK_URL=
DISCORD_USERNAME=ZenFleet

# ‚úÖ POUR ACTIVER PLUS TARD, utilisez des URLs compl√®tes valides:
# LOG_SLACK_WEBHOOK_URL="https://hooks.slack.com/services/YOUR/ACTUAL/WEBHOOK"
# LOG_TEAMS_WEBHOOK_URL="https://your-company.webhook.office.com/webhookb2/YOUR-WEBHOOK"

#-------------------------------------------------------------------------------
# üìÅ STOCKAGE ET FICHIERS
#-------------------------------------------------------------------------------
FILESYSTEM_DISK=local
FILESYSTEM_DRIVER=local

# Configuration stockage
STORAGE_DOCUMENTS_DISK=local
STORAGE_AVATARS_DISK=local
STORAGE_MAINTENANCE_DISK=local
STORAGE_REPORTS_DISK=local

# Limites de fichiers
MAX_FILE_UPLOAD_SIZE=10240
ALLOWED_DOCUMENT_TYPES=pdf,doc,docx,xls,xlsx,jpg,jpeg,png,gif
ALLOWED_AVATAR_TYPES=jpg,jpeg,png,gif
MAX_AVATAR_SIZE=2048

# AWS S3 (pour production)
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_DEFAULT_REGION=eu-west-3
AWS_BUCKET=
AWS_URL=
AWS_ENDPOINT=
AWS_USE_PATH_STYLE_ENDPOINT=false

#-------------------------------------------------------------------------------
# üì° PUSHER ET WEBSOCKETS
#-------------------------------------------------------------------------------
BROADCAST_DRIVER=log

PUSHER_APP_ID=
PUSHER_APP_KEY=
PUSHER_APP_SECRET=
PUSHER_HOST=
PUSHER_PORT=443
PUSHER_SCHEME=https
PUSHER_APP_CLUSTER=eu

# WebSocket pour temps r√©el
WEBSOCKET_ENABLED=false
WEBSOCKET_HOST=localhost
WEBSOCKET_PORT=6001

#-------------------------------------------------------------------------------
# üé® FRONTEND ET ASSETS
#-------------------------------------------------------------------------------
VITE_APP_NAME="${APP_NAME}"
VITE_APP_ENV="${APP_ENV}"
VITE_PUSHER_APP_KEY="${PUSHER_APP_KEY}"
VITE_PUSHER_HOST="${PUSHER_HOST}"
VITE_PUSHER_PORT="${PUSHER_PORT}"
VITE_PUSHER_SCHEME="${PUSHER_SCHEME}"
VITE_PUSHER_APP_CLUSTER="${PUSHER_APP_CLUSTER}"

# Optimisation assets
VITE_MANIFEST_PATH=public/build/manifest.json
ASSET_VERSION=1.0.0

#-------------------------------------------------------------------------------
# üìä SERVICES EXTERNES - PDF ET RAPPORTS
#-------------------------------------------------------------------------------
# Service PDF (Node.js)
PDF_SERVICE_HOST=pdf-service
PDF_SERVICE_PORT=3000
PDF_SERVICE_URL=http://pdf-service:3000/generate-pdf
PDF_SERVICE_HEALTH_URL=http://pdf-service:3000/health
PDF_SERVICE_TIMEOUT=120
PDF_SERVICE_RETRIES=3
PDF_SERVICE_API_KEY=zenfleet_pdf_secure_key_2025

# Service de rapports
REPORT_SERVICE_ENABLED=true
REPORT_GENERATION_QUEUE=reports
REPORT_MAX_RECORDS=10000
REPORT_CACHE_TTL=1800

#-------------------------------------------------------------------------------
# üöó BUSINESS LOGIC - ZENFLEET SP√âCIFIQUE
#-------------------------------------------------------------------------------
# Configuration m√©tier
DEFAULT_ORGANIZATION_STATUS=active
DEFAULT_USER_ROLE=Chauffeur
DEFAULT_VEHICLE_STATUS=available
DEFAULT_ASSIGNMENT_DURATION=480

# Maintenance et alertes
MAINTENANCE_ALERT_DAYS_BEFORE=7
MAINTENANCE_OVERDUE_ALERT_DAYS=3
VEHICLE_INSPECTION_FREQUENCY_MONTHS=6
DRIVER_LICENSE_EXPIRY_ALERT_DAYS=30

# Tracking et g√©olocalisation
TRACKING_ENABLED=true
TRACKING_INTERVAL_SECONDS=300
TRACKING_HISTORY_RETENTION_DAYS=90
GPS_ACCURACY_THRESHOLD=10

# Limites business
MAX_VEHICLES_PER_ORGANIZATION=1000
MAX_DRIVERS_PER_ORGANIZATION=500
MAX_ASSIGNMENTS_PER_DRIVER=10
MAX_CONCURRENT_ASSIGNMENTS=5

#-------------------------------------------------------------------------------
# üîê API ET INT√âGRATIONS
#-------------------------------------------------------------------------------
# Configuration API
API_RATE_LIMIT_PER_MINUTE=60
API_VERSION=v1
API_PREFIX=api
API_MIDDLEWARE=api,throttle:api,auth:sanctum

# Cl√©s API externes
GOOGLE_MAPS_API_KEY=
MAPBOX_API_KEY=
WEATHER_API_KEY=

# Int√©grations tierces
INTEGRATION_TIMEOUT=30
INTEGRATION_MAX_RETRIES=3
WEBHOOK_TIMEOUT=10

#-------------------------------------------------------------------------------
# üê≥ DOCKER ET INFRASTRUCTURE
#-------------------------------------------------------------------------------
# Ports forwarding pour Docker
FORWARD_NGINX_HTTP_PORT=80
FORWARD_NGINX_HTTPS_PORT=443
FORWARD_DB_PORT=5432
FORWARD_REDIS_PORT=6379
FORWARD_NODE_PORT=3000
FORWARD_MAILPIT_PORT=8025

# Configuration Node.js
NODE_ENV=production
NODE_OPTIONS=--max_old_space_size=2048

# Configuration Nginx
NGINX_CLIENT_MAX_BODY_SIZE=20M
NGINX_WORKER_PROCESSES=auto
NGINX_WORKER_CONNECTIONS=1024

#-------------------------------------------------------------------------------
# üìà MONITORING ET PERFORMANCE
#-------------------------------------------------------------------------------
# Monitoring
MONITORING_ENABLED=false
MONITORING_ENDPOINT=
MONITORING_API_KEY=

# Performance
PHP_MEMORY_LIMIT=512M
PHP_MAX_EXECUTION_TIME=300
PHP_UPLOAD_MAX_SIZE=20M
PHP_POST_MAX_SIZE=25M

# Cache et optimisation
OPCACHE_ENABLED=true
RESPONSE_CACHE_TTL=300
VIEW_CACHE_ENABLED=true

#-------------------------------------------------------------------------------
# üîß D√âVELOPPEMENT ET DEBUG
#-------------------------------------------------------------------------------
# Debug et d√©veloppement
DEBUG_BAR_ENABLED=false
TELESCOPE_ENABLED=false
CLOCKWORK_ENABLED=false

# Testing
TEST_DATABASE=zenfleet_test
TEST_REDIS_DB=15

# Feature flags
FEATURE_ADVANCED_ANALYTICS=true
FEATURE_REAL_TIME_TRACKING=true
FEATURE_MAINTENANCE_AI=false
FEATURE_ROUTE_OPTIMIZATION=false

#-------------------------------------------------------------------------------
# üåç LOCALISATION ET INTERNATIONALISATION
#-------------------------------------------------------------------------------
# Langues support√©es
SUPPORTED_LOCALES=fr,en,es,de,it
DEFAULT_COUNTRY=FR
DEFAULT_CURRENCY=EUR
DEFAULT_DATE_FORMAT=d/m/Y
DEFAULT_TIME_FORMAT=H:i

# Formats r√©gionaux
DECIMAL_SEPARATOR=,
THOUSANDS_SEPARATOR=" "
CURRENCY_SYMBOL=‚Ç¨
CURRENCY_POSITION=after

#===============================================================================
# ‚úÖ CORRECTIONS APPLIQU√âES POUR R√âSOUDRE L'ERREUR cURL 3
#===============================================================================
# 1. LOG_CHANNEL chang√© de 'stack' √† 'daily' pour √©viter les webhooks vides
# 2. URLs de webhooks laiss√©es vides pour √©viter l'erreur de malformation
# 3. Toutes les autres configurations pr√©serv√©es int√©gralement
# 4. Variables de logging professionnel ajout√©es pour enterprise
#===============================================================================

#===============================================================================
# üö® VARIABLES DE S√âCURIT√â - √Ä PERSONNALISER EN PRODUCTION
#===============================================================================
# IMPORTANT: Changez toutes ces valeurs en production !
#
# 1. G√©n√©rez une nouvelle APP_KEY : php artisan key:generate
# 2. Cr√©ez des mots de passe forts pour les services
# 3. Configurez les webhooks Slack/Teams SEULEMENT si vous les utilisez
# 4. Activez HTTPS en production
# 5. Configurez les cl√©s API externes
# 6. Activez le monitoring
#===============================================================================

--- FIN DU FICHIER : ./.env ---


////////////////////////////////////////////////////////////////
CHEMIN : ./docker-compose.yml
////////////////////////////////////////////////////////////////

networks:
  zenfleet_network:
    driver: bridge

volumes:
  zenfleet_postgres_data:
  zenfleet_redis_data:

services:
  # --- Service PHP (Application Laravel) ---
  php:
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
      args:
        USER_ID: ${UID:-1000}
        GROUP_ID: ${GID:-1000}
    container_name: zenfleet_php
    restart: unless-stopped
    dns:
      - 8.8.8.8
      - 1.1.1.1
    volumes:
      - ./:/var/www/html
    networks:
      - zenfleet_network
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
      pdf-service:
        condition: service_healthy

  # --- Service Nginx (Serveur Web) ---
  nginx:
    image: nginx:1.25-alpine
    container_name: zenfleet_nginx
    restart: unless-stopped
    ports: ["80:80"]
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/zenfleet.conf:/etc/nginx/conf.d/default.conf
    networks:
      - zenfleet_network
    depends_on:
      - php

  # --- Base de Donn√©es (PostgreSQL) ---
  database:
    image: postgres:15-alpine
    container_name: zenfleet_database
    restart: unless-stopped
    ports: ["5432:5432"]
    volumes:
      - zenfleet_postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    networks:
      - zenfleet_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # --- Cache & Queues (Redis) ---
  redis:
    image: redis:alpine
    container_name: zenfleet_redis
    restart: unless-stopped
    volumes:
      - zenfleet_redis_data:/data
    networks:
      - zenfleet_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
  
  # --- Service Node.js pour le D√âVELOPPEMENT (yarn, vite) ---
  node:
    build:
      context: .
      dockerfile: ./docker/node_dev/Dockerfile
      args:
        USER_ID: ${UID:-1000}
        GROUP_ID: ${GID:-1000}
    container_name: zenfleet_node_dev
    volumes:
      - .:/var/www/html
    dns:
      - 8.8.8.8
      - 1.1.1.1
    working_dir: /var/www/html
    tty: true

  # --- Microservice de G√©n√©ration de PDF ---
  pdf-service:
    build:
      context: ./pdf-service
    container_name: zenfleet_pdf_service
    restart: unless-stopped
    networks:
      zenfleet_network:
        aliases:
          - node
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

--- FIN DU FICHIER : ./docker-compose.yml ---


////////////////////////////////////////////////////////////////
CHEMIN : ./package.json
////////////////////////////////////////////////////////////////

{
    "private": true,
    "type": "module",
    "scripts": {
        "dev": "vite",
        "build": "vite build"
    },
    "devDependencies": {
        "@tailwindcss/forms": "^0.5.2",
        "alpinejs": "^3.4.2",
        "autoprefixer": "^10.4.2",
        "axios": "^1.6.4",
        "laravel-vite-plugin": "^1.0",
        "postcss": "^8.4.31",
        "tailwindcss": "^3.1.0",
        "vite": "^5.0"
    },
    "dependencies": {
        "apexcharts": "^3.49.1",
        "tom-select": "^2.3.1",
        "flatpickr": "^4.6.13",
        "sortablejs": "^1.15.2"
    }
}
--- FIN DU FICHIER : ./package.json ---


////////////////////////////////////////////////////////////////
CHEMIN : ./composer.json
////////////////////////////////////////////////////////////////

{
    "name": "laravel/laravel",
    "type": "project",
    "description": "The skeleton application for the Laravel framework.",
    "keywords": ["laravel", "framework"],
    "license": "MIT",
    "require": {
        "php": "^8.1",
        "blade-ui-kit/blade-icons": "^1.8",
        "doctrine/dbal": "^3.9",
        "guzzlehttp/guzzle": "^7.2",
        "laravel/framework": "^10.10",
        "laravel/sanctum": "^3.3",
        "laravel/tinker": "^2.8",
        "league/csv": "^9.23",
        "league/flysystem-aws-s3-v3": "^3.0",
        "mallardduck/blade-lucide-icons": "^1.0",
        "predis/predis": "^3.1",
        "spatie/laravel-permission": "^6.21",
        "spatie/laravel-sluggable": "^3.7"
    },
    "require-dev": {
        "fakerphp/faker": "^1.9.1",
        "laravel-lang/lang": "^15.2",
        "laravel/breeze": "^1.29",
        "laravel/pint": "^1.0",
        "laravel/sail": "^1.18",
        "mockery/mockery": "^1.4.4",
        "nunomaduro/collision": "^7.0",
        "phpunit/phpunit": "^10.1",
        "spatie/laravel-ignition": "^2.0"
    },
    "autoload": {
        "psr-4": {
            "App\\": "app/",
            "Database\\Factories\\": "database/factories/",
            "Database\\Seeders\\": "database/seeders/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "Tests\\": "tests/"
        }
    },
    "scripts": {
        "post-autoload-dump": [
            "Illuminate\\Foundation\\ComposerScripts::postAutoloadDump",
            "@php artisan package:discover --ansi"
        ],
        "post-update-cmd": [
            "@php artisan vendor:publish --tag=laravel-assets --ansi --force"
        ],
        "post-root-package-install": [
            "@php -r \"file_exists('.env') || copy('.env.example', '.env');\""
        ],
        "post-create-project-cmd": [
            "@php artisan key:generate --ansi"
        ]
    },
    "extra": {
        "laravel": {
            "dont-discover": []
        }
    },
    "config": {
        "optimize-autoloader": true,
        "preferred-install": "dist",
        "sort-packages": true,
        "allow-plugins": {
            "pestphp/pest-plugin": true,
            "php-http/discovery": true
        }
    },
    "minimum-stability": "stable",
    "prefer-stable": true
}

--- FIN DU FICHIER : ./composer.json ---


////////////////////////////////////////////////////////////////
CHEMIN : ./vite.config.js
////////////////////////////////////////////////////////////////

import { defineConfig } from 'vite';
import laravel from 'laravel-vite-plugin';

export default defineConfig({
    plugins: [
        laravel({
            input: [
                'resources/css/app.css',
                'resources/js/app.js',
            ],
            refresh: true,
        }),
    ],
});

--- FIN DU FICHIER : ./vite.config.js ---


////////////////////////////////////////////////////////////////
CHEMIN : ./tailwind.config.js
////////////////////////////////////////////////////////////////

import defaultTheme from 'tailwindcss/defaultTheme';
import forms from '@tailwindcss/forms';

/** @type {import('tailwindcss').Config} */
export default {
    content: [
        './vendor/laravel/framework/src/Illuminate/Pagination/resources/views/*.blade.php',
        './storage/framework/views/*.php',
        './resources/views/**/*.blade.php',
    ],

    theme: {
        extend: {
            fontFamily: {
                sans: ['Inter', ...defaultTheme.fontFamily.sans],
            },
            colors: {
                primary: {
                    50: '#f0f9ff',
                    100: '#e0f2fe',
                    200: '#bae6fd',
                    300: '#7dd3fc',
                    400: '#38bdf8',
                    500: '#0ea5e9',
                    600: '#0284c7',
                    700: '#0369a1',
                    800: '#075985',
                    900: '#0c4a6e',
                },
                secondary: {
                    50: '#f8fafc',
                    100: '#f1f5f9',
                    200: '#e2e8f0',
                    300: '#cbd5e1',
                    400: '#94a3b8',
                    500: '#64748b',
                    600: '#475569',
                    700: '#334155',
                    800: '#1e293b',
                    900: '#0f172a',
                },
                success: {
                    50: '#f0fdf4',
                    100: '#dcfce7',
                    200: '#bbf7d0',
                    300: '#86efac',
                    400: '#4ade80',
                    500: '#22c55e',
                    600: '#16a34a',
                    700: '#15803d',
                    800: '#166534',
                    900: '#14532d',
                },
                warning: {
                    50: '#fffbeb',
                    100: '#fef3c7',
                    200: '#fde68a',
                    300: '#fcd34d',
                    400: '#fbbf24',
                    500: '#f59e0b',
                    600: '#d97706',
                    700: '#b45309',
                    800: '#92400e',
                    900: '#78350f',
                },
                danger: {
                    50: '#fef2f2',
                    100: '#fee2e2',
                    200: '#fecaca',
                    300: '#fca5a5',
                    400: '#f87171',
                    500: '#ef4444',
                    600: '#dc2626',
                    700: '#b91c1c',
                    800: '#991b1b',
                    900: '#7f1d1d',
                },
                info: {
                    50: '#ecfeff',
                    100: '#cffafe',
                    200: '#a5f3fc',
                    300: '#67e8f9',
                    400: '#22d3ee',
                    500: '#06b6d4',
                    600: '#0891b2',
                    700: '#0e7490',
                    800: '#155e75',
                    900: '#164e63',
                },
            }
        }
    },

    plugins: [forms],
};
--- FIN DU FICHIER : ./tailwind.config.js ---


////////////////////////////////////////////////////////////////
CHEMIN : ./postcss.config.js
////////////////////////////////////////////////////////////////

export default {
    plugins: {
        tailwindcss: {},
        autoprefixer: {},
    },
};

--- FIN DU FICHIER : ./postcss.config.js ---


////////////////////////////////////////////////////////////////
CHEMIN : ./README.md
////////////////////////////////////////////////////////////////

# ZenFleet

Bienvenue sur le d√©p√¥t GitHub de ZenFleet, un projet de gestion de flotte robuste et standardis√©.

## Table des Mati√®res

- [Introduction](#introduction)
- [Environnement de D√©veloppement et Standards](#environnement-de-d√©veloppement-et-standards)
  - [Stack Technologique](#stack-technologique)
  - [Outils et Commandes Standards](#outils-et-commandes-standards)
- [Catalogue des Commandes Standards du Projet ZENFLEET](#catalogue-des-commandes-standards-du-projet-zenfleet)
  - [Analyse des Commandes Sp√©cifiques](#analyse-des-commandes-sp√©cifiques)
  - [Pour la Base de Donn√©es](#pour-la-base-de-donn√©es)
  - [Pour la Logique Applicative](#pour-la-logique-applicative)
  - [Pour l'Interface (Vues & Composants)](#pour-linterface-vues--composants)

## Introduction

Ce document fournit une description d√©taill√©e de l'environnement, des standards, de la structure des fichiers et de la base de donn√©es du projet ZenFleet. Notre objectif est de garantir une reproductibilit√© parfaite et une coh√©rence maximale dans le d√©veloppement.

## Environnement de D√©veloppement et Standards

Notre environnement est standardis√© et conteneuris√© pour garantir une reproductibilit√© parfaite.

### Stack Technologique

| Composant | Technologie/Version | R√¥le |
| :--- | :--- | :--- |
| Serveur Web | Nginx 1.25-alpine | Point d'entr√©e HTTP. |
| Backend | PHP 8.2-fpm-alpine | Moteur de l'application Laravel. |
| Framework | Laravel 10.x | C≈ìur de l'application. |
| Base de Donn√©es| PostgreSQL 15-alpine | Stockage des donn√©es. |
| Cache & Jobs | Redis alpine | Gestion du cache et des files d'attente. |
| Frontend | Node.js 20-bullseye | Compilation des assets et serveur Vite. |
| CSS | Tailwind CSS | Framework de design. |
| JavaScript| Alpine.js | Interactivit√© de l'interface. |
| Ic√¥nes | blade-ui-kit/blade-icons | Gestion centralis√©e des ic√¥nes SVG. |

### Outils et Commandes Standards

Il est imp√©ratif d'utiliser les m√™mes outils et commandes pour garantir la coh√©rence.

**Gestion des D√©pendances Backend (PHP) :**

- **Outil :** Composer
- **Ex√©cution :** `docker compose exec -u zenfleet_user php composer <commande>`
- **Exemple :** `docker compose exec -u zenfleet_user php composer require nouvelle/librairie`

**Gestion des D√©pendances Frontend (JavaScript) :**

- **Outil :** Yarn (et non npm).
- **Raison :** Nous utilisons Yarn pour sa gestion stricte et reproductible des versions de paquets via le fichier `yarn.lock`, ce qui √©limine les conflits.
- **Ex√©cution :** `docker compose exec -u zenfleet_user node yarn <commande>`
- **Exemples :**
  - Installer les d√©pendances : `docker compose exec -u zenfleet_user node yarn install`
  - Lancer le serveur de dev : `docker compose exec -u zenfleet_user node yarn dev`
  - Compiler pour la prod : `docker compose exec -u zenfleet_user node yarn build`

**Commandes Laravel (Artisan) :**

- **Ex√©cution :** `docker compose exec -u zenfleet_user php php artisan <commande>`
- **Exemple (migration) :** `docker compose exec -u zenfleet_user php php artisan migrate`

## Catalogue des Commandes Standards du Projet ZENFLEET

Voici le guide de r√©f√©rence des commandes Artisan pour ZENFLEET.

### Analyse des Commandes Sp√©cifiques

1.  `make:service SupplierService`
    - **Analyse :** Cette commande a g√©n√©r√© une erreur car `make:service` n'est pas une commande standard de Laravel.
    - **Objectif vis√© :** Cr√©er une classe de service dans le dossier `app/Services`.
    - **Notre Proc√©dure Standard :** Comme cette commande n'existe pas, nous cr√©ons les fichiers de service manuellement.
      - Cr√©er le r√©pertoire : `mkdir -p app/Services`
      - Cr√©er le fichier : `touch app/Services/SupplierService.php` et le remplir.

2.  `make:controller Admin/SupplierController --resource --model=Supplier`
    - **Analyse :** C'est la commande parfaite et standard pour notre projet.
    - **D√©composition d'Expert :**
      - `make:controller Admin/SupplierController` : Cr√©e le contr√¥leur `SupplierController.php` dans le bon sous-dossier `app/Http/Controllers/Admin/`, ce qui maintient notre code organis√©.
      - `--resource` : G√©n√®re automatiquement les 7 m√©thodes CRUD (`index`, `create`, `store`, `show`, `edit`, `update`, `destroy`), nous faisant gagner du temps et garantissant une structure coh√©rente.
      - `--model=Supplier` : Lie le contr√¥leur au mod√®le `Supplier`. C'est une pratique "ultra pro" qui active le "route-model binding", simplifiant notre code dans les m√©thodes comme `edit(Supplier $supplier)`.

### Pour la Base de Donn√©es

**Cr√©er un Mod√®le Eloquent :**

- **Commande :** `docker compose exec -u zenfleet_user php php artisan make:model NomDuModele -m`
- **Description :** Cr√©e un fichier de mod√®le dans `app/Models/` et son fichier de migration (`-m`) associ√©.
- **Exemple :** `... make:model Document -m`

**Cr√©er une Migration (Nouvelle Table) :**

- **Commande :** `docker compose exec -u zenfleet_user php php artisan make:migration create_nom_de_la_table_table`
- **Description :** Cr√©e un fichier de migration pour une nouvelle table.
- **Exemple :** `... make:migration create_documents_table`

**Cr√©er une Migration (Modifier une Table) :**

- **Commande :** `docker compose exec -u zenfleet_user php php artisan make:migration add_colonne_to_nom_de_la_table_table`
- **Description :** Cr√©e un fichier de migration pour modifier une table existante.
- **Exemple :** `... make:migration add_expiry_date_to_documents_table`

**Cr√©er un Seeder :**

- **Commande :** `docker compose exec -u zenfleet_user php php artisan make:seeder NomSeeder`
- **Description :** Cr√©e un fichier pour peupler la base de donn√©es.
- **Exemple :** `... make:seeder DocumentTypeSeeder`

### Pour la Logique Applicative

**Cr√©er un Contr√¥leur :** (Voir analyse ci-dessus)

**Cr√©er une Form Request :**

- **Commande :** `docker compose exec -u zenfleet_user php php artisan make:request Admin/NomDuModule/StoreNomRequest`
- **Description :** Cr√©e une classe de validation pour s√©curiser les donn√©es d'un formulaire. C'est une de nos pratiques cl√©s.
- **Exemple :** `... make:request Admin/Document/StoreDocumentRequest`

**Cr√©er un Service Provider :**

- **Commande :** `docker compose exec -u zenfleet_user php php artisan make:provider NomServiceProvider`
- **Description :** Cr√©e un fournisseur de services, comme nous l'avons fait pour `RepositoryServiceProvider`.
- **Exemple :** `... make:provider DocumentServiceProvider`

### Pour l'Interface (Vues & Composants)

**Cr√©er un Composant Blade :**

- **Commande :** `docker compose exec -u zenfleet_user php php artisan make:component NomDuComposant`
- **Description :** Cr√©e une classe et une vue pour un composant Blade r√©utilisable.
- **Exemple :** `... make:component Forms/DocumentUploader`

En respectant ce catalogue de commandes, nous garantissons que chaque nouvelle partie de l'application est construite de mani√®re coh√©rente, propre et professionnelle.



--- FIN DU FICHIER : ./README.md ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Console/Commands/DiagnoseDatabase.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Console\Commands;

use Illuminate\Console\Command;
use Illuminate\Support\Facades\Schema;
use Illuminate\Support\Facades\DB;

class DiagnoseDatabase extends Command
{
    protected $signature = 'zenfleet:diagnose-db';
    protected $description = 'Diagnostique l\'√©tat de la base de donn√©es ZenFleet';

    public function handle(): int
    {
        $this->info('üîç Diagnostic de la base de donn√©es ZenFleet...');
        
        // Tables critiques √† v√©rifier
        $requiredTables = [
            'users',
            'organizations', 
            'roles',
            'permissions',
            'model_has_roles',
            'model_has_permissions',
            'role_has_permissions'
        ];

        $this->info("\nüìä √âtat des tables principales :");
        foreach ($requiredTables as $table) {
            if (Schema::hasTable($table)) {
                $count = DB::table($table)->count();
                $this->info("   ‚úÖ {$table} : {$count} enregistrements");
            } else {
                $this->error("   ‚ùå {$table} : Table manquante");
            }
        }

        // V√©rifier les colonnes critiques de la table users
        $this->info("\nüîß Colonnes de la table users :");
        $userColumns = Schema::getColumnListing('users');
        $expectedColumns = [
            'organization_id', 'supervisor_id', 'is_super_admin', 
            'permissions_cache', 'last_activity_at', 'is_active'
        ];

        foreach ($expectedColumns as $column) {
            if (in_array($column, $userColumns)) {
                $this->info("   ‚úÖ {$column} : Pr√©sente");
            } else {
                $this->warn("   ‚ö†Ô∏è  {$column} : Manquante");
            }
        }

        // V√©rifier les r√¥les
        $this->info("\nüë• R√¥les syst√®me :");
        try {
            $roles = DB::table('roles')->pluck('name');
            $expectedRoles = ['super_admin', 'admin', 'fleet_manager', 'supervisor', 'driver'];
            
            foreach ($expectedRoles as $role) {
                if ($roles->contains($role)) {
                    $this->info("   ‚úÖ {$role} : Configur√©");
                } else {
                    $this->warn("   ‚ö†Ô∏è  {$role} : Manquant");
                }
            }
        } catch (\Exception $e) {
            $this->error("   ‚ùå Impossible de v√©rifier les r√¥les : " . $e->getMessage());
        }

        $this->info("\nüèÅ Diagnostic termin√© !");
        return 0;
    }
}


--- FIN DU FICHIER : ./app/Console/Commands/DiagnoseDatabase.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Console/Kernel.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Console;

use Illuminate\Console\Scheduling\Schedule;
use Illuminate\Foundation\Console\Kernel as ConsoleKernel;

class Kernel extends ConsoleKernel
{
    /**
     * Define the application's command schedule.
     */
    protected function schedule(Schedule $schedule): void
    {
        // $schedule->command('inspire')->hourly();
    }

    /**
     * Register the commands for the application.
     */
    protected function commands(): void
    {
        $this->load(__DIR__.'/Commands');

        require base_path('routes/console.php');
    }
}

--- FIN DU FICHIER : ./app/Console/Kernel.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Exceptions/Handler.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Exceptions;

use Illuminate\Foundation\Exceptions\Handler as ExceptionHandler;
use Throwable;

class Handler extends ExceptionHandler
{
    /**
     * The list of the inputs that are never flashed to the session on validation exceptions.
     *
     * @var array<int, string>
     */
    protected $dontFlash = [
        'current_password',
        'password',
        'password_confirmation',
    ];

    /**
     * Register the exception handling callbacks for the application.
     */
    public function register(): void
    {
        $this->reportable(function (Throwable $e) {
            //
        });
    }
}

--- FIN DU FICHIER : ./app/Exceptions/Handler.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Http/Controllers/Admin/AssignmentController.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Http\Controllers\Admin;

use App\Http\Controllers\Controller;
use App\Http\Requests\Admin\Assignment\StoreAssignmentRequest;
use App\Http\Requests\Admin\Assignment\UpdateAssignmentRequest;
use App\Models\Assignment;
use App\Services\AssignmentService;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;
use Illuminate\View\View;
use Illuminate\Http\JsonResponse;

class AssignmentController extends Controller
{
    protected AssignmentService $assignmentService;

    public function __construct(AssignmentService $assignmentService)
    {
        $this->assignmentService = $assignmentService;
    }

    /**
     * Affiche la liste des affectations.
     */
    public function index(Request $request): View
    {
        $this->authorize('view assignments');
        $filters = $request->only(['search', 'status', 'per_page']);
        $assignments = $this->assignmentService->getFilteredAssignments($filters);

        return view('admin.assignments.index', compact('assignments', 'filters'));
    }

    /**
     * Affiche le formulaire de cr√©ation.
     */
    public function create(): View
    {
         $this->authorize('create assignments');
        $data = $this->assignmentService->getDataForCreateForm();

        return view('admin.assignments.create', $data);
    }

    /**
     * Enregistre une nouvelle affectation.
     */
    public function store(StoreAssignmentRequest $request): RedirectResponse
    {
        $this->assignmentService->createAssignment($request->validated());
        return redirect()->route('admin.assignments.index')->with('success', 'Affectation cr√©√©e avec succ√®s.');
    }

    /**
     * Affiche les d√©tails d'une affectation.
     */
    public function show(Assignment $assignment): View
    {
         $this->authorize('view assignments');
        $assignment->load(['vehicle', 'driver', 'creator', 'handoverForm']);

        return view('admin.assignments.show', compact('assignment'));
    }

    /**
     * Affiche le formulaire de modification.
     */
    public function edit(Assignment $assignment): View
    {
         $this->authorize('edit assignments');
        $assignment->load(['vehicle', 'driver']);

        return view('admin.assignments.edit', compact('assignment'));
    }

    /**
     * Met √† jour une affectation.
     */
    public function update(UpdateAssignmentRequest $request, Assignment $assignment): RedirectResponse
    {
        $this->assignmentService->updateAssignment($assignment, $request->validated());
        return redirect()->route('admin.assignments.index')->with('success', 'Affectation mise √† jour avec succ√®s.');
    }

    /**
     * Termine une affectation en cours.
     */
    public function end(Request $request, Assignment $assignment): JsonResponse|RedirectResponse
    {
        $this->authorize('end assignments');

        // Personnalisation des messages d'erreur
        $messages = [
            'end_datetime.required' => 'La date de fin est obligatoire.',
            'end_datetime.date' => 'Le format de la date de fin est invalide.',
            'end_datetime.after_or_equal' => 'La date de fin doit √™tre sup√©rieure ou √©gale √† la date de d√©but.',
            'end_mileage.required' => 'Le kilom√©trage de fin est obligatoire.',
            'end_mileage.integer' => 'Le kilom√©trage de fin doit √™tre un nombre.',
            'end_mileage.min' => 'Le kilom√©trage de fin doit √™tre sup√©rieur ou √©gal au kilom√©trage de d√©but.',
        ];

        // Validation des donn√©es de la requ√™te
        $validated = $request->validate([
            'end_datetime' => ['required', 'date', 'after_or_equal:'.$assignment->start_datetime],
            'end_mileage' => ['required', 'integer', 'min:'.$assignment->start_mileage],
        ], $messages);

        $success = $this->assignmentService->endAssignment(
            $assignment,
            $validated['end_mileage'],
            $validated['end_datetime']
        );

        if ($success) {
            $message = 'Affectation termin√©e avec succ√®s.';
            // Si la requ√™te attend du JSON (AJAX), on retourne une r√©ponse JSON
            if ($request->expectsJson()) {
                return response()->json(['success' => true, 'message' => $message]);
            }
            // Sinon, on fait une redirection classique
            return redirect()->route('admin.assignments.index')->with('success', $message);
        }

        // En cas d'√©chec
        $errorMessage = 'Une erreur est survenue lors de la cl√¥ture de l\'affectation.';
        if ($request->expectsJson()) {
            return response()->json(['success' => false, 'message' => $errorMessage], 500);
        }
        return redirect()->back()->with('error', $errorMessage);
    }
}
--- FIN DU FICHIER : ./app/Http/Controllers/Admin/AssignmentController.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Http/Controllers/Admin/DashboardController.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Http\Controllers\Admin;

use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Gate;
use Illuminate\View\View;
use App\Models\User;
use App\Models\Organization;
use App\Models\Vehicle;
use App\Models\Driver;

class DashboardController extends Controller
{
    /**
     * üìä Dashboard principal avec contr√¥le d'acc√®s par r√¥le
     */
    public function index(): View
    {
        $user = Auth::user();
        
        // Contr√¥le d'acc√®s de base
        if (!$user) {
            abort(401, 'Non authentifi√©');
        }
        
        // Rediriger selon le r√¥le
        if ($user->hasRole('Super Admin')) {
            return $this->renderSuperAdminDashboard($user);
        } elseif ($user->hasRole('Admin')) {
            return $this->renderAdminDashboard($user);
        } elseif ($user->hasRole('Gestionnaire Flotte')) {
            return $this->renderFleetManagerDashboard($user);
        } elseif ($user->hasRole('supervisor')) {
            return $this->renderSupervisorDashboard($user);
        } else {
            return $this->renderDriverDashboard($user);
        }
    }

    /**
     * üåê Dashboard Super Admin - Vue syst√®me compl√®te
     */
    private function renderSuperAdminDashboard(User $user): View
    {
        $stats = [
            'totalOrganizations' => Organization::count(),
            'activeOrganizations' => Organization::where('status', 'active')->count(),
            'totalUsers' => User::count(),
            'activeUsers' => User::where('is_active', true)->count(),
            'totalVehicles' => Vehicle::count(),
            'totalDrivers' => Driver::count(),
        ];
        
        return view('dashboard', compact('stats', 'user'));
    }

    /**
     * üè¢ Dashboard Admin - Vue organisation
     */
    private function renderAdminDashboard(User $user): View
    {
        $stats = [
            'organizationUsers' => User::where('organization_id', $user->organization_id)->count(),
            'organizationVehicles' => Vehicle::where('organization_id', $user->organization_id)->count(),
            'organizationDrivers' => Driver::where('organization_id', $user->organization_id)->count(),
        ];
        
        return view('dashboard', compact('stats', 'user'));
    }

    /**
     * üöó Dashboard Fleet Manager
     */
    private function renderFleetManagerDashboard(User $user): View
    {
        $stats = [
            'vehiclesCount' => Vehicle::where('organization_id', $user->organization_id)->count(),
            'driversCount' => Driver::where('organization_id', $user->organization_id)->count(),
        ];
        
        return view('dashboard', compact('stats', 'user'));
    }

    /**
     * üë• Dashboard Supervisor
     */
    private function renderSupervisorDashboard(User $user): View
    {
        // TODO: Impl√©menter la logique des ressources supervis√©es
        $stats = [
            'supervisedVehicles' => 0,
            'supervisedDrivers' => 0,
        ];
        
        return view('dashboard', compact('stats', 'user'));
    }

    /**
     * üöô Dashboard Driver
     */
    private function renderDriverDashboard(User $user): View
    {
        // TODO: Impl√©menter la logique du chauffeur
        $stats = [
            'myAssignments' => 0,
            'myTrips' => 0,
        ];
        
        return view('dashboard', compact('stats', 'user'));
    }

    /**
     * üìä M√©triques syst√®me (Super Admin uniquement)
     */
    public function systemMetrics(): View
    {
        if (!Auth::user()->hasRole('Super Admin')) {
            abort(403, 'Acc√®s r√©serv√© aux Super Admins');
        }
        
        $metrics = [
            'organizations' => Organization::count(),
            'users' => User::count(),
            'vehicles' => Vehicle::count(),
            'drivers' => Driver::count(),
        ];
        
        return view('admin.system.metrics', compact('metrics'));
    }

    /**
     * üìã Logs syst√®me (Super Admin uniquement)
     */
    public function systemLogs(): View
    {
        if (!Auth::user()->hasRole('Super Admin')) {
            abort(403, 'Acc√®s r√©serv√© aux Super Admins');
        }
        
        // TODO: Impl√©menter la r√©cup√©ration des logs
        $logs = [];
        
        return view('admin.system.logs', compact('logs'));
    }
}

--- FIN DU FICHIER : ./app/Http/Controllers/Admin/DashboardController.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Http/Controllers/Admin/DocumentCategoryController.php
////////////////////////////////////////////////////////////////

<?php

// app/Http/Controllers/Admin/DocumentCategoryController.php

namespace App\Http\Controllers\Admin;

use App\Http\Controllers\Controller;
use App\Models\DocumentCategory;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;

class DocumentCategoryController extends Controller
{
    public function __construct()
    {
        // This will automatically use the DocumentCategoryPolicy for authorization.
        $this->authorizeResource(DocumentCategory::class, 'document_category');
    }

    public function index()
    {
        $organization_id = Auth::user()->organization_id;
        $categories = DocumentCategory::where('organization_id', $organization_id)
            ->withCount('documents')
            ->paginate(15);
        return view('admin.document_categories.index', compact('categories'));
    }

    public function create()
    {
        return view('admin.document_categories.create');
    }

    public function store(Request $request)
    {
        $validated = $request->validate([
            'name' => 'required|string|max:255',
            'description' => 'nullable|string',
        ]);

        Auth::user()->organization->documentCategories()->create($validated);

        return redirect()->route('admin.document-categories.index')->with('success', 'Cat√©gorie de document cr√©√©e avec succ√®s.');
    }

    public function edit(DocumentCategory $documentCategory)
    {
        return view('admin.document_categories.edit', compact('documentCategory'));
    }

    public function update(Request $request, DocumentCategory $documentCategory)
    {
        $validated = $request->validate([
            'name' => 'required|string|max:255',
            'description' => 'nullable|string',
        ]);

        $documentCategory->update($validated);

        return redirect()->route('admin.document-categories.index')->with('success', 'Cat√©gorie de document mise √† jour avec succ√®s.');
    }

    public function destroy(DocumentCategory $documentCategory)
    {
        if ($documentCategory->documents()->count() > 0) {
            return back()->with('error', 'Impossible de supprimer une cat√©gorie contenant des documents.');
        }

        $documentCategory->delete();
        return redirect()->route('admin.document-categories.index')->with('success', 'Cat√©gorie de document supprim√©e avec succ√®s.');
    }
}
--- FIN DU FICHIER : ./app/Http/Controllers/Admin/DocumentCategoryController.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Http/Controllers/Admin/DocumentController.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Http\Controllers\Admin;

use App\Http\Controllers\Controller;
use App\Models\Document;
use App\Models\DocumentCategory;
use App\Models\Supplier;
use App\Models\User;
use App\Models\Vehicle;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Storage;
use Illuminate\Support\Facades\Validator;
use Illuminate\Support\Str;

class DocumentController extends Controller
{
    public function __construct()
    {
        $this->authorizeResource(Document::class, 'document');
    }

    public function index()
    {
        $organization_id = Auth::user()->organization_id;
        $documents = Document::with(['category', 'uploader', 'vehicles', 'users', 'suppliers'])
            ->where('organization_id', $organization_id)
            ->latest()
            ->paginate(20);

        return view('admin.documents.index', compact('documents'));
    }

    public function create()
    {
        $organization_id = Auth::user()->organization_id;

        $categories = DocumentCategory::where('organization_id', $organization_id)
            ->orWhere('is_default', true)
            ->where('is_active', true)
            ->orderBy('name')
            ->get();

        $vehicles = Vehicle::where('organization_id', $organization_id)->get(['id', 'brand', 'model', 'registration_plate']);
        $drivers = User::where('organization_id', $organization_id)->has('driver')->get(['id', 'first_name', 'last_name']);
        $suppliers = Supplier::where('organization_id', $organization_id)->get(['id', 'name']);

        return view('admin.documents.create', compact('categories', 'vehicles', 'drivers', 'suppliers'));
    }

    private function validateAndPrepareData(Request $request, ?Document $document = null)
    {
        $rules = [
            'document_category_id' => 'required|exists:document_categories,id',
            'description' => 'nullable|string|max:1000',
            'issue_date' => 'nullable|date',
            'expiry_date' => 'nullable|date|after_or_equal:issue_date',
            'linked_vehicles' => 'nullable|array',
            'linked_vehicles.*' => 'exists:vehicles,id',
            'linked_drivers' => 'nullable|array',
            'linked_drivers.*' => 'exists:users,id',
            'linked_suppliers' => 'nullable|array',
            'linked_suppliers.*' => 'exists:suppliers,id',
            'extra_metadata' => 'nullable|array',
        ];

        if (!$document) { // a new document requires a file
            $rules['document_file'] = 'required|file|mimes:pdf,jpg,jpeg,png,doc,docx,xls,xlsx|max:10240';
        }

        $validatedData = $request->validate($rules);
        
        $selectedCategory = DocumentCategory::find($request->input('document_category_id'));

        if ($selectedCategory && $selectedCategory->meta_schema) {
            $metaSchema = $selectedCategory->meta_schema; // Already cast to array
            $extraMetadataRules = [];

            if (isset($metaSchema['fields']) && is_array($metaSchema['fields'])) {
                foreach ($metaSchema['fields'] as $field) {
                    $fieldName = 'extra_metadata.' . $field['name'];
                    $fieldRules = [];

                    if (isset($field['required']) && $field['required']) {
                        $fieldRules[] = 'required';
                    } else {
                        $fieldRules[] = 'nullable';
                    }

                    switch ($field['type']) {
                        case 'string':
                        case 'textarea':
                            $fieldRules[] = 'string';
                            break;
                        case 'number':
                            $fieldRules[] = 'numeric';
                            break;
                        case 'date':
                            $fieldRules[] = 'date';
                            break;
                        case 'multiselect':
                            $fieldRules[] = 'array';
                            if (isset($field['options']) && is_array($field['options'])) {
                                // This creates a rule like 'in:A,B,C' for each item in the array
                                $extraMetadataRules[$fieldName . '.*'] = 'in:' . implode(',', $field['options']);
                            }
                            break;
                        case 'entity_select':
                            $fieldRules[] = 'integer';
                            if (isset($field['entity'])) {
                                $tableName = Str::plural($field['entity']);
                                $fieldRules[] = 'exists:' . $tableName . ',id';
                            }
                            break;
                    }
                    $extraMetadataRules[$fieldName] = implode('|', $fieldRules);
                }
            }
            // Validate the extra metadata
            $validatedExtraMetadata = Validator::make($request->input(), $extraMetadataRules)->validate();
            $validatedData['extra_metadata'] = $validatedExtraMetadata['extra_metadata'] ?? [];
        }
        
        return $validatedData;
    }


    public function store(Request $request)
    {
        $validatedData = $this->validateAndPrepareData($request);

        $organization = Auth::user()->organization;
        $file = $request->file('document_file');
        
        $category = DocumentCategory::find($validatedData['document_category_id']);
        $pathDirectory = sprintf('documents/%d/%s/%s/%s',
            $organization->id,
            Str::slug($category->name),
            date('Y'),
            date('m')
        );
        $path = $file->store($pathDirectory, 's3');

        $documentData = array_merge($validatedData, [
            'organization_id' => $organization->id,
            'user_id' => Auth::id(),
            'file_path' => $path,
            'original_filename' => $file->getClientOriginalName(),
            'mime_type' => $file->getMimeType(),
            'size_in_bytes' => $file->getSize(),
        ]);
        
        $document = Document::create($documentData);

        $document->vehicles()->sync($request->input('linked_vehicles', []));
        $document->users()->sync($request->input('linked_drivers', []));
        $document->suppliers()->sync($request->input('linked_suppliers', []));

        return redirect()->route('admin.documents.index')->with('success', 'Document import√© avec succ√®s.');
    }

    public function show(Document $document)
    {
        $this->authorize('view', $document);
        return view('admin.documents.show', compact('document'));
    }

    public function edit(Document $document)
    {
        $organization_id = Auth::user()->organization_id;

        $categories = DocumentCategory::where('organization_id', $organization_id)
            ->orWhere('is_default', true)
            ->where('is_active', true)
            ->orderBy('name')
            ->get();
            
        $vehicles = Vehicle::where('organization_id', $organization_id)->get(['id', 'brand', 'model', 'registration_plate']);
        $drivers = User::where('organization_id', $organization_id)->has('driver')->get(['id', 'first_name', 'last_name']);
        $suppliers = Supplier::where('organization_id', $organization_id)->get(['id', 'name']);

        $document->load('vehicles', 'users', 'suppliers');

        return view('admin.documents.edit', compact('document', 'categories', 'vehicles', 'drivers', 'suppliers'));
    }

    public function update(Request $request, Document $document)
    {
        $validatedData = $this->validateAndPrepareData($request, $document);

        $document->update($validatedData);
        
        $document->vehicles()->sync($request->input('linked_vehicles', []));
        $document->users()->sync($request->input('linked_drivers', []));
        $document->suppliers()->sync($request->input('linked_suppliers', []));

        return redirect()->route('admin.documents.index')->with('success', 'Document mis √† jour avec succ√®s.');
    }

    public function destroy(Document $document)
    {
        if ($document->file_path && Storage::disk('s3')->exists($document->file_path)) {
            Storage::disk('s3')->delete($document->file_path);
        }
        
        $document->delete();

        return redirect()->route('admin.documents.index')->with('success', 'Document supprim√© avec succ√®s.');
    }
}
--- FIN DU FICHIER : ./app/Http/Controllers/Admin/DocumentController.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Http/Controllers/Admin/DriverController.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Http\Controllers\Admin;

use App\Http\Controllers\Controller;
use App\Models\Driver;
use App\Models\DriverStatus;
use App\Models\User;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Storage;
use Illuminate\Validation\Rule;
use Illuminate\View\View;
use App\Http\Requests\Admin\Driver\StoreDriverRequest;
use App\Http\Requests\Admin\Driver\UpdateDriverRequest;
use Illuminate\Support\Facades\Validator;
use League\Csv\Reader;
use League\Csv\Statement;
use League\Csv\Writer;
use Illuminate\Database\QueryException;
use Illuminate\Support\Facades\Log;
use Illuminate\Support\Str;
use App\Services\DriverService;
use App\Services\ImportExportService;


class DriverController extends Controller
{

    protected DriverService $driverService;
    protected ImportExportService $importExportService;

    public function __construct(DriverService $driverService, ImportExportService $importExportService)
    {
        $this->driverService = $driverService;
        $this->importExportService = $importExportService;
    }

    // M√©thodes existantes inchang√©es (index, create, store, edit, update, destroy, restore, forceDelete)
    public function index(Request $request): View
    {
        $this->authorize('view drivers');
        $filters = $request->only(['search', 'status_id', 'per_page', 'view_deleted']);
        $drivers = $this->driverService->getFilteredDrivers($filters);
        $driverStatuses = DriverStatus::orderBy('name')->get();
        return view('admin.drivers.index', compact('drivers', 'driverStatuses', 'filters'));
    }

    public function create(): View
    {
        $this->authorize('create drivers');
        $driverStatuses = DriverStatus::orderBy('name')->get();
        
        // CORRECTION: On ne r√©cup√®re que les utilisateurs qui ne sont pas d√©j√† li√©s √† un chauffeur
        $assignedUserIds = Driver::whereNotNull('user_id')->pluck('user_id');
        $linkableUsers = User::whereNotIn('id', $assignedUserIds)->orderBy('name')->get();

        return view('admin.drivers.create', compact('driverStatuses', 'linkableUsers'));
    }

    public function store(StoreDriverRequest $request): RedirectResponse
    {
        $this->driverService->createDriver($request->validated());
        return redirect()->route('admin.drivers.index')->with('success', 'Nouveau chauffeur ajout√© avec succ√®s.');
    }

    public function edit(Driver $driver): View
    {
        $this->authorize('edit drivers');

        // CORRECTION : On r√©cup√®re la liste des utilisateurs qui ne sont pas encore chauffeurs,
        // en y ajoutant l'utilisateur actuel du chauffeur s'il en a un.
        $assignedUserIds = Driver::whereNotNull('user_id')->where('id', '!=', $driver->id)->pluck('user_id');
        $linkableUsers = User::whereNotIn('id', $assignedUserIds)->orderBy('name')->get();

        $driverStatuses = DriverStatus::orderBy('name')->get();

        // CORRECTION : On ajoute la variable '$linkableUsers' aux donn√©es pass√©es √† la vue
        return view('admin.drivers.edit', compact('driver', 'driverStatuses', 'linkableUsers'));
    }

    public function update(UpdateDriverRequest $request, Driver $driver): RedirectResponse
    {
        $this->driverService->updateDriver($driver, $request->validated());
        return redirect()->route('admin.drivers.index')->with('success', 'Le chauffeur a √©t√© mis √† jour.');
    }

    public function destroy(Driver $driver): RedirectResponse
    {
        $this->authorize('delete drivers');
        $archived = $this->driverService->archiveDriver($driver);

        if ($archived) {
            return redirect()->route('admin.drivers.index')->with('success', "Le chauffeur {$driver->first_name} {$driver->last_name} a √©t√© archiv√©.");
        }

        return redirect()->back()->with('error', 'Impossible d\'archiver ce chauffeur car il est li√© √† des affectations.');
    }

    public function restore($driverId): RedirectResponse
    {
        $this->authorize('restore drivers');
        $this->driverService->restoreDriver($driverId);
        return redirect()->route('admin.drivers.index', ['view_deleted' => true])->with('success', "Le chauffeur a √©t√© restaur√©.");
    }

    /**
     * Supprime d√©finitivement un chauffeur.
     */
    public function forceDelete($driverId): RedirectResponse
    {
        $this->authorize('force delete drivers');

        // On appelle le service et on v√©rifie le r√©sultat
        $deleted = $this->driverService->forceDeleteDriver($driverId);

        if ($deleted) {
            return redirect()->route('admin.drivers.index', ['view_deleted' => true])->with('success', 'Le chauffeur a √©t√© supprim√© d√©finitivement.');
        }

        // Si la suppression a √©chou√©, on affiche un message d'erreur clair
        return redirect()->back()->with('error', 'Impossible de supprimer ce chauffeur car il est li√© √† un historique d\'affectations.');
    }


    /**
     * Affiche le formulaire d'importation de chauffeurs.
     */
    public function showImportForm(): View
    {
        $this->authorize('create drivers');
        return view('admin.drivers.import');
    }

    /**
     * T√©l√©charge le fichier mod√®le CSV complet pour l'importation.
     */
    public function downloadTemplate()
    {
        $this->authorize('create drivers');

        $csv = Writer::createFromString('');
        $csv->setOutputBOM(Writer::BOM_UTF8); // Ajoute le BOM UTF-8 pour garantir la compatibilit√©

        // En-t√™tes complets en fran√ßais
        $headers = [
            'nom', 'prenom', 'date_naissance', 'statut', 'matricule', 
            'telephone', 'email_personnel', 'adresse', 'numero_permis', 
            'categorie_permis', 'date_delivrance_permis', 'autorite_delivrance', 
            'date_recrutement', 'date_fin_contrat', 'contact_urgence_nom', 
            'contact_urgence_telephone', 'groupe_sanguin'
        ];

        // Ligne d'exemple
        $example = [
            'Merzouki', 'Sa√Ød', '1985-04-12', 'Disponible', 'DIF-2022-00123', 
            '0671020304', 'smerzouki@email.com', '123 Rue de la Paix, 16018 Alger', 'P-987654', 
            'B,C', '2016-08-20', 'Da√Øra El Biar', 
            '2020-01-15', '2025-11-14', 'Merzouki Ali', 
            '0565040302', 'O+'
        ];

        $csv->insertOne($headers);
        $csv->insertOne($example);

        return response($csv->toString(), 200, [
            'Content-Type' => 'text/csv; charset=UTF-8',
            'Content-Disposition' => 'attachment; filename="template_import_chauffeurs.csv"',
        ]);
    }

    /**
     * Traite l'importation du fichier CSV.
     * Version refactoris√©e pour une gestion robuste du BOM et une simplification.
     */
    public function handleImport(Request $request): RedirectResponse
    {
        $this->authorize('create drivers');
        
        $request->validate(['csv_file' => 'required|file|mimes:csv,txt']);
        
        $file = $request->file('csv_file');
        
        try {
            // Lecture du contenu du fichier et suppression du BOM
            $fileContent = file_get_contents($file->getRealPath());
            if (str_starts_with($fileContent, "\xef\xbb\xbf")) {
                $fileContent = substr($fileContent, 3);
            }

            // D√©tection du format et appel du parseur appropri√©
            $format = $this->detectFileFormat($fileContent);
            $records = match ($format) {
                'csv' => $this->parseCsvFormat($fileContent),
                'key_value' => $this->parseCustomFormat($fileContent),
                default => throw new \Exception("Format de fichier inconnu ou non support√©."),
            };
            
            $successCount = 0;
            $errorRows = [];
            $importId = Str::uuid()->toString();
            $statuses = DriverStatus::pluck('id', 'name');
            $defaultStatusId = $statuses->get('Disponible');
            
            Log::info("D√©but de l'importation (format personnalis√©) des chauffeurs", [
                'import_id' => $importId,
                'file' => $file->getClientOriginalName(),
                'records_count' => count($records),
            ]);
            
            foreach ($records as $offset => $record) {
                try {
                    // Les valeurs sont d√©j√† nettoy√©es par le parseur, mais un trim suppl√©mentaire ne fait pas de mal.
                    $sanitizedRecord = array_map('trim', $record);

                    $data = $this->prepareDataForValidation($sanitizedRecord);
                    $validator = Validator::make($data, $this->getValidationRules());
                    
                    if ($validator->fails()) {
                        $errorRows[] = ['line' => $offset + 1, 'errors' => $validator->errors()->all(), 'data' => $record];
                        continue;
                    }
                    
                    $validatedData = $validator->validated();
                    $statusName = $validatedData['statut'] ?? null;
                    $statusId = $statuses->get($statusName, $defaultStatusId);
                    
                    unset($validatedData['statut']);
                    $validatedData['status_id'] = $statusId;
                    
                    Driver::create($validatedData);
                    $successCount++;
                    
                } catch (QueryException $e) {
                    $errorMessage = $this->formatDatabaseError($e);
                    $errorRows[] = ['line' => $offset + 1, 'errors' => [$errorMessage], 'data' => $record];
                } catch (\Exception $e) {
                    $detailedError = sprintf(
                        "Erreur inattendue: %s dans %s ligne %d",
                        $e->getMessage(),
                        basename($e->getFile()),
                        $e->getLine()
                    );
                    $errorRows[] = ['line' => $offset + 1, 'errors' => [$detailedError], 'data' => $record];
                }
            }
            
            Log::info("Fin de l'importation (format personnalis√©) des chauffeurs", [
                'import_id' => $importId,
                'success_count' => $successCount,
                'error_count' => count($errorRows)
            ]);
            
            return redirect()->route('admin.drivers.import.results')
                ->with('successCount', $successCount)
                ->with('errorRows', $errorRows)
                ->with('importId', $importId)
                ->with('fileName', $file->getClientOriginalName());
                
        } catch (\Exception $e) {
            $detailedError = sprintf(
                "Une erreur critique est survenue: %s dans %s ligne %d",
                $e->getMessage(),
                basename($e->getFile()),
                $e->getLine()
            );

            Log::critical("Erreur critique lors de l'importation (format personnalis√©)", [
                'error' => $e->getMessage(),
                'trace' => $e->getTraceAsString(),
                'file' => $file->getClientOriginalName()
            ]);
            
            return redirect()->route('admin.drivers.import.show')
                ->with('error', $detailedError)
                ->withInput();
        }
    }
    
    /**
     * Affiche les r√©sultats de l'importation.
     */
    public function showImportResults(): View
    {
        $this->authorize('create drivers');
        
        $successCount = session('successCount', 0);
        $errorRows = session('errorRows', []);
        $importId = session('importId', null);
        $fileName = session('fileName', 'Fichier CSV');
        $encoding = session('encoding', 'utf8');
        
        return view('admin.drivers.import-results', compact(
            'successCount', 
            'errorRows', 
            'importId', 
            'fileName', 
            'encoding'
        ));
    }
    
    /**
     * D√©tecte l'encodage d'un contenu de fichier.
     */
    private function detectEncoding(string $content): string
    {
        // Liste des encodages √† tester dans l'ordre de priorit√©
        $encodings = ['UTF-8', 'ISO-8859-1', 'Windows-1252'];
        
        foreach ($encodings as $encoding) {
            $sample = mb_convert_encoding($content, 'UTF-8', $encoding);
            
            // Si la conversion ne g√©n√®re pas de caract√®res invalides, c'est probablement le bon encodage
            if (!preg_match('/\p{Cc}(?!\n|\t|\r)/u', $sample)) {
                switch ($encoding) {
                    case 'UTF-8': return 'utf8';
                    case 'ISO-8859-1': return 'iso';
                    case 'Windows-1252': return 'windows';
                }
            }
        }
        
        // Par d√©faut, on suppose Windows-1252 (encodage courant pour les CSV g√©n√©r√©s par Excel)
        return 'windows';
    }
    
    /**
     * Convertit un contenu vers UTF-8 depuis un encodage sp√©cifi√©.
     */
    private function convertToUtf8(string $content, string $fromEncoding): string
    {
        $sourceEncoding = match($fromEncoding) {
            'iso' => 'ISO-8859-1',
            'windows' => 'Windows-1252',
            default => 'UTF-8'
        };
        
        return mb_convert_encoding($content, 'UTF-8', $sourceEncoding);
    }
    
    /**
     * Nettoie les donn√©es d'un enregistrement CSV.
     */
    private function sanitizeRecord(array $record): array
    {
        $sanitized = [];
        
        foreach ($record as $key => $value) {
            // Nettoyage des cl√©s (y compris le BOM UTF-8)
            $cleanKey = trim($key);
            if (str_starts_with($cleanKey, "\xef\xbb\xbf")) {
                $cleanKey = substr($cleanKey, 3);
            }
            
            // Nettoyage des valeurs
            if (is_string($value)) {
                // Suppression des caract√®res invisibles et normalisation des espaces
                $cleanValue = trim(preg_replace('/\s+/', ' ', $value));
                
                // Conversion des cha√Ænes vides en NULL
                $sanitized[$cleanKey] = $cleanValue === '' ? null : $cleanValue;
            } else {
                $sanitized[$cleanKey] = $value;
            }
        }
        
        return $sanitized;
    }
    
    /**
     * Detects the format of the import file based on its content.
     *
     * @param string $content
     * @return string 'csv', 'key_value', or 'unknown'
     */
    private function detectFileFormat(string $content): string
    {
        $lines = preg_split("/\r\n|\n|\r/", $content);
        $firstNonEmptyLine = '';
        foreach ($lines as $line) {
            if (trim($line) !== '') {
                $firstNonEmptyLine = $line;
                break;
            }
        }

        if ($firstNonEmptyLine === '') {
            return 'unknown';
        }

        if (str_contains($firstNonEmptyLine, ',')) {
            return 'csv';
        }

        if (str_contains($firstNonEmptyLine, ':')) {
            return 'key_value';
        }

        return 'unknown';
    }

    /**
     * Parses a custom key:value format from a string.
     * Records are separated by empty lines.
     *
     * @param string $content
     * @return array
     */
    private function parseCustomFormat(string $content): array
    {
        $records = [];
        $currentRecord = [];
        $lines = preg_split("/\r\n|\n|\r/", $content);

        foreach ($lines as $line) {
            $line = trim($line);

            if (empty($line)) {
                if (!empty($currentRecord)) {
                    $records[] = $currentRecord;
                    $currentRecord = [];
                }
                continue;
            }

            $parts = explode(':', $line, 2);
            if (count($parts) === 2) {
                $key = trim($parts[0]);
                $value = trim($parts[1]);
                $currentRecord[$key] = $value;
            }
        }

        if (!empty($currentRecord)) {
            $records[] = $currentRecord;
        }

        return $records;
    }

    /**
     * Parses a standard CSV string into an array of records.
     *
     * @param string $content
     * @return array
     */
    private function parseCsvFormat(string $content): array
    {
        $csv = \League\Csv\Reader::createFromString($content);
        $csv->setHeaderOffset(0);
        
        $records = \League\Csv\Statement::create()->process($csv);
        
        return iterator_to_array($records, true);
    }

    /**
     * Pr√©pare les donn√©es pour la validation.
     */
    private function prepareDataForValidation(array $record): array
    {
        $map = [
            'nom' => 'last_name', 
            'prenom' => 'first_name', 
            'date_naissance' => 'birth_date',
            'statut' => 'statut', 
            'matricule' => 'employee_number', 
            'telephone' => 'personal_phone',
            'email_personnel' => 'personal_email', 
            'adresse' => 'address', 
            'numero_permis' => 'license_number',
            'categorie_permis' => 'license_category', 
            'date_delivrance_permis' => 'license_issue_date',
            'autorite_delivrance' => 'license_authority', 
            'date_recrutement' => 'recruitment_date',
            'date_fin_contrat' => 'contract_end_date', 
            'contact_urgence_nom' => 'emergency_contact_name',
            'contact_urgence_telephone' => 'emergency_contact_phone', 
            'groupe_sanguin' => 'blood_type',
        ];
        
        $dataToValidate = [];
        
        foreach ($map as $csvHeader => $dbField) {
            if (array_key_exists($csvHeader, $record)) {
                $value = $record[$csvHeader];

                // Convert empty strings to null so they pass 'nullable' validation
                // and are correctly stored in the database.
                if ($value === '') {
                    $value = null;
                }
                
                // Traitement sp√©cifique pour les dates
                if (in_array($dbField, ['birth_date', 'license_issue_date', 'recruitment_date', 'contract_end_date']) && $value) {
                    $value = $this->formatDate($value);
                }
                
                $dataToValidate[$dbField] = $value;
            }
        }
        
        return $dataToValidate;
    }
    
    /**
     * Formate une date en format YYYY-MM-DD.
     */
    private function formatDate($dateString)
    {
        if (!$dateString) return null;

        // Si la date est d√©j√† au format YYYY-MM-DD, on la retourne directement.
        if (preg_match('/^\d{4}-\d{2}-\d{2}$/', $dateString)) {
            return $dateString;
        }

        $formats = [
            'd/m/Y', 'd-m-Y', 'd.m.Y',
            'Y/m/d', 'Y-m-d', 'Y.m.d',
            'd/m/y', 'd-m-y', 'd.m.y'
        ];

        foreach ($formats as $format) {
            $date = \DateTime::createFromFormat($format, $dateString);

            // This is a robust check. If the date was created successfully AND
            // re-formatting it with the same format produces the original string,
            // then the parse was successful and unambiguous.
            if ($date instanceof \DateTime && $date->format($format) === $dateString) {
                return $date->format('Y-m-d');
            }
        }

        // Si aucun format n'a fonctionn√©, on retourne la cha√Æne originale pour qu'elle √©choue √† la validation 'date_format:Y-m-d'
        // et retourne un message d'erreur clair √† l'utilisateur.
        return $dateString;
    }
    
    /**
     * Formate une erreur de base de donn√©es de mani√®re conviviale.
     */
    private function formatDatabaseError(QueryException $e): string
    {
        $errorCode = $e->getCode();
        $errorMessage = $e->getMessage();

        // Erreurs de contrainte d'unicit√© (PostgreSQL: 23505)
        if ($errorCode == 23505) {
            if (str_contains($errorMessage, 'drivers_employee_number_unique')) {
                return "Le matricule fourni existe d√©j√†.";
            }
            if (str_contains($errorMessage, 'drivers_personal_email_unique')) {
                return "L'adresse email fournie existe d√©j√†.";
            }
            if (str_contains($errorMessage, 'drivers_license_number_unique')) {
                return "Le num√©ro de permis fourni existe d√©j√†.";
            }
            // Essayer d'extraire les d√©tails de la cl√© pour un message plus g√©n√©rique
            if (preg_match('/Key \((.*?)\)=\((.*?)\) already exists./', $errorMessage, $matches)) {
                $column = $matches[1];
                $value = $matches[2];
                return "La valeur '$value' existe d√©j√† pour le champ '$column'.";
            }
            return "Une valeur unique existe d√©j√† dans la base de donn√©es.";
        }

        // Erreurs de type de donn√©es (PostgreSQL: 22P02, 22007)
        if ($errorCode == '22P02' || $errorCode == '22007') {
            if (str_contains($errorMessage, 'date') || str_contains($errorMessage, 'time')) {
                return "Format de date invalide. Le format attendu est AAAA-MM-JJ.";
            }
            return "Format de donn√©es invalide pour l'une des colonnes.";
        }

        // Erreurs de contrainte de cl√© √©trang√®re (PostgreSQL: 23503)
        if ($errorCode == 23503) {
            return "R√©f√©rence √† une valeur qui n'existe pas (ex: statut de chauffeur invalide).";
        }

        // Erreur par d√©faut
        return "Erreur de base de donn√©es: " . Str::limit($e->getMessage(), 150);
    }
    
    /**
     * R√®gles de validation pour l'importation de chauffeurs.
     */
    private function getValidationRules(): array
    {
        return [
            'last_name' => ['required', 'string', 'max:255'],
            'first_name' => ['required', 'string', 'max:255'],
            'birth_date' => ['required', 'date_format:Y-m-d'],
            'statut' => ['nullable', 'string'],
            'employee_number' => ['nullable', 'string', 'max:100', 'unique:drivers,employee_number,NULL,id,deleted_at,NULL'],
            'personal_phone' => ['nullable', 'string', 'max:50'],
            'personal_email' => ['nullable', 'email', 'max:255', 'unique:drivers,personal_email,NULL,id,deleted_at,NULL'],
            'address' => ['nullable', 'string', 'max:1000'],
            'license_number' => ['nullable', 'string', 'max:100', 'unique:drivers,license_number,NULL,id,deleted_at,NULL'],
            'license_category' => ['nullable', 'string', 'max:50'],
            'license_issue_date' => ['nullable', 'date_format:Y-m-d'],
            'license_authority' => ['nullable', 'string', 'max:255'],
            'recruitment_date' => ['nullable', 'date_format:Y-m-d'],
            'contract_end_date' => ['nullable', 'date_format:Y-m-d', 'after_or_equal:recruitment_date'],
            'emergency_contact_name' => ['nullable', 'string', 'max:255'],
            'emergency_contact_phone' => ['nullable', 'string', 'max:50'],
            'blood_type' => ['nullable', 'string', 'max:10'],
        ];
    }
}
--- FIN DU FICHIER : ./app/Http/Controllers/Admin/DriverController.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Http/Controllers/Admin/Handover/VehicleHandoverController.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Http\Controllers\Admin\Handover;

use App\Http\Controllers\Controller;
use App\Models\Assignment;
use App\Models\VehicleHandoverDetail;
use App\Models\VehicleHandoverForm;
use Illuminate\Contracts\View\View;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;
use Illuminate\Http\Response;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\DB;
use Illuminate\Support\Facades\Log;
use Illuminate\Support\Facades\File;
use Illuminate\Support\Facades\Storage;
use Illuminate\Support\Str;
use App\Services\PdfGenerationService;

class VehicleHandoverController extends Controller
{
    /**
     * Affiche la vue de cr√©ation d‚Äôune fiche de remise pour une affectation donn√©e.
     *
     * @param Assignment $assignment
     * @return View
     */
    public function create(Assignment $assignment): View
    {
        $this->authorize('create handovers');

        $assignment->load(['vehicle.vehicleType', 'driver']);

        return view('admin.handovers.vehicles.create', compact('assignment'));
    }

    /**
     * Enregistre une nouvelle fiche de remise et ses d√©tails.
     *
     * @param Request $request
     * @return RedirectResponse
     */
    public function store(Request $request): RedirectResponse
    {
        $this->authorize('create handovers');

        $validated = $request->validate([
            'assignment_id' => 'required|exists:assignments,id|unique:vehicle_handover_forms,assignment_id',
            'issue_date' => 'required|date',
            'general_observations' => 'nullable|string|max:2000',
            'checklist' => 'required|array',
            'checklist.*.*' => 'required|in:Bon,Moyen,Mauvais,N/A,Oui,Non',
        ]);

        $assignment = Assignment::with('vehicle')->findOrFail($validated['assignment_id']);

        DB::beginTransaction();
        try {
            $handover = VehicleHandoverForm::create([
                'assignment_id' => $validated['assignment_id'],
                'issue_date' => $validated['issue_date'],
                'current_mileage' => $assignment->vehicle->current_mileage,
                'general_observations' => $validated['general_observations'],
            ]);

            foreach ($validated['checklist'] as $category => $items) {
                foreach ($items as $itemKey => $status) {
                    VehicleHandoverDetail::create([
                        'handover_form_id' => $handover->id,
                        'category' => str_replace('_', ' ', $category),
                        'item' => str_replace('_', ' ', $itemKey),
                        'status' => $status,
                    ]);
                }
            }

            DB::commit();

            Log::channel('audit')->info('Fiche de remise cr√©√©e', [
                'handover_id' => $handover->id,
                'assignment_id' => $assignment->id,
                'user_id' => Auth::id(),
                'user_email' => Auth::user()->email,
            ]);

            return redirect()
                ->route('admin.handovers.vehicles.show', $handover)
                ->with('flash', [
                    'type' => 'success',
                    'message' => 'Fiche de remise cr√©√©e avec succ√®s.',
                ]);
        } catch (\Exception $e) {
            DB::rollBack();
            Log::channel('errors')->error('Erreur lors de la cr√©ation de la fiche de remise', [
                'error' => $e->getMessage(),
                'trace' => $e->getTraceAsString(),
                'user_id' => Auth::id(),
            ]);

            return back()->withInput()->withErrors([
                'error' => 'Une erreur est survenue lors de la cr√©ation de la fiche. Veuillez r√©essayer.',
            ]);
        }
    }

    /**
     * Affiche la fiche de remise avec ses d√©tails.
     *
     * @param VehicleHandoverForm $handover
     * @return View
     */
    public function show(VehicleHandoverForm $handover): View
    {
        $this->authorize('view handovers');

        $handover->load(['assignment.vehicle.vehicleType', 'assignment.driver', 'assignment.organization', 'details']);
        $checklist = $handover->details->groupBy('category');

        return view('admin.handovers.vehicles.show', [
            'handoverForm' => $handover,
            'checklist' => $checklist,
        ]);
    }

    /**
     * Affiche le formulaire d‚Äô√©dition d‚Äôune fiche de remise.
     *
     * @param VehicleHandoverForm $handover
     * @return View
     */
    public function edit(VehicleHandoverForm $handover): View
    {
        $this->authorize('edit handovers');

        $handover->load(['assignment.vehicle.vehicleType', 'assignment.driver', 'details']);

        $detailsMap = $handover->details->mapWithKeys(function ($detail) {
            return [
                Str::slug($detail->category, '_') . '.' . Str::slug($detail->item, '_') => $detail->status,
            ];
        });

        return view('admin.handovers.vehicles.edit', compact('handover', 'detailsMap'));
    }

    /**
     * Met √† jour une fiche de remise et ses d√©tails.
     *
     * @param Request $request
     * @param VehicleHandoverForm $handover
     * @return RedirectResponse
     */
    public function update(Request $request, VehicleHandoverForm $handover): RedirectResponse
    {
        $this->authorize('edit handovers');

        $validated = $request->validate([
            'issue_date' => 'required|date',
            'general_observations' => 'nullable|string|max:2000',
            'checklist' => 'required|array',
            'checklist.*.*' => 'required|in:Bon,Moyen,Mauvais,N/A,Oui,Non',
        ]);

        DB::beginTransaction();
        try {
            $handover->update([
                'issue_date' => $validated['issue_date'],
                'general_observations' => $validated['general_observations'],
            ]);

            $handover->details()->delete();

            foreach ($validated['checklist'] as $category => $items) {
                foreach ($items as $itemKey => $status) {
                    VehicleHandoverDetail::create([
                        'handover_form_id' => $handover->id,
                        'category' => str_replace('_', ' ', $category),
                        'item' => str_replace('_', ' ', $itemKey),
                        'status' => $status,
                    ]);
                }
            }
            
            DB::commit();

            Log::channel('audit')->info('Fiche de remise mise √† jour', [
                'handover_id' => $handover->id,
                'user_id' => Auth::id(),
                'user_email' => Auth::user()->email,
            ]);

            return redirect()
                ->route('admin.handovers.vehicles.show', $handover)
                ->with('flash', [
                    'type' => 'success',
                    'message' => 'Fiche de remise mise √† jour avec succ√®s.',
                ]);
        } catch (\Exception $e) {
            DB::rollBack();
            Log::channel('errors')->error('Erreur mise √† jour fiche de remise', [
                'error' => $e->getMessage(),
                'trace' => $e->getTraceAsString(),
                'user_id' => Auth::id(),
            ]);
            return back()->withInput()->withErrors([
                'error' => 'Une erreur est survenue lors de la mise √† jour. Veuillez r√©essayer.',
            ]);
        }
    }

    /**
     * T√©l√©verse une fiche sign√©e et met √† jour le chemin
     *
     * @param Request $request
     * @param VehicleHandoverForm $handover
     * @return RedirectResponse
     */
    public function uploadSigned(Request $request, VehicleHandoverForm $handover): RedirectResponse
    {
        $this->authorize('upload signed handovers');

        $request->validate([
            'signed_form' => ['required', 'file', 'mimes:pdf,jpg,jpeg,png', 'max:5120'],
        ]);

        try {
            if ($handover->signed_form_path) {
                Storage::disk('public')->delete($handover->signed_form_path);
            }

            $path = $request->file('signed_form')->store('handovers/signed', 'public');

            $handover->update(['signed_form_path' => $path]);

            Log::channel('audit')->info('Fiche sign√©e t√©l√©vers√©e', [
                'handover_id' => $handover->id,
                'user_id' => Auth::id(),
                'user_email' => Auth::user()->email,
            ]);

            return back()->with('flash', [
                'type' => 'success',
                'message' => 'Fiche sign√©e t√©l√©vers√©e avec succ√®s.',
            ]);
        } catch (\Exception $e) {
            Log::channel('errors')->error('Erreur t√©l√©versement fiche sign√©e', [
                'error' => $e->getMessage(),
                'handover_id' => $handover->id,
                'user_id' => Auth::id(),
            ]);
            return back()->with('flash', [
                'type' => 'error',
                'message' => 'Erreur lors du t√©l√©versement du fichier sign√©. Veuillez r√©essayer.',
            ]);
        }
    }

    /**
     * Supprime une fiche de remise (soft delete)
     *
     * @param VehicleHandoverForm $handover
     * @return RedirectResponse
     */
    public function destroy(VehicleHandoverForm $handover): RedirectResponse
    {
        $this->authorize('delete handovers');

        $assignmentId = $handover->assignment_id;

        try {
            $handover->delete();

            Log::channel('security')->warning('Fiche de remise archiv√©e', [
                'handover_id' => $handover->id,
                'assignment_id' => $assignmentId,
                'user_id' => Auth::id(),
                'user_email' => Auth::user()->email,
            ]);

            return redirect()
                ->route('admin.assignments.index')
                ->with('flash', [
                    'type' => 'warning',
                    'message' => 'Fiche de remise archiv√©e',
                    'description' => "La fiche de remise pour l'affectation N¬∞{$assignmentId} a √©t√© archiv√©e.",
                ]);
        } catch (\Exception $e) {
            Log::channel('errors')->error('Erreur suppression fiche de remise', [
                'error' => $e->getMessage(),
                'handover_id' => $handover->id,
                'user_id' => Auth::id(),
            ]);
            return back()->withErrors([
                'error' => 'Une erreur est survenue lors de la suppression.',
            ]);
        }
    }

    /**
     * G√©n√®re et t√©l√©charge la fiche de remise au format PDF.
     *
     * @param VehicleHandoverForm $handover
     * @param PdfGenerationService $pdfService
     * @return Response|RedirectResponse
     */
    public function downloadPdf(VehicleHandoverForm $handover, PdfGenerationService $pdfService)
    {
        $this->authorize('view handovers');

        $handover->load(['assignment.vehicle.vehicleType', 'assignment.driver', 'assignment.organization', 'details']);
        $checklist = $handover->details->groupBy('category');

        // S√©lection de l'image sch√©matique selon le type de v√©hicule
        $sketchName = $handover->assignment->vehicle->vehicleType->name === 'Moto' 
            ? 'scooter_sketch.png' 
            : 'car_sketch.png';
        $sketchPath = public_path('images/' . $sketchName);
        $vehicleSketchBase64 = '';

        if (File::exists($sketchPath)) {
            $fileContent = File::get($sketchPath);
            $vehicleSketchBase64 = 'data:image/png;base64,' . base64_encode($fileContent);
        }

        $html = view('admin.handovers.vehicles.pdf', [
            'handoverForm' => $handover,
            'checklist' => $checklist,
            'vehicle_sketch_base64' => $vehicleSketchBase64,
        ])->render();

        try {
            $pdfContent = $pdfService->generateFromHtml($html);

            $fileName = 'fiche-remise-' . $handover->assignment->id . '-' . $handover->issue_date->format('Y-m-d') . '.pdf';

            return response($pdfContent, 200, [
                'Content-Type' => 'application/pdf',
                'Content-Disposition' => 'attachment; filename="' . $fileName . '"',
            ]);
        } catch (\Exception $e) {
            Log::error("Erreur de g√©n√©ration PDF pour la fiche {$handover->id}: " . $e->getMessage(), ['exception' => $e]);

            return back()->with('flash', [
                'type' => 'error',
                'message' => 'Erreur lors de la g√©n√©ration du PDF.',
                'description' => 'Le service PDF a √©chou√©. Veuillez r√©essayer ou contacter le support si le probl√®me persiste.',
            ]);
        }
    }
}

--- FIN DU FICHIER : ./app/Http/Controllers/Admin/Handover/VehicleHandoverController.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Http/Controllers/Admin/Maintenance/DashboardController.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Http\Controllers\Admin\Maintenance;

use App\Http\Controllers\Controller;
use App\Models\Vehicle;
use App\Models\MaintenancePlan;
use App\Models\MaintenanceLog;
use App\Models\MaintenanceStatus;
use Illuminate\Contracts\View\View;
use Illuminate\Http\Request;
use Illuminate\Http\JsonResponse;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\DB;
use Illuminate\Support\Facades\Log;
use Illuminate\Support\Facades\Cache;
use Carbon\Carbon;

class DashboardController extends Controller
{
    /**
     * üîß MAINTENANCE DASHBOARD - VERSION ENTERPRISE
     * 
     * Affiche le tableau de bord principal de maintenance avec statistiques
     * en temps r√©el et alertes de maintenance urgente.
     *
     * @param Request $request
     * @return View
     */
    public function index(Request $request): View
    {
        $this->authorize('view maintenance dashboard');
        
        try {
            // Cache des statistiques pour 5 minutes pour optimiser les performances
            $cacheKey = 'maintenance_dashboard_stats_' . Auth::user()->organization_id;
            
            $dashboardData = Cache::remember($cacheKey, now()->addMinutes(5), function () {
                return $this->generateDashboardStatistics();
            });
            
            // Log de l'acc√®s au dashboard
            Log::channel('maintenance')->info('Maintenance dashboard accessed', [
                'user_id' => Auth::id(),
                'user_email' => Auth::user()->email,
                'organization_id' => Auth::user()->organization_id,
                'timestamp' => now()->toISOString()
            ]);
            
            return view('admin.maintenance.dashboard', $dashboardData);
            
        } catch (\Exception $e) {
            Log::channel('errors')->error('Maintenance dashboard error', [
                'user_id' => Auth::id(),
                'error' => $e->getMessage(),
                'trace' => $e->getTraceAsString()
            ]);
            
            return view('admin.maintenance.dashboard', [
                'vehicleStats' => [],
                'urgentPlans' => collect(),
                'maintenanceStats' => [],
                'error' => 'Erreur lors du chargement du dashboard de maintenance.'
            ]);
        }
    }

    /**
     * üìä G√©n√©rer les statistiques compl√®tes du dashboard
     *
     * @return array
     */
    private function generateDashboardStatistics(): array
    {
        $organizationId = Auth::user()->organization_id;
        
        // Statistiques des v√©hicules par statut
        $vehicleStats = Vehicle::when($organizationId, function ($query) use ($organizationId) {
                $query->where('organization_id', $organizationId);
            })
            ->select('status')
            ->selectRaw('COUNT(*) as total')
            ->groupBy('status')
            ->pluck('total', 'status')
            ->toArray();
        
        // Plans de maintenance urgents avec calcul intelligent de priorit√©
        $urgentPlans = MaintenancePlan::with(['vehicle', 'maintenanceType', 'recurrenceUnit'])
            ->whereHas('vehicle', function ($query) use ($organizationId) {
                if ($organizationId) {
                    $query->where('organization_id', $organizationId);
                }
                $query->whereNull('deleted_at');
            })
            ->where(function ($query) {
                // √âch√©ance par date dans les 45 prochains jours ou d√©pass√©e
                $query->where('next_due_date', '<=', Carbon::now()->addDays(45))
                      ->whereNotNull('next_due_date');
            })
            ->orWhere(function ($query) use ($organizationId) {
                // √âch√©ance par kilom√©trage proche (2000 km ou moins) ou d√©pass√©e
                $query->whereNotNull('next_due_mileage')
                      ->whereHas('vehicle', function ($vehicleQuery) use ($organizationId) {
                          if ($organizationId) {
                              $vehicleQuery->where('organization_id', $organizationId);
                          }
                          $vehicleQuery->whereRaw('maintenance_plans.next_due_mileage - vehicles.current_mileage <= 2000')
                                      ->whereNull('deleted_at');
                      });
            })
            ->orderByRaw('
                CASE 
                    WHEN next_due_date IS NOT NULL AND next_due_date < NOW() THEN 1
                    WHEN next_due_mileage IS NOT NULL AND EXISTS (
                        SELECT 1 FROM vehicles v 
                        WHERE v.id = maintenance_plans.vehicle_id 
                        AND maintenance_plans.next_due_mileage <= v.current_mileage
                    ) THEN 2
                    ELSE 3 
                END
            ')
            ->orderBy('next_due_date', 'asc')
            ->limit(8)
            ->get()
            ->map(function ($plan) {
                return $this->formatUrgentPlan($plan);
            });

        // Statistiques de maintenance globales
        $maintenanceStats = $this->calculateMaintenanceStatistics($organizationId);
        
        // Co√ªts de maintenance ce mois
        $monthlyMaintenanceCosts = MaintenanceLog::when($organizationId, function ($query) use ($organizationId) {
                $query->whereHas('vehicle', function ($q) use ($organizationId) {
                    $q->where('organization_id', $organizationId);
                });
            })
            ->where('performed_on_date', '>=', now()->startOfMonth())
            ->sum('cost') ?? 0;

        // Prochaines maintenances planifi√©es (7 prochains jours)
        $upcomingMaintenance = MaintenancePlan::with(['vehicle', 'maintenanceType'])
            ->whereHas('vehicle', function ($query) use ($organizationId) {
                if ($organizationId) {
                    $query->where('organization_id', $organizationId);
                }
                $query->whereNull('deleted_at');
            })
            ->where('next_due_date', '>=', now())
            ->where('next_due_date', '<=', now()->addDays(7))
            ->orderBy('next_due_date')
            ->limit(10)
            ->get();

        return [
            'vehicleStats' => $vehicleStats,
            'urgentPlans' => $urgentPlans,
            'maintenanceStats' => $maintenanceStats,
            'monthlyMaintenanceCosts' => $monthlyMaintenanceCosts,
            'upcomingMaintenance' => $upcomingMaintenance,
            'lastUpdated' => now()->format('d/m/Y H:i')
        ];
    }

    /**
     * üö® Formater un plan de maintenance urgent avec calculs de priorit√©
     *
     * @param MaintenancePlan $plan
     * @return array
     */
    private function formatUrgentPlan(MaintenancePlan $plan): array
    {
        $urgencyLevel = 'low';
        $urgencyPercent = 0;
        $urgencyText = '';
        
        // Calcul de l'urgence par date
        if ($plan->next_due_date) {
            $daysUntilDue = now()->diffInDays($plan->next_due_date, false);
            
            if ($daysUntilDue < 0) {
                $urgencyLevel = 'critical';
                $urgencyPercent = 100;
                $urgencyText = 'En retard de ' . abs($daysUntilDue) . ' jour(s)';
            } elseif ($daysUntilDue <= 7) {
                $urgencyLevel = 'high';
                $urgencyPercent = max(85, 100 - ($daysUntilDue * 5));
                $urgencyText = 'Dans ' . $daysUntilDue . ' jour(s)';
            } elseif ($daysUntilDue <= 30) {
                $urgencyLevel = 'medium';
                $urgencyPercent = max(50, 85 - ($daysUntilDue * 2));
                $urgencyText = 'Dans ' . $daysUntilDue . ' jour(s)';
            } else {
                $urgencyPercent = max(20, 50 - ($daysUntilDue - 30));
                $urgencyText = 'Dans ' . $daysUntilDue . ' jour(s)';
            }
        }
        
        // Calcul de l'urgence par kilom√©trage (prioritaire sur la date)
        if ($plan->next_due_mileage && $plan->vehicle && $plan->vehicle->current_mileage) {
            $kmRemaining = $plan->next_due_mileage - $plan->vehicle->current_mileage;
            
            if ($kmRemaining <= 0) {
                $urgencyLevel = 'critical';
                $urgencyPercent = 100;
                $urgencyText = 'D√©pass√© de ' . number_format(abs($kmRemaining), 0, ',', ' ') . ' km';
            } elseif ($kmRemaining <= 500) {
                $urgencyLevel = 'high';
                $urgencyPercent = max(90, 100 - ($kmRemaining / 10));
                $urgencyText = 'Dans ' . number_format($kmRemaining, 0, ',', ' ') . ' km';
            } elseif ($kmRemaining <= 2000) {
                $urgencyLevel = 'medium';
                $urgencyPercent = max(60, 90 - ($kmRemaining / 50));
                $urgencyText = 'Dans ' . number_format($kmRemaining, 0, ',', ' ') . ' km';
            } else {
                $urgencyPercent = max(30, 60 - (($kmRemaining - 2000) / 100));
                $urgencyText = 'Dans ' . number_format($kmRemaining, 0, ',', ' ') . ' km';
            }
        }

        return [
            'id' => $plan->id,
            'vehicle_name' => trim($plan->vehicle->brand . ' ' . $plan->vehicle->model),
            'vehicle_plate' => $plan->vehicle->registration_plate,
            'maintenance_type' => $plan->maintenanceType->name ?? 'N/A',
            'urgency_level' => $urgencyLevel,
            'urgency_percent' => min((int) $urgencyPercent, 100),
            'urgency_text' => $urgencyText,
            'next_due_display' => $plan->next_due_mileage 
                ? number_format($plan->next_due_mileage, 0, ',', ' ') . ' km' 
                : ($plan->next_due_date ? $plan->next_due_date->format('d/m/Y') : 'Non d√©fini'),
            'vehicle_current_mileage' => $plan->vehicle->current_mileage 
                ? number_format($plan->vehicle->current_mileage, 0, ',', ' ') . ' km' 
                : 'Non renseign√©',
            'recurrence_display' => $this->formatRecurrence($plan),
        ];
    }

    /**
     * üìà Calculer les statistiques globales de maintenance
     *
     * @param int|null $organizationId
     * @return array
     */
    private function calculateMaintenanceStatistics(?int $organizationId): array
    {
        $baseQuery = MaintenanceLog::query();
        
        if ($organizationId) {
            $baseQuery->whereHas('vehicle', function ($q) use ($organizationId) {
                $q->where('organization_id', $organizationId);
            });
        }
        
        return [
            'total_this_month' => (clone $baseQuery)
                ->where('performed_on_date', '>=', now()->startOfMonth())
                ->count(),
            'total_last_month' => (clone $baseQuery)
                ->whereBetween('performed_on_date', [
                    now()->subMonth()->startOfMonth(),
                    now()->subMonth()->endOfMonth()
                ])
                ->count(),
            'average_cost' => (clone $baseQuery)
                ->where('performed_on_date', '>=', now()->subMonths(6))
                ->avg('cost') ?? 0,
            'pending_plans' => MaintenancePlan::when($organizationId, function ($query) use ($organizationId) {
                $query->whereHas('vehicle', function ($q) use ($organizationId) {
                    $q->where('organization_id', $organizationId);
                });
            })->count(),
        ];
    }

    /**
     * üîÑ Formater l'affichage de r√©currence
     *
     * @param MaintenancePlan $plan
     * @return string
     */
    private function formatRecurrence(MaintenancePlan $plan): string
    {
        if (!$plan->recurrenceUnit || !$plan->recurrence_value) {
            return 'Non d√©fini';
        }
        
        $value = $plan->recurrence_value;
        $unit = $plan->recurrenceUnit->name;
        
        return "Tous les {$value} {$unit}";
    }

    /**
     * üìÖ Vue calendrier de maintenance
     *
     * @return View
     */
    public function calendar(): View
    {
        $this->authorize('view maintenance dashboard');
        
        $organizationId = Auth::user()->organization_id;
        
        // R√©cup√©rer les √©v√©nements de maintenance pour le calendrier
        $events = MaintenancePlan::with(['vehicle', 'maintenanceType'])
            ->whereHas('vehicle', function ($query) use ($organizationId) {
                if ($organizationId) {
                    $query->where('organization_id', $organizationId);
                }
                $query->whereNull('deleted_at');
            })
            ->whereNotNull('next_due_date')
            ->where('next_due_date', '>=', now()->subMonth())
            ->where('next_due_date', '<=', now()->addMonths(3))
            ->get()
            ->map(function ($plan) {
                return [
                    'id' => $plan->id,
                    'title' => $plan->vehicle->registration_plate . ' - ' . $plan->maintenanceType->name,
                    'start' => $plan->next_due_date->format('Y-m-d'),
                    'className' => $this->getEventClassName($plan),
                    'extendedProps' => [
                        'vehicle' => $plan->vehicle->brand . ' ' . $plan->vehicle->model,
                        'plate' => $plan->vehicle->registration_plate,
                        'maintenance_type' => $plan->maintenanceType->name,
                        'notes' => $plan->notes,
                    ]
                ];
            });
        
        return view('admin.maintenance.calendar', compact('events'));
    }

    /**
     * üö® Vue des alertes de maintenance
     *
     * @return View
     */
    public function alerts(): View
    {
        $this->authorize('view maintenance dashboard');
        
        $organizationId = Auth::user()->organization_id;
        
        // Alertes critiques (en retard)
        $criticalAlerts = MaintenancePlan::with(['vehicle', 'maintenanceType'])
            ->whereHas('vehicle', function ($query) use ($organizationId) {
                if ($organizationId) {
                    $query->where('organization_id', $organizationId);
                }
                $query->whereNull('deleted_at');
            })
            ->where(function ($query) {
                $query->where('next_due_date', '<', now())
                      ->orWhereRaw('next_due_mileage < (
                          SELECT current_mileage FROM vehicles 
                          WHERE vehicles.id = maintenance_plans.vehicle_id
                      )');
            })
            ->get();
        
        // Alertes importantes (dans les 7 prochains jours)
        $importantAlerts = MaintenancePlan::with(['vehicle', 'maintenanceType'])
            ->whereHas('vehicle', function ($query) use ($organizationId) {
                if ($organizationId) {
                    $query->where('organization_id', $organizationId);
                }
                $query->whereNull('deleted_at');
            })
            ->where('next_due_date', '>=', now())
            ->where('next_due_date', '<=', now()->addDays(7))
            ->get();
        
        return view('admin.maintenance.alerts', compact('criticalAlerts', 'importantAlerts'));
    }

    /**
     * üìä API pour obtenir les donn√©es du dashboard en AJAX
     *
     * @param Request $request
     * @return JsonResponse
     */
    public function apiData(Request $request): JsonResponse
    {
        $this->authorize('view maintenance dashboard');
        
        try {
            $data = $this->generateDashboardStatistics();
            
            return response()->json([
                'success' => true,
                'data' => $data,
                'timestamp' => now()->toISOString()
            ]);
            
        } catch (\Exception $e) {
            Log::channel('errors')->error('Maintenance dashboard API error', [
                'user_id' => Auth::id(),
                'error' => $e->getMessage()
            ]);
            
            return response()->json([
                'success' => false,
                'error' => 'Erreur lors du chargement des donn√©es'
            ], 500);
        }
    }

    /**
     * üé® Obtenir la classe CSS pour les √©v√©nements du calendrier
     *
     * @param MaintenancePlan $plan
     * @return string
     */
    private function getEventClassName(MaintenancePlan $plan): string
    {
        if (!$plan->next_due_date) {
            return 'fc-event-default';
        }
        
        $daysUntilDue = now()->diffInDays($plan->next_due_date, false);
        
        if ($daysUntilDue < 0) {
            return 'fc-event-critical'; // Rouge - En retard
        } elseif ($daysUntilDue <= 7) {
            return 'fc-event-warning'; // Orange - Urgent
        } elseif ($daysUntilDue <= 30) {
            return 'fc-event-info'; // Bleu - √Ä venir
        } else {
            return 'fc-event-success'; // Vert - Planifi√©
        }
    }
}

--- FIN DU FICHIER : ./app/Http/Controllers/Admin/Maintenance/DashboardController.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Http/Controllers/Admin/Maintenance/MaintenanceLogController.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Http\Controllers\Admin\Maintenance;

use App\Http\Controllers\Controller;
use App\Models\MaintenanceLog;
use App\Models\MaintenancePlan;
use App\Models\MaintenanceStatus;
use App\Models\Vehicle;
use App\Models\MaintenanceType;
use Illuminate\Contracts\View\View;
use Illuminate\Http\Request;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\JsonResponse;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Log;
use Illuminate\Support\Facades\DB;
use Illuminate\Support\Facades\Storage;
use Illuminate\Validation\Rule;
use Carbon\Carbon;

class MaintenanceLogController extends Controller
{
    /**
     * üìù MAINTENANCE LOG CONTROLLER - VERSION ENTERPRISE
     * Gestion des interventions et logs de maintenance
     */

    /**
     * üìä Afficher la liste des interventions de maintenance
     *
     * @param Request $request
     * @return View
     */
    public function index(Request $request): View
    {
        $this->authorize('view maintenance logs');
        
        $organizationId = Auth::user()->organization_id;
        
        $query = MaintenanceLog::with(['vehicle', 'maintenanceType', 'maintenancePlan', 'maintenanceStatus'])
            ->when($organizationId, function ($query) use ($organizationId) {
                $query->whereHas('vehicle', function ($q) use ($organizationId) {
                    $q->where('organization_id', $organizationId);
                });
            });
        
        // Filtres
        if ($request->filled('vehicle_id')) {
            $query->where('vehicle_id', $request->vehicle_id);
        }
        
        if ($request->filled('maintenance_type_id')) {
            $query->where('maintenance_type_id', $request->maintenance_type_id);
        }
        
        if ($request->filled('status_id')) {
            $query->where('maintenance_status_id', $request->status_id);
        }
        
        if ($request->filled('date_from')) {
            $query->where('performed_on_date', '>=', $request->date_from);
        }
        
        if ($request->filled('date_to')) {
            $query->where('performed_on_date', '<=', $request->date_to);
        }
        
        $logs = $query->orderBy('performed_on_date', 'desc')
                     ->paginate(25)
                     ->withQueryString();
        
        // Donn√©es pour les filtres
        $vehicles = Vehicle::when($organizationId, function ($q) use ($organizationId) {
                $q->where('organization_id', $organizationId);
            })
            ->orderBy('registration_plate')
            ->get();
            
        $maintenanceTypes = MaintenanceType::orderBy('name')->get();
        $statuses = MaintenanceStatus::orderBy('name')->get();
        
        return view('admin.maintenance.logs.index', compact(
            'logs', 
            'vehicles', 
            'maintenanceTypes', 
            'statuses'
        ));
    }

    /**
     * üìù Afficher le formulaire de cr√©ation d'intervention
     *
     * @param Request $request
     * @return View
     */
    public function create(Request $request): View
    {
        $this->authorize('log maintenance');
        
        $organizationId = Auth::user()->organization_id;
        
        // Pr√©-s√©lection depuis un plan de maintenance si sp√©cifi√©
        $selectedPlan = null;
        if ($request->filled('plan_id')) {
            $selectedPlan = MaintenancePlan::with(['vehicle', 'maintenanceType'])
                ->when($organizationId, function ($query) use ($organizationId) {
                    $query->whereHas('vehicle', function ($q) use ($organizationId) {
                        $q->where('organization_id', $organizationId);
                    });
                })
                ->findOrFail($request->plan_id);
        }
        
        $vehicles = Vehicle::when($organizationId, function ($query) use ($organizationId) {
                $query->where('organization_id', $organizationId);
            })
            ->whereNull('deleted_at')
            ->orderBy('registration_plate')
            ->get();
            
        $maintenanceTypes = MaintenanceType::orderBy('category')
            ->orderBy('name')
            ->get()
            ->groupBy('category');
            
        $statuses = MaintenanceStatus::orderBy('name')->get();
        
        return view('admin.maintenance.logs.create', compact(
            'selectedPlan',
            'vehicles',
            'maintenanceTypes', 
            'statuses'
        ));
    }

    /**
     * üíæ Enregistrer une nouvelle intervention de maintenance
     *
     * @param Request $request
     * @return RedirectResponse
     */
    public function store(Request $request): RedirectResponse
    {
        $this->authorize('log maintenance');
        
        $organizationId = Auth::user()->organization_id;
        
        try {
            DB::beginTransaction();
            
            // Validation de base
            $validated = $request->validate([
                'vehicle_id' => [
                    'required',
                    'exists:vehicles,id',
                    Rule::exists('vehicles', 'id')->where(function ($query) use ($organizationId) {
                        if ($organizationId) {
                            $query->where('organization_id', $organizationId);
                        }
                        $query->whereNull('deleted_at');
                    })
                ],
                'maintenance_type_id' => ['required', 'exists:maintenance_types,id'],
                'maintenance_plan_id' => ['nullable', 'exists:maintenance_plans,id'],
                'maintenance_status_id' => ['required', 'exists:maintenance_statuses,id'],
                'performed_on_date' => ['required', 'date', 'before_or_equal:today'],
                'performed_at_mileage' => ['required', 'integer', 'min:0', 'max:9999999'],
                'cost' => ['nullable', 'numeric', 'min:0', 'max:999999.99'],
                'labor_hours' => ['nullable', 'numeric', 'min:0', 'max:999.99'],
                'labor_cost' => ['nullable', 'numeric', 'min:0', 'max:999999.99'],
                'parts_cost' => ['nullable', 'numeric', 'min:0', 'max:999999.99'],
                'details' => ['required', 'string', 'max:2000'],
                'performed_by' => ['required', 'string', 'max:255'],
                'supplier_name' => ['nullable', 'string', 'max:255'],
                'invoice_number' => ['nullable', 'string', 'max:100'],
                'warranty_expires_at' => ['nullable', 'date', 'after:performed_on_date'],
                'next_service_recommendation' => ['nullable', 'string', 'max:1000'],
                'urgency_level' => ['in:low,medium,high,critical'],
                'photos' => ['nullable', 'array', 'max:10'],
                'photos.*' => ['image', 'mimes:jpg,jpeg,png', 'max:5120'], // 5MB max
                'documents' => ['nullable', 'array', 'max:5'],
                'documents.*' => ['file', 'mimes:pdf,doc,docx', 'max:10240'], // 10MB max
            ], [
                'performed_on_date.before_or_equal' => 'La date d\'intervention ne peut pas √™tre dans le futur.',
                'performed_at_mileage.required' => 'Le kilom√©trage au moment de l\'intervention est obligatoire.',
                'details.required' => 'Les d√©tails de l\'intervention sont obligatoires.',
                'performed_by.required' => 'L\'intervenant est obligatoire.',
            ]);
            
            // V√©rifier le kilom√©trage par rapport au v√©hicule
            $vehicle = Vehicle::findOrFail($validated['vehicle_id']);
            if ($validated['performed_at_mileage'] < ($vehicle->current_mileage ?? 0)) {
                return back()
                    ->withInput()
                    ->withErrors(['performed_at_mileage' => 'Le kilom√©trage d\'intervention ne peut pas √™tre inf√©rieur au kilom√©trage actuel du v√©hicule (' . number_format($vehicle->current_mileage, 0, ',', ' ') . ' km).']);
            }
            
            // Traitement des co√ªts automatiques
            if (!$validated['cost']) {
                $validated['cost'] = ($validated['labor_cost'] ?? 0) + ($validated['parts_cost'] ?? 0);
            }
            
            $validated['created_by'] = Auth::id();
            $validated['organization_id'] = $organizationId;
            
            // Cr√©er l'intervention
            $log = MaintenanceLog::create($validated);
            
            // Traitement des fichiers joints
            if ($request->hasFile('photos')) {
                $this->storePhotos($log, $request->file('photos'));
            }
            
            if ($request->hasFile('documents')) {
                $this->storeDocuments($log, $request->file('documents'));
            }
            
            // Mise √† jour du plan de maintenance associ√©
            if ($validated['maintenance_plan_id']) {
                $this->updateMaintenancePlan($validated['maintenance_plan_id'], $validated);
            }
            
            // Mise √† jour du kilom√©trage du v√©hicule
            if ($validated['performed_at_mileage'] > ($vehicle->current_mileage ?? 0)) {
                $vehicle->update([
                    'current_mileage' => $validated['performed_at_mileage'],
                    'last_service_date' => $validated['performed_on_date'],
                ]);
            }
            
            DB::commit();
            
            Log::channel('maintenance')->info('Maintenance intervention logged', [
                'log_id' => $log->id,
                'vehicle_id' => $validated['vehicle_id'],
                'maintenance_type_id' => $validated['maintenance_type_id'],
                'cost' => $validated['cost'],
                'performed_by' => $validated['performed_by'],
                'user_id' => Auth::id(),
                'organization_id' => $organizationId
            ]);
            
            $redirectRoute = $request->input('redirect_to', 'admin.maintenance.logs.index');
            
            return redirect()
                ->route($redirectRoute)
                ->with('success', 'Intervention de maintenance enregistr√©e avec succ√®s.');
                
        } catch (\Illuminate\Validation\ValidationException $e) {
            DB::rollBack();
            return back()->withInput()->withErrors($e->errors());
            
        } catch (\Exception $e) {
            DB::rollBack();
            
            Log::channel('errors')->error('Maintenance log creation failed', [
                'user_id' => Auth::id(),
                'vehicle_id' => $request->vehicle_id,
                'error' => $e->getMessage(),
                'trace' => $e->getTraceAsString()
            ]);
            
            return back()
                ->withInput()
                ->withErrors(['error' => 'Une erreur est survenue lors de l\'enregistrement de l\'intervention.']);
        }
    }

    /**
     * üìä Afficher les d√©tails d'une intervention
     *
     * @param MaintenanceLog $log
     * @return View
     */
    public function show(MaintenanceLog $log): View
    {
        $this->authorize('view maintenance logs');
        
        $organizationId = Auth::user()->organization_id;
        if ($organizationId && $log->vehicle->organization_id !== $organizationId) {
            abort(403, 'Acc√®s non autoris√© √† cette intervention.');
        }
        
        $log->load([
            'vehicle', 
            'maintenanceType', 
            'maintenancePlan.recurrenceUnit', 
            'maintenanceStatus',
            'photos',
            'documents',
            'createdBy',
            'updatedBy'
        ]);
        
        return view('admin.maintenance.logs.show', compact('log'));
    }

    /**
     * üìù Afficher le formulaire d'√©dition d'une intervention
     *
     * @param MaintenanceLog $log
     * @return View
     */
    public function edit(MaintenanceLog $log): View
    {
        $this->authorize('edit maintenance logs');
        
        $organizationId = Auth::user()->organization_id;
        if ($organizationId && $log->vehicle->organization_id !== $organizationId) {
            abort(403, 'Acc√®s non autoris√© √† cette intervention.');
        }
        
        $log->load(['vehicle', 'maintenanceType', 'maintenancePlan', 'maintenanceStatus']);
        
        $vehicles = Vehicle::when($organizationId, function ($query) use ($organizationId) {
                $query->where('organization_id', $organizationId);
            })
            ->whereNull('deleted_at')
            ->orderBy('registration_plate')
            ->get();
            
        $maintenanceTypes = MaintenanceType::orderBy('name')->get();
        $statuses = MaintenanceStatus::orderBy('name')->get();
        
        return view('admin.maintenance.logs.edit', compact(
            'log',
            'vehicles',
            'maintenanceTypes',
            'statuses'
        ));
    }

    /**
     * üíæ Mettre √† jour une intervention existante
     *
     * @param Request $request
     * @param MaintenanceLog $log
     * @return RedirectResponse
     */
    public function update(Request $request, MaintenanceLog $log): RedirectResponse
    {
        $this->authorize('edit maintenance logs');
        
        $organizationId = Auth::user()->organization_id;
        if ($organizationId && $log->vehicle->organization_id !== $organizationId) {
            abort(403, 'Acc√®s non autoris√© √† cette intervention.');
        }
        
        try {
            DB::beginTransaction();
            
            $validated = $request->validate([
                'maintenance_status_id' => ['required', 'exists:maintenance_statuses,id'],
                'cost' => ['nullable', 'numeric', 'min:0', 'max:999999.99'],
                'labor_hours' => ['nullable', 'numeric', 'min:0', 'max:999.99'],
                'labor_cost' => ['nullable', 'numeric', 'min:0', 'max:999999.99'],
                'parts_cost' => ['nullable', 'numeric', 'min:0', 'max:999999.99'],
                'details' => ['required', 'string', 'max:2000'],
                'performed_by' => ['required', 'string', 'max:255'],
                'supplier_name' => ['nullable', 'string', 'max:255'],
                'invoice_number' => ['nullable', 'string', 'max:100'],
                'warranty_expires_at' => ['nullable', 'date', 'after:performed_on_date'],
                'next_service_recommendation' => ['nullable', 'string', 'max:1000'],
                'urgency_level' => ['in:low,medium,high,critical'],
            ]);
            
            // Traitement des co√ªts automatiques
            if (!$validated['cost']) {
                $validated['cost'] = ($validated['labor_cost'] ?? 0) + ($validated['parts_cost'] ?? 0);
            }
            
            $validated['updated_by'] = Auth::id();
            $validated['updated_at'] = now();
            
            $oldData = $log->toArray();
            $log->update($validated);
            
            DB::commit();
            
            Log::channel('maintenance')->info('Maintenance log updated', [
                'log_id' => $log->id,
                'user_id' => Auth::id(),
                'organization_id' => $organizationId,
                'changes' => array_diff_assoc($validated, $oldData)
            ]);
            
            return redirect()
                ->route('admin.maintenance.logs.show', $log)
                ->with('success', 'Intervention mise √† jour avec succ√®s.');
                
        } catch (\Exception $e) {
            DB::rollBack();
            
            Log::channel('errors')->error('Maintenance log update failed', [
                'log_id' => $log->id,
                'user_id' => Auth::id(),
                'error' => $e->getMessage()
            ]);
            
            return back()
                ->withInput()
                ->withErrors(['error' => 'Une erreur est survenue lors de la mise √† jour.']);
        }
    }

    /**
     * üìÑ Exporter un rapport d'intervention en PDF
     *
     * @param MaintenanceLog $log
     * @return \Illuminate\Http\Response
     */
    public function exportPdf(MaintenanceLog $log)
    {
        $this->authorize('view maintenance logs');
        
        $organizationId = Auth::user()->organization_id;
        if ($organizationId && $log->vehicle->organization_id !== $organizationId) {
            abort(403, 'Acc√®s non autoris√© √† cette intervention.');
        }
        
        $log->load([
            'vehicle.organization',
            'maintenanceType',
            'maintenancePlan.recurrenceUnit',
            'maintenanceStatus',
            'createdBy'
        ]);
        
        // TODO: Impl√©menter la g√©n√©ration PDF
        // Pour l'instant, retourner une vue HTML
        return view('admin.maintenance.logs.pdf', compact('log'));
    }

    /**
     * üì∏ Stocker les photos d'intervention
     *
     * @param MaintenanceLog $log
     * @param array $photos
     * @return void
     */
    private function storePhotos(MaintenanceLog $log, array $photos): void
    {
        foreach ($photos as $index => $photo) {
            if ($photo->isValid()) {
                $filename = 'maintenance_' . $log->id . '_photo_' . ($index + 1) . '_' . time() . '.' . $photo->getClientOriginalExtension();
                $path = $photo->storeAs('maintenance/photos', $filename, 'public');
                
                // TODO: Cr√©er une relation MaintenancePhoto ou stocker dans un champ JSON
                // $log->photos()->create(['path' => $path, 'filename' => $filename]);
            }
        }
    }

    /**
     * üìÑ Stocker les documents d'intervention
     *
     * @param MaintenanceLog $log
     * @param array $documents
     * @return void
     */
    private function storeDocuments(MaintenanceLog $log, array $documents): void
    {
        foreach ($documents as $index => $document) {
            if ($document->isValid()) {
                $filename = 'maintenance_' . $log->id . '_doc_' . ($index + 1) . '_' . time() . '.' . $document->getClientOriginalExtension();
                $path = $document->storeAs('maintenance/documents', $filename, 'public');
                
                // TODO: Cr√©er une relation MaintenanceDocument ou stocker dans un champ JSON
                // $log->documents()->create(['path' => $path, 'filename' => $filename, 'original_name' => $document->getClientOriginalName()]);
            }
        }
    }

    /**
     * üîÑ Mettre √† jour le plan de maintenance apr√®s intervention
     *
     * @param int $planId
     * @param array $logData
     * @return void
     */
    private function updateMaintenancePlan(int $planId, array $logData): void
    {
        $plan = MaintenancePlan::with(['recurrenceUnit', 'vehicle'])->findOrFail($planId);
        
        if (!$plan->recurrenceUnit || !$plan->recurrence_value) {
            return;
        }
        
        $recurrenceUnit = $plan->recurrenceUnit;
        $recurrenceValue = $plan->recurrence_value;
        
        // Calculer la prochaine √©ch√©ance selon l'unit√© de r√©currence
        if ($recurrenceUnit->name === 'Kilom√®tres') {
            $plan->next_due_mileage = $logData['performed_at_mileage'] + $recurrenceValue;
            $plan->next_due_date = null; // Reset la date si on utilise le kilom√©trage
        } elseif (in_array($recurrenceUnit->name, ['Jours', 'Days'])) {
            $plan->next_due_date = Carbon::parse($logData['performed_on_date'])->addDays($recurrenceValue);
            $plan->next_due_mileage = null; // Reset le kilom√©trage si on utilise la date
        } elseif (in_array($recurrenceUnit->name, ['Semaines', 'Weeks'])) {
            $plan->next_due_date = Carbon::parse($logData['performed_on_date'])->addWeeks($recurrenceValue);
            $plan->next_due_mileage = null;
        } elseif (in_array($recurrenceUnit->name, ['Mois', 'Months'])) {
            $plan->next_due_date = Carbon::parse($logData['performed_on_date'])->addMonths($recurrenceValue);
            $plan->next_due_mileage = null;
        } elseif (in_array($recurrenceUnit->name, ['Ann√©es', 'Years'])) {
            $plan->next_due_date = Carbon::parse($logData['performed_on_date'])->addYears($recurrenceValue);
            $plan->next_due_mileage = null;
        }
        
        $plan->last_performed_at = $logData['performed_on_date'];
        $plan->last_performed_mileage = $logData['performed_at_mileage'];
        $plan->updated_by = Auth::id();
        
        $plan->save();
        
        Log::channel('maintenance')->info('Maintenance plan updated after intervention', [
            'plan_id' => $plan->id,
            'next_due_date' => $plan->next_due_date?->format('Y-m-d'),
            'next_due_mileage' => $plan->next_due_mileage,
            'user_id' => Auth::id()
        ]);
    }
}

--- FIN DU FICHIER : ./app/Http/Controllers/Admin/Maintenance/MaintenanceLogController.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Http/Controllers/Admin/Maintenance/MaintenancePlanController.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Http\Controllers\Admin\Maintenance;

use App\Http\Controllers\Controller;
use App\Models\Vehicle;
use App\Models\MaintenancePlan;
use App\Models\MaintenanceType;
use App\Models\RecurrenceUnit;
use Illuminate\Contracts\View\View;
use Illuminate\Http\Request;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\JsonResponse;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Log;
use Illuminate\Support\Facades\DB;
use Illuminate\Validation\Rule;
use Carbon\Carbon;

class MaintenancePlanController extends Controller
{
    /**
     * üìã MAINTENANCE PLANS CONTROLLER - VERSION ENTERPRISE
     * Gestion compl√®te des plans de maintenance pr√©ventive
     */

    /**
     * üìä Afficher la liste des plans de maintenance avec filtres avanc√©s
     *
     * @param Request $request
     * @return View
     */
    public function index(Request $request): View
    {
        $this->authorize('manage maintenance plans');
        
        try {
            $organizationId = Auth::user()->organization_id;
            
            // Query de base avec relations optimis√©es
            $query = MaintenancePlan::with(['vehicle', 'maintenanceType', 'recurrenceUnit'])
                ->when($organizationId, function ($query) use ($organizationId) {
                    $query->whereHas('vehicle', function ($q) use ($organizationId) {
                        $q->where('organization_id', $organizationId);
                    });
                });

            // Filtres avanc√©s
            if ($request->filled('vehicle_id')) {
                $query->where('vehicle_id', $request->vehicle_id);
            }

            if ($request->filled('maintenance_type_id')) {
                $query->where('maintenance_type_id', $request->maintenance_type_id);
            }
            
            if ($request->filled('status')) {
                $status = $request->status;
                $query->where(function ($q) use ($status) {
                    switch ($status) {
                        case 'overdue':
                            $q->where('next_due_date', '<', now())
                              ->orWhereRaw('next_due_mileage < (
                                  SELECT current_mileage FROM vehicles 
                                  WHERE vehicles.id = maintenance_plans.vehicle_id
                              )');
                            break;
                        case 'upcoming':
                            $q->whereBetween('next_due_date', [now(), now()->addDays(30)]);
                            break;
                        case 'scheduled':
                            $q->where('next_due_date', '>', now()->addDays(30));
                            break;
                    }
                });
            }
            
            if ($request->filled('search')) {
                $search = $request->search;
                $query->where(function ($q) use ($search) {
                    $q->whereHas('vehicle', function ($vq) use ($search) {
                        $vq->where('registration_plate', 'ILIKE', "%{$search}%")
                          ->orWhere('brand', 'ILIKE', "%{$search}%")
                          ->orWhere('model', 'ILIKE', "%{$search}%");
                    })
                    ->orWhereHas('maintenanceType', function ($mq) use ($search) {
                        $mq->where('name', 'ILIKE', "%{$search}%");
                    })
                    ->orWhere('notes', 'ILIKE', "%{$search}%");
                });
            }

            // Tri intelligent par urgence puis par date
            $query->orderByRaw('
                CASE 
                    WHEN next_due_date IS NOT NULL AND next_due_date < NOW() THEN 1
                    WHEN next_due_mileage IS NOT NULL AND EXISTS (
                        SELECT 1 FROM vehicles v 
                        WHERE v.id = maintenance_plans.vehicle_id 
                        AND maintenance_plans.next_due_mileage <= v.current_mileage
                    ) THEN 2
                    ELSE 3 
                END
            ')
            ->orderBy('next_due_date', 'asc')
            ->orderBy('next_due_mileage', 'asc');

            $plans = $query->paginate(20)->withQueryString();

            // Pr√©parer les donn√©es pour JavaScript (modales, etc.)
            $plansForJs = $plans->getCollection()->mapWithKeys(function ($plan) {
                return [$plan->id => [
                    'id' => $plan->id,
                    'vehicle_id' => $plan->vehicle_id,
                    'maintenance_type_id' => $plan->maintenance_type_id,
                    'recurrence_value' => $plan->recurrence_value,
                    'recurrence_unit_id' => $plan->recurrence_unit_id,
                    'notes' => $plan->notes,
                    'next_due_date' => $plan->next_due_date?->format('Y-m-d'),
                    'next_due_mileage' => $plan->next_due_mileage,
                    'vehicle' => $plan->vehicle?->only(['id', 'brand', 'model', 'registration_plate', 'current_mileage']),
                    'maintenance_type' => $plan->maintenanceType?->only(['id', 'name', 'description']),
                    'recurrence_unit' => $plan->recurrenceUnit?->only(['id', 'name']),
                    'status' => $this->calculatePlanStatus($plan),
                    'urgency_level' => $this->calculateUrgencyLevel($plan),
                ]];
            });

            // Donn√©es pour les filtres
            $vehicles = Vehicle::when($organizationId, function ($query) use ($organizationId) {
                    $query->where('organization_id', $organizationId);
                })
                ->whereNull('deleted_at')
                ->orderBy('brand')
                ->orderBy('model')
                ->get();
                
            $maintenanceTypes = MaintenanceType::orderBy('name')->get();
            $recurrenceUnits = RecurrenceUnit::orderBy('order_index')->get();
            
            // Statistiques pour le header
            $stats = [
                'total' => $plans->total(),
                'overdue' => MaintenancePlan::when($organizationId, function ($q) use ($organizationId) {
                        $q->whereHas('vehicle', function ($vq) use ($organizationId) {
                            $vq->where('organization_id', $organizationId);
                        });
                    })
                    ->where(function ($q) {
                        $q->where('next_due_date', '<', now())
                          ->orWhereRaw('next_due_mileage < (
                              SELECT current_mileage FROM vehicles 
                              WHERE vehicles.id = maintenance_plans.vehicle_id
                          )');
                    })
                    ->count(),
                'upcoming' => MaintenancePlan::when($organizationId, function ($q) use ($organizationId) {
                        $q->whereHas('vehicle', function ($vq) use ($organizationId) {
                            $vq->where('organization_id', $organizationId);
                        });
                    })
                    ->whereBetween('next_due_date', [now(), now()->addDays(30)])
                    ->count(),
            ];

            Log::channel('maintenance')->info('Maintenance plans viewed', [
                'user_id' => Auth::id(),
                'organization_id' => $organizationId,
                'filters' => $request->only(['vehicle_id', 'maintenance_type_id', 'status', 'search']),
                'results_count' => $plans->total()
            ]);

            return view('admin.maintenance.plans.index', [
                'plans' => $plans,
                'plansForJs' => $plansForJs,
                'vehicles' => $vehicles,
                'maintenanceTypes' => $maintenanceTypes,
                'recurrenceUnits' => $recurrenceUnits,
                'filters' => $request->only(['vehicle_id', 'maintenance_type_id', 'status', 'search']),
                'stats' => $stats,
            ]);
            
        } catch (\Exception $e) {
            Log::channel('errors')->error('Maintenance plans index error', [
                'user_id' => Auth::id(),
                'error' => $e->getMessage(),
                'trace' => $e->getTraceAsString()
            ]);
            
            return view('admin.maintenance.plans.index')->withErrors([
                'error' => 'Erreur lors du chargement des plans de maintenance.'
            ]);
        }
    }

    /**
     * üìù Afficher le formulaire de cr√©ation de plan de maintenance
     *
     * @return View
     */
    public function create(): View
    {
        $this->authorize('manage maintenance plans');
        
        $organizationId = Auth::user()->organization_id;
        
        // V√©hicules disponibles (sans plan de maintenance actif pour le m√™me type)
        $vehicles = Vehicle::when($organizationId, function ($query) use ($organizationId) {
                $query->where('organization_id', $organizationId);
            })
            ->whereNull('deleted_at')
            ->orderBy('brand')
            ->orderBy('model')
            ->get();
            
        $maintenanceTypes = MaintenanceType::orderBy('category')
            ->orderBy('name')
            ->get()
            ->groupBy('category');
            
        $recurrenceUnits = RecurrenceUnit::orderBy('order_index')->get();

        return view('admin.maintenance.plans.create', compact(
            'vehicles', 
            'maintenanceTypes', 
            'recurrenceUnits'
        ));
    }

    /**
     * üíæ Enregistrer un nouveau plan de maintenance
     *
     * @param Request $request
     * @return RedirectResponse
     */
    public function store(Request $request): RedirectResponse
    {
        $this->authorize('manage maintenance plans');
        
        $organizationId = Auth::user()->organization_id;
        
        try {
            DB::beginTransaction();
            
            $validated = $request->validate([
                'vehicle_id' => [
                    'required',
                    'exists:vehicles,id',
                    // V√©rifier que le v√©hicule appartient √† l'organisation
                    Rule::exists('vehicles', 'id')->where(function ($query) use ($organizationId) {
                        if ($organizationId) {
                            $query->where('organization_id', $organizationId);
                        }
                        $query->whereNull('deleted_at');
                    })
                ],
                'maintenance_type_id' => ['required', 'exists:maintenance_types,id'],
                'recurrence_value' => ['required', 'integer', 'min:1', 'max:9999'],
                'recurrence_unit_id' => ['required', 'exists:recurrence_units,id'],
                'next_due_date' => ['nullable', 'date', 'after_or_equal:today'],
                'next_due_mileage' => ['nullable', 'integer', 'min:0', 'max:9999999'],
                'notes' => ['nullable', 'string', 'max:2000'],
                'is_critical' => ['boolean'],
                'estimated_duration_hours' => ['nullable', 'numeric', 'min:0.25', 'max:999'],
                'estimated_cost' => ['nullable', 'numeric', 'min:0', 'max:999999'],
            ], [
                'vehicle_id.exists' => 'Le v√©hicule s√©lectionn√© n\'est pas accessible.',
                'recurrence_value.max' => 'La valeur de r√©currence ne peut pas d√©passer 9999.',
                'next_due_date.after_or_equal' => 'La date d\'√©ch√©ance ne peut pas √™tre dans le pass√©.',
            ]);
            
            // V√©rifier qu'il n'y a pas d√©j√† un plan identique
            $existingPlan = MaintenancePlan::where([
                'vehicle_id' => $validated['vehicle_id'],
                'maintenance_type_id' => $validated['maintenance_type_id'],
            ])->first();
            
            if ($existingPlan) {
                return back()
                    ->withInput()
                    ->withErrors(['maintenance_type_id' => 'Un plan de maintenance existe d√©j√† pour ce v√©hicule et ce type de maintenance.']);
            }

            // Calcul automatique de la premi√®re √©ch√©ance si non fournie
            if (empty($validated['next_due_date']) && empty($validated['next_due_mileage'])) {
                $vehicle = Vehicle::find($validated['vehicle_id']);
                $recurrenceUnit = RecurrenceUnit::find($validated['recurrence_unit_id']);
                $recurrenceValue = $validated['recurrence_value'];

                if ($recurrenceUnit->name === 'Kilom√®tres') {
                    $validated['next_due_mileage'] = ($vehicle->current_mileage ?? 0) + $recurrenceValue;
                } elseif (in_array($recurrenceUnit->name, ['Jours', 'Days'])) {
                    $validated['next_due_date'] = Carbon::now()->addDays($recurrenceValue);
                } elseif (in_array($recurrenceUnit->name, ['Semaines', 'Weeks'])) {
                    $validated['next_due_date'] = Carbon::now()->addWeeks($recurrenceValue);
                } elseif (in_array($recurrenceUnit->name, ['Mois', 'Months'])) {
                    $validated['next_due_date'] = Carbon::now()->addMonths($recurrenceValue);
                } elseif (in_array($recurrenceUnit->name, ['Ann√©es', 'Years'])) {
                    $validated['next_due_date'] = Carbon::now()->addYears($recurrenceValue);
                }
            }
            
            $validated['created_by'] = Auth::id();
            $validated['is_active'] = true;

            $plan = MaintenancePlan::create($validated);
            
            DB::commit();
            
            Log::channel('maintenance')->info('Maintenance plan created', [
                'plan_id' => $plan->id,
                'vehicle_id' => $validated['vehicle_id'],
                'maintenance_type_id' => $validated['maintenance_type_id'],
                'user_id' => Auth::id(),
                'organization_id' => $organizationId
            ]);

            return redirect()
                ->route('admin.maintenance.plans.index')
                ->with('success', 'Plan de maintenance cr√©√© avec succ√®s.');
                
        } catch (\Illuminate\Validation\ValidationException $e) {
            DB::rollBack();
            return back()->withInput()->withErrors($e->errors());
            
        } catch (\Exception $e) {
            DB::rollBack();
            
            Log::channel('errors')->error('Maintenance plan creation failed', [
                'user_id' => Auth::id(),
                'error' => $e->getMessage(),
                'data' => $request->all()
            ]);
            
            return back()
                ->withInput()
                ->withErrors(['error' => 'Une erreur est survenue lors de la cr√©ation du plan de maintenance.']);
        }
    }

    /**
     * üìù Mettre √† jour un plan de maintenance existant
     *
     * @param Request $request
     * @param MaintenancePlan $plan
     * @return RedirectResponse
     */
    public function update(Request $request, MaintenancePlan $plan): RedirectResponse
    {
        $this->authorize('manage maintenance plans');
        
        // V√©rifier l'acc√®s √† l'organisation
        $organizationId = Auth::user()->organization_id;
        if ($organizationId && $plan->vehicle->organization_id !== $organizationId) {
            abort(403, 'Acc√®s non autoris√© √† ce plan de maintenance.');
        }
        
        try {
            DB::beginTransaction();
            
            $validated = $request->validate([
                'recurrence_value' => ['required', 'integer', 'min:1', 'max:9999'],
                'recurrence_unit_id' => ['required', 'exists:recurrence_units,id'],
                'next_due_date' => ['nullable', 'date'],
                'next_due_mileage' => ['nullable', 'integer', 'min:0', 'max:9999999'],
                'notes' => ['nullable', 'string', 'max:2000'],
                'is_critical' => ['boolean'],
                'estimated_duration_hours' => ['nullable', 'numeric', 'min:0.25', 'max:999'],
                'estimated_cost' => ['nullable', 'numeric', 'min:0', 'max:999999'],
                'is_active' => ['boolean'],
            ]);
            
            $validated['updated_by'] = Auth::id();
            $validated['updated_at'] = now();

            $oldData = $plan->toArray();
            $plan->update($validated);
            
            DB::commit();
            
            Log::channel('maintenance')->info('Maintenance plan updated', [
                'plan_id' => $plan->id,
                'user_id' => Auth::id(),
                'organization_id' => $organizationId,
                'changes' => array_diff_assoc($validated, $oldData)
            ]);

            return back()->with('success', 'Plan de maintenance mis √† jour avec succ√®s.');
            
        } catch (\Illuminate\Validation\ValidationException $e) {
            DB::rollBack();
            return back()->withErrors($e->errors());
            
        } catch (\Exception $e) {
            DB::rollBack();
            
            Log::channel('errors')->error('Maintenance plan update failed', [
                'plan_id' => $plan->id,
                'user_id' => Auth::id(),
                'error' => $e->getMessage()
            ]);
            
            return back()->withErrors(['error' => 'Une erreur est survenue lors de la mise √† jour.']);
        }
    }

    /**
     * üóëÔ∏è Supprimer un plan de maintenance
     *
     * @param MaintenancePlan $plan
     * @return RedirectResponse
     */
    public function destroy(MaintenancePlan $plan): RedirectResponse
    {
        $this->authorize('manage maintenance plans');
        
        // V√©rifier l'acc√®s √† l'organisation
        $organizationId = Auth::user()->organization_id;
        if ($organizationId && $plan->vehicle->organization_id !== $organizationId) {
            abort(403, 'Acc√®s non autoris√© √† ce plan de maintenance.');
        }
        
        try {
            DB::beginTransaction();
            
            // V√©rifier s'il y a des logs associ√©s
            if ($plan->maintenanceLogs()->count() > 0) {
                return back()->withErrors([
                    'error' => 'Impossible de supprimer ce plan car il y a des interventions associ√©es. D√©sactivez-le plut√¥t.'
                ]);
            }
            
            $planInfo = [
                'id' => $plan->id,
                'vehicle' => $plan->vehicle->registration_plate,
                'maintenance_type' => $plan->maintenanceType->name,
            ];
            
            $plan->delete();
            
            DB::commit();
            
            Log::channel('maintenance')->warning('Maintenance plan deleted', [
                'plan_info' => $planInfo,
                'user_id' => Auth::id(),
                'organization_id' => $organizationId
            ]);
            
            return redirect()
                ->route('admin.maintenance.plans.index')
                ->with('success', 'Plan de maintenance supprim√© avec succ√®s.');
                
        } catch (\Exception $e) {
            DB::rollBack();
            
            Log::channel('errors')->error('Maintenance plan deletion failed', [
                'plan_id' => $plan->id,
                'user_id' => Auth::id(),
                'error' => $e->getMessage()
            ]);
            
            return back()->withErrors(['error' => 'Une erreur est survenue lors de la suppression.']);
        }
    }

    /**
     * üîÑ Dupliquer un plan de maintenance pour un autre v√©hicule
     *
     * @param Request $request
     * @param MaintenancePlan $plan
     * @return RedirectResponse
     */
    public function duplicate(Request $request, MaintenancePlan $plan): RedirectResponse
    {
        $this->authorize('manage maintenance plans');
        
        $organizationId = Auth::user()->organization_id;
        if ($organizationId && $plan->vehicle->organization_id !== $organizationId) {
            abort(403, 'Acc√®s non autoris√© √† ce plan de maintenance.');
        }
        
        try {
            $validated = $request->validate([
                'target_vehicle_ids' => ['required', 'array', 'min:1'],
                'target_vehicle_ids.*' => [
                    'exists:vehicles,id',
                    Rule::exists('vehicles', 'id')->where(function ($query) use ($organizationId) {
                        if ($organizationId) {
                            $query->where('organization_id', $organizationId);
                        }
                        $query->whereNull('deleted_at');
                    })
                ],
            ]);
            
            DB::beginTransaction();
            
            $duplicatedCount = 0;
            $skippedCount = 0;
            
            foreach ($validated['target_vehicle_ids'] as $vehicleId) {
                // V√©rifier qu'un plan n'existe pas d√©j√†
                $exists = MaintenancePlan::where([
                    'vehicle_id' => $vehicleId,
                    'maintenance_type_id' => $plan->maintenance_type_id,
                ])->exists();
                
                if ($exists) {
                    $skippedCount++;
                    continue;
                }
                
                // Dupliquer le plan
                $newPlan = $plan->replicate();
                $newPlan->vehicle_id = $vehicleId;
                $newPlan->created_by = Auth::id();
                $newPlan->updated_by = null;
                $newPlan->created_at = now();
                $newPlan->updated_at = now();
                
                // Recalculer les √©ch√©ances pour le nouveau v√©hicule
                $targetVehicle = Vehicle::find($vehicleId);
                if ($plan->next_due_mileage && $targetVehicle) {
                    $newPlan->next_due_mileage = ($targetVehicle->current_mileage ?? 0) + $plan->recurrence_value;
                }
                
                $newPlan->save();
                $duplicatedCount++;
            }
            
            DB::commit();
            
            Log::channel('maintenance')->info('Maintenance plan duplicated', [
                'source_plan_id' => $plan->id,
                'duplicated_count' => $duplicatedCount,
                'skipped_count' => $skippedCount,
                'user_id' => Auth::id(),
                'organization_id' => $organizationId
            ]);
            
            $message = "Plan dupliqu√© avec succ√®s pour {$duplicatedCount} v√©hicule(s).";
            if ($skippedCount > 0) {
                $message .= " {$skippedCount} v√©hicule(s) ignor√©(s) (plan existant).";
            }
            
            return back()->with('success', $message);
            
        } catch (\Exception $e) {
            DB::rollBack();
            
            Log::channel('errors')->error('Maintenance plan duplication failed', [
                'plan_id' => $plan->id,
                'user_id' => Auth::id(),
                'error' => $e->getMessage()
            ]);
            
            return back()->withErrors(['error' => 'Une erreur est survenue lors de la duplication.']);
        }
    }

    /**
     * üìä API pour obtenir les donn√©es d'un plan
     *
     * @param MaintenancePlan $plan
     * @return JsonResponse
     */
    public function show(MaintenancePlan $plan): JsonResponse
    {
        $this->authorize('manage maintenance plans');
        
        $organizationId = Auth::user()->organization_id;
        if ($organizationId && $plan->vehicle->organization_id !== $organizationId) {
            abort(403, 'Acc√®s non autoris√© √† ce plan de maintenance.');
        }
        
        $plan->load(['vehicle', 'maintenanceType', 'recurrenceUnit', 'maintenanceLogs' => function ($query) {
            $query->orderBy('performed_on_date', 'desc')->limit(5);
        }]);
        
        return response()->json([
            'success' => true,
            'plan' => $plan,
            'status' => $this->calculatePlanStatus($plan),
            'urgency_level' => $this->calculateUrgencyLevel($plan),
        ]);
    }

    /**
     * üìù Rediriger l'√©dition vers l'index (formulaire modal)
     *
     * @param MaintenancePlan $plan
     * @return RedirectResponse
     */
    public function edit(MaintenancePlan $plan): RedirectResponse
    {
        return redirect()->route('admin.maintenance.plans.index', ['edit' => $plan->id]);
    }

    /**
     * üîç Calculer le statut d'un plan de maintenance
     *
     * @param MaintenancePlan $plan
     * @return string
     */
    private function calculatePlanStatus(MaintenancePlan $plan): string
    {
        if (!$plan->is_active) {
            return 'inactive';
        }
        
        // V√©rifier si en retard
        if ($plan->next_due_date && $plan->next_due_date->isPast()) {
            return 'overdue';
        }
        
        if ($plan->next_due_mileage && $plan->vehicle && 
            $plan->vehicle->current_mileage >= $plan->next_due_mileage) {
            return 'overdue';
        }
        
        // V√©rifier si urgent (dans les 7 prochains jours ou 500 km)
        if ($plan->next_due_date && $plan->next_due_date->diffInDays(now()) <= 7) {
            return 'urgent';
        }
        
        if ($plan->next_due_mileage && $plan->vehicle && 
            ($plan->next_due_mileage - $plan->vehicle->current_mileage) <= 500) {
            return 'urgent';
        }
        
        // V√©rifier si √† venir (dans le mois)
        if ($plan->next_due_date && $plan->next_due_date->diffInDays(now()) <= 30) {
            return 'upcoming';
        }
        
        return 'scheduled';
    }

    /**
     * ‚ö†Ô∏è Calculer le niveau d'urgence d'un plan
     *
     * @param MaintenancePlan $plan
     * @return string
     */
    private function calculateUrgencyLevel(MaintenancePlan $plan): string
    {
        $status = $this->calculatePlanStatus($plan);
        
        switch ($status) {
            case 'overdue':
                return 'critical';
            case 'urgent':
                return 'high';
            case 'upcoming':
                return 'medium';
            default:
                return 'low';
        }
    }
}

--- FIN DU FICHIER : ./app/Http/Controllers/Admin/Maintenance/MaintenancePlanController.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Http/Controllers/Admin/OrganizationController.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Http\Controllers\Admin;

use App\Http\Controllers\Controller;
use App\Models\Organization;
use App\Models\User;
use App\Models\Vehicle;
use App\Models\Driver;
use Illuminate\Http\Request;
use Illuminate\Http\RedirectResponse;
use Illuminate\Contracts\View\View;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\DB;
use Illuminate\Support\Facades\Log;
use Illuminate\Support\Facades\Storage;
use Illuminate\Support\Str;
use Illuminate\Validation\Rule;
use Carbon\Carbon;

class OrganizationController extends Controller
{
    /**
     * üè¢ ORGANIZATION CONTROLLER - VERSION ENTERPRISE ULTRA-PROFESSIONNELLE
     * 
     * Gestion compl√®te des organisations avec analytics avanc√©es,
     * s√©curit√© renforc√©e et logging complet pour audit.
     */

    public function __construct()
    {
        $this->middleware('auth');
        $this->middleware('role:Super Admin');
    }

    /**
     * üìä Affichage de la liste des organisations avec analytics avanc√©es
     *
     * @param Request $request
     * @return View
     */
    public function index(Request $request): View
    {
        $this->authorize('manage-organizations');
        
        try {
            // Query de base optimis√©e avec relations et compteurs
            $query = Organization::withCount(['users', 'vehicles', 'drivers'])
                ->with(['users' => function ($q) {
                    $q->where('is_active', true)->limit(5);
                }]);

            // Filtres avanc√©s avec validation
            if ($request->filled('search')) {
                $search = $request->get('search');
                $query->where(function ($q) use ($search) {
                    $q->where('name', 'ILIKE', "%{$search}%")
                      ->orWhere('siret', 'ILIKE', "%{$search}%")
                      ->orWhere('email', 'ILIKE', "%{$search}%")
                      ->orWhere('city', 'ILIKE', "%{$search}%");
                });
            }

            if ($request->filled('status')) {
                $query->where('status', $request->get('status'));
            }

            if ($request->filled('country')) {
                $query->where('country', $request->get('country'));
            }

            if ($request->filled('type')) {
                $query->where('organization_type', $request->get('type'));
            }

            // Tri intelligent avec validation
            $allowedSortFields = ['name', 'created_at', 'status', 'users_count', 'vehicles_count'];
            $sortField = in_array($request->get('sort'), $allowedSortFields) 
                ? $request->get('sort') 
                : 'created_at';
            $sortDirection = in_array($request->get('direction'), ['asc', 'desc']) 
                ? $request->get('direction') 
                : 'desc';
            
            $query->orderBy($sortField, $sortDirection);

            $organizations = $query->paginate(20)->withQueryString();

            // Statistiques globales avec cache intelligent
            $stats = $this->calculateGlobalStatistics();

            // Analytics mensuelles pour graphiques
            $monthlyStats = $this->calculateMonthlyAnalytics();

            // Audit logging s√©curis√©
            Log::channel('audit')->info('Organizations list accessed', [
                'user_id' => Auth::id(),
                'user_email' => Auth::user()->email,
                'filters' => $request->only(['search', 'status', 'country', 'type']),
                'results_count' => $organizations->total(),
                'ip_address' => $request->ip(),
                'user_agent' => $request->userAgent(),
                'timestamp' => now()->toISOString()
            ]);

            return view('admin.organizations.index', compact(
                'organizations',
                'stats',
                'monthlyStats'
            ));
            
        } catch (\Exception $e) {
            Log::channel('errors')->error('Organizations index error', [
                'user_id' => Auth::id(),
                'error' => $e->getMessage(),
                'trace' => $e->getTraceAsString()
            ]);
            
            return view('admin.organizations.index')->withErrors([
                'error' => 'Erreur lors du chargement des organisations.'
            ]);
        }
    }

    /**
     * üëÅÔ∏è Affichage d√©taill√© d'une organisation avec analytics compl√®tes
     *
     * @param Organization $organization
     * @return View
     */
    public function show(Organization $organization): View
    {
        $this->authorize('manage-organizations');
        
        try {
            // Chargement optimis√© des relations
            $organization->load([
                'users' => function ($q) {
                    $q->with('roles')->where('is_active', true);
                },
                'vehicles' => function ($q) {
                    $q->with(['assignments' => function ($aq) {
                        $aq->with('driver')->whereNull('end_date');
                    }]);
                },
                'drivers' => function ($q) {
                    $q->with(['assignments' => function ($aq) {
                        $aq->with('vehicle')->whereNull('end_date');
                    }]);
                }
            ]);

            // Statistiques d√©taill√©es de l'organisation
            $stats = $this->calculateOrganizationStatistics($organization);

            // Activit√© r√©cente (30 derniers jours)
            $recentActivity = $this->getRecentActivity($organization);

            // Graphiques de performance
            $performanceData = $this->calculatePerformanceMetrics($organization);

            Log::channel('audit')->info('Organization details viewed', [
                'user_id' => Auth::id(),
                'user_email' => Auth::user()->email,
                'organization_id' => $organization->id,
                'organization_name' => $organization->name,
                'ip_address' => request()->ip()
            ]);

            return view('admin.organizations.show', compact(
                'organization', 
                'stats', 
                'recentActivity', 
                'performanceData'
            ));
            
        } catch (\Exception $e) {
            Log::channel('errors')->error('Organization show error', [
                'user_id' => Auth::id(),
                'organization_id' => $organization->id,
                'error' => $e->getMessage()
            ]);
            
            return redirect()->route('admin.organizations.index')
                ->withErrors(['error' => 'Erreur lors du chargement de l\'organisation.']);
        }
    }

    /**
     * üìù Formulaire de cr√©ation d'organisation avec donn√©es pr√©-remplies
     *
     * @return View
     */
    public function create(): View
    {
        $this->authorize('manage-organizations');
        
        // Donn√©es pour les formulaires avec cache
        $formData = [
            'countries' => $this->getCountriesList(),
            'organizationTypes' => $this->getOrganizationTypes(),
            'currencies' => $this->getCurrenciesList(),
            'timezones' => $this->getTimezonesList(),
            'subscriptionPlans' => $this->getSubscriptionPlans(),
        ];

        return view('admin.organizations.create', $formData);
    }

    /**
     * üíæ Enregistrement d'une nouvelle organisation avec validation compl√®te
     *
     * @param Request $request
     * @return RedirectResponse
     */
    public function store(Request $request): RedirectResponse
    {
        $this->authorize('manage-organizations');
        
        try {
            DB::beginTransaction();
            
            $validated = $this->validateOrganizationData($request);
            
            // Traitement du logo avec s√©curit√©
            $logoPath = null;
            if ($request->hasFile('logo')) {
                $logoPath = $this->handleLogoUpload($request->file('logo'));
            }

            // Cr√©ation de l'organisation
            $organization = Organization::create([
                ...$validated,
                'slug' => $this->generateUniqueSlug($validated['name']),
                'logo_path' => $logoPath,
                'status' => 'active',
                'created_by' => Auth::id(),
                'subscription_plan' => $validated['subscription_plan'] ?? 'standard',
                'subscription_expires_at' => now()->addYear(),
                'working_days' => json_encode($validated['working_days'] ?? [1,2,3,4,5]),
                'settings' => $this->buildOrganizationSettings($validated),
            ]);

            // Cr√©ation de l'utilisateur admin avec s√©curit√© renforc√©e
            $adminUser = $this->createOrganizationAdmin($organization, $validated);

            // Mise √† jour des compteurs
            $organization->update([
                'total_users' => 1,
                'active_users' => 1,
                'admin_user_id' => $adminUser->id,
            ]);

            DB::commit();

            // Logging s√©curis√© complet
            Log::channel('audit')->info('Organization created successfully', [
                'user_id' => Auth::id(),
                'user_email' => Auth::user()->email,
                'organization_id' => $organization->id,
                'organization_name' => $organization->name,
                'admin_user_id' => $adminUser->id,
                'admin_email' => $adminUser->email,
                'subscription_plan' => $organization->subscription_plan,
                'ip_address' => $request->ip(),
                'timestamp' => now()->toISOString()
            ]);

            // TODO: Envoyer email de bienvenue s√©curis√©
            // $this->sendWelcomeEmail($adminUser, $organization);

            return redirect()
                ->route('admin.organizations.show', $organization)
                ->with('success', 'Organisation cr√©√©e avec succ√®s ! Un email de bienvenue sera envoy√© √† l\'administrateur.');
                
        } catch (\Illuminate\Validation\ValidationException $e) {
            DB::rollBack();
            return back()->withInput()->withErrors($e->errors());
            
        } catch (\Exception $e) {
            DB::rollBack();
            
            Log::channel('errors')->error('Organization creation failed', [
                'user_id' => Auth::id(),
                'user_email' => Auth::user()->email,
                'error' => $e->getMessage(),
                'trace' => $e->getTraceAsString(),
                'input_data' => $request->except(['logo', 'admin_password']),
                'ip_address' => $request->ip()
            ]);

            return back()
                ->withInput()
                ->withErrors(['error' => 'Une erreur est survenue lors de la cr√©ation de l\'organisation. Veuillez r√©essayer.']);
        }
    }

    /**
     * üìù Formulaire de modification d'organisation
     *
     * @param Organization $organization
     * @return View
     */
    public function edit(Organization $organization): View
    {
        $this->authorize('manage-organizations');
        
        // Donn√©es pour les formulaires
        $formData = [
            'organization' => $organization,
            'countries' => $this->getCountriesList(),
            'organizationTypes' => $this->getOrganizationTypes(),
            'currencies' => $this->getCurrenciesList(),
            'timezones' => $this->getTimezonesList(),
            'subscriptionPlans' => $this->getSubscriptionPlans(),
            'settings' => json_decode($organization->settings, true) ?? [],
            'workingDays' => json_decode($organization->working_days, true) ?? [1,2,3,4,5],
        ];

        return view('admin.organizations.edit', $formData);
    }

    /**
     * üíæ Mise √† jour d'une organisation avec audit complet
     *
     * @param Request $request
     * @param Organization $organization
     * @return RedirectResponse
     */
    public function update(Request $request, Organization $organization): RedirectResponse
    {
        $this->authorize('manage-organizations');
        
        try {
            DB::beginTransaction();
            
            $validated = $this->validateOrganizationData($request, $organization);
            
            // Sauvegarde des donn√©es originales pour audit
            $originalData = $organization->toArray();

            // Traitement du logo
            if ($request->hasFile('logo')) {
                if ($organization->logo_path) {
                    Storage::disk('public')->delete($organization->logo_path);
                }
                $validated['logo_path'] = $this->handleLogoUpload($request->file('logo'));
            }

            // Mise √† jour des settings et working_days
            $validated['settings'] = $this->buildOrganizationSettings($validated);
            $validated['working_days'] = json_encode($validated['working_days'] ?? [1,2,3,4,5]);
            $validated['updated_by'] = Auth::id();

            // Mise √† jour de l'organisation
            $organization->update($validated);
            
            DB::commit();

            // Audit logging d√©taill√© des changements
            $changes = array_diff_assoc($validated, $originalData);
            Log::channel('audit')->info('Organization updated successfully', [
                'user_id' => Auth::id(),
                'user_email' => Auth::user()->email,
                'organization_id' => $organization->id,
                'organization_name' => $organization->name,
                'changes' => $changes,
                'ip_address' => $request->ip(),
                'timestamp' => now()->toISOString()
            ]);

            return redirect()
                ->route('admin.organizations.show', $organization)
                ->with('success', 'Organisation mise √† jour avec succ√®s !');
                
        } catch (\Illuminate\Validation\ValidationException $e) {
            DB::rollBack();
            return back()->withInput()->withErrors($e->errors());
            
        } catch (\Exception $e) {
            DB::rollBack();
            
            Log::channel('errors')->error('Organization update failed', [
                'user_id' => Auth::id(),
                'organization_id' => $organization->id,
                'error' => $e->getMessage(),
                'trace' => $e->getTraceAsString()
            ]);

            return back()
                ->withInput()
                ->withErrors(['error' => 'Une erreur est survenue lors de la mise √† jour.']);
        }
    }

    /**
     * üóëÔ∏è Suppression s√©curis√©e d'une organisation (soft delete)
     *
     * @param Organization $organization
     * @return RedirectResponse
     */
    public function destroy(Organization $organization): RedirectResponse
    {
        $this->authorize('manage-organizations');
        
        // V√©rifications de s√©curit√© strictes
        $usersCount = $organization->users()->count();
        $vehiclesCount = $organization->vehicles()->count();
        
        if ($usersCount > 0) {
            return back()->withErrors([
                'error' => "Impossible de supprimer une organisation qui contient {$usersCount} utilisateur(s). Veuillez d'abord les transf√©rer ou les supprimer."
            ]);
        }

        if ($vehiclesCount > 0) {
            return back()->withErrors([
                'error' => "Impossible de supprimer une organisation qui contient {$vehiclesCount} v√©hicule(s). Veuillez d'abord les transf√©rer ou les supprimer."
            ]);
        }

        try {
            DB::beginTransaction();
            
            $organizationData = [
                'id' => $organization->id,
                'name' => $organization->name,
                'email' => $organization->email,
                'siret' => $organization->siret,
            ];

            // Soft delete s√©curis√©
            $organization->delete();
            
            DB::commit();

            // Logging s√©curis√© critique
            Log::channel('security')->warning('Organization deleted', [
                'user_id' => Auth::id(),
                'user_email' => Auth::user()->email,
                'organization_data' => $organizationData,
                'ip_address' => request()->ip(),
                'timestamp' => now()->toISOString(),
                'reason' => 'Manual deletion by Super Admin'
            ]);

            return redirect()
                ->route('admin.organizations.index')
                ->with('success', "Organisation '{$organizationData['name']}' supprim√©e avec succ√®s.");
                
        } catch (\Exception $e) {
            DB::rollBack();
            
            Log::channel('errors')->error('Organization deletion failed', [
                'user_id' => Auth::id(),
                'organization_id' => $organization->id,
                'error' => $e->getMessage()
            ]);

            return back()->withErrors([
                'error' => 'Une erreur est survenue lors de la suppression.'
            ]);
        }
    }

    /**
     * üîÑ Restauration d'une organisation avec audit
     *
     * @param int $id
     * @return RedirectResponse
     */
    public function restore(int $id): RedirectResponse
    {
        $this->authorize('manage-organizations');
        
        try {
            $organization = Organization::withTrashed()->findOrFail($id);
            $organization->restore();

            Log::channel('audit')->info('Organization restored', [
                'user_id' => Auth::id(),
                'user_email' => Auth::user()->email,
                'organization_id' => $organization->id,
                'organization_name' => $organization->name,
                'ip_address' => request()->ip()
            ]);

            return redirect()
                ->route('admin.organizations.show', $organization)
                ->with('success', 'Organisation restaur√©e avec succ√®s !');
                
        } catch (\Exception $e) {
            Log::channel('errors')->error('Organization restoration failed', [
                'user_id' => Auth::id(),
                'organization_id' => $id,
                'error' => $e->getMessage()
            ]);

            return back()->withErrors([
                'error' => 'Une erreur est survenue lors de la restauration.'
            ]);
        }
    }

    /**
     * üìä Export s√©curis√© des organisations avec filtres
     *
     * @param Request $request
     * @return RedirectResponse
     */
    public function export(Request $request): RedirectResponse
    {
        $this->authorize('manage-organizations');
        
        $format = $request->get('format', 'xlsx');
        
        try {
            // R√©cup√©rer les organisations avec filtres
            $query = Organization::withCount(['users', 'vehicles', 'drivers']);
            
            // Appliquer les filtres de recherche si pr√©sents
            if ($request->filled('search')) {
                $search = $request->get('search');
                $query->where(function ($q) use ($search) {
                    $q->where('name', 'ILIKE', "%{$search}%")
                      ->orWhere('siret', 'ILIKE', "%{$search}%")
                      ->orWhere('email', 'ILIKE', "%{$search}%");
                });
            }
            
            if ($request->filled('status')) {
                $query->where('status', $request->get('status'));
            }
            
            if ($request->filled('country')) {
                $query->where('country', $request->get('country'));
            }
            
            $organizations = $query->get();
            
            // Log de l'export avec s√©curit√©
            Log::channel('audit')->info('Organizations export initiated', [
                'user_id' => Auth::id(),
                'user_email' => Auth::user()->email,
                'format' => $format,
                'count' => $organizations->count(),
                'filters' => $request->only(['search', 'status', 'country']),
                'ip_address' => $request->ip(),
                'timestamp' => now()->toISOString()
            ]);
            
            // TODO: Impl√©menter l'export r√©el (Excel, CSV, PDF) avec Laravel Excel
            // return Excel::download(new OrganizationsExport($organizations), "organizations.{$format}");
            
            return back()->with('success', "Export de {$organizations->count()} organisations en cours de pr√©paration (format: {$format}). Vous recevrez le fichier par email.");
            
        } catch (\Exception $e) {
            Log::channel('errors')->error('Organizations export failed', [
                'user_id' => Auth::id(),
                'user_email' => Auth::user()->email,
                'error' => $e->getMessage(),
                'trace' => $e->getTraceAsString()
            ]);
            
            return back()->withErrors(['error' => 'Une erreur est survenue lors de l\'export.']);
        }
    }

    /**
     * üìä Calculer les statistiques globales
     *
     * @return array
     */
    private function calculateGlobalStatistics(): array
    {
        return [
            'total' => Organization::count(),
            'active' => Organization::where('status', 'active')->count(),
            'inactive' => Organization::where('status', 'inactive')->count(),
            'pending' => Organization::where('status', 'pending')->count(),
            'suspended' => Organization::where('status', 'suspended')->count(),
            'total_users' => User::whereNotNull('organization_id')->count(),
            'total_vehicles' => Vehicle::count(),
            'total_drivers' => Driver::count(),
            'countries' => Organization::whereNotNull('country')->distinct('country')->pluck('country')->filter(),
            'types' => Organization::whereNotNull('organization_type')->distinct('organization_type')->pluck('organization_type')->filter(),
            'avg_users_per_org' => round(User::whereNotNull('organization_id')->count() / max(Organization::count(), 1), 2),
            'avg_vehicles_per_org' => round(Vehicle::count() / max(Organization::count(), 1), 2),
        ];
    }

    /**
     * üìà Calculer les analytics mensuelles
     *
     * @return \Illuminate\Database\Eloquent\Collection
     */
    private function calculateMonthlyAnalytics()
    {
        return Organization::selectRaw('
                DATE_TRUNC(\'month\', created_at) as month,
                COUNT(*) as count,
                organization_type,
                status
            ')
            ->where('created_at', '>=', now()->subMonths(12))
            ->groupBy('month', 'organization_type', 'status')
            ->orderBy('month')
            ->get();
    }

    /**
     * üìä Calculer les statistiques d'une organisation
     *
     * @param Organization $organization
     * @return array
     */
    private function calculateOrganizationStatistics(Organization $organization): array
    {
        return [
            'users' => [
                'total' => $organization->users->count(),
                'active' => $organization->users->where('is_active', true)->count(),
                'by_role' => $organization->users->groupBy(function ($user) {
                    return $user->roles->first()->name ?? 'Aucun r√¥le';
                })->map->count()->toArray()
            ],
            'vehicles' => [
                'total' => $organization->vehicles->count(),
                'available' => $organization->vehicles->where('status', 'available')->count(),
                'in_use' => $organization->vehicles->where('status', 'in_use')->count(),
                'maintenance' => $organization->vehicles->where('status', 'maintenance')->count(),
                'by_type' => $organization->vehicles->groupBy('vehicle_type')->map->count()->toArray()
            ],
            'drivers' => [
                'total' => $organization->drivers->count(),
                'active' => $organization->drivers->where('status', 'active')->count(),
                'inactive' => $organization->drivers->where('status', 'inactive')->count(),
                'on_assignment' => $organization->drivers->filter(function ($driver) {
                    return $driver->assignments->whereNull('end_date')->isNotEmpty();
                })->count()
            ],
            'assignments' => [
                'active' => $organization->vehicles->sum(function ($vehicle) {
                    return $vehicle->assignments->whereNull('end_date')->count();
                }),
                'completed_this_month' => $organization->vehicles->sum(function ($vehicle) {
                    return $vehicle->assignments->where('end_date', '>=', now()->startOfMonth())->count();
                })
            ],
        ];
    }

    /**
     * üèÉ Obtenir l'activit√© r√©cente
     *
     * @param Organization $organization
     * @return \Illuminate\Support\Collection
     */
    private function getRecentActivity(Organization $organization)
    {
        return collect([
            // Nouveaux utilisateurs
            ...$organization->users()
                ->where('created_at', '>=', now()->subDays(30))
                ->get()
                ->map(fn($user) => [
                    'type' => 'user_created',
                    'description' => "Nouvel utilisateur: {$user->name}",
                    'date' => $user->created_at,
                    'icon' => 'user-plus',
                    'color' => 'success'
                ]),
            
            // Nouveaux v√©hicules
            ...$organization->vehicles()
                ->where('created_at', '>=', now()->subDays(30))
                ->get()
                ->map(fn($vehicle) => [
                    'type' => 'vehicle_created',
                    'description' => "Nouveau v√©hicule: {$vehicle->registration_plate}",
                    'date' => $vehicle->created_at,
                    'icon' => 'truck',
                    'color' => 'info'
                ]),
        ])->sortByDesc('date')->take(20);
    }

    /**
     * üìà Calculer les m√©triques de performance
     *
     * @param Organization $organization
     * @return array
     */
    private function calculatePerformanceMetrics(Organization $organization): array
    {
        // TODO: Impl√©menter les m√©triques de performance
        return [
            'efficiency_score' => 85.5,
            'utilization_rate' => 78.2,
            'maintenance_compliance' => 92.1,
            'driver_satisfaction' => 87.8,
        ];
    }

    /**
     * ‚úÖ Valider les donn√©es d'organisation
     *
     * @param Request $request
     * @param Organization|null $organization
     * @return array
     */
    private function validateOrganizationData(Request $request, ?Organization $organization = null): array
    {
        return $request->validate([
            // Informations g√©n√©rales
            'name' => [
                'required', 
                'string', 
                'max:255', 
                Rule::unique('organizations', 'name')->ignore($organization?->id)
            ],
            'legal_name' => ['required', 'string', 'max:255'],
            'organization_type' => ['required', 'string', Rule::in(array_keys($this->getOrganizationTypes()))],
            'industry' => ['nullable', 'string', 'max:100'],
            'description' => ['nullable', 'string', 'max:1000'],

            // Informations l√©gales
            'siret' => [
                'nullable', 
                'string', 
                'max:20', 
                'regex:/^[0-9]{14}$/',
                Rule::unique('organizations', 'siret')->ignore($organization?->id)
            ],
            'vat_number' => [
                'nullable', 
                'string', 
                'max:20',
                Rule::unique('organizations', 'vat_number')->ignore($organization?->id)
            ],
            'legal_form' => ['nullable', 'string', 'max:50'],
            'registration_number' => ['nullable', 'string', 'max:50'],
            'registration_date' => ['nullable', 'date', 'before_or_equal:today'],

            // Contact principal
            'email' => [
                'required', 
                'email', 
                'max:255',
                Rule::unique('organizations', 'email')->ignore($organization?->id)
            ],
            'phone' => ['nullable', 'string', 'max:20'],
            'website' => ['nullable', 'url', 'max:255'],

            // Adresse
            'address' => ['required', 'string', 'max:255'],
            'address_line_2' => ['nullable', 'string', 'max:255'],
            'city' => ['required', 'string', 'max:100'],
            'postal_code' => ['required', 'string', 'max:20'],
            'state_province' => ['nullable', 'string', 'max:100'],
            'country' => ['required', 'string', 'size:2'],

            // Param√®tres
            'timezone' => ['required', 'string', 'max:50'],
            'currency' => ['required', 'string', 'size:3'],
            'language' => ['required', 'string', 'max:5'],
            'date_format' => ['required', 'string', 'max:20'],
            'time_format' => ['required', 'string', 'max:10'],

            // Status (seulement pour update)
            'status' => $organization ? ['required', 'string', Rule::in(['active', 'inactive', 'suspended'])] : [],

            // Limites
            'max_vehicles' => ['required', 'integer', 'min:1', 'max:10000'],
            'max_drivers' => ['required', 'integer', 'min:1', 'max:5000'],
            'max_users' => ['required', 'integer', 'min:1', 'max:1000'],

            // Logo
            'logo' => ['nullable', 'image', 'mimes:jpg,jpeg,png,svg', 'max:2048'],

            // Param√®tres avanc√©s
            'business_hours_start' => ['nullable', 'date_format:H:i'],
            'business_hours_end' => ['nullable', 'date_format:H:i'],
            'working_days' => ['nullable', 'array'],
            'working_days.*' => ['integer', 'between:1,7'],
            'maintenance_alert_days' => ['required', 'integer', 'min:1', 'max:365'],
            'license_expiry_alert_days' => ['required', 'integer', 'min:1', 'max:365'],
            'subscription_plan' => ['nullable', 'string', Rule::in(['basic', 'standard', 'professional', 'enterprise'])],

            // Contact admin (seulement pour cr√©ation)
            'admin_first_name' => $organization ? [] : ['required', 'string', 'max:100'],
            'admin_last_name' => $organization ? [] : ['required', 'string', 'max:100'],
            'admin_email' => $organization ? [] : ['required', 'email', 'max:255', 'unique:users,email'],
            'admin_phone' => ['nullable', 'string', 'max:20'],
            'admin_title' => ['nullable', 'string', 'max:100'],
        ], [
            'siret.regex' => 'Le SIRET doit contenir exactement 14 chiffres.',
            'country.size' => 'Le code pays doit contenir exactement 2 caract√®res.',
            'currency.size' => 'Le code devise doit contenir exactement 3 caract√®res.',
        ]);
    }

    /**
     * üñºÔ∏è Traitement s√©curis√© du logo
     *
     * @param \Illuminate\Http\UploadedFile $file
     * @return string
     */
    private function handleLogoUpload($file): string
    {
        // Validation suppl√©mentaire de s√©curit√©
        $allowedMimes = ['image/jpeg', 'image/png', 'image/svg+xml'];
        if (!in_array($file->getMimeType(), $allowedMimes)) {
            throw new \InvalidArgumentException('Type de fichier non autoris√© pour le logo.');
        }

        // G√©n√©ration d'un nom s√©curis√©
        $filename = 'org_logo_' . uniqid() . '.' . $file->getClientOriginalExtension();
        
        return $file->storeAs('organizations/logos', $filename, 'public');
    }

    /**
     * üîó G√©n√©rer un slug unique
     *
     * @param string $name
     * @return string
     */
    private function generateUniqueSlug(string $name): string
    {
        $slug = Str::slug($name);
        $originalSlug = $slug;
        $counter = 1;

        while (Organization::where('slug', $slug)->exists()) {
            $slug = $originalSlug . '-' . $counter;
            $counter++;
        }

        return $slug;
    }

    /**
     * üèóÔ∏è Construire les settings d'organisation
     *
     * @param array $validated
     * @return string
     */
    private function buildOrganizationSettings(array $validated): string
    {
        return json_encode([
            'maintenance_alert_days' => $validated['maintenance_alert_days'],
            'license_expiry_alert_days' => $validated['license_expiry_alert_days'],
            'business_hours' => [
                'start' => $validated['business_hours_start'] ?? '08:00',
                'end' => $validated['business_hours_end'] ?? '18:00',
            ],
            'notifications' => [
                'email_enabled' => true,
                'sms_enabled' => false,
                'push_enabled' => true,
            ],
            'security' => [
                'two_factor_required' => false,
                'password_expiry_days' => 90,
                'session_timeout_minutes' => 480,
            ],
        ]);
    }

    /**
     * üë§ Cr√©er l'utilisateur admin de l'organisation
     *
     * @param Organization $organization
     * @param array $validated
     * @return User
     */
    private function createOrganizationAdmin(Organization $organization, array $validated): User
    {
        $adminUser = User::create([
            'first_name' => $validated['admin_first_name'],
            'last_name' => $validated['admin_last_name'],
            'name' => $validated['admin_first_name'] . ' ' . $validated['admin_last_name'],
            'email' => $validated['admin_email'],
            'phone' => $validated['admin_phone'],
            'job_title' => $validated['admin_title'] ?? 'Administrateur',
            'organization_id' => $organization->id,
            'password' => bcrypt('TempPassword2025!'),
            'is_active' => true,
            'user_status' => 'active',
            'email_verified_at' => now(),
            'created_by' => Auth::id(),
            'timezone' => $validated['timezone'],
            'language' => $validated['language'],
        ]);

        // Assigner le r√¥le Admin
        $adminUser->assignRole('Admin');

        return $adminUser;
    }

    /**
     * üåç Liste des pays ISO
     *
     * @return array
     */
    private function getCountriesList(): array
    {
        return [
            'DZ' => 'Alg√©rie',
            'FR' => 'France',
            'BE' => 'Belgique',
            'CH' => 'Suisse',
            'LU' => 'Luxembourg',
            'MC' => 'Monaco',
            'DE' => 'Allemagne',
            'ES' => 'Espagne',
            'IT' => 'Italie',
            'GB' => 'Royaume-Uni',
            'US' => '√âtats-Unis',
            'CA' => 'Canada',
            'MA' => 'Maroc',
            'TN' => 'Tunisie',
            'NL' => 'Pays-Bas',
            'PT' => 'Portugal',
        ];
    }

    /**
     * üè¢ Types d'organisation
     *
     * @return array
     */
    private function getOrganizationTypes(): array
    {
        return [
            'enterprise' => 'Grande Entreprise',
            'sme' => 'PME',
            'startup' => 'Startup',
            'public' => 'Secteur Public',
            'ngo' => 'ONG',
            'cooperative' => 'Coop√©rative',
            'association' => 'Association',
            'sole_proprietorship' => 'Entreprise Individuelle',
        ];
    }

    /**
     * üí∞ Liste des devises ISO
     *
     * @return array
     */
    private function getCurrenciesList(): array
    {
        return [
            'DZD' => 'Dinar Alg√©rien (DZD)',
            'EUR' => 'Euro (‚Ç¨)',
            'USD' => 'Dollar US ($)',
            'GBP' => 'Livre Sterling (¬£)',
            'CHF' => 'Franc Suisse (CHF)',
            'CAD' => 'Dollar Canadien (C$)',
            'MAD' => 'Dirham Marocain (MAD)',
            'TND' => 'Dinar Tunisien (TND)',
        ];
    }

    /**
     * üïê Liste des fuseaux horaires
     *
     * @return array
     */
    private function getTimezonesList(): array
    {
        return [
            'Africa/Algiers' => 'Alg√©rie (GMT+1)',
            'Europe/Paris' => 'France (CET)',
            'Europe/London' => 'Royaume-Uni (GMT)',
            'Europe/Berlin' => 'Allemagne (CET)',
            'Europe/Madrid' => 'Espagne (CET)',
            'Europe/Rome' => 'Italie (CET)',
            'Europe/Brussels' => 'Belgique (CET)',
            'Europe/Zurich' => 'Suisse (CET)',
            'America/New_York' => 'New York (EST)',
            'America/Toronto' => 'Toronto (EST)',
            'Africa/Casablanca' => 'Maroc (GMT+1)',
            'Africa/Tunis' => 'Tunisie (GMT+1)',
        ];
    }

    /**
     * üí≥ Plans d'abonnement
     *
     * @return array
     */
    private function getSubscriptionPlans(): array
    {
        return [
            'basic' => 'Basic (25 v√©hicules)',
            'standard' => 'Standard (100 v√©hicules)',
            'professional' => 'Professional (500 v√©hicules)',
            'enterprise' => 'Enterprise (illimit√©)',
        ];
    }
}

--- FIN DU FICHIER : ./app/Http/Controllers/Admin/OrganizationController.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Http/Controllers/Admin/PlanningController.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Http\Controllers\Admin;

use App\Http\Controllers\Controller;
use App\Repositories\Interfaces\VehicleRepositoryInterface;
use Carbon\Carbon;
use Illuminate\Http\Request;
use Illuminate\View\View;

class PlanningController extends Controller
{
    private VehicleRepositoryInterface $vehicleRepository;

    public function __construct(VehicleRepositoryInterface $vehicleRepository)
    {
        $this->vehicleRepository = $vehicleRepository;
    }

    /**
     * Affiche la vue du planning GANTT.
     *
     * @param Request $request
     * @return View
     */
    public function index(Request $request): View
    {
        $this->authorize('view assignments'); // Reuse permission from assignments

        // --- Gestion de la P√©riode ---
        $viewMode = $request->input('view_mode', 'week');
        $baseDate = $request->has('date') ? Carbon::parse($request->input('date')) : Carbon::today();

        switch ($viewMode) {
            case 'day':
                $startDate = $baseDate->copy()->startOfDay();
                $endDate = $baseDate->copy()->endOfDay();
                break;
            case 'month':
                $startDate = $baseDate->copy()->startOfMonth();
                $endDate = $baseDate->copy()->endOfMonth();
                break;
            case 'year':
                $startDate = $baseDate->copy()->startOfYear();
                $endDate = $baseDate->copy()->endOfYear();
                break;
            case 'week':
            default:
                $startDate = $baseDate->copy()->startOfWeek(Carbon::MONDAY);
                $endDate = $baseDate->copy()->endOfWeek(Carbon::SUNDAY);
                break;
        }

        // --- R√©cup√©ration des donn√©es ---
        $filters = $request->only(['search', 'per_page', 'sort']);
        $vehicles = $this->vehicleRepository->getForPlanning(
            $filters,
            $startDate->toDateString(),
            $endDate->toDateString()
        );

        return view('admin.planning.index', [
            'vehicles' => $vehicles,
            'filters' => $filters,
            'dateRange' => [
                'start' => $startDate,
                'end' => $endDate,
            ],
            'baseDate' => $baseDate,
            'viewMode' => $viewMode,
        ]);
    }
}
--- FIN DU FICHIER : ./app/Http/Controllers/Admin/PlanningController.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Http/Controllers/Admin/RoleController.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Http\Controllers\Admin;

use App\Http\Controllers\Controller;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;
use Illuminate\View\View;
use Spatie\Permission\Models\Permission;
use Spatie\Permission\Models\Role;

class RoleController extends Controller
{
    /**
     * Affiche la liste des r√¥les.
     */
    public function index(): View
    {
        $roles = Role::orderBy('name')->get();

        return view('admin.roles.index', compact('roles'));
    }

    /**
     * Affiche le formulaire pour modifier un r√¥le et ses permissions.
     */
    public function edit(Role $role): View
    {
        // R√©cup√®re toutes les permissions disponibles pour les afficher
        $permissions = Permission::all();

        return view('admin.roles.edit', compact('role', 'permissions'));
    }

    /**
     * Met √† jour un r√¥le avec les permissions s√©lectionn√©es.
     */
/**
 * Met √† jour un r√¥le avec les permissions s√©lectionn√©es.
 */
public function update(Request $request, Role $role): RedirectResponse
{
    // 1. Valider que les donn√©es entrantes sont bien des IDs de permissions valides
    $validated = $request->validate([
        'permissions' => 'sometimes|array',
        'permissions.*' => 'exists:permissions,id', // Valide que chaque ID existe dans la table 'permissions'
    ]);

    // 2. R√©cup√©rer le tableau d'IDs de permissions depuis la requ√™te valid√©e
    $permissionIds = $validated['permissions'] ?? [];

    // 3. Trouver les objets Permission correspondant √† ces IDs
    $permissions = Permission::whereIn('id', $permissionIds)->get();

    // 4. Synchroniser les permissions en utilisant la collection d'objets Permission.
    // C'est la m√©thode la plus robuste qui √©limine toute ambigu√Øt√©.
    $role->syncPermissions($permissions);

    return redirect()->route('admin.roles.index')
        ->with('success', "Les permissions pour le r√¥le '{$role->name}' ont √©t√© mises √† jour.");
}




}

--- FIN DU FICHIER : ./app/Http/Controllers/Admin/RoleController.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Http/Controllers/Admin/SupplierCategoryController.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Http\Controllers\Admin;

use App\Http\Controllers\Controller;
use App\Http\Requests\Admin\SupplierCategory\StoreSupplierCategoryRequest;
use App\Services\SupplierCategoryService;
use Illuminate\Http\JsonResponse;

class SupplierCategoryController extends Controller
{
    protected $supplierCategoryService;

    public function __construct(SupplierCategoryService $supplierCategoryService)
    {
        $this->supplierCategoryService = $supplierCategoryService;
    }

    public function store(StoreSupplierCategoryRequest $request): JsonResponse
    {
        $category = $this->supplierCategoryService->createCategory($request->validated());
        return response()->json([
            'success' => true,
            'message' => 'Cat√©gorie ajout√©e avec succ√®s.',
            'category' => $category
        ]);
    }
}
--- FIN DU FICHIER : ./app/Http/Controllers/Admin/SupplierCategoryController.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Http/Controllers/Admin/SupplierController.php
////////////////////////////////////////////////////////////////

<?php
namespace App\Http\Controllers\Admin;

use App\Http\Controllers\Controller;
use App\Http\Requests\Admin\Supplier\StoreSupplierRequest;
use App\Http\Requests\Admin\Supplier\UpdateSupplierRequest;
use App\Models\Supplier;
use App\Services\SupplierService;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;
use Illuminate\View\View;

class SupplierController extends Controller
{
    protected SupplierService $supplierService;

    public function __construct(SupplierService $supplierService)
    {
        $this->supplierService = $supplierService;
    }

    public function index(Request $request): View
    {
        $this->authorize('view suppliers');
        $filters = $request->only(['search', 'per_page']);
        $suppliers = $this->supplierService->getFilteredSuppliers($filters);
        return view('admin.suppliers.index', compact('suppliers', 'filters'));
    }

    public function create(): View
    {
        $this->authorize('create suppliers');

        // La m√©thode du service retourne d√©j√† un tableau pr√™t pour la vue.
        $data = $this->supplierService->getDataForCreateForm();

        return view('admin.suppliers.create', $data);
    }

    public function store(StoreSupplierRequest $request): RedirectResponse
    {
        $this->supplierService->createSupplier($request->validated());
        return redirect()->route('admin.suppliers.index')->with('success', 'Fournisseur cr√©√© avec succ√®s.');
    }

    public function edit(Supplier $supplier): View
    {
        $this->authorize('edit suppliers');
        $data = $this->supplierService->getDataForCreateForm();
        $data['supplier'] = $supplier;
        return view('admin.suppliers.edit', $data);
    }

    public function update(UpdateSupplierRequest $request, Supplier $supplier): RedirectResponse
    {
        $this->supplierService->updateSupplier($supplier, $request->validated());
        return redirect()->route('admin.suppliers.index')->with('success', 'Fournisseur mis √† jour avec succ√®s.');
    }

    public function destroy(Supplier $supplier): RedirectResponse
    {
        $this->authorize('delete suppliers');
        $this->supplierService->archiveSupplier($supplier);
        return redirect()->route('admin.suppliers.index')->with('success', 'Fournisseur archiv√© avec succ√®s.');
    }
}
--- FIN DU FICHIER : ./app/Http/Controllers/Admin/SupplierController.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Http/Controllers/Admin/UserController.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Http\Controllers\Admin;

use App\Http\Controllers\Controller;
use App\Models\Organization;
use App\Models\User;
use Illuminate\Auth\Access\AuthorizationException;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Hash;
use Illuminate\Support\Facades\Log;
use Illuminate\Validation\Rules;
use Illuminate\View\View;
use Spatie\Permission\Models\Role;

class UserController extends Controller
{
    public function index(): View
    {
        $this->authorize('view users');

        $query = User::with(['roles', 'organization']);

        // Si l'utilisateur n'est pas Super Admin, on filtre par son organisation
        if (!auth()->user()->hasRole('Super Admin')) {
            $query->where('organization_id', auth()->user()->organization_id);
        }

        $users = $query->orderBy('id', 'desc')->paginate(15);

        return view('admin.users.index', compact('users'));
    }

    public function create(): View
    {
        $this->authorize('create users');

        // üõ°Ô∏è S√âCURIT√â: Filtrer les r√¥les selon les permissions
        $roles = $this->getAssignableRoles();
        
        $user = auth()->user();
        if ($user->hasRole('Super Admin')) {
            $organizations = Organization::withoutGlobalScope('organization')->orderBy('name')->get();
        } else {
            $organizations = Organization::where('id', $user->organization_id)->get();
        }

        return view('admin.users.create', compact('roles', 'organizations'));
    }

    public function store(Request $request): RedirectResponse
    {
        $this->authorize('create users');

        $user = auth()->user();
        $organizationId = $user->hasRole('Super Admin') ? $request->input('organization_id') : $user->organization_id;
        $request->merge(['organization_id' => $organizationId]);

        // üõ°Ô∏è S√âCURIT√â: Validation des r√¥les avec contr√¥le d'escalation
        $validated = $request->validate([
            'first_name' => ['required', 'string', 'max:255'],
            'last_name' => ['required', 'string', 'max:255'],
            'email' => ['required', 'string', 'email', 'max:255', 'unique:'.User::class],
            'password' => ['required', 'confirmed', Rules\Password::defaults()],
            'organization_id' => ['required', 'exists:organizations,id'],
            'roles' => ['sometimes', 'array', function ($attribute, $value, $fail) {
                if (!$this->canAssignRoles($value)) {
                    $fail('Vous n\'√™tes pas autoris√© √† assigner un ou plusieurs de ces r√¥les.');
                }
            }],
            'roles.*' => 'exists:roles,id',
        ]);

        $newUser = User::create([
            'first_name' => $validated['first_name'],
            'last_name' => $validated['last_name'],
            'email' => $validated['email'],
            'password' => Hash::make($validated['password']),
            'organization_id' => $validated['organization_id'],
        ]);

        // üõ°Ô∏è S√âCURIT√â: Assignation s√©curis√©e des r√¥les
        if (!empty($validated['roles'])) {
            $this->secureRoleAssignment($newUser, $validated['roles']);
        }

        // üìù AUDIT: Logger la cr√©ation d'utilisateur
        Log::info('Utilisateur cr√©√©', [
            'creator' => auth()->user()->email,
            'new_user' => $newUser->email,
            'roles' => $validated['roles'] ?? [],
            'ip' => $request->ip()
        ]);

        return redirect()->route('admin.users.index')->with('success', 'Utilisateur cr√©√© avec succ√®s.');
    }

    public function edit(User $user): View
    {
        $this->authorize('edit users');

        // üõ°Ô∏è S√âCURIT√â: Filtrer les r√¥les selon les permissions
        $roles = $this->getAssignableRoles();
        
        $loggedInUser = auth()->user();
        if ($loggedInUser->hasRole('Super Admin')) {
            $organizations = Organization::withoutGlobalScope('organization')->orderBy('name')->get();
        } else {
            // Un admin ne peut voir que sa propre organisation
            $organizations = Organization::where('id', $loggedInUser->organization_id)->get();
            // On s'assure qu'un admin ne peut pas √©diter un utilisateur d'une autre organisation
            if ($user->organization_id !== $loggedInUser->organization_id) {
                abort(403, 'Vous n\'√™tes pas autoris√© √† modifier cet utilisateur.');
            }
        }

        return view('admin.users.edit', compact('user', 'roles', 'organizations'));
    }

    public function update(Request $request, User $user): RedirectResponse
    {
        $this->authorize('edit users');

        $loggedInUser = auth()->user();

        // üõ°Ô∏è S√âCURIT√â: Pr√©vention de l'auto-promotion
        if ($this->isAttemptingPrivilegeEscalation($user, $request->input('roles', []))) {
            abort(403, 'Tentative d\'escalation de privil√®ges d√©tect√©e et bloqu√©e.');
        }

        // Un admin ne peut pas changer l'organisation d'un utilisateur
        if (!$loggedInUser->hasRole('Super Admin')) {
            if ($request->input('organization_id') && $request->input('organization_id') != $loggedInUser->organization_id) {
                abort(403, 'Vous n\'√™tes pas autoris√© √† changer l\'organisation de l\'utilisateur.');
            }
        }

        // üõ°Ô∏è S√âCURIT√â: Validation avec contr√¥le des r√¥les
        $validated = $request->validate([
            'first_name' => ['required', 'string', 'max:255'],
            'last_name' => ['required', 'string', 'max:255'],
            'email' => ['required', 'string', 'email', 'max:255', 'unique:users,email,'.$user->id],
            'organization_id' => ['required', 'exists:organizations,id'],
            'roles' => ['sometimes', 'array', function ($attribute, $value, $fail) use ($user) {
                if (!$this->canAssignRoles($value, $user)) {
                    $fail('Vous n\'√™tes pas autoris√© √† assigner un ou plusieurs de ces r√¥les.');
                }
            }],
            'roles.*' => 'exists:roles,id',
            'password' => ['nullable', 'confirmed', Rules\Password::defaults()],
        ]);

        $userData = [
            'first_name' => $validated['first_name'],
            'last_name' => $validated['last_name'],
            'email' => $validated['email'],
            'organization_id' => $validated['organization_id'],
        ];

        if (!empty($validated['password'])) {
            $userData['password'] = Hash::make($validated['password']);
        }

        $user->update($userData);

        // üõ°Ô∏è S√âCURIT√â: Mise √† jour s√©curis√©e des r√¥les
        $this->secureRoleAssignment($user, $validated['roles'] ?? []);

        // üìù AUDIT: Logger la modification
        Log::info('Utilisateur modifi√©', [
            'modifier' => auth()->user()->email,
            'target_user' => $user->email,
            'new_roles' => $validated['roles'] ?? [],
            'ip' => $request->ip()
        ]);

        return redirect()->route('admin.users.index')->with('success', 'Utilisateur mis √† jour avec succ√®s.');
    }

    public function destroy(User $user): RedirectResponse
    {
        $this->authorize('delete users');

        if (auth()->id() == $user->id) {
            return back()->with('error', 'Vous ne pouvez pas supprimer votre propre compte.');
        }

        // üõ°Ô∏è S√âCURIT√â: Emp√™cher la suppression du dernier Super Admin
        if ($user->hasRole('Super Admin')) {
            $superAdminCount = User::role('Super Admin')->count();
            if ($superAdminCount <= 1) {
                return back()->with('error', 'Impossible de supprimer le dernier Super Admin.');
            }
            
            // Seul un Super Admin peut supprimer un autre Super Admin
            if (!auth()->user()->hasRole('Super Admin')) {
                abort(403, 'Seul un Super Admin peut supprimer un autre Super Admin.');
            }
        }

        // üìù AUDIT: Logger la suppression
        Log::warning('Utilisateur supprim√©', [
            'deleter' => auth()->user()->email,
            'deleted_user' => $user->email,
            'deleted_user_roles' => $user->getRoleNames()->toArray(),
            'ip' => request()->ip()
        ]);

        $user->delete();

        return redirect()->route('admin.users.index')->with('success', 'Utilisateur supprim√© avec succ√®s.');
    }

    /**
     * üõ°Ô∏è S√âCURIT√â: Obtenir les r√¥les que l'utilisateur connect√© peut assigner
     */
    private function getAssignableRoles()
    {
        $user = auth()->user();
        
        if ($user->hasRole('Super Admin')) {
            // Super Admin peut assigner tous les r√¥les
            return Role::all();
        } else {
            // Admin ne peut pas assigner le r√¥le Super Admin
            return Role::where('name', '!=', 'Super Admin')->get();
        }
    }

    /**
     * üõ°Ô∏è S√âCURIT√â: V√©rifier si l'utilisateur peut assigner les r√¥les demand√©s
     */
    private function canAssignRoles(array $roleIds, User $targetUser = null): bool
    {
        $user = auth()->user();
        
        // R√©cup√©rer les r√¥les par leurs IDs
        $roles = Role::whereIn('id', $roleIds)->get();
        
        foreach ($roles as $role) {
            // R√®gle 1: Seul Super Admin peut assigner le r√¥le Super Admin
            if ($role->name === 'Super Admin' && !$user->hasRole('Super Admin')) {
                return false;
            }
            
            // R√®gle 2: Emp√™cher l'auto-promotion (si on modifie un utilisateur existant)
            if ($targetUser && $user->id === $targetUser->id && $role->name === 'Super Admin') {
                return false;
            }
        }
        
        return true;
    }

    /**
     * üõ°Ô∏è S√âCURIT√â: Assignation s√©curis√©e des r√¥les avec v√©rifications
     */
    private function secureRoleAssignment(User $user, array $roleIds): void
    {
        if (empty($roleIds)) {
            $user->syncRoles([]);
            return;
        }

        // Double v√©rification avant assignation
        if (!$this->canAssignRoles($roleIds, $user)) {
            throw new AuthorizationException('Permission insuffisante pour assigner ces r√¥les');
        }

        $rolesToSync = Role::whereIn('id', $roleIds)->get();
        $user->syncRoles($rolesToSync);
    }

    /**
     * üõ°Ô∏è S√âCURIT√â: D√©tecter les tentatives d'escalation de privil√®ges
     */
    private function isAttemptingPrivilegeEscalation(User $targetUser, array $roleIds): bool
    {
        $currentUser = auth()->user();
        
        // Si c'est un Super Admin, pas de restriction
        if ($currentUser->hasRole('Super Admin')) {
            return false;
        }
        
        // V√©rifier si on essaie d'assigner Super Admin
        $roles = Role::whereIn('id', $roleIds)->pluck('name')->toArray();
        if (in_array('Super Admin', $roles)) {
            return true;
        }
        
        // V√©rifier l'auto-promotion
        if ($currentUser->id === $targetUser->id) {
            $currentHighestLevel = $this->getUserHighestRoleLevel($currentUser);
            foreach ($roles as $roleName) {
                $roleLevel = $this->getRoleLevel($roleName);
                if ($roleLevel < $currentHighestLevel) { // Niveau plus √©lev√©
                    return true;
                }
            }
        }
        
        return false;
    }

    /**
     * üõ°Ô∏è S√âCURIT√â: Obtenir le niveau hi√©rarchique d'un r√¥le
     */
    private function getRoleLevel(string $roleName): int
    {
        $hierarchy = [
            'Super Admin' => 1,
            'Admin' => 2,
            'Gestionnaire Flotte' => 3,
            'supervisor' => 4,
            'Chauffeur' => 5
        ];
        
        return $hierarchy[$roleName] ?? 999;
    }

    /**
     * üõ°Ô∏è S√âCURIT√â: Obtenir le niveau le plus √©lev√© d'un utilisateur
     */
    private function getUserHighestRoleLevel(User $user): int
    {
        $userRoles = $user->roles;
        $minLevel = 999;
        
        foreach ($userRoles as $role) {
            $level = $this->getRoleLevel($role->name);
            if ($level < $minLevel) {
                $minLevel = $level;
            }
        }
        
        return $minLevel;
    }
}

--- FIN DU FICHIER : ./app/Http/Controllers/Admin/UserController.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Http/Controllers/Admin/VehicleController.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Http\Controllers\Admin;

use App\Http\Controllers\Controller;
use App\Models\Vehicle;
use App\Models\VehicleStatus;
use App\Models\VehicleType;
use App\Models\FuelType;
use App\Models\TransmissionType;
use App\Models\User;
use App\Services\VehicleService;
use App\Services\ImportExportService;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;
use Illuminate\View\View;
use App\Http\Requests\Admin\Vehicle\StoreVehicleRequest;
use App\Http\Requests\Admin\Vehicle\UpdateVehicleRequest;

class VehicleController extends Controller
{
    protected VehicleService $vehicleService;
    protected ImportExportService $importExportService;

    public function __construct(VehicleService $vehicleService, ImportExportService $importExportService)
    {
        $this->vehicleService = $vehicleService;
        $this->importExportService = $importExportService;
    }

    public function index(Request $request): View
    {
        $this->authorize('view vehicles');
        $filters = $request->only(['search', 'status_id', 'per_page', 'view_deleted']);
        $vehicles = $this->vehicleService->getFilteredVehicles($filters);
        $vehicleStatuses = VehicleStatus::orderBy('name')->get();
        return view('admin.vehicles.index', compact('vehicles', 'vehicleStatuses', 'filters'));
    }

    public function create(): View
    {
        $this->authorize('create vehicles');
        $vehicleStatuses = VehicleStatus::orderBy('name')->get();
        $vehicleTypes = VehicleType::orderBy('name')->get();
        $fuelTypes = FuelType::orderBy('name')->get();
        $transmissionTypes = TransmissionType::orderBy('name')->get();
        $users = User::orderBy('name')->get();
        return view('admin.vehicles.create', compact('vehicleStatuses', 'vehicleTypes', 'fuelTypes', 'transmissionTypes', 'users'));
    }

    public function store(StoreVehicleRequest $request): RedirectResponse
    {
        $this->vehicleService->createVehicle($request->validated(), $request->file('photo'), $request->input('user_ids', []));
        return redirect()->route('admin.vehicles.index')->with('success', 'Nouveau v√©hicule ajout√© avec succ√®s.');
    }

    public function edit(Vehicle $vehicle): View
    {
        $this->authorize('edit vehicles');
        $vehicleStatuses = VehicleStatus::orderBy('name')->get();
        $vehicleTypes = VehicleType::orderBy('name')->get();
        $fuelTypes = FuelType::orderBy('name')->get();
        $transmissionTypes = TransmissionType::orderBy('name')->get();
        $users = User::orderBy('name')->get();
        $vehicle->load('users');
        return view('admin.vehicles.edit', compact('vehicle', 'vehicleStatuses', 'vehicleTypes', 'fuelTypes', 'transmissionTypes', 'users'));
    }

    public function update(UpdateVehicleRequest $request, Vehicle $vehicle): RedirectResponse
    {
        $this->vehicleService->updateVehicle($vehicle, $request->validated(), $request->file('photo'), $request->input('user_ids', []));
        return redirect()->route('admin.vehicles.index')->with('success', 'Le v√©hicule a √©t√© mis √† jour.');
    }

    public function destroy(Vehicle $vehicle): RedirectResponse
    {
        $this->authorize('delete vehicles');
        $archived = $this->vehicleService->archiveVehicle($vehicle);

        if ($archived) {
            return redirect()->route('admin.vehicles.index')->with('success', "Le v√©hicule {$vehicle->registration_plate} a √©t√© archiv√©.");
        }

        return redirect()->back()->with('error', 'Impossible d\'archiver ce v√©hicule car il est li√© √† des affectations.');
    }

    public function restore($vehicleId): RedirectResponse
    {
        $this->authorize('restore vehicles');
        $this->vehicleService->restoreVehicle($vehicleId);
        return redirect()->route('admin.vehicles.index', ['view_deleted' => true])->with('success', "Le v√©hicule a √©t√© restaur√©.");
    }

    public function forceDelete($vehicleId): RedirectResponse
    {
        $this->authorize('force delete vehicles');
        $deleted = $this->vehicleService->forceDeleteVehicle($vehicleId);

        if ($deleted) {
            return redirect()->route('admin.vehicles.index', ['view_deleted' => true])->with('success', 'Le v√©hicule a √©t√© supprim√© d√©finitivement.');
        }

        return redirect()->back()->with('error', 'Impossible de supprimer ce v√©hicule car il est li√© √† un historique d\'affectations.');
    }

    public function showImportForm(): View
    {
        $this->authorize('create vehicles');
        return view('admin.vehicles.import');
    }

    public function downloadTemplate()
    {
        $this->authorize('create vehicles');
        $headers = [
            'registration_plate', 'vin', 'brand', 'model', 'color', 'vehicle_type',
            'fuel_type', 'transmission_type', 'status', 'manufacturing_year',
            'acquisition_date', 'purchase_price', 'current_value', 'initial_mileage',
            'engine_displacement_cc', 'power_hp', 'seats', 'status_reason', 'notes',
        ];
        $example = [
            'AA-123-BB', 'VFE...', 'Renault', 'Clio', 'Noire', 'Voiture de soci√©t√©',
            'Essence', 'Manuelle', 'Disponible', '2022',
            '2022-01-15', '150000.00', '120000.00', '5000',
            '1199', '90', '5', '', 'V√©hicule neuf',
        ];

        return $this->importExportService->downloadCsvTemplate($headers, [$example], 'template_import_vehicules.csv');
    }

    public function handleImport(Request $request): RedirectResponse
    {
        $this->authorize('create vehicles');
        $request->validate(['csv_file' => 'required|file|mimes:csv,txt']);
        $file = $request->file('csv_file');

        list($successCount, $errorRows) = $this->importExportService->handleImport(
            $file,
            fn($data) => $this->prepareDataForValidation($data),
            fn($data) => $this->getValidationRules($data),
            fn($data) => Vehicle::create($data)
        );

        if (empty($errorRows)) {
            return redirect()->route('admin.vehicles.index')->with('success', "$successCount v√©hicules import√©s avec succ√®s.");
        }

        return redirect()->route('admin.vehicles.import.results')
            ->with('successCount', $successCount)
            ->with('errorRows', $errorRows)
            ->with('fileName', $file->getClientOriginalName());
    }

    public function showImportResults(): View
    {
        $this->authorize('create vehicles');
        return view('admin.vehicles.import-results', [
            'successCount' => session('successCount', 0),
            'errorRows' => session('errorRows', []),
            'fileName' => session('fileName', 'Fichier CSV'),
        ]);
    }

    private function prepareDataForValidation(array $record): array
    {
        $vehicleTypes = VehicleType::pluck('id', 'name');
        $fuelTypes = FuelType::pluck('id', 'name');
        $transmissionTypes = TransmissionType::pluck('id', 'name');
        $statuses = VehicleStatus::pluck('id', 'name');

        return [
            'registration_plate' => $record['registration_plate'] ?? null,
            'vin' => $record['vin'] ?? null,
            'brand' => $record['brand'] ?? null,
            'model' => $record['model'] ?? null,
            'color' => $record['color'] ?? null,
            'vehicle_type_id' => $vehicleTypes[trim($record['vehicle_type'])] ?? null,
            'fuel_type_id' => $fuelTypes[trim($record['fuel_type'])] ?? null,
            'transmission_type_id' => $transmissionTypes[trim($record['transmission_type'])] ?? null,
            'status_id' => $statuses[trim($record['status'])] ?? null,
            'manufacturing_year' => $record['manufacturing_year'] ?? null,
            'acquisition_date' => $this->formatDate($record['acquisition_date']),
            'purchase_price' => $record['purchase_price'] ?? null,
            'current_value' => $record['current_value'] ?? null,
            'initial_mileage' => $record['initial_mileage'] ?? 0,
            'current_mileage' => $record['initial_mileage'] ?? 0,
            'engine_displacement_cc' => $record['engine_displacement_cc'] ?? null,
            'power_hp' => $record['power_hp'] ?? null,
            'seats' => $record['seats'] ?? null,
            'status_reason' => $record['status_reason'] ?? null,
            'notes' => $record['notes'] ?? null,
        ];
    }

    private function getValidationRules(array $data): array
    {
        return [
            'registration_plate' => ['required', 'string', 'max:255', 'unique:vehicles,registration_plate,' . ($data['id'] ?? 'NULL') . ',id,deleted_at,NULL'],
            'vin' => ['required', 'string', 'max:255', 'unique:vehicles,vin,' . ($data['id'] ?? 'NULL') . ',id,deleted_at,NULL'],
            'brand' => ['required', 'string', 'max:255'],
            'model' => ['required', 'string', 'max:255'],
            'color' => ['nullable', 'string', 'max:255'],
            'vehicle_type_id' => ['required', 'exists:vehicle_types,id'],
            'fuel_type_id' => ['required', 'exists:fuel_types,id'],
            'transmission_type_id' => ['required', 'exists:transmission_types,id'],
            'status_id' => ['required', 'exists:vehicle_statuses,id'],
            'manufacturing_year' => ['required', 'integer', 'min:1900', 'max:' . (date('Y') + 1)],
            'acquisition_date' => ['required', 'date_format:Y-m-d'],
            'purchase_price' => ['nullable', 'numeric', 'min:0'],
            'current_value' => ['nullable', 'numeric', 'min:0'],
            'initial_mileage' => ['required', 'integer', 'min:0'],
            'current_mileage' => ['required', 'integer', 'min:0'],
            'engine_displacement_cc' => ['nullable', 'integer', 'min:0'],
            'power_hp' => ['nullable', 'integer', 'min:0'],
            'seats' => ['nullable', 'integer', 'min:0'],
            'status_reason' => ['nullable', 'string', 'max:1000'],
            'notes' => ['nullable', 'string'],
        ];
    }

    private function formatDate($dateString)
    {
        if (!$dateString) return null;
        if (preg_match('/^\d{4}-\d{2}-\d{2}$/', $dateString)) {
            return $dateString;
        }
        $formats = ['d/m/Y', 'd-m-Y', 'd.m.Y', 'Y/m/d', 'Y-m-d', 'Y.m.d', 'd/m/y', 'd-m-y', 'd.m.y'];
        foreach ($formats as $format) {
            $date = \DateTime::createFromFormat($format, $dateString);
            $errors = \DateTime::getLastErrors();
            if ($date !== false && $errors['warning_count'] === 0 && $errors['error_count'] === 0) {
                return $date->format('Y-m-d');
            }
        }
        return $dateString;
    }

    public function exportErrors()
    {
        return redirect()->back()->with('error', 'La fonctionnalit√© d\'exportation des erreurs n\'est pas encore disponible.');
    }

    public function show(Vehicle $vehicle): View
    {
        $this->authorize('view vehicles');
        $vehicle->load(['vehicleType', 'fuelType', 'transmissionType', 'vehicleStatus', 'assignments.driver', 'maintenanceLogs', 'users']);
        return view('admin.vehicles.show', compact('vehicle'));
    }
}
--- FIN DU FICHIER : ./app/Http/Controllers/Admin/VehicleController.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Http/Controllers/Api/AssignmentController.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Http\Controllers\Api;

use App\Http\Controllers\Controller;
use App\Models\Assignment;
use Illuminate\Http\Request;
use Illuminate\Http\JsonResponse;
use App\Http\Requests\Admin\Assignment\StoreAssignmentRequest;
use App\Services\AssignmentService;

class AssignmentController extends Controller
{
    protected AssignmentService $assignmentService;

    public function __construct(AssignmentService $assignmentService)
    {
        $this->assignmentService = $assignmentService;
    }

    /**
     * Display the specified resource.
     */
    public function show(Assignment $assignment): JsonResponse
    {
        $this->authorize('view assignments');
        $assignment->load(['vehicle', 'driver']);
        return response()->json($assignment);
    }

    /**
     * Store a newly created resource in storage.
     */
    public function store(StoreAssignmentRequest $request): JsonResponse
    {
        $this->authorize('create assignments');
        $assignment = $this->assignmentService->createAssignment($request->validated());
        return response()->json($assignment, 201);
    }

    /**
     * Update the specified resource in storage.
     */
    public function update(Request $request, Assignment $assignment): JsonResponse
    {
        $this->authorize('edit assignments');
        // Validation will be more detailed later
        $validated = $request->validate([
            'driver_id' => 'sometimes|required|exists:drivers,id',
            'start_datetime' => 'sometimes|required|date',
            'end_datetime' => 'nullable|date|after_or_equal:start_datetime',
            // Add other fields as needed
        ]);

        $this->assignmentService->updateAssignment($assignment, $validated);

        return response()->json($assignment->fresh());
    }

    /**
     * Remove the specified resource from storage.
     */
    public function destroy(Assignment $assignment): JsonResponse
    {
        $this->authorize('delete assignments');
        $assignment->delete();
        return response()->json(null, 204);
    }

    /**
     * Move or resize an assignment from the GANTT chart.
     */
    public function move(Request $request, Assignment $assignment): JsonResponse
    {
        $this->authorize('edit assignments');

        $validated = $request->validate([
            'start_datetime' => 'required|date',
            'end_datetime' => 'required|date|after_or_equal:start_datetime',
            'vehicle_id' => 'sometimes|required|exists:vehicles,id'
        ]);

        // Basic conflict check (will be enhanced later)
        $conflicting = Assignment::where('vehicle_id', $validated['vehicle_id'] ?? $assignment->vehicle_id)
            ->where('id', '!=', $assignment->id)
            ->where(function ($query) use ($validated) {
                $query->where(function($q) use ($validated) {
                    $q->where('start_datetime', '<', $validated['end_datetime'])
                      ->where('end_datetime', '>', $validated['start_datetime']);
                });
            })->exists();

        if ($conflicting) {
            return response()->json(['message' => 'Conflit d\'affectation d√©tect√©.'], 409);
        }

        $assignment->update($validated);

        return response()->json($assignment);
    }
}
--- FIN DU FICHIER : ./app/Http/Controllers/Api/AssignmentController.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Http/Controllers/Auth/AuthenticatedSessionController.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Http\Controllers\Auth;

use App\Http\Controllers\Controller;
use App\Http\Requests\Auth\LoginRequest;
use App\Providers\RouteServiceProvider;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Illuminate\View\View;

class AuthenticatedSessionController extends Controller
{
    /**
     * Display the login view.
     */
    public function create(): View
    {
        return view('auth.login');
    }

    /**
     * Handle an incoming authentication request.
     */
    public function store(LoginRequest $request): RedirectResponse
    {
        $request->authenticate();

        $request->session()->regenerate();

        return redirect()->intended(RouteServiceProvider::HOME);
    }

    /**
     * Destroy an authenticated session.
     */
    public function destroy(Request $request): RedirectResponse
    {
        Auth::guard('web')->logout();

        $request->session()->invalidate();

        $request->session()->regenerateToken();

        return redirect('/');
    }
}

--- FIN DU FICHIER : ./app/Http/Controllers/Auth/AuthenticatedSessionController.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Http/Controllers/Auth/ConfirmablePasswordController.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Http\Controllers\Auth;

use App\Http\Controllers\Controller;
use App\Providers\RouteServiceProvider;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Illuminate\Validation\ValidationException;
use Illuminate\View\View;

class ConfirmablePasswordController extends Controller
{
    /**
     * Show the confirm password view.
     */
    public function show(): View
    {
        return view('auth.confirm-password');
    }

    /**
     * Confirm the user's password.
     */
    public function store(Request $request): RedirectResponse
    {
        if (! Auth::guard('web')->validate([
            'email' => $request->user()->email,
            'password' => $request->password,
        ])) {
            throw ValidationException::withMessages([
                'password' => __('auth.password'),
            ]);
        }

        $request->session()->put('auth.password_confirmed_at', time());

        return redirect()->intended(RouteServiceProvider::HOME);
    }
}

--- FIN DU FICHIER : ./app/Http/Controllers/Auth/ConfirmablePasswordController.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Http/Controllers/Auth/EmailVerificationNotificationController.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Http\Controllers\Auth;

use App\Http\Controllers\Controller;
use App\Providers\RouteServiceProvider;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;

class EmailVerificationNotificationController extends Controller
{
    /**
     * Send a new email verification notification.
     */
    public function store(Request $request): RedirectResponse
    {
        if ($request->user()->hasVerifiedEmail()) {
            return redirect()->intended(RouteServiceProvider::HOME);
        }

        $request->user()->sendEmailVerificationNotification();

        return back()->with('status', 'verification-link-sent');
    }
}

--- FIN DU FICHIER : ./app/Http/Controllers/Auth/EmailVerificationNotificationController.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Http/Controllers/Auth/EmailVerificationPromptController.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Http\Controllers\Auth;

use App\Http\Controllers\Controller;
use App\Providers\RouteServiceProvider;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;
use Illuminate\View\View;

class EmailVerificationPromptController extends Controller
{
    /**
     * Display the email verification prompt.
     */
    public function __invoke(Request $request): RedirectResponse|View
    {
        return $request->user()->hasVerifiedEmail()
                    ? redirect()->intended(RouteServiceProvider::HOME)
                    : view('auth.verify-email');
    }
}

--- FIN DU FICHIER : ./app/Http/Controllers/Auth/EmailVerificationPromptController.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Http/Controllers/Auth/NewPasswordController.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Http\Controllers\Auth;

use App\Http\Controllers\Controller;
use Illuminate\Auth\Events\PasswordReset;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Hash;
use Illuminate\Support\Facades\Password;
use Illuminate\Support\Str;
use Illuminate\Validation\Rules;
use Illuminate\View\View;

class NewPasswordController extends Controller
{
    /**
     * Display the password reset view.
     */
    public function create(Request $request): View
    {
        return view('auth.reset-password', ['request' => $request]);
    }

    /**
     * Handle an incoming new password request.
     *
     * @throws \Illuminate\Validation\ValidationException
     */
    public function store(Request $request): RedirectResponse
    {
        $request->validate([
            'token' => ['required'],
            'email' => ['required', 'email'],
            'password' => ['required', 'confirmed', Rules\Password::defaults()],
        ]);

        // Here we will attempt to reset the user's password. If it is successful we
        // will update the password on an actual user model and persist it to the
        // database. Otherwise we will parse the error and return the response.
        $status = Password::reset(
            $request->only('email', 'password', 'password_confirmation', 'token'),
            function ($user) use ($request) {
                $user->forceFill([
                    'password' => Hash::make($request->password),
                    'remember_token' => Str::random(60),
                ])->save();

                event(new PasswordReset($user));
            }
        );

        // If the password was successfully reset, we will redirect the user back to
        // the application's home authenticated view. If there is an error we can
        // redirect them back to where they came from with their error message.
        return $status == Password::PASSWORD_RESET
                    ? redirect()->route('login')->with('status', __($status))
                    : back()->withInput($request->only('email'))
                            ->withErrors(['email' => __($status)]);
    }
}

--- FIN DU FICHIER : ./app/Http/Controllers/Auth/NewPasswordController.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Http/Controllers/Auth/PasswordController.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Http\Controllers\Auth;

use App\Http\Controllers\Controller;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Hash;
use Illuminate\Validation\Rules\Password;

class PasswordController extends Controller
{
    /**
     * Update the user's password.
     */
    public function update(Request $request): RedirectResponse
    {
        $validated = $request->validateWithBag('updatePassword', [
            'current_password' => ['required', 'current_password'],
            'password' => ['required', Password::defaults(), 'confirmed'],
        ]);

        $request->user()->update([
            'password' => Hash::make($validated['password']),
        ]);

        return back()->with('status', 'password-updated');
    }
}

--- FIN DU FICHIER : ./app/Http/Controllers/Auth/PasswordController.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Http/Controllers/Auth/PasswordResetLinkController.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Http\Controllers\Auth;

use App\Http\Controllers\Controller;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Password;
use Illuminate\View\View;

class PasswordResetLinkController extends Controller
{
    /**
     * Display the password reset link request view.
     */
    public function create(): View
    {
        return view('auth.forgot-password');
    }

    /**
     * Handle an incoming password reset link request.
     *
     * @throws \Illuminate\Validation\ValidationException
     */
    public function store(Request $request): RedirectResponse
    {
        $request->validate([
            'email' => ['required', 'email'],
        ]);

        // We will send the password reset link to this user. Once we have attempted
        // to send the link, we will examine the response then see the message we
        // need to show to the user. Finally, we'll send out a proper response.
        $status = Password::sendResetLink(
            $request->only('email')
        );

        return $status == Password::RESET_LINK_SENT
                    ? back()->with('status', __($status))
                    : back()->withInput($request->only('email'))
                            ->withErrors(['email' => __($status)]);
    }
}

--- FIN DU FICHIER : ./app/Http/Controllers/Auth/PasswordResetLinkController.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Http/Controllers/Auth/RegisteredUserController.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Http\Controllers\Auth;

use App\Http\Controllers\Controller;
use App\Models\User;
use App\Providers\RouteServiceProvider;
use Illuminate\Auth\Events\Registered;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Hash;
use Illuminate\Validation\Rules; // Assurez-vous que cette importation est pr√©sente

class RegisteredUserController extends Controller
{
    /**
     * Display the registration view.
     */
    public function create(): \Illuminate\View\View // Type de retour ajust√© pour PHP 8+
    {
        return view('auth.register');
    }

    /**
     * Handle an incoming registration request.
     *
     * @throws \Illuminate\Validation\ValidationException
     */
    public function store(Request $request): RedirectResponse
    {
        $request->validate([
            'first_name' => ['required', 'string', 'max:255'],
            'last_name' => ['required', 'string', 'max:255'],
            'email' => ['required', 'string', 'lowercase', 'email', 'max:255', 'unique:'.User::class],
            'phone' => ['nullable', 'string', 'max:50', 'unique:'.User::class], // R√®gle unique pour le t√©l√©phone aussi
            'password' => ['required', 'confirmed', Rules\Password::defaults()],
        ]);

        // Le champ 'name' sera automatiquement rempli par UserObserver
        // lors de l'√©v√©nement 'saving' ou 'creating'.
        $user = User::create([
            'first_name' => $request->first_name,
            'last_name' => $request->last_name,
            'email' => $request->email,
            'phone' => $request->phone,
            'password' => Hash::make($request->password),
        ]);

        event(new Registered($user));

        Auth::login($user);

        return redirect(RouteServiceProvider::HOME);
    }
}

--- FIN DU FICHIER : ./app/Http/Controllers/Auth/RegisteredUserController.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Http/Controllers/Auth/VerifyEmailController.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Http\Controllers\Auth;

use App\Http\Controllers\Controller;
use App\Providers\RouteServiceProvider;
use Illuminate\Auth\Events\Verified;
use Illuminate\Foundation\Auth\EmailVerificationRequest;
use Illuminate\Http\RedirectResponse;

class VerifyEmailController extends Controller
{
    /**
     * Mark the authenticated user's email address as verified.
     */
    public function __invoke(EmailVerificationRequest $request): RedirectResponse
    {
        if ($request->user()->hasVerifiedEmail()) {
            return redirect()->intended(RouteServiceProvider::HOME.'?verified=1');
        }

        if ($request->user()->markEmailAsVerified()) {
            event(new Verified($request->user()));
        }

        return redirect()->intended(RouteServiceProvider::HOME.'?verified=1');
    }
}

--- FIN DU FICHIER : ./app/Http/Controllers/Auth/VerifyEmailController.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Http/Controllers/Controller.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Http\Controllers;

use Illuminate\Foundation\Auth\Access\AuthorizesRequests;
use Illuminate\Foundation\Validation\ValidatesRequests;
use Illuminate\Routing\Controller as BaseController;

class Controller extends BaseController
{
    use AuthorizesRequests, ValidatesRequests;
}

--- FIN DU FICHIER : ./app/Http/Controllers/Controller.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Http/Controllers/ProfileController.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Http\Controllers;

use App\Http\Requests\ProfileUpdateRequest;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Redirect;
use Illuminate\View\View;

class ProfileController extends Controller
{
    /**
     * Display the user's profile form.
     */
    public function edit(Request $request): View
    {
        return view('profile.edit', [
            'user' => $request->user(),
        ]);
    }

    /**
     * Update the user's profile information.
     */

   public function update(ProfileUpdateRequest $request): RedirectResponse
    {
    // La requ√™te $request->validated() contiendra 'first_name', 'last_name', 'email', 'phone'
    // L'UserObserver s'occupera de mettre √† jour 'name'
    $request->user()->fill($request->validated());

    if ($request->user()->isDirty('email')) {
        $request->user()->email_verified_at = null;
    }

    $request->user()->save();

    return Redirect::route('profile.edit')->with('status', 'profile-updated');
   }


    /**
     * Delete the user's account.
     */
    public function destroy(Request $request): RedirectResponse
    {
        $request->validateWithBag('userDeletion', [
            'password' => ['required', 'current_password'],
        ]);

        $user = $request->user();

        Auth::logout();

        $user->delete();

        $request->session()->invalidate();
        $request->session()->regenerateToken();

        return Redirect::to('/');
    }
}

--- FIN DU FICHIER : ./app/Http/Controllers/ProfileController.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Http/Kernel.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Http;

use Illuminate\Foundation\Http\Kernel as HttpKernel;

class Kernel extends HttpKernel
{
    /**
     * üåê MIDDLEWARE GLOBAL DE L'APPLICATION
     */
    protected $middleware = [
        // \App\Http\Middleware\TrustHosts::class,
        \App\Http\Middleware\TrustProxies::class,
        \Illuminate\Http\Middleware\HandleCors::class,
        \App\Http\Middleware\PreventRequestsDuringMaintenance::class,
        \Illuminate\Foundation\Http\Middleware\ValidatePostSize::class,
        \App\Http\Middleware\TrimStrings::class,
        \Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull::class,
    ];

    /**
     * üîó GROUPES DE MIDDLEWARE
     */
    protected $middlewareGroups = [
        'web' => [
            \App\Http\Middleware\EncryptCookies::class,
            \Illuminate\Cookie\Middleware\AddQueuedCookiesToResponse::class,
            \Illuminate\Session\Middleware\StartSession::class,
            \Illuminate\View\Middleware\ShareErrorsFromSession::class,
            \App\Http\Middleware\VerifyCsrfToken::class,
            \Illuminate\Routing\Middleware\SubstituteBindings::class,
        ],

        'api' => [
            // \Laravel\Sanctum\Http\Middleware\EnsureFrontendRequestsAreStateful::class,
            \Illuminate\Routing\Middleware\ThrottleRequests::class.':api',
            \Illuminate\Routing\Middleware\SubstituteBindings::class,
        ],
    ];

    /**
     * üõ°Ô∏è ALIASES DE MIDDLEWARE S√âCURIS√âS
     */
    protected $middlewareAliases = [
        // Middleware Laravel standard
        'auth' => \App\Http\Middleware\Authenticate::class,
        'auth.basic' => \Illuminate\Auth\Middleware\AuthenticateWithBasicAuth::class,
        'auth.session' => \Illuminate\Session\Middleware\AuthenticateSession::class,
        'cache.headers' => \Illuminate\Http\Middleware\SetCacheHeaders::class,
        'can' => \Illuminate\Auth\Middleware\Authorize::class,
        'guest' => \App\Http\Middleware\RedirectIfAuthenticated::class,
        'password.confirm' => \Illuminate\Auth\Middleware\RequirePassword::class,
        'precognitive' => \Illuminate\Foundation\Http\Middleware\HandlePrecognitiveRequests::class,
        'signed' => \App\Http\Middleware\ValidateSignature::class,
        'throttle' => \Illuminate\Routing\Middleware\ThrottleRequests::class,
        'verified' => \Illuminate\Auth\Middleware\EnsureEmailIsVerified::class,
        
        // üõ°Ô∏è MIDDLEWARE SPATIE PERMISSION (existants)
        'role' => \Spatie\Permission\Middleware\RoleMiddleware::class,
        'permission' => \Spatie\Permission\Middleware\PermissionMiddleware::class,
        'role_or_permission' => \Spatie\Permission\Middleware\RoleOrPermissionMiddleware::class,
        
        // üõ°Ô∏è MIDDLEWARE S√âCURIT√â PERSONNALIS√âS (nouveaux)
        'prevent.escalation' => \App\Http\Middleware\PreventPrivilegeEscalation::class,
        'audit.log' => \App\Http\Middleware\AuditUserActions::class,
        'organization.scope' => \App\Http\Middleware\OrganizationScope::class,
        'super.admin.only' => \App\Http\Middleware\SuperAdminOnly::class,
        'same.organization' => \App\Http\Middleware\SameOrganization::class,
    ];
}

--- FIN DU FICHIER : ./app/Http/Kernel.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Http/Middleware/AuditUserActions.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Http\Middleware;

use Closure;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Log;

class AuditUserActions
{
    public function handle(Request $request, Closure $next)
    {
        $response = $next($request);
        
        // Auditer uniquement les actions sensibles
        if ($this->shouldAudit($request)) {
            $this->logUserAction($request, $response);
        }
        
        return $response;
    }
    
    /**
     * D√©terminer si l'action doit √™tre audit√©e
     */
    private function shouldAudit(Request $request): bool
    {
        // Auditer les actions POST, PUT, PATCH, DELETE
        if (!in_array($request->method(), ['POST', 'PUT', 'PATCH', 'DELETE'])) {
            return false;
        }
        
        // Auditer uniquement certaines routes sensibles
        $auditRoutes = [
            'admin.users.',
            'admin.roles.',
            'admin.organizations.',
            'admin.vehicles.',
            'admin.drivers.'
        ];
        
        $routeName = $request->route()->getName();
        
        foreach ($auditRoutes as $pattern) {
            if (strpos($routeName, $pattern) === 0) {
                return true;
            }
        }
        
        return false;
    }
    
    /**
     * Logger l'action utilisateur
     */
    private function logUserAction(Request $request, $response): void
    {
        $user = Auth::user();
        
        if (!$user) {
            return;
        }
        
        $logData = [
            'user_id' => $user->id,
            'user_email' => $user->email,
            'user_role' => $user->getRoleNames()->first(),
            'action' => $request->method(),
            'route' => $request->route()->getName(),
            'url' => $request->fullUrl(),
            'ip' => $request->ip(),
            'user_agent' => $request->userAgent(),
            'timestamp' => now()->toISOString(),
            'status_code' => $response->getStatusCode()
        ];
        
        // Ajouter les donn√©es sensibles si pertinentes
        if (in_array($request->method(), ['POST', 'PUT', 'PATCH'])) {
            $logData['request_data'] = $this->sanitizeRequestData($request->all());
        }
        
        Log::channel('audit')->info('User action', $logData);
    }
    
    /**
     * Nettoyer les donn√©es sensibles du log
     */
    private function sanitizeRequestData(array $data): array
    {
        $sensitive = ['password', 'password_confirmation', 'current_password'];
        
        foreach ($sensitive as $key) {
            if (isset($data[$key])) {
                $data[$key] = '[REDACTED]';
            }
        }
        
        return $data;
    }
}


--- FIN DU FICHIER : ./app/Http/Middleware/AuditUserActions.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Http/Middleware/Authenticate.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Http\Middleware;

use Illuminate\Auth\Middleware\Authenticate as Middleware;
use Illuminate\Http\Request;

class Authenticate extends Middleware
{
    /**
     * Get the path the user should be redirected to when they are not authenticated.
     */
    protected function redirectTo(Request $request): ?string
    {
        return $request->expectsJson() ? null : route('login');
    }
}

--- FIN DU FICHIER : ./app/Http/Middleware/Authenticate.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Http/Middleware/EncryptCookies.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Http\Middleware;

use Illuminate\Cookie\Middleware\EncryptCookies as Middleware;

class EncryptCookies extends Middleware
{
    /**
     * The names of the cookies that should not be encrypted.
     *
     * @var array<int, string>
     */
    protected $except = [
        //
    ];
}

--- FIN DU FICHIER : ./app/Http/Middleware/EncryptCookies.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Http/Middleware/PreventPrivilegeEscalation.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Http\Middleware;

use Closure;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Log;

class PreventPrivilegeEscalation
{
    public function handle(Request $request, Closure $next)
    {
        $user = Auth::user();
        
        // V√©rifier les tentatives d'assignation de r√¥le Super Admin
        if ($request->has('roles') || $request->has('role')) {
            $roles = $request->input('roles', [$request->input('role')]);
            
            foreach ($roles as $roleIdOrName) {
                // D√©tecter tentative d'assignation Super Admin par non-Super Admin
                if ((is_string($roleIdOrName) && $roleIdOrName === 'Super Admin') ||
                    (is_numeric($roleIdOrName) && $this->isRoleIdSuperAdmin($roleIdOrName))) {
                    
                    if (!$user->hasRole('Super Admin')) {
                        Log::warning('Tentative d\'escalation de privil√®ges bloqu√©e', [
                            'user' => $user->email,
                            'attempted_role' => $roleIdOrName,
                            'ip' => $request->ip(),
                            'route' => $request->route()->getName()
                        ]);
                        
                        abort(403, 'Tentative d\'escalation de privil√®ges d√©tect√©e et bloqu√©e.');
                    }
                }
            }
        }
        
        return $next($request);
    }
    
    private function isRoleIdSuperAdmin($roleId): bool
    {
        try {
            $role = \Spatie\Permission\Models\Role::find($roleId);
            return $role && $role->name === 'Super Admin';
        } catch (\Exception $e) {
            return false;
        }
    }
}


--- FIN DU FICHIER : ./app/Http/Middleware/PreventPrivilegeEscalation.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Http/Middleware/PreventRequestsDuringMaintenance.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Http\Middleware;

use Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance as Middleware;

class PreventRequestsDuringMaintenance extends Middleware
{
    /**
     * The URIs that should be reachable while maintenance mode is enabled.
     *
     * @var array<int, string>
     */
    protected $except = [
        //
    ];
}

--- FIN DU FICHIER : ./app/Http/Middleware/PreventRequestsDuringMaintenance.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Http/Middleware/RedirectIfAuthenticated.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Http\Middleware;

use App\Providers\RouteServiceProvider;
use Closure;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Symfony\Component\HttpFoundation\Response;

class RedirectIfAuthenticated
{
    /**
     * Handle an incoming request.
     *
     * @param  \Closure(\Illuminate\Http\Request): (\Symfony\Component\HttpFoundation\Response)  $next
     */
    public function handle(Request $request, Closure $next, string ...$guards): Response
    {
        $guards = empty($guards) ? [null] : $guards;

        foreach ($guards as $guard) {
            if (Auth::guard($guard)->check()) {
                return redirect(RouteServiceProvider::HOME);
            }
        }

        return $next($request);
    }
}

--- FIN DU FICHIER : ./app/Http/Middleware/RedirectIfAuthenticated.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Http/Middleware/TrimStrings.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Http\Middleware;

use Illuminate\Foundation\Http\Middleware\TrimStrings as Middleware;

class TrimStrings extends Middleware
{
    /**
     * The names of the attributes that should not be trimmed.
     *
     * @var array<int, string>
     */
    protected $except = [
        'current_password',
        'password',
        'password_confirmation',
    ];
}

--- FIN DU FICHIER : ./app/Http/Middleware/TrimStrings.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Http/Middleware/TrustHosts.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Http\Middleware;

use Illuminate\Http\Middleware\TrustHosts as Middleware;

class TrustHosts extends Middleware
{
    /**
     * Get the host patterns that should be trusted.
     *
     * @return array<int, string|null>
     */
    public function hosts(): array
    {
        return [
            $this->allSubdomainsOfApplicationUrl(),
        ];
    }
}

--- FIN DU FICHIER : ./app/Http/Middleware/TrustHosts.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Http/Middleware/TrustProxies.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Http\Middleware;

use Illuminate\Http\Middleware\TrustProxies as Middleware;
use Illuminate\Http\Request;

class TrustProxies extends Middleware
{
    /**
     * The trusted proxies for this application.
     *
     * @var array<int, string>|string|null
     */
    protected $proxies;

    /**
     * The headers that should be used to detect proxies.
     *
     * @var int
     */
    protected $headers =
        Request::HEADER_X_FORWARDED_FOR |
        Request::HEADER_X_FORWARDED_HOST |
        Request::HEADER_X_FORWARDED_PORT |
        Request::HEADER_X_FORWARDED_PROTO |
        Request::HEADER_X_FORWARDED_AWS_ELB;
}

--- FIN DU FICHIER : ./app/Http/Middleware/TrustProxies.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Http/Middleware/ValidateSignature.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Http\Middleware;

use Illuminate\Routing\Middleware\ValidateSignature as Middleware;

class ValidateSignature extends Middleware
{
    /**
     * The names of the query string parameters that should be ignored.
     *
     * @var array<int, string>
     */
    protected $except = [
        // 'fbclid',
        // 'utm_campaign',
        // 'utm_content',
        // 'utm_medium',
        // 'utm_source',
        // 'utm_term',
    ];
}

--- FIN DU FICHIER : ./app/Http/Middleware/ValidateSignature.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Http/Middleware/VerifyCsrfToken.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Http\Middleware;

use Illuminate\Foundation\Http\Middleware\VerifyCsrfToken as Middleware;

class VerifyCsrfToken extends Middleware
{
    /**
     * The URIs that should be excluded from CSRF verification.
     *
     * @var array<int, string>
     */
    protected $except = [
        //
    ];
}

--- FIN DU FICHIER : ./app/Http/Middleware/VerifyCsrfToken.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Http/Requests/Admin/Assignment/StoreAssignmentRequest.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Http\Requests\Admin\Assignment;

use Illuminate\Foundation\Http\FormRequest;

class StoreAssignmentRequest extends FormRequest
{
    /**
     * Determine if the user is authorized to make this request.
     */
    public function authorize(): bool
    {
        // L'utilisateur doit avoir la permission de cr√©er des affectations.
        return $this->user()->can('create assignments');
    }

    /**
     * Get the validation rules that apply to the request.
     *
     * @return array<string, \Illuminate\Contracts\Validation\ValidationRule|array<mixed>|string>
     */
    public function rules(): array
    {
        return [
            'vehicle_id' => ['required', 'exists:vehicles,id'],
            'driver_id' => ['required', 'exists:drivers,id'],
            'start_datetime' => ['required', 'date'],
            'start_mileage' => ['required', 'integer', 'min:0'],
            'reason' => ['nullable', 'string', 'max:1000'],
            'notes' => ['nullable', 'string', 'max:1000'],
        ];
    }
}

--- FIN DU FICHIER : ./app/Http/Requests/Admin/Assignment/StoreAssignmentRequest.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Http/Requests/Admin/Driver/StoreDriverRequest.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Http\Requests\Admin\Driver;

use Illuminate\Foundation\Http\FormRequest;
use Illuminate\Validation\Rule;

class StoreDriverRequest extends FormRequest
{
    /**
     * D√©termine si l'utilisateur est autoris√© √† faire cette requ√™te.
     */
    public function authorize(): bool
    {
        return $this->user()->can('create drivers');
    }

    /**
     * R√©cup√®re les r√®gles de validation qui s'appliquent √† la requ√™te.
     */
    public function rules(): array
    {
        return [
            // √âtape 1
            'first_name' => ['required', 'string', 'max:255'],
            'last_name' => ['required', 'string', 'max:255'],
            'birth_date' => ['nullable', 'date'],
            'personal_phone' => ['nullable', 'string', 'max:50'],
            'address' => ['nullable', 'string', 'max:1000'],
            'blood_type' => ['nullable', 'string', 'max:10'],
            'photo' => ['nullable', 'image', 'mimes:jpeg,png,jpg,gif', 'max:2048'],
            'personal_email' => ['nullable', 'string', 'email', 'max:255'],

            // √âtape 2
            'employee_number' => ['nullable', 'string', 'max:100', Rule::unique('drivers')->whereNull('deleted_at')],
            'recruitment_date' => ['nullable', 'date'],
            'contract_end_date' => ['nullable', 'date', 'after_or_equal:recruitment_date'],
            'status_id' => ['required', 'exists:driver_statuses,id'],
            'user_id' => ['nullable', 'sometimes', 'exists:users,id', Rule::unique('drivers')->whereNull('deleted_at')],

            // √âtape 3
            'license_number' => ['nullable', 'string', 'max:100'],
            'license_category' => ['nullable', 'string', 'max:50'],
            'license_issue_date' => ['nullable', 'date'],
            'license_authority' => ['nullable', 'string', 'max:255'],
            'emergency_contact_name' => ['nullable', 'string', 'max:255'],
            'emergency_contact_phone' => ['nullable', 'string', 'max:50'],
        ];
    }
}

--- FIN DU FICHIER : ./app/Http/Requests/Admin/Driver/StoreDriverRequest.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Http/Requests/Admin/Driver/UpdateDriverRequest.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Http\Requests\Admin\Driver;

use Illuminate\Foundation\Http\FormRequest;
use Illuminate\Validation\Rule;

class UpdateDriverRequest extends FormRequest
{
    public function authorize(): bool
    {
        return $this->user()->can('edit drivers');
    }

    public function rules(): array
    {
        $driverId = $this->route('driver')->id;

        return [
            'first_name' => ['required', 'string', 'max:255'],
            'last_name' => ['required', 'string', 'max:255'],
            'employee_number' => ['nullable', 'string', 'max:100', Rule::unique('drivers')->ignore($driverId)->whereNull('deleted_at')],
            'user_id' => ['nullable', 'sometimes', 'exists:users,id', Rule::unique('drivers')->ignore($driverId)->whereNull('deleted_at')],
            'status_id' => ['required', 'exists:driver_statuses,id'],
            // ... (toutes les autres r√®gles identiques √† StoreDriverRequest)
            'photo' => ['nullable', 'image', 'mimes:jpeg,png,jpg,gif', 'max:2048'],
            'blood_type' => ['nullable', 'string', 'max:10'],
            'birth_date' => ['nullable', 'date'],
            'personal_phone' => ['nullable', 'string', 'max:50'],
            'address' => ['nullable', 'string', 'max:1000'],
            'recruitment_date' => ['nullable', 'date'],
            'contract_end_date' => ['nullable', 'date', 'after_or_equal:recruitment_date'],
            'license_number' => ['nullable', 'string', 'max:100'],
            'license_category' => ['nullable', 'string', 'max:50'],
            'license_issue_date' => ['nullable', 'date'],
            'license_authority' => ['nullable', 'string', 'max:255'],
            'emergency_contact_name' => ['nullable', 'string', 'max:255'],
            'emergency_contact_phone' => ['nullable', 'string', 'max:50'],
            'personal_email' => ['nullable', 'string', 'email', 'max:255'],


        ];
    }
}

--- FIN DU FICHIER : ./app/Http/Requests/Admin/Driver/UpdateDriverRequest.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Http/Requests/Admin/Organization/StoreOrganizationRequest.php
////////////////////////////////////////////////////////////////

<?php
namespace App\Http\Requests\Admin\Organization;
use Illuminate\Foundation\Http\FormRequest;
class StoreOrganizationRequest extends FormRequest
{
    public function authorize(): bool { return $this->user()->can('create organizations'); }
    public function rules(): array {
        return [ 'name' => 'required|string|max:255|unique:organizations,name' ];
    }
}

--- FIN DU FICHIER : ./app/Http/Requests/Admin/Organization/StoreOrganizationRequest.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Http/Requests/Admin/Organization/UpdateOrganizationRequest.php
////////////////////////////////////////////////////////////////

<?php
namespace App\Http\Requests\Admin\Organization;
use Illuminate\Foundation\Http\FormRequest;
use Illuminate\Validation\Rule;
class UpdateOrganizationRequest extends FormRequest
{
    public function authorize(): bool { return $this->user()->can('edit organizations'); }
    public function rules(): array {
        $organizationId = $this->route('organization')->id;
        return [ 'name' => ['required','string','max:255', Rule::unique('organizations')->ignore($organizationId)] ];
    }
}

--- FIN DU FICHIER : ./app/Http/Requests/Admin/Organization/UpdateOrganizationRequest.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Http/Requests/Admin/Supplier/StoreSupplierRequest.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Http\Requests\Admin\Supplier;

use Illuminate\Foundation\Http\FormRequest;
use Illuminate\Validation\Rule;

class StoreSupplierRequest extends FormRequest
{
    /**
     * D√©termine si l'utilisateur est autoris√© √† effectuer cette requ√™te.
     */
    public function authorize(): bool
    {
        // Seuls les utilisateurs avec la permission peuvent cr√©er des fournisseurs.
        // Nous cr√©erons cette permission plus tard.
        return $this->user()->can('create suppliers');
    }

    /**
     * Obtient les r√®gles de validation qui s'appliquent √† la requ√™te.
     */
    public function rules(): array
    {
        return [
            'name' => ['required', 'string', 'max:255'],
            'contact_name' => ['nullable', 'string', 'max:255'],
            'phone' => ['nullable', 'string', 'regex:/^[\+\d\s\(\)-]{8,20}$/'],
            'email' => ['nullable', 'email:rfc,dns', 'max:255', Rule::unique('suppliers', 'email')],
            'address' => ['nullable', 'string'],
            'supplier_category_id' => ['nullable', 'exists:supplier_categories,id'],
        ];
    }
}
--- FIN DU FICHIER : ./app/Http/Requests/Admin/Supplier/StoreSupplierRequest.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Http/Requests/Admin/Supplier/UpdateSupplierRequest.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Http\Requests\Admin\Supplier;

use Illuminate\Foundation\Http\FormRequest;
use Illuminate\Validation\Rule;

class UpdateSupplierRequest extends FormRequest
{
    /**
     * D√©termine si l'utilisateur est autoris√© √† effectuer cette requ√™te.
     */
    public function authorize(): bool
    {
        return $this->user()->can('edit suppliers');
    }

    /**
     * Obtient les r√®gles de validation qui s'appliquent √† la requ√™te.
     */
    public function rules(): array
    {
        $supplierId = $this->route('supplier')->id;

        return [
            'name' => ['required', 'string', 'max:255'],
            'contact_name' => ['nullable', 'string', 'max:255'],
            'phone' => ['nullable', 'string', 'regex:/^[\+\d\s\(\)-]{8,20}$/'],
            'email' => ['nullable', 'email:rfc,dns', 'max:255', Rule::unique('suppliers', 'email')->ignore($supplierId)],
            'address' => ['nullable', 'string'],
            'supplier_category_id' => ['nullable', 'exists:supplier_categories,id'],
        ];
    }
}
--- FIN DU FICHIER : ./app/Http/Requests/Admin/Supplier/UpdateSupplierRequest.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Http/Requests/Admin/SupplierCategory/StoreSupplierCategoryRequest.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Http\Requests\Admin\SupplierCategory;

use Illuminate\Foundation\Http\FormRequest;

class StoreSupplierCategoryRequest extends FormRequest
{
    /**
     * Determine if the user is authorized to make this request.
     */
    public function authorize(): bool
    {
        // We'll rely on the controller's authorization for now
        return true;
    }

    /**
     * Get the validation rules that apply to the request.
     *
     * @return array<string, \Illuminate\Contracts\Validation\ValidationRule|array|string>
     */
    public function rules(): array
    {
        return [
            'name' => 'required|string|max:255|unique:supplier_categories,name',
        ];
    }
}
--- FIN DU FICHIER : ./app/Http/Requests/Admin/SupplierCategory/StoreSupplierCategoryRequest.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Http/Requests/Admin/Vehicle/StoreVehicleRequest.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Http\Requests\Admin\Vehicle;

use Illuminate\Foundation\Http\FormRequest;
use Illuminate\Validation\Rule;

class StoreVehicleRequest extends FormRequest
{
    /**
     * D√©termine si l'utilisateur est autoris√© √† faire cette requ√™te.
     */
    public function authorize(): bool
    {
        return $this->user()->can('create vehicles');
    }

    /**
     * R√©cup√®re les r√®gles de validation qui s'appliquent √† la requ√™te.
     */
    public function rules(): array
    {
        return [
            'registration_plate' => ['required', 'string', 'max:50', Rule::unique('vehicles')->whereNull('deleted_at')],
            'vin' => ['nullable', 'string', 'size:17', Rule::unique('vehicles')->whereNull('deleted_at')],
            'brand' => ['required', 'string', 'max:100'],
            'model' => ['required', 'string', 'max:100'],
            'color' => ['nullable', 'string', 'max:50'],
            'vehicle_type_id' => ['required', 'exists:vehicle_types,id'],
            'fuel_type_id' => ['required', 'exists:fuel_types,id'],
            'transmission_type_id' => ['required', 'exists:transmission_types,id'],
            'status_id' => ['required', 'exists:vehicle_statuses,id'],
            'manufacturing_year' => ['nullable', 'integer', 'digits:4', 'min:1950', 'max:'.(date('Y') + 1)],
            'acquisition_date' => ['nullable', 'date'],
            'purchase_price' => ['nullable', 'numeric', 'min:0'],
            'current_value' => ['nullable', 'numeric', 'min:0'],
            'initial_mileage' => ['nullable', 'integer', 'min:0'],
            'current_mileage' => ['nullable', 'integer', 'min:0', 'gte:initial_mileage'], // This rule is for creation, should be initial_mileage
            'engine_displacement_cc' => ['nullable', 'integer', 'min:0'],
            'power_hp' => ['nullable', 'integer', 'min:0'],
            'seats' => ['nullable', 'integer', 'min:1'],
            'notes' => ['nullable', 'string'],
            'photo' => ['nullable', 'image', 'mimes:jpeg,png,jpg,gif', 'max:2048'],
        ];
    }
}


--- FIN DU FICHIER : ./app/Http/Requests/Admin/Vehicle/StoreVehicleRequest.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Http/Requests/Admin/Vehicle/UpdateVehicleRequest.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Http\Requests\Admin\Vehicle;

use Illuminate\Foundation\Http\FormRequest;
use Illuminate\Validation\Rule;

class UpdateVehicleRequest extends FormRequest
{
    public function authorize(): bool
    {
        return $this->user()->can('edit vehicles');
    }

    public function rules(): array
    {
        $vehicleId = $this->route('vehicle')->id;

        return [
            'registration_plate' => ['required', 'string', 'max:50', Rule::unique('vehicles')->ignore($vehicleId)->whereNull('deleted_at')],
            'vin' => ['nullable', 'string', 'size:17', Rule::unique('vehicles')->ignore($vehicleId)->whereNull('deleted_at')],
            'brand' => ['required', 'string', 'max:100'],
            'model' => ['required', 'string', 'max:100'],
            'color' => ['nullable', 'string', 'max:50'],
            'vehicle_type_id' => ['required', 'exists:vehicle_types,id'],
            'fuel_type_id' => ['required', 'exists:fuel_types,id'],
            'transmission_type_id' => ['required', 'exists:transmission_types,id'],
            'status_id' => ['required', 'exists:vehicle_statuses,id'],
            'manufacturing_year' => ['nullable', 'integer', 'digits:4', 'min:1950', 'max:'.(date('Y') + 1)],
            'acquisition_date' => ['nullable', 'date'],
            'purchase_price' => ['nullable', 'numeric', 'min:0'],
            'current_value' => ['nullable', 'numeric', 'min:0'],
            'initial_mileage' => ['nullable', 'integer', 'min:0'],
            'current_mileage' => ['nullable', 'integer', 'min:0', 'gte:' . $this->route('vehicle')->current_mileage],
            'engine_displacement_cc' => ['nullable', 'integer', 'min:0'],
            'power_hp' => ['nullable', 'integer', 'min:0'],
            'seats' => ['nullable', 'integer', 'min:1'],
            'notes' => ['nullable', 'string'],
            'photo' => ['nullable', 'image', 'mimes:jpeg,png,jpg,gif', 'max:2048'],
        ];
    }
}



--- FIN DU FICHIER : ./app/Http/Requests/Admin/Vehicle/UpdateVehicleRequest.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Http/Requests/Auth/LoginRequest.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Http\Requests\Auth;

use Illuminate\Auth\Events\Lockout;
use Illuminate\Foundation\Http\FormRequest;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\RateLimiter;
use Illuminate\Support\Str;
use Illuminate\Validation\ValidationException;

class LoginRequest extends FormRequest
{
    /**
     * Determine if the user is authorized to make this request.
     */
    public function authorize(): bool
    {
        return true;
    }

    /**
     * Get the validation rules that apply to the request.
     *
     * @return array<string, \Illuminate\Contracts\Validation\Rule|array|string>
     */
    public function rules(): array
    {
        return [
            'email' => ['required', 'string', 'email'],
            'password' => ['required', 'string'],
        ];
    }

    /**
     * Attempt to authenticate the request's credentials.
     *
     * @throws \Illuminate\Validation\ValidationException
     */
    public function authenticate(): void
    {
        $this->ensureIsNotRateLimited();

        if (! Auth::attempt($this->only('email', 'password'), $this->boolean('remember'))) {
            RateLimiter::hit($this->throttleKey());

            throw ValidationException::withMessages([
                'email' => trans('auth.failed'),
            ]);
        }

        RateLimiter::clear($this->throttleKey());
    }

    /**
     * Ensure the login request is not rate limited.
     *
     * @throws \Illuminate\Validation\ValidationException
     */
    public function ensureIsNotRateLimited(): void
    {
        if (! RateLimiter::tooManyAttempts($this->throttleKey(), 5)) {
            return;
        }

        event(new Lockout($this));

        $seconds = RateLimiter::availableIn($this->throttleKey());

        throw ValidationException::withMessages([
            'email' => trans('auth.throttle', [
                'seconds' => $seconds,
                'minutes' => ceil($seconds / 60),
            ]),
        ]);
    }

    /**
     * Get the rate limiting throttle key for the request.
     */
    public function throttleKey(): string
    {
        return Str::transliterate(Str::lower($this->string('email')).'|'.$this->ip());
    }
}

--- FIN DU FICHIER : ./app/Http/Requests/Auth/LoginRequest.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Http/Requests/ProfileUpdateRequest.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Http\Requests;

use App\Models\User;
use Illuminate\Foundation\Http\FormRequest;
use Illuminate\Validation\Rule;

class ProfileUpdateRequest extends FormRequest
{
    /**
     * Get the validation rules that apply to the request.
     *
     * @return array<string, \Illuminate\Contracts\Validation\Rule|array|string>
     */
    
public function rules(): array
{
    return [
        'first_name' => ['required', 'string', 'max:255'],
        'last_name' => ['required', 'string', 'max:255'],
        // 'name' => ['required', 'string', 'max:255'], // On peut supprimer cette ligne
        'email' => ['required', 'string', 'lowercase', 'email', 'max:255', Rule::unique(User::class)->ignore($this->user()->id)],
        'phone' => ['nullable', 'string', 'max:50', Rule::unique(User::class)->ignore($this->user()->id)],
    ];
}

}

--- FIN DU FICHIER : ./app/Http/Requests/ProfileUpdateRequest.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Logging/CustomTeamsLogger.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Logging;

use Monolog\Logger;
use Monolog\Handler\CurlHandler;
use Illuminate\Support\Facades\Log;

class CustomTeamsLogger
{
    public function __invoke(array $config): Logger
    {
        $logger = new Logger('teams');
        
        // Valider l'URL avant de cr√©er le handler
        if (empty($config['url']) || !filter_var($config['url'], FILTER_VALIDATE_URL)) {
            Log::channel('daily')->warning('Teams webhook URL is invalid or empty, falling back to daily log');
            return Log::channel('daily')->getLogger();
        }
        
        try {
            $handler = new CurlHandler($config['url']);
            $handler->setLevel($config['level'] ?? 'error');
            $logger->pushHandler($handler);
        } catch (\Exception $e) {
            Log::channel('daily')->error('Failed to create Teams logger: ' . $e->getMessage());
            return Log::channel('daily')->getLogger();
        }
        
        return $logger;
    }
}


--- FIN DU FICHIER : ./app/Logging/CustomTeamsLogger.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Models/Assignment.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Models;

use App\Models\Concerns\BelongsToOrganization;
use App\Models\Handover\VehicleHandoverForm;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\SoftDeletes;
// CORRECTION : Ajout des bons namespaces pour les relations
use Illuminate\Database\Eloquent\Relations\BelongsTo;
use Illuminate\Database\Eloquent\Relations\HasOne;

class Assignment extends Model
{
    use HasFactory, SoftDeletes, BelongsToOrganization;

    protected $fillable = [
        'vehicle_id', 'driver_id', 'start_datetime', 'end_datetime', 'start_mileage',
        'end_mileage', 'reason', 'notes', 'created_by_user_id', 'organization_id',
    ];

    protected $casts = [
        'start_datetime' => 'datetime',
        'end_datetime' => 'datetime',
    ];

    // CORRECTION : Ajout des bons types de retour
    public function vehicle(): BelongsTo
    {
        return $this->belongsTo(Vehicle::class);
    }

    public function driver(): BelongsTo
    {
        return $this->belongsTo(Driver::class);
    }

    public function creator(): BelongsTo
    {
        return $this->belongsTo(User::class, 'created_by_user_id');
    }

    public function handoverForm(): HasOne
    {
        return $this->hasOne(VehicleHandoverForm::class);
    }
}
--- FIN DU FICHIER : ./app/Models/Assignment.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Models/Concerns/BelongsToOrganization.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Models\Concerns;

use App\Models\Organization;
use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Relations\BelongsTo;
use Illuminate\Support\Facades\Auth;

trait BelongsToOrganization
{
    protected static function bootBelongsToOrganization()
    {
        // Filtre automatiquement toutes les requ√™tes de LECTURE
        static::addGlobalScope('organization', function (Builder $builder) {
            if (Auth::check() && Auth::user()->organization_id) {
                // Le Super Admin n'est PAS filtr√©, il voit tout.
                if (!Auth::user()->hasRole('Super Admin')) {
                    $builder->where($builder->getModel()->getTable() . '.organization_id', Auth::user()->organization_id);
                }
            }
        });

        // Lie automatiquement chaque NOUVEL enregistrement √† l'organisation de l'utilisateur
        static::creating(function (Model $model) {
            if (Auth::check() && !isset($model->organization_id)) {
                $model->organization_id = Auth::user()->organization_id;
            }
        });
    }

    public function organization(): BelongsTo
    {
        return $this->belongsTo(Organization::class);
    }
}
--- FIN DU FICHIER : ./app/Models/Concerns/BelongsToOrganization.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Models/Document.php
////////////////////////////////////////////////////////////////

<?php

// app/Models/Document.php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Relations\BelongsTo;
use Illuminate\Database\Eloquent\Relations\MorphToMany;
use Illuminate\Support\Str;

class Document extends Model
{
    use HasFactory;

    protected $fillable = [
        'uuid',
        'organization_id',
        'document_category_id',
        'user_id',
        'file_path',
        'original_filename',
        'mime_type',
        'size_in_bytes',
        'issue_date',
        'expiry_date',
        'description',
        'extra_metadata',
    ];

    protected $casts = [
        'issue_date' => 'date',
        'expiry_date' => 'date',
        'extra_metadata' => 'array',
        'size_in_bytes' => 'integer',
    ];

    /**
     * Boot the model.
     */
    protected static function boot()
    {
        parent::boot();
        // Automatically generate a UUID when creating a new document
        static::creating(function ($model) {
            if (empty($model->uuid)) {
                $model->uuid = (string) Str::uuid();
            }
        });
    }

    /**
     * Get the organization that owns the document.
     */
    public function organization(): BelongsTo
    {
        return $this->belongsTo(Organization::class);
    }

    /**
     * Get the category of the document.
     */
    public function category(): BelongsTo
    {
        return $this->belongsTo(DocumentCategory::class, 'document_category_id');
    }

    /**
     * Get the user who uploaded the document.
     */
    public function uploader(): BelongsTo
    {
        return $this->belongsTo(User::class, 'user_id');
    }

    /**
     * Get all of the vehicles that are assigned this document.
     */
    public function vehicles(): MorphToMany
    {
        return $this->morphedByMany(Vehicle::class, 'documentable');
    }

    /**
     * Get all of the users (drivers, etc.) that are assigned this document.
     */
    public function users(): MorphToMany
    {
        return $this->morphedByMany(User::class, 'documentable');
    }

    /**
     * Get all of the suppliers that are assigned this document.
     */
    public function suppliers(): MorphToMany
    {
        return $this->morphedByMany(Supplier::class, 'documentable');
    }
    
    /**
     * Get the human-readable file size.
     */
    public function getFormattedSizeAttribute(): string
    {
        $bytes = $this->size_in_bytes;
        $units = ['B', 'KB', 'MB', 'GB', 'TB'];
        if ($bytes == 0) {
            return '0 ' . $units[0];
        }
        $i = floor(log($bytes, 1024));
        return round($bytes / (1024 ** $i), 2) . ' ' . $units[$i];
    }
}

--- FIN DU FICHIER : ./app/Models/Document.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Models/DocumentCategory.php
////////////////////////////////////////////////////////////////

<?php

// app/Models/DocumentCategory.php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Relations\BelongsTo;
use Illuminate\Database\Eloquent\Relations\HasMany;

class DocumentCategory extends Model
{
    use HasFactory;

    protected $fillable = [
        'organization_id',
        'name',
        'description',
        'is_active',
        'is_default',
        'meta_schema',
    ];

    protected $casts = [
        'is_active' => 'boolean',
        'is_default' => 'boolean',
        'meta_schema' => 'array',
    ];

    /**
     * Get the organization that owns the document category.
     */
    public function organization(): BelongsTo
    {
        return $this->belongsTo(Organization::class);
    }

    /**
     * Get the documents for the document category.
     */
    public function documents(): HasMany
    {
        return $this->hasMany(Document::class);
    }
}

--- FIN DU FICHIER : ./app/Models/DocumentCategory.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Models/Driver.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Models;

use App\Models\Concerns\BelongsToOrganization;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\SoftDeletes;
// CORRECTION : Ajout des bons namespaces pour les relations
use Illuminate\Database\Eloquent\Relations\BelongsTo;
use Illuminate\Database\Eloquent\Relations\HasMany;

class Driver extends Model
{
    use HasFactory, SoftDeletes, BelongsToOrganization;

    protected $fillable = [
        'user_id', 'employee_number', 'first_name', 'last_name', 'photo_path', 'birth_date',
        'blood_type', 'address', 'personal_phone', 'personal_email', 'license_number',
        'license_category', 'license_issue_date', 'license_authority', 'license_expiry_date',
        'recruitment_date', 'contract_end_date', 'status_id', 'emergency_contact_name',
        'emergency_contact_phone', 'organization_id',
    ];

    protected $casts = [
        'birth_date' => 'date',
        'license_issue_date' => 'date',
        'license_expiry_date' => 'date',
        'recruitment_date' => 'date',
        'contract_end_date' => 'date',
    ];

    // CORRECTION : Ajout des bons types de retour
    public function user(): BelongsTo
    {
        return $this->belongsTo(User::class);
    }

    public function driverStatus(): BelongsTo
    {
        return $this->belongsTo(DriverStatus::class, 'status_id');
    }

    public function assignments(): HasMany
    {
        return $this->hasMany(Assignment::class);
    }

    /**
     * V√©rifie si le chauffeur a une affectation actuellement en cours.
     */
    public function isCurrentlyAssigned(): bool
    {
       return $this->assignments()->whereNull('end_datetime')->exists();
    }

    /**
     * Get the user's full name.
     *
     * @return string
     */
    public function getFullNameAttribute(): string
    {
        return "{$this->first_name} {$this->last_name}";
    }
}
--- FIN DU FICHIER : ./app/Models/Driver.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Models/DriverStatus.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class DriverStatus extends Model
{
    use HasFactory;
    public $timestamps = false;
    protected $fillable = ['name'];
}

--- FIN DU FICHIER : ./app/Models/DriverStatus.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Models/FuelType.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class FuelType extends Model
{
    use HasFactory;

    // Indique √† Laravel que ce mod√®le n'utilise pas les colonnes created_at et updated_at.
    public $timestamps = false;

    // D√©finit le champ 'name' comme √©tant assignable en masse.
    protected $fillable = ['name'];
}

--- FIN DU FICHIER : ./app/Models/FuelType.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Models/Handover/VehicleHandoverDetail.php
////////////////////////////////////////////////////////////////

<?php
namespace App\Models\Handover;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Relations\BelongsTo;

class VehicleHandoverDetail extends Model
{
    use HasFactory;
    public $timestamps = false;
    protected $fillable = ['handover_form_id', 'category', 'item', 'status'];
    public function handoverForm(): BelongsTo { return $this->belongsTo(VehicleHandoverForm::class, 'handover_form_id'); }
}

--- FIN DU FICHIER : ./app/Models/Handover/VehicleHandoverDetail.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Models/Handover/VehicleHandoverForm.php
////////////////////////////////////////////////////////////////

<?php
namespace App\Models\Handover;

use App\Models\Concerns\BelongsToOrganization;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\SoftDeletes;

// --- D√âBUT DES CORRECTIONS ---
use App\Models\Assignment; // 1. Indique √† PHP o√π trouver le mod√®le Assignment
use Illuminate\Database\Eloquent\Relations\BelongsTo; // 2. Corrige le type-hint pour la relation BelongsTo
use Illuminate\Database\Eloquent\Relations\HasMany;   // 3. Corrige le type-hint pour la relation HasMany
// --- FIN DES CORRECTIONS ---

class VehicleHandoverForm extends Model
{
    use HasFactory, SoftDeletes, BelongsToOrganization;

    protected $fillable = [
        'assignment_id', 'issue_date', 'current_mileage', 'general_observations',
        'additional_observations', 'signed_form_path', 'organization_id',
    ];

    protected $casts = ['issue_date' => 'date'];

    /**
     * Relation: Une fiche de remise appartient √† une affectation.
     * CORRECTION: Ajout du bon type de retour (BelongsTo)
     */
    public function assignment(): BelongsTo
    {
        return $this->belongsTo(Assignment::class);
    }

    /**
     * Relation: Une fiche de remise a plusieurs lignes de d√©tail.
     * CORRECTION: Ajout du bon type de retour (HasMany)
     */
    public function details(): HasMany
    {
        return $this->hasMany(VehicleHandoverDetail::class, 'handover_form_id');
    }

    /**
     * Mark this handover form as the latest version and mark others as obsolete.
     */
    public function markAsLatestVersion()
    {
        // Mark all other handover forms for this assignment as not latest
        static::where('assignment_id', $this->assignment_id)
            ->where('id', '!=', $this->id)
            ->update(['is_latest_version' => false]);

        // Mark this one as latest
        $this->update(['is_latest_version' => true]);
    }
}
--- FIN DU FICHIER : ./app/Models/Handover/VehicleHandoverForm.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Models/Maintenance/MaintenanceLog.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Models\Maintenance;

use App\Models\Concerns\BelongsToOrganization;
use App\Models\Vehicle;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\SoftDeletes;
// CORRECTION : Ajout du bon namespace pour la relation
use Illuminate\Database\Eloquent\Relations\BelongsTo;

class MaintenanceLog extends Model
{
    use HasFactory; // Le SoftDeletes est d√©j√† dans la migration mais on peut l'ajouter ici pour la coh√©rence
    use BelongsToOrganization, SoftDeletes;

    protected $fillable = [
        'vehicle_id', 'maintenance_plan_id', 'maintenance_type_id', 'maintenance_status_id',
        'performed_on_date', 'performed_at_mileage', 'cost', 'details', 'performed_by', 'organization_id',
    ];

    protected $casts = [
        'performed_on_date' => 'date',
        'cost' => 'decimal:2',
    ];

    // CORRECTION : Ajout des bons types de retour
    public function vehicle(): BelongsTo
    {
        return $this->belongsTo(Vehicle::class);
    }

    public function maintenancePlan(): BelongsTo
    {
        return $this->belongsTo(MaintenancePlan::class);
    }

    public function maintenanceType(): BelongsTo
    {
        return $this->belongsTo(MaintenanceType::class);
    }

    public function maintenanceStatus(): BelongsTo
    {
        return $this->belongsTo(MaintenanceStatus::class);
    }
}
--- FIN DU FICHIER : ./app/Models/Maintenance/MaintenanceLog.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Models/Maintenance/MaintenancePlan.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Models\Maintenance;

use App\Models\Concerns\BelongsToOrganization;
use App\Models\Vehicle;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\SoftDeletes;
// CORRECTION : Ajout du bon namespace pour la relation
use Illuminate\Database\Eloquent\Relations\BelongsTo;

class MaintenancePlan extends Model
{
    use HasFactory, SoftDeletes, BelongsToOrganization;

    protected $fillable = [
        'vehicle_id', 'maintenance_type_id', 'recurrence_value', 'recurrence_unit_id',
        'next_due_date', 'next_due_mileage', 'notes', 'organization_id',
    ];

    protected $casts = [
        'next_due_date' => 'date',
    ];

    // CORRECTION : Ajout des bons types de retour
    public function vehicle(): BelongsTo
    {
        return $this->belongsTo(Vehicle::class);
    }

    public function maintenanceType(): BelongsTo
    {
        return $this->belongsTo(MaintenanceType::class);
    }

    public function recurrenceUnit(): BelongsTo
    {
        return $this->belongsTo(RecurrenceUnit::class);
    }
}
--- FIN DU FICHIER : ./app/Models/Maintenance/MaintenancePlan.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Models/Maintenance/MaintenanceStatus.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Models\Maintenance;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class MaintenanceStatus extends Model
{
    use HasFactory;

    /**
     * Indique si le mod√®le doit √™tre horodat√©.
     *
     * @var bool
     */
    public $timestamps = false;

    /**
     * Les attributs qui peuvent √™tre assign√©s en masse.
     *
     * @var array<int, string>
     */
    protected $fillable = [
        'name',
    ];
}

--- FIN DU FICHIER : ./app/Models/Maintenance/MaintenanceStatus.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Models/Maintenance/MaintenanceType.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Models\Maintenance;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class MaintenanceType extends Model
{
    use HasFactory;

    /**
     * Indique si le mod√®le doit √™tre horodat√©.
     *
     * @var bool
     */
    public $timestamps = false;

    /**
     * Les attributs qui peuvent √™tre assign√©s en masse.
     *
     * @var array<int, string>
     */
    protected $fillable = [
        'name',
        'description',
    ];
}

--- FIN DU FICHIER : ./app/Models/Maintenance/MaintenanceType.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Models/Maintenance/RecurrenceUnit.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Models\Maintenance;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class RecurrenceUnit extends Model
{
    use HasFactory;

    /**
     * Indique si le mod√®le doit √™tre horodat√©.
     *
     * @var bool
     */
    public $timestamps = false;

    /**
     * Les attributs qui peuvent √™tre assign√©s en masse.
     *
     * @var array<int, string>
     */
    protected $fillable = [
        'name',
    ];
}

--- FIN DU FICHIER : ./app/Models/Maintenance/RecurrenceUnit.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Models/Organization.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Relations\HasMany;
use Illuminate\Database\Eloquent\Relations\HasManyThrough;
use Illuminate\Database\Eloquent\SoftDeletes;
use Spatie\Sluggable\HasSlug;
use Spatie\Sluggable\SlugOptions;
use App\Models\User;
use App\Models\Vehicle;
use App\Models\Supplier;
use App\Models\MaintenanceRecord;
use App\Models\Trip;
use App\Models\PermissionAuditLog;

class Organization extends Model
{
    use HasFactory, SoftDeletes, HasSlug;

    protected $fillable = [
        'name',
        'slug', 
        'legal_name',
        'organization_type',
        'industry',
        'description',
        'siret',
        'vat_number',
        'legal_form',
        'registration_number',
        'registration_date',
        'email',
        'phone',
        'website',
        'address',
        'address_line_2',
        'city',
        'postal_code',
        'state_province',
        'country',
        'timezone',
        'currency',
        'language',
        'date_format',
        'time_format',
        'logo_path',
        'status',
        'subscription_plan',
        'subscription_expires_at',
        'max_vehicles',
        'max_drivers', 
        'max_users',
        'working_days',
        'settings',
        'created_by',
        'updated_by',
        'admin_user_id',
        'total_users',
        'active_users',
    ];

    protected $casts = [
        'registration_date' => 'date',
        'subscription_expires_at' => 'datetime',
        'is_active' => 'boolean',
        'settings' => 'array',
        'working_days' => 'array',
    ];

    protected $dates = [
        'subscription_expires_at',
        'deleted_at'
    ];

    public function getSlugOptions(): SlugOptions
    {
        return SlugOptions::create()
            ->generateSlugsFrom('name')
            ->saveSlugsTo('slug')
            ->doNotGenerateSlugsOnUpdate();
    }

    // ‚úÖ RELATIONS S√âCURIS√âES - Avec v√©rification d'existence des r√¥les

    public function users(): HasMany
    {
        return $this->hasMany(User::class)->where('is_active', true);
    }

    public function allUsers(): HasMany
    {
        return $this->hasMany(User::class);
    }

    public function admins(): HasMany
    {
        // ‚úÖ CORRECTION: V√©rifier que le r√¥le existe avant de l'utiliser
        try {
            return $this->users()->role('Admin');
        } catch (\Spatie\Permission\Exceptions\RoleDoesNotExist $e) {
            \Log::warning("Role 'Admin' does not exist for organization {$this->name}");
            return $this->users()->whereHas('roles', function($q) { $q->where('name', 'Admin'); });
        }
    }

    public function fleetManagers(): HasMany
    {
        // ‚úÖ CORRECTION: Utiliser le bon nom de r√¥le
        try {
            return $this->users()->role('Gestionnaire Flotte');
        } catch (\Spatie\Permission\Exceptions\RoleDoesNotExist $e) {
            \Log::warning("Role 'Gestionnaire Flotte' does not exist for organization {$this->name}");
            return $this->users()->whereHas('roles', function($q) { 
                $q->whereIn('name', ['Gestionnaire Flotte', 'fleet_manager']); 
            });
        }
    }

    public function supervisors(): HasMany
    {
        try {
            return $this->users()->role('supervisor');
        } catch (\Spatie\Permission\Exceptions\RoleDoesNotExist $e) {
            \Log::warning("Role 'supervisor' does not exist for organization {$this->name}");
            return $this->users()->whereHas('roles', function($q) { $q->where('name', 'supervisor'); });
        }
    }

    public function drivers(): HasMany
    {
        // ‚úÖ CORRECTION PRINCIPALE: Gestion s√©curis√©e du r√¥le driver
        try {
            return $this->users()->role('Chauffeur');
        } catch (\Spatie\Permission\Exceptions\RoleDoesNotExist $e) {
            \Log::warning("Role 'Chauffeur' does not exist for organization {$this->name}");
            // Fallback avec requ√™te directe
            return $this->users()->whereHas('roles', function($q) { 
                $q->whereIn('name', ['Chauffeur', 'driver']); 
            });
        }
    }

    // Relations avec autres mod√®les
    public function vehicles(): HasMany
    {
        return $this->hasMany(Vehicle::class);
    }

    public function activeVehicles(): HasMany
    {
        return $this->vehicles()->where('status', 'active');
    }

    public function suppliers(): HasMany
    {
        return $this->hasMany(Supplier::class);
    }

    public function maintenanceRecords(): HasManyThrough
    {
        return $this->hasManyThrough(MaintenanceRecord::class, Vehicle::class);
    }

    public function trips(): HasManyThrough
    {
        return $this->hasManyThrough(Trip::class, Vehicle::class);
    }

    public function auditLogs(): HasMany
    {
        return $this->hasMany(PermissionAuditLog::class);
    }

    // Scopes
    public function scopeActive($query)
    {
        return $query->where('status', 'active');
    }

    public function scopeWithActiveSubscription($query)
    {
        return $query->where('subscription_expires_at', '>', now())
                     ->orWhereNull('subscription_expires_at');
    }

    // M√©thodes utilitaires
    public function isSubscriptionActive(): bool
    {
        if ($this->subscription_expires_at === null) {
            return true;
        }

        return $this->subscription_expires_at->isFuture();
    }

    public function canAddUsers(): bool
    {
        $limits = [
            'basic' => 10,
            'professional' => 50,
            'enterprise' => null // Illimit√©
        ];

        $limit = $limits[$this->subscription_plan] ?? 10;

        if ($limit === null) {
            return true;
        }

        return $this->users()->count() < $limit;
    }

    public function canAddVehicles(): bool
    {
        $limits = [
            'basic' => 25,
            'professional' => 100,
            'enterprise' => null // Illimit√©
        ];

        $limit = $limits[$this->subscription_plan] ?? 25;

        if ($limit === null) {
            return true;
        }

        return $this->vehicles()->count() < $limit;
    }

    public function getSettingsAttribute($value): array
    {
        $default = [
            'timezone' => 'UTC',
            'currency' => 'EUR',
            'language' => 'fr',
            'date_format' => 'd/m/Y',
            'notifications' => [
                'maintenance_alerts' => true,
                'fuel_alerts' => true,
                'driver_alerts' => true,
                'email_reports' => true
            ]
        ];

        return array_merge($default, json_decode($value, true) ?? []);
    }

    protected static function boot()
    {
        parent::boot();

        static::deleting(function ($organization) {
            // Soft delete tous les utilisateurs li√©s
            $organization->allUsers()->delete();
            // Soft delete tous les v√©hicules li√©s
            $organization->vehicles()->delete();
        });
    }

    // ‚úÖ NOUVELLE M√âTHODE: V√©rifier les r√¥les disponibles
    public function getAvailableRoles(): array
    {
        return \Spatie\Permission\Models\Role::where('guard_name', 'web')
            ->pluck('name')
            ->toArray();
    }

    // ‚úÖ NOUVELLE M√âTHODE: Statistiques s√©curis√©es par r√¥le
    public function getUserCountByRole(string $roleName): int
    {
        try {
            return $this->users()->role($roleName)->count();
        } catch (\Spatie\Permission\Exceptions\RoleDoesNotExist $e) {
            return 0;
        }
    }
}

--- FIN DU FICHIER : ./app/Models/Organization.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Models/Supplier.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Models;

use App\Models\Concerns\BelongsToOrganization;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Relations\BelongsTo;
use Illuminate\Database\Eloquent\Relations\HasMany;
use Illuminate\Database\Eloquent\SoftDeletes;

class Supplier extends Model
{
    use HasFactory, SoftDeletes, BelongsToOrganization;

    protected $fillable = [
        'name',
        'contact_name',
        'phone',
        'email',
        'address',
        'supplier_category_id',
        'organization_id',
    ];

    /**
     * Relation : Un fournisseur appartient √† une cat√©gorie.
     */
    public function category(): BelongsTo
    {
        return $this->belongsTo(SupplierCategory::class, 'supplier_category_id');
    }

    /**
     * Relation : Un fournisseur peut √™tre li√© √† plusieurs d√©penses.
     * (Anticipation pour le futur module de gestion des d√©penses)
     */
    public function expenses(): HasMany
    {
        // Note : Le mod√®le Expense sera √† cr√©er dans le futur.
        // return $this->hasMany(Expense::class);
        return $this->hasMany('App\Models\Expense'); // Placeholder
    }

    /**
     * Relation : Un fournisseur peut √™tre li√© √† plusieurs interventions de maintenance.
     * (Anticipation pour le futur module de maintenance)
     */
    public function maintenances(): HasMany
    {
        // Note : Le mod√®le MaintenanceLog existe d√©j√†.
        return $this->hasMany(Maintenance\MaintenanceLog::class);
    }

    // La relation organization() est maintenant g√©r√©e par le trait BelongsToOrganization.
}

--- FIN DU FICHIER : ./app/Models/Supplier.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Models/SupplierCategory.php
////////////////////////////////////////////////////////////////

<?php
namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Relations\HasMany;

class SupplierCategory extends Model
{
    use HasFactory;
    protected $fillable = ['name', 'organization_id'];

    public function suppliers(): HasMany
    {
        return $this->hasMany(Supplier::class);
    }
}

--- FIN DU FICHIER : ./app/Models/SupplierCategory.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Models/TransmissionType.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class TransmissionType extends Model
{
    use HasFactory;
    // Indique √† Laravel que ce mod√®le n'utilise pas les colonnes created_at et updated_at.
    public $timestamps = false;

    // D√©finit le champ 'name' comme √©tant assignable en masse.
    protected $fillable = ['name'];

}

--- FIN DU FICHIER : ./app/Models/TransmissionType.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Models/User.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Relations\BelongsTo;
use Illuminate\Database\Eloquent\Relations\HasOne;
use Illuminate\Database\Eloquent\SoftDeletes;
use Illuminate\Foundation\Auth\User as Authenticatable;
use Illuminate\Notifications\Notifiable;
use Laravel\Sanctum\HasApiTokens;
use Spatie\Permission\Traits\HasRoles;
use Illuminate\Database\Eloquent\Relations\BelongsToMany; 

class User extends Authenticatable
{
    // CORRECTION : On retire "BelongsToOrganization" et on nettoie les doublons
    use HasApiTokens, HasFactory, Notifiable, HasRoles, SoftDeletes;

    /**
     * The attributes that are mass assignable.
     */
    protected $fillable = [
        'name',
        'first_name',
        'last_name',
        'email',
        'phone',
        'password',
        'organization_id',
    ];

    /**
     * The attributes that should be hidden for serialization.
     */
    protected $hidden = [
        'password',
        'remember_token',
    ];

    /**
     * The attributes that should be cast.
     */
    protected $casts = [
        'email_verified_at' => 'datetime',
        'password' => 'hashed',
    ];

    /**
     * Un utilisateur appartient toujours √† une organisation.
     */
    public function organization(): BelongsTo
    {
        return $this->belongsTo(Organization::class);
    }

    /**
     * Un utilisateur peut avoir un profil de chauffeur.
     */
    public function driver(): HasOne
    {
        return $this->hasOne(Driver::class);
    }
    
    /**
     * La relation qui retourne les v√©hicules auxquels cet utilisateur a acc√®s.
     */
    public function vehicles(): BelongsToMany
    {
        return $this->belongsToMany(Vehicle::class, 'user_vehicle');
    }
}
--- FIN DU FICHIER : ./app/Models/User.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Models/ValidationLevel.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class ValidationLevel extends Model
{
    use HasFactory;

    /**
     * Indicates if the model should be timestamped.
     * Laravel handles timestamps by default if the columns exist,
     * so no 'public $timestamps = true;' is explicitly needed.
     * Only set 'public $timestamps = false;' if you DON'T have/want them.
     */

    /**
     * The attributes that are mass assignable.
     *
     * @var array<int, string>
     */
    protected $fillable = [
        'level_number',
        'name',
        'description',
    ];

    /**
     * Define the relationship with users.
     * Un niveau de validation peut √™tre associ√© √† plusieurs utilisateurs.
     */
    public function users()
    {
        return $this->belongsToMany(User::class, 'user_validation_levels');
    }
}

--- FIN DU FICHIER : ./app/Models/ValidationLevel.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Models/Vehicle.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Models;

use App\Models\Concerns\BelongsToOrganization;
use App\Models\Maintenance\MaintenanceLog;
use App\Models\Maintenance\MaintenancePlan;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Relations\BelongsToMany;
use Illuminate\Database\Eloquent\SoftDeletes;
// CORRECTION : Ajout des bons namespaces pour les relations
use Illuminate\Database\Eloquent\Relations\BelongsTo;
use Illuminate\Database\Eloquent\Relations\HasMany;

class Vehicle extends Model
{
    use HasFactory, SoftDeletes, BelongsToOrganization;

    protected $fillable = [
        'registration_plate', 'vin', 'brand', 'model', 'color', 'vehicle_type_id',
        'fuel_type_id', 'transmission_type_id', 'status_id', 'manufacturing_year',
        'acquisition_date', 'purchase_price', 'current_value', 'initial_mileage',
        'current_mileage', 'engine_displacement_cc', 'power_hp', 'seats', 'status_reason', 'notes', 'organization_id',
    ];

    protected $casts = [
        'acquisition_date' => 'date',
    ];

    // CORRECTION : Ajout du bon type de retour (BelongsTo)
    public function vehicleType(): BelongsTo { return $this->belongsTo(VehicleType::class); }
    public function fuelType(): BelongsTo { return $this->belongsTo(FuelType::class); }
    public function transmissionType(): BelongsTo { return $this->belongsTo(TransmissionType::class); }
    public function vehicleStatus(): BelongsTo { return $this->belongsTo(VehicleStatus::class, 'status_id'); }

    // CORRECTION : Ajout du bon type de retour (HasMany)
    public function assignments(): HasMany { return $this->hasMany(Assignment::class); }
    public function maintenancePlans(): HasMany { return $this->hasMany(MaintenancePlan::class); }
    public function maintenanceLogs(): HasMany { return $this->hasMany(MaintenanceLog::class); }
    
    /**
     * V√©rifie si le v√©hicule a une affectation actuellement en cours.
     */
    public function isCurrentlyAssigned(): bool
    {
       return $this->assignments()->whereNull('end_datetime')->exists();
    }

    /**
     * La relation qui retourne les utilisateurs autoris√©s √† utiliser ce v√©hicule.
     */
    public function users(): BelongsToMany
    {
        return $this->belongsToMany(User::class, 'user_vehicle');
    }
}
--- FIN DU FICHIER : ./app/Models/Vehicle.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Models/VehicleStatus.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class VehicleStatus extends Model
{
    use HasFactory;
    // Indique √† Laravel que ce mod√®le n'utilise pas les colonnes created_at et updated_at.
    public $timestamps = false;

    // D√©finit le champ 'name' comme √©tant assignable en masse.
    protected $fillable = ['name'];

}

--- FIN DU FICHIER : ./app/Models/VehicleStatus.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Models/VehicleType.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class VehicleType extends Model
{
    use HasFactory;
    // Indique √† Laravel que ce mod√®le n'utilise pas les colonnes created_at et updated_at.
    public $timestamps = false;

    // D√©finit le champ 'name' comme √©tant assignable en masse.
    protected $fillable = ['name'];


}

--- FIN DU FICHIER : ./app/Models/VehicleType.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Observers/DriverObserver.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Observers;

use App\Models\Driver;
use App\Models\User;
use Carbon\Carbon;
use Illuminate\Support\Facades\Hash;
use Illuminate\Support\Str;

class DriverObserver
{
    /**
     * G√®re l'√©v√©nement "saving" du mod√®le Driver.
     */
    public function saving(Driver $driver): void
    {
        if ($driver->isDirty('license_issue_date') && !is_null($driver->license_issue_date)) {
            $driver->license_expiry_date = Carbon::parse($driver->license_issue_date)->addYears(10);
        }
    }

    /**
     * G√®re l'√©v√©nement "created" du mod√®le Driver.
     */
    public function created(Driver $driver): void
    {
        // Si le chauffeur a d√©j√† un user_id, on ne fait rien
        if ($driver->user_id) {
            return;
        }

        // Si le chauffeur est cr√©√© sans utilisateur associ√©, on en cr√©e un.
        $userEmail = $driver->personal_email;

        if (empty($userEmail)) {
            $firstNameLetter = Str::lower(substr($driver->first_name, 0, 1));
            $lastName = Str::lower($driver->last_name);
            $randomNumber = rand(100, 999);
            $userEmail = "{$firstNameLetter}.{$lastName}{$randomNumber}@zen.fleet";
        }

        // On v√©rifie si un utilisateur avec cet email n'existe pas d√©j√†
        if (User::where('email', $userEmail)->exists()) {
            // Si l'email existe d√©j√†, on ne cr√©e pas de nouvel utilisateur
            // et on log une erreur ou une notification si n√©cessaire.
            // Pour l'instant, on ignore silencieusement pour √©viter de bloquer la cr√©ation du chauffeur.
            return;
        }

        $user = User::create([
            'name' => $driver->first_name . ' ' . $driver->last_name,
            'email' => $userEmail,
            'password' => Hash::make(Str::random(12)),
            'organization_id' => $driver->organization_id,
        ]);

        // On associe le nouvel utilisateur au chauffeur
        // On utilise une mise √† jour silencieuse pour ne pas red√©clencher d'√©v√©nements
        $driver->user_id = $user->id;
        $driver->saveQuietly();
    }
}

--- FIN DU FICHIER : ./app/Observers/DriverObserver.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Observers/UserObserver.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Observers;

use App\Models\User;

class UserObserver
{
    /**
     * Handle the User "saving" event.
     *
     * This method is called before a user is created or updated.
     * We use it to automatically populate the 'name' field
     * from 'first_name' and 'last_name'.
     *
     * @param  \App\Models\User  $user
     * @return void
     */
    public function saving(User $user): void
    {
        // V√©rifie si first_name ou last_name ont √©t√© modifi√©s ou sont en cours de d√©finition
        if ($user->isDirty('first_name') || $user->isDirty('last_name') || !$user->exists) {
            $firstName = $user->first_name ?? '';
            $lastName = $user->last_name ?? '';

            $user->name = trim($firstName . ' ' . $lastName);

            // Si le nom est vide apr√®s le trim (cas o√π first_name et last_name sont vides ou null),
            // et que la colonne 'name' ne peut √™tre null, on pourrait lui assigner une valeur par d√©faut
            // ou s'appuyer sur la validation pour que first_name/last_name soient requis.
            // Breeze s'attend √† ce que 'name' ne soit pas null.
            if (empty($user->name) && !empty($user->email)) {
                // Fallback simple si le nom est vide mais que l'email existe (ex: pour les anciens utilisateurs sans first/last name)
                // Ou vous pourriez choisir de lever une exception ou de mettre une valeur placeholder.
                // Pour l'instant, on s'attend √† ce que first_name/last_name soient fournis √† la cr√©ation.
            }
        }
    }

    /**
     * Handle the User "created" event.
     *
     * @param  \App\Models\User  $user
     * @return void
     */
    public function created(User $user): void
    {
        //
    }

    /**
     * Handle the User "updated" event.
     *
     * @param  \App\Models\User  $user
     * @return void
     */
    public function updated(User $user): void
    {
        //
    }

    /**
     * Handle the User "deleted" event.
     *
     * @param  \App\Models\User  $user
     * @return void
     */
    public function deleted(User $user): void
    {
        //
    }

    /**
     * Handle the User "restored" event.
     *
     * @param  \App\Models\User  $user
     * @return void
     */
    public function restored(User $user): void
    {
        //
    }

    /**
     * Handle the User "force deleted" event.
     *
     * @param  \App\Models\User  $user
     * @return void
     */
    public function forceDeleted(User $user): void
    {
        //
    }
}

--- FIN DU FICHIER : ./app/Observers/UserObserver.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Policies/DocumentCategoryPolicy.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Policies;

use App\Models\DocumentCategory;
use App\Models\User;
use Illuminate\Auth\Access\HandlesAuthorization;

class DocumentCategoryPolicy
{
    use HandlesAuthorization;

    /**
     * Determine whether the user can view any models.
     */
    public function viewAny(User $user)
    {
        // Anyone with the permission can view the list page.
        // The controller will scope the query by organization.
        return $user->can('manage document_categories');
    }

    /**
     * Determine whether the user can view the model.
     */
    public function view(User $user, DocumentCategory $documentCategory)
    {
        // User can view if they have the permission AND belong to the same organization.
        return $user->can('manage document_categories') && $user->organization_id === $documentCategory->organization_id;
    }

    /**
     * Determine whether the user can create models.
     */
    public function create(User $user)
    {
        return $user->can('manage document_categories');
    }

    /**
     * Determine whether the user can update the model.
     */
    public function update(User $user, DocumentCategory $documentCategory)
    {
        // User can update if they have the permission AND belong to the same organization.
        return $user->can('manage document_categories') && $user->organization_id === $documentCategory->organization_id;
    }

    /**
     * Determine whether the user can delete the model.
     */
    public function delete(User $user, DocumentCategory $documentCategory)
    {
        // User can delete if they have the permission AND belong to the same organization.
        return $user->can('manage document_categories') && $user->organization_id === $documentCategory->organization_id;
    }
}
--- FIN DU FICHIER : ./app/Policies/DocumentCategoryPolicy.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Policies/DocumentPolicy.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Policies;

use App\Models\Document;
use App\Models\User;
use Illuminate\Auth\Access\HandlesAuthorization;

class DocumentPolicy
{
    use HandlesAuthorization;

    /**
     * Determine whether the user can view any models.
     */
    public function viewAny(User $user)
    {
        return $user->can('view documents');
    }

    /**
     * Determine whether the user can view the model.
     */
    public function view(User $user, Document $document)
    {
        return $user->can('view documents') && $user->organization_id === $document->organization_id;
    }

    /**
     * Determine whether the user can create models.
     */
    public function create(User $user)
    {
        return $user->can('create documents');
    }

    /**
     * Determine whether the user can update the model.
     */
    public function update(User $user, Document $document)
    {
        return $user->can('edit documents') && $user->organization_id === $document->organization_id;
    }

    /**
     * Determine whether the user can delete the model.
     */
    public function delete(User $user, Document $document)
    {
        return $user->can('delete documents') && $user->organization_id === $document->organization_id;
    }

    /**
     * Determine whether the user can restore the model.
     */
    public function restore(User $user, Document $document)
    {
        return $user->can('edit documents') && $user->organization_id === $document->organization_id;
    }

    /**
     * Determine whether the user can permanently delete the model.
     */
    public function forceDelete(User $user, Document $document)
    {
        return $user->can('delete documents') && $user->organization_id === $document->organization_id;
    }
}
--- FIN DU FICHIER : ./app/Policies/DocumentPolicy.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Policies/RoleAssignmentPolicy.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Policies;

use App\Models\User;
use Spatie\Permission\Models\Role;
use Illuminate\Auth\Access\HandlesAuthorization;

class RoleAssignmentPolicy
{
    use HandlesAuthorization;

    /**
     * Contr√¥ler l'attribution des r√¥les selon la hi√©rarchie de s√©curit√©
     */
    public function assign(User $user, Role $role, User $targetUser = null): bool
    {
        // R√®gle 1: Seul un Super Admin peut cr√©er/assigner le r√¥le Super Admin
        if ($role->name === 'Super Admin') {
            return $user->hasRole('Super Admin');
        }
        
        // R√®gle 2: Un Admin ne peut pas s'auto-promouvoir
        if ($targetUser && $user->id === $targetUser->id) {
            $currentHighestRole = $this->getHighestRoleLevel($user);
            $targetRoleLevel = $this->getRoleLevel($role);
            
            // Interdire l'auto-promotion √† un niveau sup√©rieur
            if ($targetRoleLevel < $currentHighestRole) {
                return false;
            }
        }
        
        // R√®gle 3: Hi√©rarchie des permissions d'attribution
        $userLevel = $this->getHighestRoleLevel($user);
        $roleLevel = $this->getRoleLevel($role);
        
        // Un utilisateur peut seulement assigner des r√¥les de niveau inf√©rieur
        return $userLevel < $roleLevel;
    }

    /**
     * Contr√¥ler la modification des r√¥les
     */
    public function update(User $user, Role $role): bool
    {
        // Seul Super Admin peut modifier le r√¥le Super Admin
        if ($role->name === 'Super Admin') {
            return $user->hasRole('Super Admin');
        }
        
        // Admin peut modifier les autres r√¥les
        return $user->hasRole(['Super Admin', 'Admin']);
    }

    /**
     * Contr√¥ler la suppression des r√¥les
     */
    public function delete(User $user, Role $role): bool
    {
        // Interdire la suppression du r√¥le Super Admin
        if ($role->name === 'Super Admin') {
            return false;
        }
        
        // Seul Super Admin peut supprimer des r√¥les
        return $user->hasRole('Super Admin');
    }

    /**
     * Obtenir le niveau hi√©rarchique d'un r√¥le (plus petit = plus haut niveau)
     */
    private function getRoleLevel(Role $role): int
    {
        $hierarchy = [
            'Super Admin' => 1,
            'Admin' => 2,
            'Gestionnaire Flotte' => 3,
            'supervisor' => 4,
            'Chauffeur' => 5
        ];
        
        return $hierarchy[$role->name] ?? 999;
    }

    /**
     * Obtenir le niveau le plus √©lev√© d'un utilisateur
     */
    private function getHighestRoleLevel(User $user): int
    {
        $userRoles = $user->roles;
        $minLevel = 999;
        
        foreach ($userRoles as $role) {
            $level = $this->getRoleLevel($role);
            if ($level < $minLevel) {
                $minLevel = $level;
            }
        }
        
        return $minLevel;
    }
}


--- FIN DU FICHIER : ./app/Policies/RoleAssignmentPolicy.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Policies/RolePolicy.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Policies;

use App\Models\User;
use Spatie\Permission\Models\Role;
use Illuminate\Auth\Access\HandlesAuthorization;

class RolePolicy
{
    use HandlesAuthorization;

    public function viewAny(User $user): bool
    {
        return $user->hasRole(['Super Admin', 'Admin']);
    }

    public function view(User $user, Role $role): bool
    {
        return $user->hasRole(['Super Admin', 'Admin']);
    }

    public function create(User $user): bool
    {
        return $user->hasRole('Super Admin');
    }

    public function update(User $user, Role $role): bool
    {
        // Seul Super Admin peut modifier le r√¥le Super Admin
        if ($role->name === 'Super Admin') {
            return $user->hasRole('Super Admin');
        }
        
        return $user->hasRole(['Super Admin', 'Admin']);
    }

    public function delete(User $user, Role $role): bool
    {
        // Interdire la suppression du Super Admin
        if ($role->name === 'Super Admin') {
            return false;
        }
        
        return $user->hasRole('Super Admin');
    }

    public function assign(User $user, Role $role, User $targetUser): bool
    {
        // Seul Super Admin peut assigner Super Admin
        if ($role->name === 'Super Admin') {
            return $user->hasRole('Super Admin');
        }
        
        // Emp√™cher l'auto-promotion
        if ($user->id === $targetUser->id && $role->name === 'Super Admin') {
            return false;
        }
        
        return $user->hasRole(['Super Admin', 'Admin']);
    }
}


--- FIN DU FICHIER : ./app/Policies/RolePolicy.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Policies/VehiclePolicy.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Policies;

use App\Models\User;
use App\Models\Vehicle;
use Illuminate\Auth\Access\HandlesAuthorization;

class VehiclePolicy
{
    use HandlesAuthorization;

    /**
     * Determine whether the user can view any vehicles.
     */
    public function viewAny(User $user): bool
    {
        return $user->can("view vehicles");
    }

    /**
     * Determine whether the user can view the vehicle.
     */
    public function view(User $user, Vehicle $vehicle): bool
    {
        return $user->can("view vehicles") && $vehicle->organization_id === $user->organization_id;
    }

    /**
     * Determine whether the user can create vehicles.
     */
    public function create(User $user): bool
    {
        return $user->can("create vehicles");
    }

    /**
     * Determine whether the user can update the vehicle.
     */
    public function update(User $user, Vehicle $vehicle): bool
    {
        return $user->can("edit vehicles") && $vehicle->organization_id === $user->organization_id;
    }

    /**
     * Determine whether the user can delete the vehicle.
     */
    public function delete(User $user, Vehicle $vehicle): bool
    {
        return $user->can("delete vehicles") && $vehicle->organization_id === $user->organization_id;
    }

    /**
     * Determine whether the user can restore the vehicle.
     */
    public function restore(User $user, Vehicle $vehicle): bool
    {
        return $user->can("restore vehicles") && $vehicle->organization_id === $user->organization_id;
    }

    /**
     * Determine whether the user can permanently delete the vehicle.
     */
    public function forceDelete(User $user, Vehicle $vehicle): bool
    {
        return $user->can("force delete vehicles") && $vehicle->organization_id === $user->organization_id;
    }
}


--- FIN DU FICHIER : ./app/Policies/VehiclePolicy.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Providers/AppServiceProvider.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Providers;

use Illuminate\Support\ServiceProvider;

class AppServiceProvider extends ServiceProvider
{
    /**
     * Register any application services.
     */
    public function register(): void
    {
        //
    }

    /**
     * Bootstrap any application services.
     */
    public function boot(): void
    {
        //
    }
}

--- FIN DU FICHIER : ./app/Providers/AppServiceProvider.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Providers/AuthServiceProvider.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Providers;

use App\Models\Document;
use App\Models\DocumentCategory;
use App\Models\User;
use App\Models\Organization;
use App\Policies\DocumentPolicy;
use App\Policies\DocumentCategoryPolicy;
use App\Policies\UserPolicy;
use App\Policies\RolePolicy;
use App\Policies\OrganizationPolicy;
use Illuminate\Foundation\Support\Providers\AuthServiceProvider as ServiceProvider;
use Illuminate\Support\Facades\Gate;
use Spatie\Permission\Models\Role;

class AuthServiceProvider extends ServiceProvider
{
    /**
     * üõ°Ô∏è MAPPING DES POLICIES DE S√âCURIT√â ENTERPRISE
     * Chaque mod√®le sensible a sa propre policy pour un contr√¥le granulaire
     */
    protected $policies = [
        // Policies existantes
        Document::class => DocumentPolicy::class,
        DocumentCategory::class => DocumentCategoryPolicy::class,
        
        // üõ°Ô∏è NOUVELLES POLICIES DE S√âCURIT√â
        User::class => UserPolicy::class,
        Role::class => RolePolicy::class,
        Organization::class => OrganizationPolicy::class,
    ];

    /**
     * üîê ENREGISTREMENT DES SERVICES D'AUTORISATION
     */
    public function boot(): void
    {
        $this->registerPolicies();
        
        // üõ°Ô∏è GATE GLOBAL SUPER ADMIN
        // Le Super Admin bypasse toutes les v√©rifications (sauf celles explicitement bloqu√©es)
        Gate::before(function (User $user, string $ability) {
            // Super Admin a acc√®s √† tout SAUF l'auto-promotion
            if ($user->hasRole('Super Admin')) {
                // Bloquer explicitement les actions dangereuses m√™me pour Super Admin
                $blockedAbilities = [
                    'promote-self-to-super-admin',
                    'delete-last-super-admin',
                ];
                
                if (in_array($ability, $blockedAbilities)) {
                    return false;
                }
                
                return true;
            }
            
            return null; // Continuer avec les policies normales
        });

        // üõ°Ô∏è GATES PERSONNALIS√âS DE S√âCURIT√â
        
        // Gate pour emp√™cher l'escalation de privil√®ges
        Gate::define('assign-role-to-user', function (User $user, Role $role, User $targetUser = null) {
            // Seul Super Admin peut assigner le r√¥le Super Admin
            if ($role->name === 'Super Admin') {
                return $user->hasRole('Super Admin');
            }
            
            // Emp√™cher l'auto-promotion
            if ($targetUser && $user->id === $targetUser->id && $role->name === 'Super Admin') {
                return false;
            }
            
            // Admin peut assigner tous les autres r√¥les
            return $user->hasRole(['Super Admin', 'Admin']);
        });
        
        // Gate pour la gestion des organisations
        Gate::define('manage-organizations', function (User $user) {
            return $user->hasRole('Super Admin');
        });
        
        // Gate pour la cr√©ation d'admins
        Gate::define('create-admin-user', function (User $user) {
            return $user->hasRole('Super Admin');
        });
        
        // Gate pour l'acc√®s multi-organisation
        Gate::define('access-all-organizations', function (User $user) {
            return $user->hasRole('Super Admin');
        });
        
        // üîç GATE POUR L'AUDIT ET S√âCURIT√â
        Gate::define('view-security-logs', function (User $user) {
            return $user->hasRole('Super Admin');
        });
        
        Gate::define('view-user-activity', function (User $user, User $targetUser = null) {
            if ($user->hasRole('Super Admin')) {
                return true;
            }
            
            if ($user->hasRole('Admin')) {
                // Admin peut voir les utilisateurs de son organisation
                return $targetUser ? $user->organization_id === $targetUser->organization_id : true;
            }
            
            return false;
        });
    }
}

--- FIN DU FICHIER : ./app/Providers/AuthServiceProvider.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Providers/BroadcastServiceProvider.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Providers;

use Illuminate\Support\Facades\Broadcast;
use Illuminate\Support\ServiceProvider;

class BroadcastServiceProvider extends ServiceProvider
{
    /**
     * Bootstrap any application services.
     */
    public function boot(): void
    {
        Broadcast::routes();

        require base_path('routes/channels.php');
    }
}

--- FIN DU FICHIER : ./app/Providers/BroadcastServiceProvider.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Providers/EventServiceProvider.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Providers;

use App\Models\User;                // <--- AJOUTEZ CETTE LIGNE
use App\Observers\UserObserver;    // <--- AJOUTEZ CETTE LIGNE
use App\Models\Driver; // <-- Ajouter
use App\Observers\DriverObserver; // <-- Ajouter
use Illuminate\Auth\Events\Registered;
use Illuminate\Auth\Listeners\SendEmailVerificationNotification;
use Illuminate\Foundation\Support\Providers\EventServiceProvider as ServiceProvider;
use Illuminate\Support\Facades\Event;

class EventServiceProvider extends ServiceProvider
{
    /**
     * The event to listener mappings for the application.
     *
     * @var array<class-string, array<int, class-string>>
     */
    protected $listen = [
        Registered::class => [
            SendEmailVerificationNotification::class,
        ],
    ];

    /**
     * Register any events for your application.
     */
    public function boot(): void
    {
        User::observe(UserObserver::class); // <--- AJOUTEZ CETTE LIGNE
        Driver::observe(DriverObserver::class); // <-- Ajouter cette ligne 
    }

    /**
     * Determine if events and listeners should be automatically discovered.
     */
    public function shouldDiscoverEvents(): bool
    {
        return false;
    }
}

--- FIN DU FICHIER : ./app/Providers/EventServiceProvider.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Providers/LoggingServiceProvider.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Providers;

use Illuminate\Support\ServiceProvider;
use Illuminate\Support\Facades\Log;
use Monolog\Logger;

class LoggingServiceProvider extends ServiceProvider
{
    public function boot(): void
    {
        // Validation des channels externes au d√©marrage
        $this->validateExternalLogChannels();
    }

    public function register(): void
    {
        // Configuration avanc√©e des loggers
        $this->configureCustomLoggers();
    }

    /**
     * Valider les channels externes (Slack, Teams, etc.)
     */
    private function validateExternalLogChannels(): void
    {
        $externalChannels = [
            'slack' => env('LOG_SLACK_WEBHOOK_URL'),
            'teams' => env('LOG_TEAMS_WEBHOOK_URL'),
        ];

        foreach ($externalChannels as $channel => $url) {
            if (!empty($url) && !filter_var($url, FILTER_VALIDATE_URL)) {
                Log::channel('daily')->warning("Invalid URL for {$channel} logging channel: {$url}");
            }
        }
    }

    /**
     * Configurer les loggers personnalis√©s
     */
    private function configureCustomLoggers(): void
    {
        // Configuration pour le channel organizations
        $this->app['log']->extend('organizations', function ($app, $config) {
            $logger = new Logger('organizations');
            // Configuration sp√©cifique...
            return $logger;
        });
    }
}


--- FIN DU FICHIER : ./app/Providers/LoggingServiceProvider.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Providers/RepositoryServiceProvider.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Providers;

use Illuminate\Support\ServiceProvider;
// Interfaces
use App\Repositories\Interfaces\VehicleRepositoryInterface;
use App\Repositories\Interfaces\DriverRepositoryInterface;
use App\Repositories\Interfaces\AssignmentRepositoryInterface;
use App\Repositories\Interfaces\SupplierRepositoryInterface;
// Impl√©mentations
use App\Repositories\Eloquent\VehicleRepository;
use App\Repositories\Eloquent\DriverRepository;
use App\Repositories\Eloquent\AssignmentRepository;
use App\Repositories\Eloquent\SupplierRepository;

class RepositoryServiceProvider extends ServiceProvider
{
    /**
     * Register services.
     */
    public function register(): void
    {
        // Liaison pour les V√©hicules (d√©j√† pr√©sente)
        $this->app->bind(
            VehicleRepositoryInterface::class,
            VehicleRepository::class
        );

        // CORRECTION : Ajout de la liaison pour les Chauffeurs
        $this->app->bind(
            DriverRepositoryInterface::class,
            DriverRepository::class
        );

        // --- AJOUT POUR LES AFFECTATION
        $this->app->bind(
            AssignmentRepositoryInterface::class,
            AssignmentRepository::class
	);
	
	// ----- AJOUT POUR SUPPLIER
	$this->app->bind(
		SupplierRepositoryInterface::class, 
		SupplierRepository::class
	);
    }

    /**
     * Bootstrap services.
     */
    public function boot(): void
    {
        //
    }
}

--- FIN DU FICHIER : ./app/Providers/RepositoryServiceProvider.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Providers/RouteServiceProvider.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Providers;

use Illuminate\Cache\RateLimiting\Limit;
use Illuminate\Foundation\Support\Providers\RouteServiceProvider as ServiceProvider;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\RateLimiter;
use Illuminate\Support\Facades\Route;

class RouteServiceProvider extends ServiceProvider
{
    /**
     * The path to your application's "home" route.
     *
     * Typically, users are redirected here after authentication.
     *
     * @var string
     */
    public const HOME = '/dashboard';

    /**
     * Define your route model bindings, pattern filters, and other route configuration.
     */
    public function boot(): void
    {
        RateLimiter::for('api', function (Request $request) {
            return Limit::perMinute(60)->by($request->user()?->id ?: $request->ip());
        });

        $this->routes(function () {
            Route::middleware('api')
                ->prefix('api')
                ->group(base_path('routes/api.php'));

            Route::middleware('web')
                ->group(base_path('routes/web.php'));
        });
    }
}

--- FIN DU FICHIER : ./app/Providers/RouteServiceProvider.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Repositories/Eloquent/AssignmentRepository.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Repositories\Eloquent;

use App\Models\Assignment;
use App\Repositories\Interfaces\AssignmentRepositoryInterface;
use Illuminate\Pagination\LengthAwarePaginator;

class AssignmentRepository implements AssignmentRepositoryInterface
{
    public function getFiltered(array $filters): LengthAwarePaginator
    {
        $perPage = $filters['per_page'] ?? 15;
        $query = Assignment::query()->with(['vehicle', 'driver']);

        if (!empty($filters['status'])) {
            if ($filters['status'] === 'active') {
                $query->whereNull('end_datetime');
            } elseif ($filters['status'] === 'ended') {
                $query->whereNotNull('end_datetime');
            }
        }

        if (!empty($filters['search'])) {
            $searchTerm = strtolower($filters['search']);
            $query->where(function ($q) use ($searchTerm) {
                $q->whereHas('vehicle', function ($subQuery) use ($searchTerm) {
                    $subQuery->whereRaw('LOWER(registration_plate) LIKE ?', ["%{$searchTerm}%"]);
                })->orWhereHas('driver', function ($subQuery) use ($searchTerm) {
                    $subQuery->whereRaw('LOWER(first_name) LIKE ?', ["%{$searchTerm}%"])
                             ->orWhereRaw('LOWER(last_name) LIKE ?', ["%{$searchTerm}%"]);
                });
            });
        }

        return $query->orderBy('start_datetime', 'desc')->paginate($perPage)->withQueryString();
    }

    public function find(int $id): ?Assignment
    {
        return Assignment::find($id);
    }

    public function create(array $data): Assignment
    {
        return Assignment::create($data);
    }

    public function update(Assignment $assignment, array $data): bool
    {
        return $assignment->update($data);
    }
}

--- FIN DU FICHIER : ./app/Repositories/Eloquent/AssignmentRepository.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Repositories/Eloquent/DriverRepository.php
////////////////////////////////////////////////////////////////

<?php
namespace App\Repositories\Eloquent;

use App\Models\Driver;
use App\Repositories\Interfaces\DriverRepositoryInterface;
use Illuminate\Pagination\LengthAwarePaginator;

class DriverRepository implements DriverRepositoryInterface
{
    public function getFiltered(array $filters): LengthAwarePaginator
    {
        $perPage = $filters['per_page'] ?? 15;
        $query = Driver::query()->with(['driverStatus', 'user']);

        if (!empty($filters['view_deleted'])) {
            $query->onlyTrashed();
        }
        if (!empty($filters['status_id'])) {
            $query->where('status_id', $filters['status_id']);
        }
        if (!empty($filters['search'])) {
            $searchTerm = strtolower($filters['search']);
            $query->where(function ($q) use ($searchTerm) {
                $q->whereRaw('LOWER(first_name) LIKE ?', ["%{$searchTerm}%"])
                  ->orWhereRaw('LOWER(last_name) LIKE ?', ["%{$searchTerm}%"])
                  ->orWhereRaw('LOWER(employee_number) LIKE ?', ["%{$searchTerm}%"]);
            });
        }
        return $query->orderBy('id', 'desc')->paginate($perPage)->withQueryString();
    }

    public function find(int $id): ?Driver { return Driver::find($id); }
    public function findTrashed(int $id): ?Driver { return Driver::onlyTrashed()->find($id); }
    public function create(array $data): Driver { return Driver::create($data); }
    public function update(Driver $driver, array $data): bool { return $driver->update($data); }
    public function delete(Driver $driver): bool { return $driver->delete(); }
    public function restore(Driver $driver): bool { return $driver->restore(); }
    public function forceDelete(Driver $driver): bool { return $driver->forceDelete(); }
}

--- FIN DU FICHIER : ./app/Repositories/Eloquent/DriverRepository.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Repositories/Eloquent/SupplierRepository.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Repositories\Eloquent;

use App\Models\Supplier;
use App\Repositories\Interfaces\SupplierRepositoryInterface;
use Illuminate\Pagination\LengthAwarePaginator;

class SupplierRepository implements SupplierRepositoryInterface
{
    public function getFiltered(array $filters): LengthAwarePaginator
    {
        $perPage = $filters['per_page'] ?? 15;
        $query = Supplier::query()->with('category');

        if (!empty($filters['search'])) {
            $searchTerm = '%' . $filters['search'] . '%';
            $query->where(function ($q) use ($searchTerm) {
                $q->where('name', 'ILIKE', $searchTerm)
                  ->orWhere('contact_name', 'ILIKE', $searchTerm)
                  ->orWhere('email', 'ILIKE', $searchTerm);
            });
        }

        return $query->orderBy('name', 'asc')->paginate($perPage)->withQueryString();
    }

    public function create(array $data): Supplier
    {
        return Supplier::create($data);
    }

    public function update(Supplier $supplier, array $data): bool
    {
        return $supplier->update($data);
    }

    public function archive(Supplier $supplier): bool
    {
        return $supplier->delete();
    }
}
--- FIN DU FICHIER : ./app/Repositories/Eloquent/SupplierRepository.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Repositories/Eloquent/VehicleRepository.php
////////////////////////////////////////////////////////////////

<?php
namespace App\Repositories\Eloquent;

use App\Models\Vehicle;
use App\Repositories\Interfaces\VehicleRepositoryInterface;
use Illuminate\Pagination\LengthAwarePaginator;
use Illuminate\Support\Facades\Auth;

class VehicleRepository implements VehicleRepositoryInterface
{
    public function getFiltered(array $filters): LengthAwarePaginator
    {
        $perPage = $filters['per_page'] ?? 15;
        $query = Vehicle::query()->with(['vehicleType', 'vehicleStatus']);
        $user = Auth::user();

        // Appliquer le filtre par organisation pour tous sauf Super Admin
        if ($user && !$user->hasRole('Super Admin')) {
            $query->where('organization_id', $user->organization_id);
        }

        // Si l'utilisateur n'est ni Super Admin, ni Admin, restreindre aux v√©hicules assign√©s
        if ($user && !$user->hasAnyRole(['Super Admin', 'Admin'])) {
            $query->whereHas('users', function ($q) use ($user) {
                $q->where('user_id', $user->id);
            });
        }

        if (!empty($filters['view_deleted'])) {
            $query->onlyTrashed();
        }
        if (!empty($filters['status_id'])) {
            $query->where('status_id', $filters['status_id']);
        }
        if (!empty($filters['search'])) {
            $searchTerm = strtolower($filters['search']);
            $query->where(function ($q) use ($searchTerm) {
                $q->whereRaw('LOWER(registration_plate) LIKE ?', ["%{$searchTerm}%"])
                  ->orWhereRaw('LOWER(brand) LIKE ?', ["%{$searchTerm}%"])
                  ->orWhereRaw('LOWER(model) LIKE ?', ["%{$searchTerm}%"]);
            });
        }
        return $query->orderBy('id', 'desc')->paginate($perPage)->withQueryString();
    }

    public function getForPlanning(array $filters, string $startDate, string $endDate): LengthAwarePaginator
    {
        $perPage = $filters['per_page'] ?? 15;
        $query = Vehicle::query()->with(['assignments' => function ($query) use ($startDate, $endDate) {
            $query->where(function ($q) use ($startDate, $endDate) {
                // Affectations qui commencent pendant la p√©riode
                $q->whereBetween('start_datetime', [$startDate, $endDate]);
            })->orWhere(function ($q) use ($startDate, $endDate) {
                // Affectations qui se terminent pendant la p√©riode
                $q->whereBetween('end_datetime', [$startDate, $endDate]);
            })->orWhere(function ($q) use ($startDate, $endDate) {
                // Affectations qui commencent avant et se terminent apr√®s (englobent la p√©riode)
                $q->where('start_datetime', '<', $startDate)->where('end_datetime', '>', $endDate);
            })->orWhere(function ($q) use ($startDate, $endDate) {
                // Affectations en cours qui ont commenc√© avant la p√©riode
                $q->where('start_datetime', '<', $startDate)->whereNull('end_datetime');
            })->with('driver'); // Charger le chauffeur pour l'affectation
        }]);

        $user = Auth::user();
        if ($user && !$user->hasRole('Super Admin')) {
            $query->where('organization_id', $user->organization_id);
        }

        if (!empty($filters['search'])) {
            $searchTerm = strtolower($filters['search']);
            $query->where(function ($q) use ($searchTerm) {
                $q->whereRaw('LOWER(registration_plate) LIKE ?', ["%{$searchTerm}%"])
                  ->orWhereRaw('LOWER(brand) LIKE ?', ["%{$searchTerm}%"])
                  ->orWhereRaw('LOWER(model) LIKE ?', ["%{$searchTerm}%"])
                  ->orWhereHas('assignments.driver', function ($subQuery) use ($searchTerm) {
                      $subQuery->whereRaw('LOWER(first_name) LIKE ?', ["%{$searchTerm}%"])
                               ->orWhereRaw('LOWER(last_name) LIKE ?', ["%{$searchTerm}%"]);
                  });
            });
        }

        if (!empty($filters['sort']) && $filters['sort'] === 'alpha_asc') {
            $query->orderBy('brand', 'asc')->orderBy('model', 'asc');
        } else {
            // Default sort
            $query->orderBy('id', 'desc');
        }

        return $query->paginate($perPage)->withQueryString();
    }

    public function find(int $id): ?Vehicle
    {
        return Vehicle::find($id);
    }

    public function findTrashed(int $id): ?Vehicle
    {
        return Vehicle::onlyTrashed()->find($id);
    }

    public function create(array $data): Vehicle
    {
        return Vehicle::create($data);
    }

    public function update(Vehicle $vehicle, array $data): bool
    {
        return $vehicle->update($data);
    }

    public function delete(Vehicle $vehicle): bool
    {
        return $vehicle->delete();
    }

    public function restore(Vehicle $vehicle): bool
    {
        return $vehicle->restore();
    }

    public function forceDelete(Vehicle $vehicle): bool
    {
        return $vehicle->forceDelete();
    }
}
--- FIN DU FICHIER : ./app/Repositories/Eloquent/VehicleRepository.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Repositories/Interfaces/AssignmentRepositoryInterface.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Repositories\Interfaces;

use App\Models\Assignment;
use Illuminate\Pagination\LengthAwarePaginator;

interface AssignmentRepositoryInterface
{
    public function getFiltered(array $filters): LengthAwarePaginator;
    public function find(int $id): ?Assignment;
    public function create(array $data): Assignment;
    public function update(Assignment $assignment, array $data): bool;
}

--- FIN DU FICHIER : ./app/Repositories/Interfaces/AssignmentRepositoryInterface.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Repositories/Interfaces/DriverRepositoryInterface.php
////////////////////////////////////////////////////////////////

<?php
namespace App\Repositories\Interfaces;
use App\Models\Driver;
use Illuminate\Pagination\LengthAwarePaginator;

interface DriverRepositoryInterface
{
    public function getFiltered(array $filters): LengthAwarePaginator;
    public function create(array $data): Driver;
    public function update(Driver $driver, array $data): bool;
    // ... (d'autres m√©thodes si n√©cessaire)
}

--- FIN DU FICHIER : ./app/Repositories/Interfaces/DriverRepositoryInterface.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Repositories/Interfaces/SupplierRepositoryInterface.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Repositories\Interfaces;

use App\Models\Supplier;
use Illuminate\Pagination\LengthAwarePaginator;

interface SupplierRepositoryInterface
{
    public function getFiltered(array $filters): LengthAwarePaginator;
    public function create(array $data): Supplier;
    public function update(Supplier $supplier, array $data): bool;
    public function archive(Supplier $supplier): bool;
}
--- FIN DU FICHIER : ./app/Repositories/Interfaces/SupplierRepositoryInterface.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Repositories/Interfaces/VehicleRepositoryInterface.php
////////////////////////////////////////////////////////////////

<?php
namespace App\Repositories\Interfaces;

use App\Models\Vehicle;
use Illuminate\Pagination\LengthAwarePaginator;

interface VehicleRepositoryInterface
{
    public function getFiltered(array $filters): LengthAwarePaginator;
    public function getForPlanning(array $filters, string $startDate, string $endDate): LengthAwarePaginator;
    public function find(int $id): ?Vehicle;
    public function findTrashed(int $id): ?Vehicle;
    public function create(array $data): Vehicle;
    public function update(Vehicle $vehicle, array $data): bool;
    public function delete(Vehicle $vehicle): bool;
    public function restore(Vehicle $vehicle): bool;
    public function forceDelete(Vehicle $vehicle): bool;
}
--- FIN DU FICHIER : ./app/Repositories/Interfaces/VehicleRepositoryInterface.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Services/AssignmentService.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Services;

use App\Models\Assignment;
use App\Models\Driver;
use App\Models\Vehicle;
use App\Repositories\Interfaces\AssignmentRepositoryInterface;
use Carbon\Carbon;
use Illuminate\Pagination\LengthAwarePaginator;
use App\Models\VehicleStatus;
use App\Models\DriverStatus;  

class AssignmentService
{
    protected AssignmentRepositoryInterface $assignmentRepository;

    public function __construct(AssignmentRepositoryInterface $assignmentRepository)
    {
        $this->assignmentRepository = $assignmentRepository;
    }

    public function getFilteredAssignments(array $filters): LengthAwarePaginator
    {
        return $this->assignmentRepository->getFiltered($filters);
    }

    public function getDataForCreateForm(): array
    {
        $availableVehicles = Vehicle::whereHas('vehicleStatus', function ($query) {
            $query->where('name', 'Parking');
        })->orderBy('brand')->get();

        $availableDrivers = Driver::whereHas('driverStatus', function ($query) {
            $query->where('name', 'Disponible');
        })->orderBy('last_name')->get();

        return compact('availableVehicles', 'availableDrivers');
    }

    public function createAssignment(array $data): Assignment
    {
        return $this->assignmentRepository->create($data);
    }

    public function updateAssignment(Assignment $assignment, array $data): bool
    {
        return $this->assignmentRepository->update($assignment, $data);
    }

   
    public function endAssignment(Assignment $assignment, int $endMileage, string $endDateTime): bool
    {
        // On r√©cup√®re le statut "Parking" pour le v√©hicule
        $parkingStatusId = VehicleStatus::where('name', 'Parking')->firstOrFail()->id;
        $assignment->vehicle->update([
            'status_id' => $parkingStatusId,
            'current_mileage' => $endMileage,
        ]);

        // On remet le statut du chauffeur √† "Disponible"
        $availableStatusId = DriverStatus::where('name', 'Disponible')->firstOrFail()->id;
        $assignment->driver->update(['status_id' => $availableStatusId]);

        // On met √† jour l'affectation elle-m√™me
        return $this->assignmentRepository->update($assignment, [
            'end_datetime' => $endDateTime,
            'end_mileage' => $endMileage,
        ]);
    }
}
--- FIN DU FICHIER : ./app/Services/AssignmentService.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Services/DriverService.php
////////////////////////////////////////////////////////////////

<?php
namespace App\Services;

use App\Models\Driver;
use App\Repositories\Interfaces\DriverRepositoryInterface;
use Illuminate\Pagination\LengthAwarePaginator;
use Illuminate\Support\Facades\Storage;

class DriverService
{
    protected DriverRepositoryInterface $driverRepository;
    public function __construct(DriverRepositoryInterface $driverRepository) { $this->driverRepository = $driverRepository; }
    public function getFilteredDrivers(array $filters): LengthAwarePaginator { return $this->driverRepository->getFiltered($filters); }

    public function createDriver(array $data): Driver
    {
        if (isset($data['photo'])) {
            $data['photo_path'] = $data['photo']->store('drivers/photos', 'public');
            unset($data['photo']);
        }
        return $this->driverRepository->create($data);
    }

    public function updateDriver(Driver $driver, array $data): bool
    {
        if (isset($data['photo'])) {
            if ($driver->photo_path) {
                Storage::disk('public')->delete($driver->photo_path);
            }
            $data['photo_path'] = $data['photo']->store('drivers/photos', 'public');
            unset($data['photo']);
        }
        return $this->driverRepository->update($driver, $data);
    }

    public function archiveDriver(Driver $driver): bool
    {
        // R√àGLE M√âTIER : On ne peut pas archiver un chauffeur avec des affectations.
        if ($driver->assignments()->exists()) {
            return false;
        }
        return $this->driverRepository->delete($driver);
    }

    public function restoreDriver(int $driverId): bool
    {
        $driver = $this->driverRepository->findTrashed($driverId);
        return $driver ? $this->driverRepository->restore($driver) : false;
    }

   public function forceDeleteDriver(int $driverId): bool
    {
        $driver = $this->driverRepository->findTrashed($driverId);

        if ($driver) {
            // R√àGLE M√âTIER : On v√©rifie si le chauffeur a des affectations
            if ($driver->assignments()->exists()) {
                // Si oui, on refuse la suppression
                return false;
            }

            // Si non, on proc√®de √† la suppression
            if ($driver->photo_path) {
                Storage::disk('public')->delete($driver->photo_path);
            }
            return $this->driverRepository->forceDelete($driver);
        }
        return false;
    }
}
--- FIN DU FICHIER : ./app/Services/DriverService.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Services/EnterprisePermissionService.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Services;

use App\Models\User;
use App\Models\Organization;
use Illuminate\Support\Facades\Cache;
use Illuminate\Support\Facades\DB;
use Illuminate\Support\Collection;
use Spatie\Permission\Models\Role;
use Spatie\Permission\Models\Permission;

class EnterprisePermissionService
{
    private const CACHE_TTL = 3600;
    
    public function initializeEnterpriseSystem(): void
    {
        DB::transaction(function () {
            $this->createEnterprisePermissions();
            $this->createHierarchicalRoles();
            $this->setupDefaultNotifications();
            $this->initializeSubscriptionPlans();
            $this->createSystemDashboards();
        });
    }

    private function createEnterprisePermissions(): void
    {
        $enterpriseModules = [
            'analytics' => [
                'view_basic_analytics', 'view_advanced_analytics', 'export_analytics',
                'create_custom_reports', 'schedule_reports', 'share_reports'
            ],
            'api_management' => [
                'view_api_keys', 'create_api_keys', 'revoke_api_keys',
                'view_api_logs', 'configure_webhooks', 'manage_integrations'
            ],
            'security_management' => [
                'view_audit_logs', 'export_audit_logs', 'configure_security_policies',
                'manage_ip_restrictions', 'force_password_reset', 'manage_2fa_policies'
            ],
            'subscription_management' => [
                'view_billing', 'manage_subscriptions', 'view_usage_metrics',
                'configure_limits', 'manage_addons'
            ],
            'system_administration' => [
                'manage_system_settings', 'view_system_health', 'manage_integrations',
                'configure_notifications', 'manage_templates'
            ]
        ];

        foreach ($enterpriseModules as $module => $permissions) {
            foreach ($permissions as $permission) {
                Permission::firstOrCreate([
                    'name' => $permission,
                    'guard_name' => 'web'
                ]);
            }
        }
    }

    private function createHierarchicalRoles(): void
    {
        // Super Admin Syst√®me (au-dessus de tout)
        $systemAdminRole = Role::firstOrCreate(['name' => 'system_admin', 'guard_name' => 'web']);
        $systemAdminRole->syncPermissions(Permission::all());

        // Super Admin Organisation
        $superAdminRole = Role::firstOrCreate(['name' => 'super_admin', 'guard_name' => 'web']);
        $superAdminPermissions = Permission::where('name', 'not like', '%system_%')->pluck('name');
        $superAdminRole->syncPermissions($superAdminPermissions);

        // Admin Organisation Avanc√©
        $adminRole = Role::firstOrCreate(['name' => 'organization_admin', 'guard_name' => 'web']);
        $adminPermissions = [
            // Gestion compl√®te organisation
            'view_dashboard', 'manage_users', 'manage_roles', 'manage_permissions',
            'view_vehicles', 'create_vehicles', 'edit_vehicles', 'delete_vehicles',
            'view_drivers', 'create_drivers', 'edit_drivers', 'delete_drivers',
            'view_maintenance', 'create_maintenance', 'edit_maintenance', 'delete_maintenance',
            'view_reports', 'create_reports', 'export_reports',
            'view_basic_analytics', 'view_advanced_analytics',
            'view_billing', 'manage_subscriptions',
            'view_audit_logs', 'configure_security_policies'
        ];
        $adminRole->syncPermissions($adminPermissions);

        // Gestionnaire de Flotte Senior
        $seniorFleetManagerRole = Role::firstOrCreate(['name' => 'senior_fleet_manager', 'guard_name' => 'web']);
        $seniorFleetPermissions = [
            'view_dashboard', 'manage_fleet_users',
            'view_vehicles', 'create_vehicles', 'edit_vehicles', 'assign_vehicles',
            'view_drivers', 'create_drivers', 'edit_drivers', 'assign_drivers',
            'view_maintenance', 'create_maintenance', 'edit_maintenance', 'schedule_maintenance',
            'view_assignments', 'create_assignments', 'edit_assignments',
            'view_reports', 'create_reports', 'export_reports',
            'view_basic_analytics', 'create_custom_reports'
        ];
        $seniorFleetManagerRole->syncPermissions($seniorFleetPermissions);

        // Superviseur Avanc√© (NOUVEAU R√îLE ENRICHI)
        $advancedSupervisorRole = Role::firstOrCreate(['name' => 'advanced_supervisor', 'guard_name' => 'web']);
        $supervisorPermissions = [
            'view_dashboard',
            'view_vehicles_supervised', 'track_vehicles_supervised', 'assign_vehicles_supervised',
            'view_drivers_supervised', 'manage_drivers_supervised', 'assign_drivers_supervised',
            'view_maintenance_supervised', 'create_maintenance_supervised',
            'view_assignments_supervised', 'create_assignments_supervised',
            'view_reports_supervised', 'create_reports_supervised',
            'view_basic_analytics_supervised'
        ];
        $advancedSupervisorRole->syncPermissions($supervisorPermissions);

        // Superviseur Standard
        $supervisorRole = Role::firstOrCreate(['name' => 'supervisor', 'guard_name' => 'web']);
        $basicSupervisorPermissions = [
            'view_dashboard',
            'view_vehicles_supervised', 'track_vehicles_supervised',
            'view_drivers_supervised',
            'view_maintenance_supervised',
            'view_assignments_supervised'
        ];
        $supervisorRole->syncPermissions($basicSupervisorPermissions);

        // Chauffeur Premium
        $premiumDriverRole = Role::firstOrCreate(['name' => 'premium_driver', 'guard_name' => 'web']);
        $premiumDriverPermissions = [
            'view_dashboard',
            'view_vehicles_own', 'track_vehicles_own', 'report_vehicle_issues',
            'view_assignments_own', 'update_assignment_status',
            'view_maintenance_own', 'request_maintenance',
            'view_performance_metrics_own'
        ];
        $premiumDriverRole->syncPermissions($premiumDriverPermissions);

        // Chauffeur Standard
        $driverRole = Role::firstOrCreate(['name' => 'driver', 'guard_name' => 'web']);
        $driverPermissions = [
            'view_dashboard',
            'view_vehicles_own', 'track_vehicles_own',
            'view_assignments_own',
            'view_maintenance_own'
        ];
        $driverRole->syncPermissions($driverPermissions);
    }

    private function initializeSubscriptionPlans(): void
    {
        $plans = [
            [
                'name' => 'Trial',
                'slug' => 'trial',
                'tier' => 'trial',
                'description' => 'Essai gratuit 14 jours - Fonctionnalit√©s de base',
                'pricing_structure' => [
                    'type' => 'free',
                    'trial_duration' => 14
                ],
                'base_monthly_price' => 0,
                'base_annual_price' => 0,
                'feature_limits' => [
                    'max_users' => 3,
                    'max_vehicles' => 10,
                    'max_drivers' => 5,
                    'max_api_calls_per_month' => 1000
                ],
                'included_features' => [
                    'basic_fleet_management',
                    'basic_reporting',
                    'email_notifications',
                    'mobile_app_access'
                ],
                'trial_days' => 14,
                'is_public' => true
            ],
            [
                'name' => 'Professional',
                'slug' => 'professional',
                'tier' => 'professional',
                'description' => 'Solution compl√®te pour les flottes moyennes',
                'pricing_structure' => [
                    'type' => 'tiered',
                    'base_users' => 10,
                    'additional_user_cost' => 15
                ],
                'base_monthly_price' => 299.00,
                'base_annual_price' => 2990.00,
                'feature_limits' => [
                    'max_users' => 50,
                    'max_vehicles' => 200,
                    'max_drivers' => 100,
                    'max_api_calls_per_month' => 25000
                ],
                'included_features' => [
                    'advanced_fleet_management',
                    'advanced_reporting',
                    'custom_dashboards',
                    'api_access',
                    'advanced_analytics',
                    'webhook_notifications',
                    'priority_support'
                ],
                'is_public' => true,
                'is_recommended' => true
            ],
            [
                'name' => 'Enterprise',
                'slug' => 'enterprise',
                'tier' => 'enterprise',
                'description' => 'Solution haute performance pour grandes flottes',
                'pricing_structure' => [
                    'type' => 'custom',
                    'requires_quote' => true
                ],
                'base_monthly_price' => 999.00,
                'base_annual_price' => 9990.00,
                'feature_limits' => [
                    'max_users' => null, // Illimit√©
                    'max_vehicles' => null,
                    'max_drivers' => null,
                    'max_api_calls_per_month' => null
                ],
                'included_features' => [
                    'enterprise_fleet_management',
                    'unlimited_reporting',
                    'custom_integrations',
                    'white_labeling',
                    'advanced_security',
                    'compliance_tools',
                    'dedicated_account_manager',
                    'sla_guarantee'
                ],
                'is_public' => true
            ]
        ];

        foreach ($plans as $planData) {
            DB::table('subscription_plans')->insert(array_merge($planData, [
                'created_at' => now(),
                'updated_at' => now()
            ]));
        }
    }

    public function assignSupervisorWithAdvancedPermissions(User $supervisor, Collection $drivers, Collection $vehicles): bool
    {
        return DB::transaction(function () use ($supervisor, $drivers, $vehicles) {
            // V√©rifier les permissions
            if (!$supervisor->hasAnyRole(['supervisor', 'advanced_supervisor'])) {
                throw new \InvalidArgumentException('User must have supervisor role');
            }

            // Enregistrer les assignations avec audit
            $this->logAuditEvent([
                'event_category' => 'security',
                'event_type' => 'supervisor_assignment',
                'event_action' => 'assign',
                'severity_level' => 'medium',
                'event_description' => "Supervisor {$supervisor->name} assigned to manage " . $drivers->count() . " drivers and " . $vehicles->count() . " vehicles",
                'resource_type' => 'User',
                'resource_id' => $supervisor->id
            ]);

            // Assigner les chauffeurs
            foreach ($drivers as $driver) {
                DB::table('supervisor_driver_assignments')->updateOrInsert(
                    [
                        'supervisor_id' => $supervisor->id,
                        'driver_id' => $driver->id
                    ],
                    [
                        'assigned_by' => auth()->id(),
                        'assigned_at' => now(),
                        'is_active' => true,
                        'created_at' => now(),
                        'updated_at' => now()
                    ]
                );
            }

            // Assigner les v√©hicules
            foreach ($vehicles as $vehicle) {
                DB::table('user_vehicle_assignments')->updateOrInsert(
                    [
                        'supervisor_id' => $supervisor->id,
                        'vehicle_id' => $vehicle->id
                    ],
                    [
                        'assigned_by' => auth()->id(),
                        'assigned_at' => now(),
                        'is_active' => true,
                        'created_at' => now(),
                        'updated_at' => now()
                    ]
                );
            }

            // Invalider le cache des permissions
            $this->clearUserPermissionsCache($supervisor);

            return true;
        });
    }

    private function logAuditEvent(array $eventData): void
    {
        DB::table('comprehensive_audit_logs')->insert(array_merge($eventData, [
            'uuid' => \Illuminate\Support\Str::uuid(),
            'organization_id' => auth()->user()->organization_id ?? 1,
            'user_id' => auth()->id(),
            'event_data' => json_encode($eventData),
            'ip_address' => request()->ip(),
            'user_agent' => request()->userAgent(),
            'occurred_at' => now(),
            'created_at' => now(),
            'updated_at' => now()
        ]));
    }

    private function clearUserPermissionsCache(User $user): void
    {
        Cache::forget("user_permissions_{$user->id}");
        Cache::forget("user_supervised_resources_{$user->id}");
    }

    public function getOrganizationAdvancedMetrics(Organization $organization): array
    {
        return [
            'user_metrics' => [
                'total_users' => $organization->users()->count(),
                'active_users_30d' => $organization->users()
                    ->where('last_activity_at', '>=', now()->subDays(30))
                    ->count(),
                'role_distribution' => $organization->users()
                    ->with('roles')
                    ->get()
                    ->groupBy(function ($user) {
                        return $user->roles->first()->name ?? 'no_role';
                    })
                    ->map->count(),
                'engagement_score' => $this->calculateUserEngagementScore($organization)
            ],
            'fleet_metrics' => [
                'total_vehicles' => $organization->vehicles()->count(),
                'active_vehicles' => $organization->vehicles()
                    ->where('status', 'active')
                    ->count(),
                'utilization_rate' => $this->calculateFleetUtilization($organization),
                'maintenance_efficiency' => $this->calculateMaintenanceEfficiency($organization)
            ],
            'financial_metrics' => [
                'monthly_costs' => $this->calculateMonthlyCosts($organization),
                'cost_per_km' => $this->calculateCostPerKm($organization),
                'roi_analysis' => $this->calculateROI($organization)
            ],
            'compliance_metrics' => [
                'audit_score' => $this->calculateComplianceScore($organization),
                'security_incidents' => $this->getSecurityIncidentsCount($organization),
                'data_protection_status' => $this->getDataProtectionStatus($organization)
            ]
        ];
    }

    private function calculateUserEngagementScore(Organization $organization): float
    {
        $totalUsers = $organization->users()->count();
        if ($totalUsers === 0) return 0;

        $activeUsers = $organization->users()
            ->where('last_activity_at', '>=', now()->subDays(30))
            ->count();

        return round(($activeUsers / $totalUsers) * 100, 2);
    }

    private function calculateFleetUtilization(Organization $organization): float
    {
        // Logique de calcul de l'utilisation de la flotte
        // √Ä adapter selon votre mod√®le de donn√©es
        return 85.5; // Exemple
    }

    private function calculateMaintenanceEfficiency(Organization $organization): float
    {
        // Logique de calcul de l'efficacit√© de maintenance
        return 92.3; // Exemple
    }

    private function calculateMonthlyCosts(Organization $organization): array
    {
        return [
            'fuel' => 15420.50,
            'maintenance' => 8750.30,
            'insurance' => 2340.00,
            'total' => 26510.80
        ];
    }

    private function calculateCostPerKm(Organization $organization): float
    {
        return 0.45; // Exemple en EUR/km
    }

    private function calculateROI(Organization $organization): float
    {
        return 23.5; // Exemple en pourcentage
    }

    private function calculateComplianceScore(Organization $organization): float
    {
        return 96.7; // Exemple
    }

    private function getSecurityIncidentsCount(Organization $organization): int
    {
        return DB::table('security_alerts')
            ->where('organization_id', $organization->id)
            ->where('created_at', '>=', now()->subDays(30))
            ->count();
    }

    private function getDataProtectionStatus(Organization $organization): string
    {
        return $organization->gdpr_compliant ? 'compliant' : 'pending';
    }
}


--- FIN DU FICHIER : ./app/Services/EnterprisePermissionService.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Services/ImportExportService.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Services;

use App\Models\FuelType;
use App\Models\TransmissionType;
use App\Models\Vehicle;
use App\Models\VehicleStatus;
use App\Models\VehicleType;
use Illuminate\Http\UploadedFile;
use Illuminate\Support\Facades\DB;
use Illuminate\Support\Facades\Log;
use Illuminate\Support\Facades\Storage;
use Illuminate\Support\Facades\Validator;
use Illuminate\Support\Str;
use League\Csv\Reader;
use League\Csv\Statement;
use League\Csv\Writer;
use Symfony\Component\HttpFoundation\StreamedResponse;

class ImportExportService
{
    /**
     * G√©n√®re un fichier CSV mod√®le pour l'importation.
     *
     * @param string $filename Nom du fichier √† t√©l√©charger
     * @param array $headers En-t√™tes des colonnes
     * @param array $example Ligne d'exemple
     * @return StreamedResponse
     */
    public function generateCsvTemplate(string $filename, array $headers, array $example): StreamedResponse
    {
        return response()->streamDownload(function () use ($headers, $example) {
            $csv = Writer::createFromString();
            $csv->insertOne($headers);
            $csv->insertOne($example);
            echo $csv->toString();
        }, $filename, [
            'Content-Type' => 'text/csv',
            'Content-Disposition' => 'attachment; filename="' . $filename . '"',
        ]);
    }

    /**
     * Importe des v√©hicules √† partir d'un fichier CSV.
     *
     * @param UploadedFile $file Fichier CSV upload√©
     * @param string $encoding Encodage du fichier ('auto', 'utf8', 'iso', 'windows')
     * @return array R√©sultats de l'importation
     */
    public function importVehiclesFromCsv(UploadedFile $file, string $encoding = 'auto', array $mappings = []): array
    {
        // G√©n√©rer un identifiant unique pour cette importation
        $importId = Str::uuid()->toString();
        $fileName = $file->getClientOriginalName();
        
        // Stocker temporairement le fichier
        $path = $file->storeAs('imports/temp', $importId . '.csv');
        $fullPath = Storage::path($path);
        
        try {
            // D√©tecter et convertir l'encodage si n√©cessaire
            $detectedEncoding = $this->detectEncoding($fullPath, $encoding);
            $content = file_get_contents($fullPath);
            
            if ($detectedEncoding !== 'UTF-8') {
                $content = mb_convert_encoding($content, 'UTF-8', $detectedEncoding);
                file_put_contents($fullPath, $content);
            }
            
            // Charger le CSV avec League\CSV
            $csv = Reader::createFromPath($fullPath, 'r');
            $csv->setHeaderOffset(0);
            
            // Pr√©parer les donn√©es de r√©f√©rence pour la validation
            $vehicleTypes = ($mappings["vehicle_types"] ?? VehicleType::pluck("id", "name"))->toArray();
            $fuelTypes = ($mappings["fuel_types"] ?? FuelType::pluck("id", "name"))->toArray();
            $transmissionTypes = ($mappings["transmission_types"] ?? TransmissionType::pluck("id", "name"))->toArray();
            $vehicleStatuses = ($mappings["vehicle_statuses"] ?? VehicleStatus::pluck("id", "name"))->toArray();
            
            // Traiter les enregistrements
            $records = Statement::create()->process($csv);
            $recordsArray = iterator_to_array($records);
            
            $successCount = 0;
            $errorRows = [];
            
            DB::beginTransaction();
            
            try {
                foreach ($recordsArray as $offset => $record) {
                    $lineNumber = $offset + 2; // +1 pour l'en-t√™te, +1 pour commencer √† 1
                    
                    // Nettoyer et pr√©parer les donn√©es
                    $data = $this->prepareVehicleData($record, $vehicleTypes, $fuelTypes, $transmissionTypes, $vehicleStatuses);
                    
                    // Valider les donn√©es
                    $validator = Validator::make($data, $this->getVehicleValidationRules());
                    
                    if ($validator->fails()) {
                        // Enregistrer les erreurs
                        $errorRows[] = [
                            'line' => $lineNumber,
                            'errors' => $validator->errors()->all(),
                            'data' => $record,
                            'problematic_fields' => implode(',', array_keys($validator->errors()->toArray()))
                        ];
                    } else {
                        // Cr√©er le v√©hicule
                        Vehicle::create($data);
                        $successCount++;
                    }
                }
                
                // Valider la transaction si tout s'est bien pass√©
                DB::commit();
                
                // Journaliser le r√©sultat
                Log::info('Importation de v√©hicules termin√©e', [
                    'import_id' => $importId,
                    'file_name' => $fileName,
                    'success_count' => $successCount,
                    'error_count' => count($errorRows)
                ]);
                
                return [
                    'success_count' => $successCount,
                    'error_rows' => $errorRows,
                    'import_id' => $importId,
                    'file_name' => $fileName,
                    'encoding' => $detectedEncoding
                ];
            } catch (\Exception $e) {
                DB::rollBack();
                Log::error('Erreur lors de l\'importation des v√©hicules', [
                    'import_id' => $importId,
                    'exception' => $e->getMessage(),
                    'trace' => $e->getTraceAsString()
                ]);
                throw $e;
            }
        } finally {
            // Nettoyer le fichier temporaire
            Storage::delete($path);
        }
    }

    /**
     * Exporte les lignes en erreur vers un fichier CSV.
     *
     * @param array $errorRows Lignes en erreur
     * @param string $importId Identifiant de l'importation
     * @return StreamedResponse
     */
    public function exportErrorRows(array $errorRows, string $importId): StreamedResponse
    {
        return response()->streamDownload(function () use ($errorRows) {
            $csv = Writer::createFromString();
            
            // Si aucune erreur, retourner un fichier vide avec en-t√™tes
            if (empty($errorRows)) {
                $csv->insertOne(['Aucune erreur √† exporter']);
                echo $csv->toString();
                return;
            }
            
            // R√©cup√©rer les en-t√™tes √† partir de la premi√®re ligne d'erreur
            $headers = array_keys($errorRows[0]['data']);
            $csv->insertOne($headers);
            
            // Ajouter les lignes en erreur
            foreach ($errorRows as $error) {
                $csv->insertOne(array_values($error['data']));
            }
            
            echo $csv->toString();
        }, 'erreurs_import_vehicules_' . substr($importId, 0, 8) . '.csv', [
            'Content-Type' => 'text/csv',
            'Content-Disposition' => 'attachment; filename="erreurs_import_vehicules_' . substr($importId, 0, 8) . '.csv"',
        ]);
    }

    /**
     * D√©tecte l'encodage d'un fichier CSV.
     *
     * @param string $filePath Chemin complet du fichier
     * @param string $requestedEncoding Encodage demand√© ('auto', 'utf8', 'iso', 'windows')
     * @return string Encodage d√©tect√©
     */
    protected function detectEncoding(string $filePath, string $requestedEncoding): string
    {
        // Si un encodage sp√©cifique est demand√© (sauf 'auto'), l'utiliser
        if ($requestedEncoding !== 'auto') {
            return match($requestedEncoding) {
                'utf8' => 'UTF-8',
                'iso' => 'ISO-8859-1',
                'windows' => 'Windows-1252',
                default => 'UTF-8'
            };
        }
        
        // Sinon, tenter de d√©tecter automatiquement
        $content = file_get_contents($filePath);
        $encodings = ['UTF-8', 'ISO-8859-1', 'Windows-1252'];
        
        foreach ($encodings as $encoding) {
            $sample = mb_convert_encoding($content, 'UTF-8', $encoding);
            // Si la conversion ne produit pas de caract√®res invalides, c'est probablement le bon encodage
            if (!preg_match('/\p{Cc}|\p{Cf}|\p{Co}|\p{Cn}/u', $sample)) {
                return $encoding;
            }
        }
        
        // Par d√©faut, utiliser UTF-8
        return 'UTF-8';
    }

    /**
     * Pr√©pare les donn√©es du v√©hicule √† partir d'une ligne CSV.
     *
     * @param array $record Ligne du CSV
     * @param array $vehicleTypes Types de v√©hicules disponibles
     * @param array $fuelTypes Types de carburants disponibles
     * @param array $transmissionTypes Types de transmissions disponibles
     * @param array $vehicleStatuses Statuts de v√©hicules disponibles
     * @return array Donn√©es pr√©par√©es
     */
    protected function prepareVehicleData(array $record, array $vehicleTypes, array $fuelTypes, array $transmissionTypes, array $vehicleStatuses): array
    {
        $data = [
            'registration_plate' => $record['immatriculation'] ?? null,
            'vin' => $record['numero_serie_vin'] ?? null,
            'brand' => $record['marque'] ?? null,
            'model' => $record['modele'] ?? null,
            'color' => $record['couleur'] ?? null,
            'vehicle_type_id' => $vehicleTypes[strtolower($record['type_vehicule'] ?? '')] ?? null,
            'fuel_type_id' => $fuelTypes[strtolower($record['type_carburant'] ?? '')] ?? null,
            'transmission_type_id' => $transmissionTypes[strtolower($record['type_transmission'] ?? '')] ?? null,
            'vehicle_status_id' => $vehicleStatuses[strtolower($record['statut'] ?? '')] ?? null,
            'year' => $record['annee_fabrication'] ?? null,
            'acquisition_date' => $this->formatDate($record['date_acquisition'] ?? null),
            'purchase_price' => $this->formatDecimal($record['prix_achat'] ?? null),
            'current_value' => $this->formatDecimal($record['valeur_actuelle'] ?? null),
            'initial_mileage' => $this->formatInteger($record['kilometrage_initial'] ?? null),
            'engine_capacity' => $this->formatInteger($record['cylindree_cc'] ?? null),
            'power' => $this->formatInteger($record['puissance_cv'] ?? null),
            'seats' => $this->formatInteger($record['nombre_places'] ?? null),
            'notes' => $record['notes'] ?? null,
            'organization_id' => auth()->user()->organization_id,
        ];
        
        // Nettoyer les valeurs vides
        return array_map(function ($value) {
            return $value === '' ? null : $value;
        }, $data);
    }

    /**
     * Retourne les r√®gles de validation pour un v√©hicule.
     *
     * @return array R√®gles de validation
     */
    protected function getVehicleValidationRules(): array
    {
        return [
            'registration_plate' => 'required|string|max:20',
            'vin' => 'nullable|string|max:50',
            'brand' => 'required|string|max:50',
            'model' => 'required|string|max:50',
            'color' => 'nullable|string|max:30',
            'vehicle_type_id' => 'required|exists:vehicle_types,id',
            'fuel_type_id' => 'required|exists:fuel_types,id',
            'transmission_type_id' => 'required|exists:transmission_types,id',
            'vehicle_status_id' => 'required|exists:vehicle_statuses,id',
            'year' => 'nullable|integer|min:1900|max:' . (date('Y') + 1),
            'acquisition_date' => 'nullable|date',
            'purchase_price' => 'nullable|numeric|min:0',
            'current_value' => 'nullable|numeric|min:0',
            'initial_mileage' => 'nullable|integer|min:0',
            'engine_capacity' => 'nullable|integer|min:0',
            'power' => 'nullable|integer|min:0',
            'seats' => 'nullable|integer|min:0',
            'notes' => 'nullable|string',
            'organization_id' => 'required|exists:organizations,id',
        ];
    }

    /**
     * Formate une date depuis une cha√Æne.
     *
     * @param string|null $date Date √† formater
     * @return string|null Date format√©e ou null
     */
    public function formatDate(?string $date): ?string
    {
        if (empty($date)) {
            return null;
        }
        
        // Essayer plusieurs formats de date courants
        $formats = ['Y-m-d', 'd/m/Y', 'm/d/Y', 'd-m-Y', 'Y/m/d'];
        
        foreach ($formats as $format) {
            $dateObj = \DateTime::createFromFormat($format, $date);
            if ($dateObj !== false) {
                return $dateObj->format('Y-m-d');
            }
        }
        
        return null;
    }

    /**
     * Formate un nombre d√©cimal depuis une cha√Æne.
     *
     * @param string|null $value Valeur √† formater
     * @return float|null Nombre d√©cimal ou null
     */
    public function formatDecimal(?string $value): ?float
    {
        if (empty($value)) {
            return null;
        }
        
        // Nettoyer la valeur (supprimer espaces, s√©parateurs de milliers)
        $value = str_replace([' ', ','], ['', '.'], $value);
        
        return is_numeric($value) ? (float) $value : null;
    }

    /**
     * Formate un nombre entier depuis une cha√Æne.
     *
     * @param string|null $value Valeur √† formater
     * @return int|null Nombre entier ou null
     */
    public function formatInteger(?string $value): ?int
    {
        if (empty($value)) {
            return null;
        }
        
        // Nettoyer la valeur (supprimer espaces, s√©parateurs de milliers)
        $value = str_replace([' ', ',', '.'], '', $value);
        
        return is_numeric($value) ? (int) $value : null;
    }
}

--- FIN DU FICHIER : ./app/Services/ImportExportService.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Services/PdfGenerationService.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Services;

use Illuminate\Support\Facades\Http;
use Illuminate\Http\Client\RequestException;
use Illuminate\Support\Facades\Log;

class PdfGenerationService
{
    protected string $serviceUrl;
    protected string $healthUrl;
    protected int $timeout;
    protected int $retries;

    public function __construct()
    {
        $this->serviceUrl = config('services.pdf.url', 'http://node:3000/generate-pdf');
        $this->healthUrl = config('services.pdf.health_url', 'http://node:3000/health');
        $this->timeout = (int) config('services.pdf.timeout', 120);
        $this->retries = (int) config('services.pdf.retries', 3);
    }

    public function generateFromHtml(string $html): string
    {
        
        if (!$this->isServiceHealthy()) {
            throw new \Exception("Le service PDF n'est pas disponible apr√®s plusieurs tentatives.");
        }

        $response = Http::timeout($this->timeout)
            // --- CORRECTION D√âFINITIVE ---
            // On d√©sactive la v√©rification SSL pour les appels internes √† Docker
            ->withoutVerifying()
            ->post($this->serviceUrl, [
                'html' => $html,
            ]);

        $response->throw();

        return $response->body();
    }

    private function isServiceHealthy(): bool
    {
        for ($i = 0; $i < $this->retries; $i++) {
            try {
                $response = Http::timeout(5)
                    // --- CORRECTION D√âFINITIVE ---
                    // On d√©sactive la v√©rification SSL pour les appels internes √† Docker
                    ->withoutVerifying()
                    ->get($this->healthUrl);

                if ($response->successful() && $response->json('status') === 'OK') {
                    return true;
                }
            } catch (RequestException $e) {
                Log::warning('Tentative de connexion au service PDF √©chou√©e.', ['attempt' => $i + 1, 'error' => $e->getMessage()]);
                // Attendre un peu avant la prochaine tentative
                if ($i < $this->retries - 1) {
                    sleep(1);
                }
            }
        }
        return false;
    }
}
--- FIN DU FICHIER : ./app/Services/PdfGenerationService.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Services/PermissionService.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Services;

use App\Models\User;
use App\Models\Organization;
use App\Models\PermissionAuditLog;
use App\Models\SupervisorDriverAssignment;
use App\Models\UserVehicleAssignment;
use Spatie\Permission\Models\Role;
use Spatie\Permission\Models\Permission;
use Illuminate\Support\Facades\Cache;
use Illuminate\Support\Facades\DB;
use Illuminate\Support\Collection;

class PermissionService
{
    private const CACHE_TTL = 3600; // 1 heure
    private const PERMISSION_MODULES = [
        'dashboard' => ['view'],
        'vehicles' => ['view', 'create', 'edit', 'delete', 'assign', 'track'],
        'drivers' => ['view', 'create', 'edit', 'delete', 'assign'],
        'maintenance' => ['view', 'create', 'edit', 'delete', 'schedule'],
        'trips' => ['view', 'create', 'edit', 'delete', 'assign'],
        'reports' => ['view', 'create', 'export'],
        'suppliers' => ['view', 'create', 'edit', 'delete'],
        'users' => ['view', 'create', 'edit', 'delete', 'invite'],
        'organizations' => ['view', 'edit'], // Super admin uniquement
        'settings' => ['view', 'edit'],
        'audit' => ['view']
    ];

    public function initializeSystemPermissions(): void
    {
        DB::transaction(function () {
            // Cr√©er toutes les permissions syst√®me
            foreach (self::PERMISSION_MODULES as $module => $actions) {
                foreach ($actions as $action) {
                    foreach (['organization', 'supervised', 'own'] as $scope) {
                        if ($module === 'organizations' && $scope !== 'organization') {
                            continue; // Organizations n'a que le scope organization
                        }
                        
                        $permissionName = "{$action} {$module}" . ($scope !== 'organization' ? " ({$scope})" : '');
                        
                        Permission::firstOrCreate([
                            'name' => $permissionName,
                            'guard_name' => 'web'
                        ]);
                    }
                }
            }

            $this->createSystemRoles();
        });
    }

    private function createSystemRoles(): void
    {
        // Super Admin - Acc√®s total
        $superAdminRole = Role::firstOrCreate([
            'name' => 'super_admin',
            'guard_name' => 'web'
        ]);
        
        $superAdminRole->syncPermissions(Permission::all());

        // Admin Organisation - Acc√®s complet √† son organisation
        $adminRole = Role::firstOrCreate([
            'name' => 'admin',
            'guard_name' => 'web'
        ]);
        
        $adminPermissions = Permission::where('name', 'not like', '%organizations%')
            ->where('name', 'not like', '%(supervised)%')
            ->where('name', 'not like', '%(own)%')
            ->pluck('name')->toArray();
            
        $adminRole->syncPermissions($adminPermissions);

        // Gestionnaire de Flotte
        $fleetManagerRole = Role::firstOrCreate([
            'name' => 'fleet_manager',
            'guard_name' => 'web'
        ]);
        
        $fleetManagerPermissions = [
            'view dashboard',
            'view vehicles', 'create vehicles', 'edit vehicles', 'assign vehicles', 'track vehicles',
            'view drivers', 'create drivers', 'edit drivers', 'assign drivers',
            'view maintenance', 'create maintenance', 'edit maintenance', 'schedule maintenance',
            'view trips', 'create trips', 'edit trips', 'assign trips',
            'view reports', 'create reports', 'export reports',
            'view suppliers', 'create suppliers', 'edit suppliers',
            'view settings'
        ];
        
        $fleetManagerRole->syncPermissions($fleetManagerPermissions);

        // Superviseur - Nouveau r√¥le
        $supervisorRole = Role::firstOrCreate([
            'name' => 'supervisor',
            'guard_name' => 'web'
        ]);
        
        $supervisorPermissions = [
            'view dashboard',
            'view vehicles (supervised)', 'track vehicles (supervised)',
            'view drivers (supervised)', 'assign drivers (supervised)',
            'view maintenance (supervised)',
            'view trips (supervised)', 'create trips (supervised)', 'assign trips (supervised)',
            'view reports (supervised)', 'create reports (supervised)',
        ];
        
        $supervisorRole->syncPermissions($supervisorPermissions);

        // Chauffeur
        $driverRole = Role::firstOrCreate([
            'name' => 'driver',
            'guard_name' => 'web'
        ]);
        
        $driverPermissions = [
            'view dashboard',
            'view vehicles (own)', 'track vehicles (own)',
            'view trips (own)',
            'view maintenance (own)'
        ];
        
        $driverRole->syncPermissions($driverPermissions);
    }

    public function assignUserToOrganization(User $user, Organization $organization, string $role): bool
    {
        return DB::transaction(function () use ($user, $organization, $role) {
            $user->update(['organization_id' => $organization->id]);
            $user->assignRole($role);
            
            $this->clearUserPermissionsCache($user);
            $this->auditLog($user, 'role_assigned', $user, ['role' => $role]);
            
            return true;
        });
    }

    public function assignSupervisorToDrivers(User $supervisor, Collection $drivers): bool
    {
        if (!$supervisor->hasRole('supervisor')) {
            throw new \InvalidArgumentException('User must have supervisor role');
        }

        return DB::transaction(function () use ($supervisor, $drivers) {
            // Supprimer les anciennes assignations
            SupervisorDriverAssignment::where('supervisor_id', $supervisor->id)
                ->where('is_active', true)
                ->update(['is_active' => false]);

            // Cr√©er les nouvelles assignations
            foreach ($drivers as $driver) {
                if ($driver->organization_id !== $supervisor->organization_id) {
                    throw new \InvalidArgumentException('Driver and supervisor must be in same organization');
                }

                SupervisorDriverAssignment::create([
                    'supervisor_id' => $supervisor->id,
                    'driver_id' => $driver->id,
                    'assigned_by' => auth()->id(),
                    'assigned_at' => now(),
                    'is_active' => true
                ]);
            }

            $this->clearUserPermissionsCache($supervisor);
            $this->auditLog(auth()->user(), 'supervisor_assignment', $supervisor, [
                'drivers' => $drivers->pluck('id')->toArray()
            ]);

            return true;
        });
    }

    public function assignSupervisorToVehicles(User $supervisor, Collection $vehicles): bool
    {
        if (!$supervisor->hasRole('supervisor')) {
            throw new \InvalidArgumentException('User must have supervisor role');
        }

        return DB::transaction(function () use ($supervisor, $vehicles) {
            // Supprimer les anciennes assignations
            UserVehicleAssignment::where('supervisor_id', $supervisor->id)
                ->where('is_active', true)
                ->update(['is_active' => false]);

            // Cr√©er les nouvelles assignations
            foreach ($vehicles as $vehicle) {
                if ($vehicle->organization_id !== $supervisor->organization_id) {
                    throw new \InvalidArgumentException('Vehicle and supervisor must be in same organization');
                }

                UserVehicleAssignment::create([
                    'supervisor_id' => $supervisor->id,
                    'vehicle_id' => $vehicle->id,
                    'assigned_by' => auth()->id(),
                    'assigned_at' => now(),
                    'is_active' => true
                ]);
            }

            $this->clearUserPermissionsCache($supervisor);
            $this->auditLog(auth()->user(), 'vehicle_assignment', $supervisor, [
                'vehicles' => $vehicles->pluck('id')->toArray()
            ]);

            return true;
        });
    }

    public function canUserAccessResource(User $user, string $permission, $resource = null): bool
    {
        // Super admin a tous les droits
        if ($user->is_super_admin) {
            return true;
        }

        // V√©rifier si l'utilisateur a la permission directement
        if ($user->can($permission)) {
            return true;
        }

        // V√©rifier les permissions avec scope
        return $this->checkScopedPermission($user, $permission, $resource);
    }

    private function checkScopedPermission(User $user, string $permission, $resource): bool
    {
        // Permission supervised
        $supervisedPermission = str_replace(' ', ' ', $permission) . ' (supervised)';
        if ($user->can($supervisedPermission)) {
            return $this->isResourceSupervised($user, $resource);
        }

        // Permission own
        $ownPermission = str_replace(' ', ' ', $permission) . ' (own)';
        if ($user->can($ownPermission)) {
            return $this->isResourceOwned($user, $resource);
        }

        return false;
    }

    private function isResourceSupervised(User $user, $resource): bool
    {
        if (!$resource) {
            return true;
        }

        if ($resource instanceof User) {
            return SupervisorDriverAssignment::where('supervisor_id', $user->id)
                ->where('driver_id', $resource->id)
                ->where('is_active', true)
                ->exists();
        }

        if ($resource instanceof Vehicle) {
            return UserVehicleAssignment::where('supervisor_id', $user->id)
                ->where('vehicle_id', $resource->id)
                ->where('is_active', true)
                ->exists();
        }

        return false;
    }

    private function isResourceOwned(User $user, $resource): bool
    {
        if (!$resource) {
            return true;
        }

        if ($resource instanceof User) {
            return $resource->id === $user->id;
        }

        if ($resource instanceof Vehicle) {
            return $resource->assigned_driver_id === $user->id;
        }

        return false;
    }

    public function getUserPermissionsCache(User $user): array
    {
        return Cache::remember(
            "user_permissions_{$user->id}",
            self::CACHE_TTL,
            function () use ($user) {
                $permissions = $user->getAllPermissions()->pluck('name')->toArray();
                
                // Ajouter les ressources supervis√©es
                if ($user->hasRole('supervisor')) {
                    $permissions['supervised_drivers'] = SupervisorDriverAssignment::where('supervisor_id', $user->id)
                        ->where('is_active', true)
                        ->pluck('driver_id')
                        ->toArray();
                        
                    $permissions['supervised_vehicles'] = UserVehicleAssignment::where('supervisor_id', $user->id)
                        ->where('is_active', true)
                        ->pluck('vehicle_id')
                        ->toArray();
                }
                
                return $permissions;
            }
        );
    }

    public function clearUserPermissionsCache(User $user): void
    {
        Cache::forget("user_permissions_{$user->id}");
        
        // Mettre √† jour le cache en base
        $user->update([
            'permissions_cache' => $this->getUserPermissionsCache($user)
        ]);
    }

    private function auditLog(User $user, string $action, $resource, array $data = []): void
    {
        PermissionAuditLog::create([
            'user_id' => $user->id,
            'organization_id' => $user->organization_id ?? 1,
            'action' => $action,
            'resource_type' => get_class($resource),
            'resource_id' => $resource->id,
            'new_values' => $data,
            'ip_address' => request()->ip(),
            'user_agent' => request()->userAgent(),
            'performed_at' => now()
        ]);
    }

    public function getOrganizationStats(Organization $organization): array
    {
        return [
            'users_count' => $organization->users()->count(),
            'vehicles_count' => $organization->vehicles()->count(),
            'active_trips' => $organization->trips()->where('status', 'active')->count(),
            'pending_maintenance' => $organization->maintenanceRecords()
                ->where('status', 'pending')->count(),
            'roles_distribution' => $organization->users()
                ->with('roles')
                ->get()
                ->groupBy(function ($user) {
                    return $user->roles->first()->name ?? 'no_role';
                })
                ->map(function ($users) {
                    return $users->count();
                })
        ];
    }
}


--- FIN DU FICHIER : ./app/Services/PermissionService.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Services/SupplierCategoryService.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Services;

use App\Models\SupplierCategory;
use Illuminate\Support\Facades\Auth; // <-- AJOUT

class SupplierCategoryService
{
    public function createCategory(array $data): SupplierCategory
    {
        // CORRECTION : On fusionne les donn√©es valid√©es avec l'ID de l'organisation de l'utilisateur.
        $dataWithOrg = array_merge($data, [
            'organization_id' => Auth::user()->organization_id
        ]);

        return SupplierCategory::create($dataWithOrg);
    }
}
--- FIN DU FICHIER : ./app/Services/SupplierCategoryService.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Services/SupplierService.php
////////////////////////////////////////////////////////////////

<?php

namespace App\Services;

use App\Models\Supplier;
use App\Models\SupplierCategory; // <-- AJOUT
use App\Repositories\Interfaces\SupplierRepositoryInterface;
use Illuminate\Pagination\LengthAwarePaginator;

class SupplierService
{
    protected SupplierRepositoryInterface $supplierRepository;

    public function __construct(SupplierRepositoryInterface $supplierRepository)
    {
        $this->supplierRepository = $supplierRepository;
    }

    /**
     * R√©cup√®re les fournisseurs pour la page d'index via le repository.
     */
    public function getFilteredSuppliers(array $filters): LengthAwarePaginator
    {
        return $this->supplierRepository->getFiltered($filters);
    }

    /**
     * R√©cup√®re les donn√©es n√©cessaires pour les formulaires de cr√©ation/modification.
     */
    /**
     * R√©cup√®re les donn√©es n√©cessaires pour les formulaires de cr√©ation/modification.
     */
    public function getDataForCreateForm(): array
    {
        // CORRECTION : On retourne un simple tableau avec les donn√©es.
        return [
            'categories' => SupplierCategory::orderBy('name')->get(),
        ];
    }

    /**
     * G√®re la cr√©ation d'un fournisseur.
     */
    public function createSupplier(array $data): Supplier
    {
        return $this->supplierRepository->create($data);
    }

    /**
     * G√®re la mise √† jour d'un fournisseur.
     */
    public function updateSupplier(Supplier $supplier, array $data): bool
    {
        return $this->supplierRepository->update($supplier, $data);
    }

    /**
     * G√®re l'archivage d'un fournisseur.
     */
    public function archiveSupplier(Supplier $supplier): bool
    {
        return $this->supplierRepository->archive($supplier);
    }
}
--- FIN DU FICHIER : ./app/Services/SupplierService.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/Services/VehicleService.php
////////////////////////////////////////////////////////////////

<?php
namespace App\Services;

use App\Models\Vehicle;
use App\Repositories\Interfaces\VehicleRepositoryInterface;
use Illuminate\Pagination\LengthAwarePaginator;
use Illuminate\Support\Facades\Storage;

class VehicleService
{
    protected VehicleRepositoryInterface $vehicleRepository;

    public function __construct(VehicleRepositoryInterface $vehicleRepository)
    {
        $this->vehicleRepository = $vehicleRepository;
    }

    public function getFilteredVehicles(array $filters): LengthAwarePaginator
    {
        return $this->vehicleRepository->getFiltered($filters);
    }

    public function createVehicle(array $data, ?UploadedFile $photo, array $userIds = []): Vehicle
    {
        if ($photo) {
            $data['photo_path'] = $photo->store('vehicles/photos', 'public');
        }
        $data['current_mileage'] = $data['initial_mileage'];

        $vehicle = $this->vehicleRepository->create($data);

        if (!empty($userIds)) {
            $vehicle->users()->sync($userIds);
        }

        return $vehicle;
    }

    public function updateVehicle(Vehicle $vehicle, array $data, ?UploadedFile $photo, array $userIds = []): bool
    {
        if ($photo) {
            if ($vehicle->photo_path) {
                Storage::disk('public')->delete($vehicle->photo_path);
            }
            $data['photo_path'] = $photo->store('vehicles/photos', 'public');
        }

        $updated = $this->vehicleRepository->update($vehicle, $data);

        if ($updated) {
            $vehicle->users()->sync($userIds);
        }

        return $updated;
    }

    public function archiveVehicle(Vehicle $vehicle): bool
    {
        return $this->vehicleRepository->delete($vehicle);
    }

    public function restoreVehicle(int $vehicleId): bool
    {
        $vehicle = $this->vehicleRepository->findTrashed($vehicleId);
        if ($vehicle) {
            return $this->vehicleRepository->restore($vehicle);
        }
        return false;
    }

    public function forceDeleteVehicle(int $vehicleId): bool
    {
        $vehicle = $this->vehicleRepository->findTrashed($vehicleId);
        if ($vehicle) {
            if ($vehicle->photo_path) {
                Storage::disk('public')->delete($vehicle->photo_path);
            }
            return $this->vehicleRepository->forceDelete($vehicle);
        }
        return false;
    }
}
--- FIN DU FICHIER : ./app/Services/VehicleService.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/View/Components/AppLayout.php
////////////////////////////////////////////////////////////////

<?php

namespace App\View\Components;

use Illuminate\View\Component;
use Illuminate\View\View;

class AppLayout extends Component
{
    /**
     * Get the view / contents that represents the component.
     */
    public function render(): View
    {
        return view('layouts.app');
    }
}

--- FIN DU FICHIER : ./app/View/Components/AppLayout.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./app/View/Components/GuestLayout.php
////////////////////////////////////////////////////////////////

<?php

namespace App\View\Components;

use Illuminate\View\Component;
use Illuminate\View\View;

class GuestLayout extends Component
{
    /**
     * Get the view / contents that represents the component.
     */
    public function render(): View
    {
        return view('layouts.guest');
    }
}

--- FIN DU FICHIER : ./app/View/Components/GuestLayout.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./bootstrap/app.php
////////////////////////////////////////////////////////////////

<?php

/*
|--------------------------------------------------------------------------
| Create The Application
|--------------------------------------------------------------------------
|
| The first thing we will do is create a new Laravel application instance
| which serves as the "glue" for all the components of Laravel, and is
| the IoC container for the system binding all of the various parts.
|
*/

$app = new Illuminate\Foundation\Application(
    $_ENV['APP_BASE_PATH'] ?? dirname(__DIR__)
);

/*
|--------------------------------------------------------------------------
| Bind Important Interfaces
|--------------------------------------------------------------------------
|
| Next, we need to bind some important interfaces into the container so
| we will be able to resolve them when needed. The kernels serve the
| incoming requests to this application from both the web and CLI.
|
*/

$app->singleton(
    Illuminate\Contracts\Http\Kernel::class,
    App\Http\Kernel::class
);

$app->singleton(
    Illuminate\Contracts\Console\Kernel::class,
    App\Console\Kernel::class
);

$app->singleton(
    Illuminate\Contracts\Debug\ExceptionHandler::class,
    App\Exceptions\Handler::class
);

/*
|--------------------------------------------------------------------------
| Return The Application
|--------------------------------------------------------------------------
|
| This script returns the application instance. The instance is given to
| the calling script so we can separate the building of the instances
| from the actual running of the application and sending responses.
|
*/

return $app;

--- FIN DU FICHIER : ./bootstrap/app.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./bootstrap/cache/.gitignore
////////////////////////////////////////////////////////////////

*
!.gitignore

--- FIN DU FICHIER : ./bootstrap/cache/.gitignore ---


////////////////////////////////////////////////////////////////
CHEMIN : ./bootstrap/cache/packages.php
////////////////////////////////////////////////////////////////

<?php return array (
  'blade-ui-kit/blade-icons' => 
  array (
    'providers' => 
    array (
      0 => 'BladeUI\\Icons\\BladeIconsServiceProvider',
    ),
  ),
  'laravel-lang/config' => 
  array (
    'providers' => 
    array (
      0 => 'LaravelLang\\Config\\ServiceProvider',
    ),
  ),
  'laravel-lang/lang' => 
  array (
    'providers' => 
    array (
      0 => 'LaravelLang\\Lang\\ServiceProvider',
    ),
  ),
  'laravel-lang/locales' => 
  array (
    'providers' => 
    array (
      0 => 'LaravelLang\\Locales\\ServiceProvider',
    ),
  ),
  'laravel-lang/publisher' => 
  array (
    'providers' => 
    array (
      0 => 'LaravelLang\\Publisher\\ServiceProvider',
    ),
  ),
  'laravel/breeze' => 
  array (
    'providers' => 
    array (
      0 => 'Laravel\\Breeze\\BreezeServiceProvider',
    ),
  ),
  'laravel/sail' => 
  array (
    'providers' => 
    array (
      0 => 'Laravel\\Sail\\SailServiceProvider',
    ),
  ),
  'laravel/sanctum' => 
  array (
    'providers' => 
    array (
      0 => 'Laravel\\Sanctum\\SanctumServiceProvider',
    ),
  ),
  'laravel/tinker' => 
  array (
    'providers' => 
    array (
      0 => 'Laravel\\Tinker\\TinkerServiceProvider',
    ),
  ),
  'mallardduck/blade-lucide-icons' => 
  array (
    'providers' => 
    array (
      0 => 'MallardDuck\\LucideIcons\\BladeLucideIconsServiceProvider',
    ),
  ),
  'nesbot/carbon' => 
  array (
    'providers' => 
    array (
      0 => 'Carbon\\Laravel\\ServiceProvider',
    ),
  ),
  'nunomaduro/collision' => 
  array (
    'providers' => 
    array (
      0 => 'NunoMaduro\\Collision\\Adapters\\Laravel\\CollisionServiceProvider',
    ),
  ),
  'nunomaduro/termwind' => 
  array (
    'providers' => 
    array (
      0 => 'Termwind\\Laravel\\TermwindServiceProvider',
    ),
  ),
  'spatie/laravel-ignition' => 
  array (
    'aliases' => 
    array (
      'Flare' => 'Spatie\\LaravelIgnition\\Facades\\Flare',
    ),
    'providers' => 
    array (
      0 => 'Spatie\\LaravelIgnition\\IgnitionServiceProvider',
    ),
  ),
  'spatie/laravel-permission' => 
  array (
    'providers' => 
    array (
      0 => 'Spatie\\Permission\\PermissionServiceProvider',
    ),
  ),
);
--- FIN DU FICHIER : ./bootstrap/cache/packages.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./bootstrap/cache/services.php
////////////////////////////////////////////////////////////////

<?php return array (
  'providers' => 
  array (
    0 => 'Illuminate\\Auth\\AuthServiceProvider',
    1 => 'Illuminate\\Broadcasting\\BroadcastServiceProvider',
    2 => 'Illuminate\\Bus\\BusServiceProvider',
    3 => 'Illuminate\\Cache\\CacheServiceProvider',
    4 => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    5 => 'Illuminate\\Cookie\\CookieServiceProvider',
    6 => 'Illuminate\\Database\\DatabaseServiceProvider',
    7 => 'Illuminate\\Encryption\\EncryptionServiceProvider',
    8 => 'Illuminate\\Filesystem\\FilesystemServiceProvider',
    9 => 'Illuminate\\Foundation\\Providers\\FoundationServiceProvider',
    10 => 'Illuminate\\Hashing\\HashServiceProvider',
    11 => 'Illuminate\\Mail\\MailServiceProvider',
    12 => 'Illuminate\\Notifications\\NotificationServiceProvider',
    13 => 'Illuminate\\Pagination\\PaginationServiceProvider',
    14 => 'Illuminate\\Auth\\Passwords\\PasswordResetServiceProvider',
    15 => 'Illuminate\\Pipeline\\PipelineServiceProvider',
    16 => 'Illuminate\\Queue\\QueueServiceProvider',
    17 => 'Illuminate\\Redis\\RedisServiceProvider',
    18 => 'Illuminate\\Session\\SessionServiceProvider',
    19 => 'Illuminate\\Translation\\TranslationServiceProvider',
    20 => 'Illuminate\\Validation\\ValidationServiceProvider',
    21 => 'Illuminate\\View\\ViewServiceProvider',
    22 => 'BladeUI\\Icons\\BladeIconsServiceProvider',
    23 => 'LaravelLang\\Config\\ServiceProvider',
    24 => 'LaravelLang\\Lang\\ServiceProvider',
    25 => 'LaravelLang\\Locales\\ServiceProvider',
    26 => 'LaravelLang\\Publisher\\ServiceProvider',
    27 => 'Laravel\\Breeze\\BreezeServiceProvider',
    28 => 'Laravel\\Sail\\SailServiceProvider',
    29 => 'Laravel\\Sanctum\\SanctumServiceProvider',
    30 => 'Laravel\\Tinker\\TinkerServiceProvider',
    31 => 'MallardDuck\\LucideIcons\\BladeLucideIconsServiceProvider',
    32 => 'Carbon\\Laravel\\ServiceProvider',
    33 => 'NunoMaduro\\Collision\\Adapters\\Laravel\\CollisionServiceProvider',
    34 => 'Termwind\\Laravel\\TermwindServiceProvider',
    35 => 'Spatie\\LaravelIgnition\\IgnitionServiceProvider',
    36 => 'Spatie\\Permission\\PermissionServiceProvider',
    37 => 'App\\Providers\\AppServiceProvider',
    38 => 'App\\Providers\\AuthServiceProvider',
    39 => 'App\\Providers\\EventServiceProvider',
    40 => 'App\\Providers\\RouteServiceProvider',
    41 => 'Spatie\\Permission\\PermissionServiceProvider',
    42 => 'App\\Providers\\RepositoryServiceProvider',
  ),
  'eager' => 
  array (
    0 => 'Illuminate\\Auth\\AuthServiceProvider',
    1 => 'Illuminate\\Cookie\\CookieServiceProvider',
    2 => 'Illuminate\\Database\\DatabaseServiceProvider',
    3 => 'Illuminate\\Encryption\\EncryptionServiceProvider',
    4 => 'Illuminate\\Filesystem\\FilesystemServiceProvider',
    5 => 'Illuminate\\Foundation\\Providers\\FoundationServiceProvider',
    6 => 'Illuminate\\Notifications\\NotificationServiceProvider',
    7 => 'Illuminate\\Pagination\\PaginationServiceProvider',
    8 => 'Illuminate\\Session\\SessionServiceProvider',
    9 => 'Illuminate\\View\\ViewServiceProvider',
    10 => 'BladeUI\\Icons\\BladeIconsServiceProvider',
    11 => 'LaravelLang\\Config\\ServiceProvider',
    12 => 'LaravelLang\\Lang\\ServiceProvider',
    13 => 'LaravelLang\\Locales\\ServiceProvider',
    14 => 'LaravelLang\\Publisher\\ServiceProvider',
    15 => 'Laravel\\Sanctum\\SanctumServiceProvider',
    16 => 'MallardDuck\\LucideIcons\\BladeLucideIconsServiceProvider',
    17 => 'Carbon\\Laravel\\ServiceProvider',
    18 => 'NunoMaduro\\Collision\\Adapters\\Laravel\\CollisionServiceProvider',
    19 => 'Termwind\\Laravel\\TermwindServiceProvider',
    20 => 'Spatie\\LaravelIgnition\\IgnitionServiceProvider',
    21 => 'Spatie\\Permission\\PermissionServiceProvider',
    22 => 'App\\Providers\\AppServiceProvider',
    23 => 'App\\Providers\\AuthServiceProvider',
    24 => 'App\\Providers\\EventServiceProvider',
    25 => 'App\\Providers\\RouteServiceProvider',
    26 => 'Spatie\\Permission\\PermissionServiceProvider',
    27 => 'App\\Providers\\RepositoryServiceProvider',
  ),
  'deferred' => 
  array (
    'Illuminate\\Broadcasting\\BroadcastManager' => 'Illuminate\\Broadcasting\\BroadcastServiceProvider',
    'Illuminate\\Contracts\\Broadcasting\\Factory' => 'Illuminate\\Broadcasting\\BroadcastServiceProvider',
    'Illuminate\\Contracts\\Broadcasting\\Broadcaster' => 'Illuminate\\Broadcasting\\BroadcastServiceProvider',
    'Illuminate\\Bus\\Dispatcher' => 'Illuminate\\Bus\\BusServiceProvider',
    'Illuminate\\Contracts\\Bus\\Dispatcher' => 'Illuminate\\Bus\\BusServiceProvider',
    'Illuminate\\Contracts\\Bus\\QueueingDispatcher' => 'Illuminate\\Bus\\BusServiceProvider',
    'Illuminate\\Bus\\BatchRepository' => 'Illuminate\\Bus\\BusServiceProvider',
    'Illuminate\\Bus\\DatabaseBatchRepository' => 'Illuminate\\Bus\\BusServiceProvider',
    'cache' => 'Illuminate\\Cache\\CacheServiceProvider',
    'cache.store' => 'Illuminate\\Cache\\CacheServiceProvider',
    'cache.psr6' => 'Illuminate\\Cache\\CacheServiceProvider',
    'memcached.connector' => 'Illuminate\\Cache\\CacheServiceProvider',
    'Illuminate\\Cache\\RateLimiter' => 'Illuminate\\Cache\\CacheServiceProvider',
    'Illuminate\\Foundation\\Console\\AboutCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Cache\\Console\\ClearCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Cache\\Console\\ForgetCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ClearCompiledCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Auth\\Console\\ClearResetsCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ConfigCacheCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ConfigClearCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ConfigShowCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\DbCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\MonitorCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\PruneCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\ShowCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\TableCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\WipeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\DownCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\EnvironmentCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\EnvironmentDecryptCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\EnvironmentEncryptCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\EventCacheCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\EventClearCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\EventListCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\KeyGenerateCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\OptimizeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\OptimizeClearCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\PackageDiscoverCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Cache\\Console\\PruneStaleTagsCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\ClearCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\ListFailedCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\FlushFailedCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\ForgetFailedCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\ListenCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\MonitorCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\PruneBatchesCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\PruneFailedJobsCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\RestartCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\RetryCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\RetryBatchCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\WorkCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\RouteCacheCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\RouteClearCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\RouteListCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\DumpCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\Seeds\\SeedCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Console\\Scheduling\\ScheduleFinishCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Console\\Scheduling\\ScheduleListCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Console\\Scheduling\\ScheduleRunCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Console\\Scheduling\\ScheduleClearCacheCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Console\\Scheduling\\ScheduleTestCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Console\\Scheduling\\ScheduleWorkCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Console\\Scheduling\\ScheduleInterruptCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\ShowModelCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\StorageLinkCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\StorageUnlinkCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\UpCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ViewCacheCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ViewClearCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Cache\\Console\\CacheTableCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\CastMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ChannelListCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ChannelMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ComponentMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ConsoleMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Routing\\Console\\ControllerMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\DocsCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\EventGenerateCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\EventMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ExceptionMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\Factories\\FactoryMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\JobMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\LangPublishCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ListenerMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\MailMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Routing\\Console\\MiddlewareMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ModelMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\NotificationMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Notifications\\Console\\NotificationTableCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ObserverMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\PolicyMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ProviderMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\FailedTableCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\TableCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\BatchesTableCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\RequestMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ResourceMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\RuleMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ScopeMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\Seeds\\SeederMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Session\\Console\\SessionTableCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ServeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\StubPublishCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\TestMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\VendorPublishCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ViewMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'migrator' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'migration.repository' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'migration.creator' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\Migrations\\MigrateCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\Migrations\\FreshCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\Migrations\\InstallCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\Migrations\\RefreshCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\Migrations\\ResetCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\Migrations\\RollbackCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\Migrations\\StatusCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\Migrations\\MigrateMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'composer' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'hash' => 'Illuminate\\Hashing\\HashServiceProvider',
    'hash.driver' => 'Illuminate\\Hashing\\HashServiceProvider',
    'mail.manager' => 'Illuminate\\Mail\\MailServiceProvider',
    'mailer' => 'Illuminate\\Mail\\MailServiceProvider',
    'Illuminate\\Mail\\Markdown' => 'Illuminate\\Mail\\MailServiceProvider',
    'auth.password' => 'Illuminate\\Auth\\Passwords\\PasswordResetServiceProvider',
    'auth.password.broker' => 'Illuminate\\Auth\\Passwords\\PasswordResetServiceProvider',
    'Illuminate\\Contracts\\Pipeline\\Hub' => 'Illuminate\\Pipeline\\PipelineServiceProvider',
    'pipeline' => 'Illuminate\\Pipeline\\PipelineServiceProvider',
    'queue' => 'Illuminate\\Queue\\QueueServiceProvider',
    'queue.connection' => 'Illuminate\\Queue\\QueueServiceProvider',
    'queue.failer' => 'Illuminate\\Queue\\QueueServiceProvider',
    'queue.listener' => 'Illuminate\\Queue\\QueueServiceProvider',
    'queue.worker' => 'Illuminate\\Queue\\QueueServiceProvider',
    'redis' => 'Illuminate\\Redis\\RedisServiceProvider',
    'redis.connection' => 'Illuminate\\Redis\\RedisServiceProvider',
    'translator' => 'Illuminate\\Translation\\TranslationServiceProvider',
    'translation.loader' => 'Illuminate\\Translation\\TranslationServiceProvider',
    'validator' => 'Illuminate\\Validation\\ValidationServiceProvider',
    'validation.presence' => 'Illuminate\\Validation\\ValidationServiceProvider',
    'Illuminate\\Contracts\\Validation\\UncompromisedVerifier' => 'Illuminate\\Validation\\ValidationServiceProvider',
    'Laravel\\Breeze\\Console\\InstallCommand' => 'Laravel\\Breeze\\BreezeServiceProvider',
    'Laravel\\Sail\\Console\\InstallCommand' => 'Laravel\\Sail\\SailServiceProvider',
    'Laravel\\Sail\\Console\\PublishCommand' => 'Laravel\\Sail\\SailServiceProvider',
    'command.tinker' => 'Laravel\\Tinker\\TinkerServiceProvider',
  ),
  'when' => 
  array (
    'Illuminate\\Broadcasting\\BroadcastServiceProvider' => 
    array (
    ),
    'Illuminate\\Bus\\BusServiceProvider' => 
    array (
    ),
    'Illuminate\\Cache\\CacheServiceProvider' => 
    array (
    ),
    'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider' => 
    array (
    ),
    'Illuminate\\Hashing\\HashServiceProvider' => 
    array (
    ),
    'Illuminate\\Mail\\MailServiceProvider' => 
    array (
    ),
    'Illuminate\\Auth\\Passwords\\PasswordResetServiceProvider' => 
    array (
    ),
    'Illuminate\\Pipeline\\PipelineServiceProvider' => 
    array (
    ),
    'Illuminate\\Queue\\QueueServiceProvider' => 
    array (
    ),
    'Illuminate\\Redis\\RedisServiceProvider' => 
    array (
    ),
    'Illuminate\\Translation\\TranslationServiceProvider' => 
    array (
    ),
    'Illuminate\\Validation\\ValidationServiceProvider' => 
    array (
    ),
    'Laravel\\Breeze\\BreezeServiceProvider' => 
    array (
    ),
    'Laravel\\Sail\\SailServiceProvider' => 
    array (
    ),
    'Laravel\\Tinker\\TinkerServiceProvider' => 
    array (
    ),
  ),
);
--- FIN DU FICHIER : ./bootstrap/cache/services.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./config/app.php
////////////////////////////////////////////////////////////////

<?php

use Illuminate\Support\Facades\Facade;
use Illuminate\Support\ServiceProvider;



return [

    /*
    |--------------------------------------------------------------------------
    | Application Name
    |--------------------------------------------------------------------------
    |
    | This value is the name of your application. This value is used when the
    | framework needs to place the application's name in a notification or
    | any other location as required by the application or its packages.
    |
    */

    'name' => env('APP_NAME', 'Laravel'),

    /*
    |--------------------------------------------------------------------------
    | Application Environment
    |--------------------------------------------------------------------------
    |
    | This value determines the "environment" your application is currently
    | running in. This may determine how you prefer to configure various
    | services the application utilizes. Set this in your ".env" file.
    |
    */

    'env' => env('APP_ENV', 'production'),

    /*
    |--------------------------------------------------------------------------
    | Application Debug Mode
    |--------------------------------------------------------------------------
    |
    | When your application is in debug mode, detailed error messages with
    | stack traces will be shown on every error that occurs within your
    | application. If disabled, a simple generic error page is shown.
    |
    */

    'debug' => (bool) env('APP_DEBUG', false),

    /*
    |--------------------------------------------------------------------------
    | Application URL
    |--------------------------------------------------------------------------
    |
    | This URL is used by the console to properly generate URLs when using
    | the Artisan command line tool. You should set this to the root of
    | your application so that it is used when running Artisan tasks.
    |
    */

    'url' => env('APP_URL', 'http://localhost'),

    'asset_url' => env('ASSET_URL'),

    /*
    |--------------------------------------------------------------------------
    | Application Timezone
    |--------------------------------------------------------------------------
    |
    | Here you may specify the default timezone for your application, which
    | will be used by the PHP date and date-time functions. We have gone
    | ahead and set this to a sensible default for you out of the box.
    |
    */

    'timezone' => 'Africa/Algiers',
    
    /*
    |--------------------------------------------------------------------------
    | Application Locale Configuration
    |--------------------------------------------------------------------------
    |
    | The application locale determines the default locale that will be used
    | by the translation service provider. You are free to set this value
    | to any of the locales which will be supported by the application.
    |
    */

    'locale' => 'fr',

    /*
    |--------------------------------------------------------------------------
    | Application Fallback Locale
    |--------------------------------------------------------------------------
    |
    | The fallback locale determines the locale to use when the current one
    | is not available. You may change the value to correspond to any of
    | the language folders that are provided through your application.
    |
    */

    'fallback_locale' => 'en',

    /*
    |--------------------------------------------------------------------------
    | Faker Locale
    |--------------------------------------------------------------------------
    |
    | This locale will be used by the Faker PHP library when generating fake
    | data for your database seeds. For example, this will be used to get
    | localized telephone numbers, street address information and more.
    |
    */

    'faker_locale' => 'en_US',

    /*
    |--------------------------------------------------------------------------
    | Encryption Key
    |--------------------------------------------------------------------------
    |
    | This key is used by the Illuminate encrypter service and should be set
    | to a random, 32 character string, otherwise these encrypted strings
    | will not be safe. Please do this before deploying an application!
    |
    */

    'key' => env('APP_KEY'),

    'cipher' => 'AES-256-CBC',

    /*
    |--------------------------------------------------------------------------
    | Maintenance Mode Driver
    |--------------------------------------------------------------------------
    |
    | These configuration options determine the driver used to determine and
    | manage Laravel's "maintenance mode" status. The "cache" driver will
    | allow maintenance mode to be controlled across multiple machines.
    |
    | Supported drivers: "file", "cache"
    |
    */

    'maintenance' => [
        'driver' => 'file',
        // 'store' => 'redis',
    ],

    /*
    |--------------------------------------------------------------------------
    | Autoloaded Service Providers
    |--------------------------------------------------------------------------
    |
    | The service providers listed here will be automatically loaded on the
    | request to your application. Feel free to add your own services to
    | this array to grant expanded functionality to your applications.
    |
    */

    'providers' => ServiceProvider::defaultProviders()->merge([
        /*
         * Package Service Providers...
         */

        /*
         * Application Service Providers...
         */
        App\Providers\AppServiceProvider::class,
        App\Providers\AuthServiceProvider::class,
        // App\Providers\BroadcastServiceProvider::class,
        App\Providers\EventServiceProvider::class,
	App\Providers\RouteServiceProvider::class,
	Spatie\Permission\PermissionServiceProvider::class,
	App\Providers\RepositoryServiceProvider::class,
    ])->toArray(),

    /*
    |--------------------------------------------------------------------------
    | Class Aliases
    |--------------------------------------------------------------------------
    |
    | This array of class aliases will be registered when this application
    | is started. However, feel free to register as many as you wish as
    | the aliases are "lazy" loaded so they don't hinder performance.
    |
    */

    'aliases' => Facade::defaultAliases()->merge([
        // 'Example' => App\Facades\Example::class,
    ])->toArray(),

];

--- FIN DU FICHIER : ./config/app.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./config/auth.php
////////////////////////////////////////////////////////////////

<?php

return [

    /*
    |--------------------------------------------------------------------------
    | Authentication Defaults
    |--------------------------------------------------------------------------
    |
    | This option controls the default authentication "guard" and password
    | reset options for your application. You may change these defaults
    | as required, but they're a perfect start for most applications.
    |
    */

    'defaults' => [
        'guard' => 'web',
        'passwords' => 'users',
    ],

    /*
    |--------------------------------------------------------------------------
    | Authentication Guards
    |--------------------------------------------------------------------------
    |
    | Next, you may define every authentication guard for your application.
    | Of course, a great default configuration has been defined for you
    | here which uses session storage and the Eloquent user provider.
    |
    | All authentication drivers have a user provider. This defines how the
    | users are actually retrieved out of your database or other storage
    | mechanisms used by this application to persist your user's data.
    |
    | Supported: "session"
    |
    */

    'guards' => [
        'web' => [
            'driver' => 'session',
            'provider' => 'users',
        ],
    ],

    /*
    |--------------------------------------------------------------------------
    | User Providers
    |--------------------------------------------------------------------------
    |
    | All authentication drivers have a user provider. This defines how the
    | users are actually retrieved out of your database or other storage
    | mechanisms used by this application to persist your user's data.
    |
    | If you have multiple user tables or models you may configure multiple
    | sources which represent each model / table. These sources may then
    | be assigned to any extra authentication guards you have defined.
    |
    | Supported: "database", "eloquent"
    |
    */

    'providers' => [
        'users' => [
            'driver' => 'eloquent',
            'model' => App\Models\User::class,
        ],

        // 'users' => [
        //     'driver' => 'database',
        //     'table' => 'users',
        // ],
    ],

    /*
    |--------------------------------------------------------------------------
    | Resetting Passwords
    |--------------------------------------------------------------------------
    |
    | You may specify multiple password reset configurations if you have more
    | than one user table or model in the application and you want to have
    | separate password reset settings based on the specific user types.
    |
    | The expiry time is the number of minutes that each reset token will be
    | considered valid. This security feature keeps tokens short-lived so
    | they have less time to be guessed. You may change this as needed.
    |
    | The throttle setting is the number of seconds a user must wait before
    | generating more password reset tokens. This prevents the user from
    | quickly generating a very large amount of password reset tokens.
    |
    */

    'passwords' => [
        'users' => [
            'provider' => 'users',
            'table' => 'password_reset_tokens',
            'expire' => 60,
            'throttle' => 60,
        ],
    ],

    /*
    |--------------------------------------------------------------------------
    | Password Confirmation Timeout
    |--------------------------------------------------------------------------
    |
    | Here you may define the amount of seconds before a password confirmation
    | times out and the user is prompted to re-enter their password via the
    | confirmation screen. By default, the timeout lasts for three hours.
    |
    */

    'password_timeout' => 10800,

];

--- FIN DU FICHIER : ./config/auth.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./config/broadcasting.php
////////////////////////////////////////////////////////////////

<?php

return [

    /*
    |--------------------------------------------------------------------------
    | Default Broadcaster
    |--------------------------------------------------------------------------
    |
    | This option controls the default broadcaster that will be used by the
    | framework when an event needs to be broadcast. You may set this to
    | any of the connections defined in the "connections" array below.
    |
    | Supported: "pusher", "ably", "redis", "log", "null"
    |
    */

    'default' => env('BROADCAST_DRIVER', 'null'),

    /*
    |--------------------------------------------------------------------------
    | Broadcast Connections
    |--------------------------------------------------------------------------
    |
    | Here you may define all of the broadcast connections that will be used
    | to broadcast events to other systems or over websockets. Samples of
    | each available type of connection are provided inside this array.
    |
    */

    'connections' => [

        'pusher' => [
            'driver' => 'pusher',
            'key' => env('PUSHER_APP_KEY'),
            'secret' => env('PUSHER_APP_SECRET'),
            'app_id' => env('PUSHER_APP_ID'),
            'options' => [
                'cluster' => env('PUSHER_APP_CLUSTER'),
                'host' => env('PUSHER_HOST') ?: 'api-'.env('PUSHER_APP_CLUSTER', 'mt1').'.pusher.com',
                'port' => env('PUSHER_PORT', 443),
                'scheme' => env('PUSHER_SCHEME', 'https'),
                'encrypted' => true,
                'useTLS' => env('PUSHER_SCHEME', 'https') === 'https',
            ],
            'client_options' => [
                // Guzzle client options: https://docs.guzzlephp.org/en/stable/request-options.html
            ],
        ],

        'ably' => [
            'driver' => 'ably',
            'key' => env('ABLY_KEY'),
        ],

        'redis' => [
            'driver' => 'redis',
            'connection' => 'default',
        ],

        'log' => [
            'driver' => 'log',
        ],

        'null' => [
            'driver' => 'null',
        ],

    ],

];

--- FIN DU FICHIER : ./config/broadcasting.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./config/cache.php
////////////////////////////////////////////////////////////////

<?php

use Illuminate\Support\Str;

return [

    /*
    |--------------------------------------------------------------------------
    | Default Cache Store
    |--------------------------------------------------------------------------
    |
    | This option controls the default cache connection that gets used while
    | using this caching library. This connection is used when another is
    | not explicitly specified when executing a given caching function.
    |
    */

    'default' => env('CACHE_DRIVER', 'file'),

    /*
    |--------------------------------------------------------------------------
    | Cache Stores
    |--------------------------------------------------------------------------
    |
    | Here you may define all of the cache "stores" for your application as
    | well as their drivers. You may even define multiple stores for the
    | same cache driver to group types of items stored in your caches.
    |
    | Supported drivers: "apc", "array", "database", "file",
    |         "memcached", "redis", "dynamodb", "octane", "null"
    |
    */

    'stores' => [

        'apc' => [
            'driver' => 'apc',
        ],

        'array' => [
            'driver' => 'array',
            'serialize' => false,
        ],

        'database' => [
            'driver' => 'database',
            'table' => 'cache',
            'connection' => null,
            'lock_connection' => null,
        ],

        'file' => [
            'driver' => 'file',
            'path' => storage_path('framework/cache/data'),
            'lock_path' => storage_path('framework/cache/data'),
        ],

        'memcached' => [
            'driver' => 'memcached',
            'persistent_id' => env('MEMCACHED_PERSISTENT_ID'),
            'sasl' => [
                env('MEMCACHED_USERNAME'),
                env('MEMCACHED_PASSWORD'),
            ],
            'options' => [
                // Memcached::OPT_CONNECT_TIMEOUT => 2000,
            ],
            'servers' => [
                [
                    'host' => env('MEMCACHED_HOST', '127.0.0.1'),
                    'port' => env('MEMCACHED_PORT', 11211),
                    'weight' => 100,
                ],
            ],
        ],

        'redis' => [
            'driver' => 'redis',
            'connection' => 'cache',
            'lock_connection' => 'default',
        ],

        'dynamodb' => [
            'driver' => 'dynamodb',
            'key' => env('AWS_ACCESS_KEY_ID'),
            'secret' => env('AWS_SECRET_ACCESS_KEY'),
            'region' => env('AWS_DEFAULT_REGION', 'us-east-1'),
            'table' => env('DYNAMODB_CACHE_TABLE', 'cache'),
            'endpoint' => env('DYNAMODB_ENDPOINT'),
        ],

        'octane' => [
            'driver' => 'octane',
        ],

    ],

    /*
    |--------------------------------------------------------------------------
    | Cache Key Prefix
    |--------------------------------------------------------------------------
    |
    | When utilizing the APC, database, memcached, Redis, or DynamoDB cache
    | stores there might be other applications using the same cache. For
    | that reason, you may prefix every cache key to avoid collisions.
    |
    */

    'prefix' => env('CACHE_PREFIX', Str::slug(env('APP_NAME', 'laravel'), '_').'_cache_'),

];

--- FIN DU FICHIER : ./config/cache.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./config/cors.php
////////////////////////////////////////////////////////////////

<?php

return [

    /*
    |--------------------------------------------------------------------------
    | Cross-Origin Resource Sharing (CORS) Configuration
    |--------------------------------------------------------------------------
    |
    | Here you may configure your settings for cross-origin resource sharing
    | or "CORS". This determines what cross-origin operations may execute
    | in web browsers. You are free to adjust these settings as needed.
    |
    | To learn more: https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS
    |
    */

    'paths' => ['api/*', 'sanctum/csrf-cookie'],

    'allowed_methods' => ['*'],

    'allowed_origins' => ['*'],

    'allowed_origins_patterns' => [],

    'allowed_headers' => ['*'],

    'exposed_headers' => [],

    'max_age' => 0,

    'supports_credentials' => false,

];

--- FIN DU FICHIER : ./config/cors.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./config/database.php
////////////////////////////////////////////////////////////////

<?php

use Illuminate\Support\Str;

return [

    /*
    |--------------------------------------------------------------------------
    | Default Database Connection Name
    |--------------------------------------------------------------------------
    |
    | Here you may specify which of the database connections below you wish
    | to use as your default connection for all database work. Of course
    | you may use many connections at once using the Database library.
    |
    */

    'default' => env('DB_CONNECTION', 'mysql'),

    /*
    |--------------------------------------------------------------------------
    | Database Connections
    |--------------------------------------------------------------------------
    |
    | Here are each of the database connections setup for your application.
    | Of course, examples of configuring each database platform that is
    | supported by Laravel is shown below to make development simple.
    |
    |
    | All database work in Laravel is done through the PHP PDO facilities
    | so make sure you have the driver for your particular database of
    | choice installed on your machine before you begin development.
    |
    */

    'connections' => [

        'sqlite' => [
            'driver' => 'sqlite',
            'url' => env('DATABASE_URL'),
            'database' => env('DB_DATABASE', database_path('database.sqlite')),
            'prefix' => '',
            'foreign_key_constraints' => env('DB_FOREIGN_KEYS', true),
        ],

        'mysql' => [
            'driver' => 'mysql',
            'url' => env('DATABASE_URL'),
            'host' => env('DB_HOST', '127.0.0.1'),
            'port' => env('DB_PORT', '3306'),
            'database' => env('DB_DATABASE', 'forge'),
            'username' => env('DB_USERNAME', 'forge'),
            'password' => env('DB_PASSWORD', ''),
            'unix_socket' => env('DB_SOCKET', ''),
            'charset' => 'utf8mb4',
            'collation' => 'utf8mb4_unicode_ci',
            'prefix' => '',
            'prefix_indexes' => true,
            'strict' => true,
            'engine' => null,
            'options' => extension_loaded('pdo_mysql') ? array_filter([
                PDO::MYSQL_ATTR_SSL_CA => env('MYSQL_ATTR_SSL_CA'),
            ]) : [],
        ],

        'pgsql' => [
            'driver' => 'pgsql',
            'url' => env('DATABASE_URL'),
            'host' => env('DB_HOST', '127.0.0.1'),
            'port' => env('DB_PORT', '5432'),
            'database' => env('DB_DATABASE', 'forge'),
            'username' => env('DB_USERNAME', 'forge'),
            'password' => env('DB_PASSWORD', ''),
            'charset' => 'utf8',
            'prefix' => '',
            'prefix_indexes' => true,
            'search_path' => 'public',
            'sslmode' => 'prefer',
        ],

        'sqlsrv' => [
            'driver' => 'sqlsrv',
            'url' => env('DATABASE_URL'),
            'host' => env('DB_HOST', 'localhost'),
            'port' => env('DB_PORT', '1433'),
            'database' => env('DB_DATABASE', 'forge'),
            'username' => env('DB_USERNAME', 'forge'),
            'password' => env('DB_PASSWORD', ''),
            'charset' => 'utf8',
            'prefix' => '',
            'prefix_indexes' => true,
            // 'encrypt' => env('DB_ENCRYPT', 'yes'),
            // 'trust_server_certificate' => env('DB_TRUST_SERVER_CERTIFICATE', 'false'),
        ],

    ],

    /*
    |--------------------------------------------------------------------------
    | Migration Repository Table
    |--------------------------------------------------------------------------
    |
    | This table keeps track of all the migrations that have already run for
    | your application. Using this information, we can determine which of
    | the migrations on disk haven't actually been run in the database.
    |
    */

    'migrations' => 'migrations',

    /*
    |--------------------------------------------------------------------------
    | Redis Databases
    |--------------------------------------------------------------------------
    |
    | Redis is an open source, fast, and advanced key-value store that also
    | provides a richer body of commands than a typical key-value system
    | such as APC or Memcached. Laravel makes it easy to dig right in.
    |
    */

    'redis' => [

        'client' => env('REDIS_CLIENT', 'phpredis'),

        'options' => [
            'cluster' => env('REDIS_CLUSTER', 'redis'),
            'prefix' => env('REDIS_PREFIX', Str::slug(env('APP_NAME', 'laravel'), '_').'_database_'),
        ],

        'default' => [
            'url' => env('REDIS_URL'),
            'host' => env('REDIS_HOST', '127.0.0.1'),
            'username' => env('REDIS_USERNAME'),
            'password' => env('REDIS_PASSWORD'),
            'port' => env('REDIS_PORT', '6379'),
            'database' => env('REDIS_DB', '0'),
        ],

        'cache' => [
            'url' => env('REDIS_URL'),
            'host' => env('REDIS_HOST', '127.0.0.1'),
            'username' => env('REDIS_USERNAME'),
            'password' => env('REDIS_PASSWORD'),
            'port' => env('REDIS_PORT', '6379'),
            'database' => env('REDIS_CACHE_DB', '1'),
        ],

    ],

];

--- FIN DU FICHIER : ./config/database.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./config/filesystems.php
////////////////////////////////////////////////////////////////

<?php

return [

    /*
    |--------------------------------------------------------------------------
    | Default Filesystem Disk
    |--------------------------------------------------------------------------
    |
    | Here you may specify the default filesystem disk that should be used
    | by the framework. The "local" disk, as well as a variety of cloud
    | based disks are available to your application. Just store away!
    |
    */

    'default' => env('FILESYSTEM_DISK', 'local'),

    /*
    |--------------------------------------------------------------------------
    | Filesystem Disks
    |--------------------------------------------------------------------------
    |
    | Here you may configure as many filesystem "disks" as you wish, and you
    | may even configure multiple disks of the same driver. Defaults have
    | been set up for each driver as an example of the required values.
    |
    | Supported Drivers: "local", "ftp", "sftp", "s3"
    |
    */

    'disks' => [

        'local' => [
            'driver' => 'local',
            'root' => storage_path('app'),
            'throw' => false,
        ],

        'public' => [
            'driver' => 'local',
            'root' => storage_path('app/public'),
            'url' => env('APP_URL').'/storage',
            'visibility' => 'public',
            'throw' => false,
        ],

        's3' => [
            'driver' => 's3',
            'key' => env('AWS_ACCESS_KEY_ID'),
            'secret' => env('AWS_SECRET_ACCESS_KEY'),
            'region' => env('AWS_DEFAULT_REGION'),
            'bucket' => env('AWS_BUCKET'),
            'url' => env('AWS_URL'),
            'endpoint' => env('AWS_ENDPOINT'),
            'use_path_style_endpoint' => env('AWS_USE_PATH_STYLE_ENDPOINT', false),
            'throw' => false,
        ],

    ],

    /*
    |--------------------------------------------------------------------------
    | Symbolic Links
    |--------------------------------------------------------------------------
    |
    | Here you may configure the symbolic links that will be created when the
    | `storage:link` Artisan command is executed. The array keys should be
    | the locations of the links and the values should be their targets.
    |
    */

    'links' => [
        public_path('storage') => storage_path('app/public'),
    ],

];

--- FIN DU FICHIER : ./config/filesystems.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./config/hashing.php
////////////////////////////////////////////////////////////////

<?php

return [

    /*
    |--------------------------------------------------------------------------
    | Default Hash Driver
    |--------------------------------------------------------------------------
    |
    | This option controls the default hash driver that will be used to hash
    | passwords for your application. By default, the bcrypt algorithm is
    | used; however, you remain free to modify this option if you wish.
    |
    | Supported: "bcrypt", "argon", "argon2id"
    |
    */

    'driver' => 'bcrypt',

    /*
    |--------------------------------------------------------------------------
    | Bcrypt Options
    |--------------------------------------------------------------------------
    |
    | Here you may specify the configuration options that should be used when
    | passwords are hashed using the Bcrypt algorithm. This will allow you
    | to control the amount of time it takes to hash the given password.
    |
    */

    'bcrypt' => [
        'rounds' => env('BCRYPT_ROUNDS', 12),
        'verify' => true,
    ],

    /*
    |--------------------------------------------------------------------------
    | Argon Options
    |--------------------------------------------------------------------------
    |
    | Here you may specify the configuration options that should be used when
    | passwords are hashed using the Argon algorithm. These will allow you
    | to control the amount of time it takes to hash the given password.
    |
    */

    'argon' => [
        'memory' => 65536,
        'threads' => 1,
        'time' => 4,
        'verify' => true,
    ],

];

--- FIN DU FICHIER : ./config/hashing.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./config/logging.php
////////////////////////////////////////////////////////////////

<?php

use Monolog\Handler\NullHandler;
use Monolog\Handler\StreamHandler;
use Monolog\Handler\SyslogUdpHandler;
use Monolog\Processor\PsrLogMessageProcessor;

return [

    /*
    |--------------------------------------------------------------------------
    | üìä DEFAULT LOG CHANNEL - ENTERPRISE S√âCURIS√â
    |--------------------------------------------------------------------------
    */

    'default' => env('LOG_CHANNEL', 'stack'),

    /*
    |--------------------------------------------------------------------------
    | üö® DEPRECATIONS LOG CHANNEL
    |--------------------------------------------------------------------------
    */

    'deprecations' => [
        'channel' => env('LOG_DEPRECATIONS_CHANNEL', 'null'),
        'trace' => false,
    ],

    /*
    |--------------------------------------------------------------------------
    | üõ°Ô∏è ENTERPRISE LOG CHANNELS - STANDARD INTERNATIONAL S√âCURIS√â
    |--------------------------------------------------------------------------
    */

    'channels' => [

        /*
        |----------------------------------------------------------------------
        | üìö CHANNELS PRINCIPAUX - CONFIGURATION ROBUSTE
        |----------------------------------------------------------------------
        */

        'stack' => [
            'driver' => 'stack',
            // ‚úÖ CORRECTION: Stack dynamique selon les URLs disponibles
            'channels' => array_filter([
                'daily',
                env('LOG_SLACK_WEBHOOK_URL') ? 'slack' : null,
                env('LOG_TEAMS_WEBHOOK_URL') ? 'teams' : null,
            ]),
            'ignore_exceptions' => false,
        ],

        'single' => [
            'driver' => 'single',
            'path' => storage_path('logs/laravel.log'),
            'level' => env('LOG_LEVEL', 'debug'),
            'replace_placeholders' => true,
        ],

        'daily' => [
            'driver' => 'daily',
            'path' => storage_path('logs/laravel.log'),
            'level' => env('LOG_LEVEL', 'debug'),
            'days' => env('LOG_RETENTION_DAYS', 30),
            'replace_placeholders' => true,
            'permission' => 0664,
        ],

        /*
        |----------------------------------------------------------------------
        | üõ°Ô∏è CHANNELS S√âCURIT√â ET AUDIT - ROBUSTES
        |----------------------------------------------------------------------
        */

        'audit' => [
            'driver' => 'daily',
            'path' => storage_path('logs/audit/audit.log'),
            'level' => 'info',
            'days' => env('AUDIT_RETENTION_DAYS', 365),
            'permission' => 0600,
            'replace_placeholders' => true,
        ],

        'security' => [
            'driver' => 'daily',
            'path' => storage_path('logs/security/security.log'),
            'level' => 'warning',
            'days' => env('SECURITY_RETENTION_DAYS', 180),
            'permission' => 0600,
            'replace_placeholders' => true,
        ],

        'authentication' => [
            'driver' => 'daily',
            'path' => storage_path('logs/auth/authentication.log'),
            'level' => 'info',
            'days' => env('AUTH_RETENTION_DAYS', 90),
            'permission' => 0640,
            'replace_placeholders' => true,
        ],

        'authorization' => [
            'driver' => 'daily',
            'path' => storage_path('logs/auth/authorization.log'),
            'level' => 'warning',
            'days' => env('AUTHZ_RETENTION_DAYS', 90),
            'permission' => 0640,
            'replace_placeholders' => true,
        ],

        /*
        |----------------------------------------------------------------------
        | üìà CHANNELS PERFORMANCE ET MONITORING
        |----------------------------------------------------------------------
        */

        'performance' => [
            'driver' => 'daily',
            'path' => storage_path('logs/performance/performance.log'),
            'level' => 'info',
            'days' => env('PERFORMANCE_RETENTION_DAYS', 30),
            'replace_placeholders' => true,
        ],

        'database' => [
            'driver' => 'daily',
            'path' => storage_path('logs/database/database.log'),
            'level' => env('DB_LOG_LEVEL', 'warning'),
            'days' => env('DB_RETENTION_DAYS', 14),
            'replace_placeholders' => true,
        ],

        'api' => [
            'driver' => 'daily',
            'path' => storage_path('logs/api/api.log'),
            'level' => 'info',
            'days' => env('API_RETENTION_DAYS', 30),
            'replace_placeholders' => true,
        ],

        /*
        |----------------------------------------------------------------------
        | üö® CHANNELS ERREURS ET EXCEPTIONS
        |----------------------------------------------------------------------
        */

        'errors' => [
            'driver' => 'daily',
            'path' => storage_path('logs/errors/errors.log'),
            'level' => 'error',
            'days' => env('ERROR_RETENTION_DAYS', 60),
            'permission' => 0640,
            'replace_placeholders' => true,
        ],

        'critical' => [
            'driver' => 'daily',
            'path' => storage_path('logs/critical/critical.log'),
            'level' => 'critical',
            'days' => env('CRITICAL_RETENTION_DAYS', 180),
            'permission' => 0600,
            'replace_placeholders' => true,
        ],

        /*
        |----------------------------------------------------------------------
        | üì± CHANNELS NOTIFICATIONS EXTERNES - AVEC VALIDATION
        |----------------------------------------------------------------------
        */

        'slack' => [
            'driver' => 'slack',
            // ‚úÖ S√âCURIT√â: Validation de l'URL avant utilisation
            'url' => env('LOG_SLACK_WEBHOOK_URL') ?: null,
            'username' => env('APP_NAME', 'ZenFleet') . ' Logger',
            'emoji' => ':warning:',
            'level' => env('SLACK_LOG_LEVEL', 'error'),
            'replace_placeholders' => true,
            // Fallback si URL invalide
            'context' => [
                'validate_url' => true,
                'fallback_channel' => 'daily'
            ],
        ],

        'teams' => [
            'driver' => 'custom',
            'via' => App\Logging\CustomTeamsLogger::class,
            'url' => env('LOG_TEAMS_WEBHOOK_URL'),
            'level' => env('TEAMS_LOG_LEVEL', 'critical'),
            'validate_url' => true,
        ],

        /*
        |----------------------------------------------------------------------
        | üìß CHANNELS EMAIL POUR ALERTES CRITIQUES
        |----------------------------------------------------------------------
        */

        'mail' => [
            'driver' => 'custom',
            'via' => App\Logging\CustomMailLogger::class,
            'to' => env('ADMIN_EMAIL', 'admin@zenfleet.app'),
            'subject' => env('APP_NAME') . ' - Alerte Critique',
            'level' => 'critical',
        ],

        /*
        |----------------------------------------------------------------------
        | üñ•Ô∏è CHANNELS SYST√àME STANDARDS
        |----------------------------------------------------------------------
        */

        'papertrail' => [
            'driver' => 'monolog',
            'level' => env('LOG_LEVEL', 'debug'),
            'handler' => env('LOG_PAPERTRAIL_HANDLER', SyslogUdpHandler::class),
            'handler_with' => [
                'host' => env('PAPERTRAIL_URL'),
                'port' => env('PAPERTRAIL_PORT'),
                'connectionString' => 'tls://'.env('PAPERTRAIL_URL').':'.env('PAPERTRAIL_PORT'),
            ],
            'processors' => [PsrLogMessageProcessor::class],
        ],

        'stderr' => [
            'driver' => 'monolog',
            'level' => env('LOG_LEVEL', 'debug'),
            'handler' => StreamHandler::class,
            'formatter' => env('LOG_STDERR_FORMATTER'),
            'with' => [
                'stream' => 'php://stderr',
            ],
            'processors' => [PsrLogMessageProcessor::class],
        ],

        'syslog' => [
            'driver' => 'syslog',
            'level' => env('LOG_LEVEL', 'debug'),
            'facility' => LOG_USER,
            'replace_placeholders' => true,
        ],

        'errorlog' => [
            'driver' => 'errorlog',
            'level' => env('LOG_LEVEL', 'debug'),
            'replace_placeholders' => true,
        ],

        'null' => [
            'driver' => 'monolog',
            'handler' => NullHandler::class,
        ],

        'emergency' => [
            'path' => storage_path('logs/emergency.log'),
        ],

        /*
        |----------------------------------------------------------------------
        | üè¢ CHANNELS M√âTIER ZENFLEET - BUSINESS LOGIC
        |----------------------------------------------------------------------
        */

        'vehicle_tracking' => [
            'driver' => 'daily',
            'path' => storage_path('logs/business/vehicle_tracking.log'),
            'level' => 'info',
            'days' => env('TRACKING_RETENTION_DAYS', 90),
            'replace_placeholders' => true,
        ],

        'maintenance' => [
            'driver' => 'daily',
            'path' => storage_path('logs/business/maintenance.log'),
            'level' => 'info',
            'days' => env('MAINTENANCE_RETENTION_DAYS', 180),
            'replace_placeholders' => true,
        ],

        'assignments' => [
            'driver' => 'daily',
            'path' => storage_path('logs/business/assignments.log'),
            'level' => 'info',
            'days' => env('ASSIGNMENT_RETENTION_DAYS', 60),
            'replace_placeholders' => true,
        ],

        'organizations' => [
            'driver' => 'daily',
            'path' => storage_path('logs/business/organizations.log'),
            'level' => 'info',
            'days' => env('ORGANIZATION_RETENTION_DAYS', 180),
            'replace_placeholders' => true,
        ],

    ],

    /*
    |--------------------------------------------------------------------------
    | üéõÔ∏è CONFIGURATION ENTERPRISE AVANC√âE
    |--------------------------------------------------------------------------
    */

    'log_rotation' => [
        'enabled' => env('LOG_ROTATION_ENABLED', true),
        'max_size' => env('LOG_MAX_SIZE', '100MB'),
        'compress' => env('LOG_COMPRESS', true),
    ],

    'monitoring' => [
        'enabled' => env('LOG_MONITORING_ENABLED', false),
        'alert_threshold' => env('LOG_ALERT_THRESHOLD', 100),
        'channels' => array_filter([
            env('LOG_SLACK_WEBHOOK_URL') ? 'slack' : null,
            env('ADMIN_EMAIL') ? 'mail' : null,
        ]),
    ],

    /*
    |--------------------------------------------------------------------------
    | üîß CONFIGURATION DE D√âVELOPPEMENT
    |--------------------------------------------------------------------------
    */

    'development' => [
        'query_log' => env('LOG_QUERIES', false),
        'dump_server' => env('LOG_DUMP_SERVER', false),
        'telescope' => env('TELESCOPE_ENABLED', false),
    ],

];

--- FIN DU FICHIER : ./config/logging.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./config/mail.php
////////////////////////////////////////////////////////////////

<?php

return [

    /*
    |--------------------------------------------------------------------------
    | Default Mailer
    |--------------------------------------------------------------------------
    |
    | This option controls the default mailer that is used to send any email
    | messages sent by your application. Alternative mailers may be setup
    | and used as needed; however, this mailer will be used by default.
    |
    */

    'default' => env('MAIL_MAILER', 'smtp'),

    /*
    |--------------------------------------------------------------------------
    | Mailer Configurations
    |--------------------------------------------------------------------------
    |
    | Here you may configure all of the mailers used by your application plus
    | their respective settings. Several examples have been configured for
    | you and you are free to add your own as your application requires.
    |
    | Laravel supports a variety of mail "transport" drivers to be used while
    | sending an e-mail. You will specify which one you are using for your
    | mailers below. You are free to add additional mailers as required.
    |
    | Supported: "smtp", "sendmail", "mailgun", "ses", "ses-v2",
    |            "postmark", "log", "array", "failover", "roundrobin"
    |
    */

    'mailers' => [
        'smtp' => [
            'transport' => 'smtp',
            'url' => env('MAIL_URL'),
            'host' => env('MAIL_HOST', 'smtp.mailgun.org'),
            'port' => env('MAIL_PORT', 587),
            'encryption' => env('MAIL_ENCRYPTION', 'tls'),
            'username' => env('MAIL_USERNAME'),
            'password' => env('MAIL_PASSWORD'),
            'timeout' => null,
            'local_domain' => env('MAIL_EHLO_DOMAIN'),
        ],

        'ses' => [
            'transport' => 'ses',
        ],

        'postmark' => [
            'transport' => 'postmark',
            // 'message_stream_id' => null,
            // 'client' => [
            //     'timeout' => 5,
            // ],
        ],

        'mailgun' => [
            'transport' => 'mailgun',
            // 'client' => [
            //     'timeout' => 5,
            // ],
        ],

        'sendmail' => [
            'transport' => 'sendmail',
            'path' => env('MAIL_SENDMAIL_PATH', '/usr/sbin/sendmail -bs -i'),
        ],

        'log' => [
            'transport' => 'log',
            'channel' => env('MAIL_LOG_CHANNEL'),
        ],

        'array' => [
            'transport' => 'array',
        ],

        'failover' => [
            'transport' => 'failover',
            'mailers' => [
                'smtp',
                'log',
            ],
        ],

        'roundrobin' => [
            'transport' => 'roundrobin',
            'mailers' => [
                'ses',
                'postmark',
            ],
        ],
    ],

    /*
    |--------------------------------------------------------------------------
    | Global "From" Address
    |--------------------------------------------------------------------------
    |
    | You may wish for all e-mails sent by your application to be sent from
    | the same address. Here, you may specify a name and address that is
    | used globally for all e-mails that are sent by your application.
    |
    */

    'from' => [
        'address' => env('MAIL_FROM_ADDRESS', 'hello@example.com'),
        'name' => env('MAIL_FROM_NAME', 'Example'),
    ],

    /*
    |--------------------------------------------------------------------------
    | Markdown Mail Settings
    |--------------------------------------------------------------------------
    |
    | If you are using Markdown based email rendering, you may configure your
    | theme and component paths here, allowing you to customize the design
    | of the emails. Or, you may simply stick with the Laravel defaults!
    |
    */

    'markdown' => [
        'theme' => 'default',

        'paths' => [
            resource_path('views/vendor/mail'),
        ],
    ],

];

--- FIN DU FICHIER : ./config/mail.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./config/permission.php
////////////////////////////////////////////////////////////////

<?php

return [

    'models' => [

        /*
         * When using the "HasPermissions" trait from this package, we need to know which
         * Eloquent model should be used to retrieve your permissions. Of course, it
         * is often just the "Permission" model but you may use whatever you like.
         *
         * The model you want to use as a Permission model needs to implement the
         * `Spatie\Permission\Contracts\Permission` contract.
         */

        'permission' => Spatie\Permission\Models\Permission::class,

        /*
         * When using the "HasRoles" trait from this package, we need to know which
         * Eloquent model should be used to retrieve your roles. Of course, it
         * is often just the "Role" model but you may use whatever you like.
         *
         * The model you want to use as a Role model needs to implement the
         * `Spatie\Permission\Contracts\Role` contract.
         */

        'role' => Spatie\Permission\Models\Role::class,

    ],

    'table_names' => [

        /*
         * When using the "HasRoles" trait from this package, we need to know which
         * table should be used to retrieve your roles. We have chosen a basic
         * default value but you may easily change it to any table you like.
         */

        'roles' => 'roles',

        /*
         * When using the "HasPermissions" trait from this package, we need to know which
         * table should be used to retrieve your permissions. We have chosen a basic
         * default value but you may easily change it to any table you like.
         */

        'permissions' => 'permissions',

        /*
         * When using the "HasPermissions" trait from this package, we need to know which
         * table should be used to retrieve your models permissions. We have chosen a
         * basic default value but you may easily change it to any table you like.
         */

        'model_has_permissions' => 'model_has_permissions',

        /*
         * When using the "HasRoles" trait from this package, we need to know which
         * table should be used to retrieve your models roles. We have chosen a
         * basic default value but you may easily change it to any table you like.
         */

        'model_has_roles' => 'model_has_roles',

        /*
         * When using the "HasRoles" trait from this package, we need to know which
         * table should be used to retrieve your roles permissions. We have chosen a
         * basic default value but you may easily change it to any table you like.
         */

        'role_has_permissions' => 'role_has_permissions',
    ],

    'column_names' => [
        /*
         * Change this if you want to name the related pivots other than defaults
         */
        'role_pivot_key' => null, // default 'role_id',
        'permission_pivot_key' => null, // default 'permission_id',

        /*
         * Change this if you want to name the related model primary key other than
         * `model_id`.
         *
         * For example, this would be nice if your primary keys are all UUIDs. In
         * that case, name this `model_uuid`.
         */

        'model_morph_key' => 'model_id',

        /*
         * Change this if you want to use the teams feature and your related model's
         * foreign key is other than `team_id`.
         */

        'team_foreign_key' => 'team_id',
    ],

    /*
     * When set to true, the method for checking permissions will be registered on the gate.
     * Set this to false if you want to implement custom logic for checking permissions.
     */

    'register_permission_check_method' => true,

    /*
     * When set to true, Laravel\Octane\Events\OperationTerminated event listener will be registered
     * this will refresh permissions on every TickTerminated, TaskTerminated and RequestTerminated
     * NOTE: This should not be needed in most cases, but an Octane/Vapor combination benefited from it.
     */
    'register_octane_reset_listener' => false,

    /*
     * Events will fire when a role or permission is assigned/unassigned:
     * \Spatie\Permission\Events\RoleAttached
     * \Spatie\Permission\Events\RoleDetached
     * \Spatie\Permission\Events\PermissionAttached
     * \Spatie\Permission\Events\PermissionDetached
     *
     * To enable, set to true, and then create listeners to watch these events.
     */
    'events_enabled' => false,

    /*
     * Teams Feature.
     * When set to true the package implements teams using the 'team_foreign_key'.
     * If you want the migrations to register the 'team_foreign_key', you must
     * set this to true before doing the migration.
     * If you already did the migration then you must make a new migration to also
     * add 'team_foreign_key' to 'roles', 'model_has_roles', and 'model_has_permissions'
     * (view the latest version of this package's migration file)
     */

    'teams' => false,

    /*
     * The class to use to resolve the permissions team id
     */
    'team_resolver' => \Spatie\Permission\DefaultTeamResolver::class,

    /*
     * Passport Client Credentials Grant
     * When set to true the package will use Passports Client to check permissions
     */

    'use_passport_client_credentials' => false,

    /*
     * When set to true, the required permission names are added to exception messages.
     * This could be considered an information leak in some contexts, so the default
     * setting is false here for optimum safety.
     */

    'display_permission_in_exception' => false,

    /*
     * When set to true, the required role names are added to exception messages.
     * This could be considered an information leak in some contexts, so the default
     * setting is false here for optimum safety.
     */

    'display_role_in_exception' => false,

    /*
     * By default wildcard permission lookups are disabled.
     * See documentation to understand supported syntax.
     */

    'enable_wildcard_permission' => false,

    /*
     * The class to use for interpreting wildcard permissions.
     * If you need to modify delimiters, override the class and specify its name here.
     */
    // 'wildcard_permission' => Spatie\Permission\WildcardPermission::class,

    /* Cache-specific settings */

    'cache' => [

        /*
         * By default all permissions are cached for 24 hours to speed up performance.
         * When permissions or roles are updated the cache is flushed automatically.
         */

        'expiration_time' => \DateInterval::createFromDateString('24 hours'),

        /*
         * The cache key used to store all permissions.
         */

        'key' => 'spatie.permission.cache',

        /*
         * You may optionally indicate a specific cache driver to use for permission and
         * role caching using any of the `store` drivers listed in the cache.php config
         * file. Using 'default' here means to use the `default` set in cache.php.
         */

        'store' => 'default',
    ],
];

--- FIN DU FICHIER : ./config/permission.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./config/queue.php
////////////////////////////////////////////////////////////////

<?php

return [

    /*
    |--------------------------------------------------------------------------
    | Default Queue Connection Name
    |--------------------------------------------------------------------------
    |
    | Laravel's queue API supports an assortment of back-ends via a single
    | API, giving you convenient access to each back-end using the same
    | syntax for every one. Here you may define a default connection.
    |
    */

    'default' => env('QUEUE_CONNECTION', 'sync'),

    /*
    |--------------------------------------------------------------------------
    | Queue Connections
    |--------------------------------------------------------------------------
    |
    | Here you may configure the connection information for each server that
    | is used by your application. A default configuration has been added
    | for each back-end shipped with Laravel. You are free to add more.
    |
    | Drivers: "sync", "database", "beanstalkd", "sqs", "redis", "null"
    |
    */

    'connections' => [

        'sync' => [
            'driver' => 'sync',
        ],

        'database' => [
            'driver' => 'database',
            'table' => 'jobs',
            'queue' => 'default',
            'retry_after' => 90,
            'after_commit' => false,
        ],

        'beanstalkd' => [
            'driver' => 'beanstalkd',
            'host' => 'localhost',
            'queue' => 'default',
            'retry_after' => 90,
            'block_for' => 0,
            'after_commit' => false,
        ],

        'sqs' => [
            'driver' => 'sqs',
            'key' => env('AWS_ACCESS_KEY_ID'),
            'secret' => env('AWS_SECRET_ACCESS_KEY'),
            'prefix' => env('SQS_PREFIX', 'https://sqs.us-east-1.amazonaws.com/your-account-id'),
            'queue' => env('SQS_QUEUE', 'default'),
            'suffix' => env('SQS_SUFFIX'),
            'region' => env('AWS_DEFAULT_REGION', 'us-east-1'),
            'after_commit' => false,
        ],

        'redis' => [
            'driver' => 'redis',
            'connection' => 'default',
            'queue' => env('REDIS_QUEUE', 'default'),
            'retry_after' => 90,
            'block_for' => null,
            'after_commit' => false,
        ],

    ],

    /*
    |--------------------------------------------------------------------------
    | Job Batching
    |--------------------------------------------------------------------------
    |
    | The following options configure the database and table that store job
    | batching information. These options can be updated to any database
    | connection and table which has been defined by your application.
    |
    */

    'batching' => [
        'database' => env('DB_CONNECTION', 'mysql'),
        'table' => 'job_batches',
    ],

    /*
    |--------------------------------------------------------------------------
    | Failed Queue Jobs
    |--------------------------------------------------------------------------
    |
    | These options configure the behavior of failed queue job logging so you
    | can control which database and table are used to store the jobs that
    | have failed. You may change them to any database / table you wish.
    |
    */

    'failed' => [
        'driver' => env('QUEUE_FAILED_DRIVER', 'database-uuids'),
        'database' => env('DB_CONNECTION', 'mysql'),
        'table' => 'failed_jobs',
    ],

];

--- FIN DU FICHIER : ./config/queue.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./config/sanctum.php
////////////////////////////////////////////////////////////////

<?php

use Laravel\Sanctum\Sanctum;

return [

    /*
    |--------------------------------------------------------------------------
    | Stateful Domains
    |--------------------------------------------------------------------------
    |
    | Requests from the following domains / hosts will receive stateful API
    | authentication cookies. Typically, these should include your local
    | and production domains which access your API via a frontend SPA.
    |
    */

    'stateful' => explode(',', env('SANCTUM_STATEFUL_DOMAINS', sprintf(
        '%s%s',
        'localhost,localhost:3000,127.0.0.1,127.0.0.1:8000,::1',
        Sanctum::currentApplicationUrlWithPort()
    ))),

    /*
    |--------------------------------------------------------------------------
    | Sanctum Guards
    |--------------------------------------------------------------------------
    |
    | This array contains the authentication guards that will be checked when
    | Sanctum is trying to authenticate a request. If none of these guards
    | are able to authenticate the request, Sanctum will use the bearer
    | token that's present on an incoming request for authentication.
    |
    */

    'guard' => ['web'],

    /*
    |--------------------------------------------------------------------------
    | Expiration Minutes
    |--------------------------------------------------------------------------
    |
    | This value controls the number of minutes until an issued token will be
    | considered expired. This will override any values set in the token's
    | "expires_at" attribute, but first-party sessions are not affected.
    |
    */

    'expiration' => null,

    /*
    |--------------------------------------------------------------------------
    | Token Prefix
    |--------------------------------------------------------------------------
    |
    | Sanctum can prefix new tokens in order to take advantage of numerous
    | security scanning initiatives maintained by open source platforms
    | that notify developers if they commit tokens into repositories.
    |
    | See: https://docs.github.com/en/code-security/secret-scanning/about-secret-scanning
    |
    */

    'token_prefix' => env('SANCTUM_TOKEN_PREFIX', ''),

    /*
    |--------------------------------------------------------------------------
    | Sanctum Middleware
    |--------------------------------------------------------------------------
    |
    | When authenticating your first-party SPA with Sanctum you may need to
    | customize some of the middleware Sanctum uses while processing the
    | request. You may change the middleware listed below as required.
    |
    */

    'middleware' => [
        'authenticate_session' => Laravel\Sanctum\Http\Middleware\AuthenticateSession::class,
        'encrypt_cookies' => App\Http\Middleware\EncryptCookies::class,
        'verify_csrf_token' => App\Http\Middleware\VerifyCsrfToken::class,
    ],

];

--- FIN DU FICHIER : ./config/sanctum.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./config/services.php
////////////////////////////////////////////////////////////////

<?php

return [

    /*
    |--------------------------------------------------------------------------
    | Third Party Services
    |--------------------------------------------------------------------------
    |
    | This file is for storing the credentials for third party services such
    | as Mailgun, Postmark, AWS and more. This file provides the de facto
    | location for this type of information, allowing packages to have
    | a conventional file to locate the various service credentials.
    |
    */

    'mailgun' => [
        'domain' => env('MAILGUN_DOMAIN'),
        'secret' => env('MAILGUN_SECRET'),
        'endpoint' => env('MAILGUN_ENDPOINT', 'api.mailgun.net'),
        'scheme' => 'https',
    ],

    'postmark' => [
        'token' => env('POSTMARK_TOKEN'),
    ],

    'ses' => [
        'key' => env('AWS_ACCESS_KEY_ID'),
        'secret' => env('AWS_SECRET_ACCESS_KEY'),
        'region' => env('AWS_DEFAULT_REGION', 'us-east-1'),
    ],
    'pdf' => [
        'url' => env('PDF_SERVICE_URL', 'http://pdf-service:3000/generate-pdf'),
        'health_url' => env('PDF_SERVICE_HEALTH_URL', 'http://pdf-service:3000/health'),
        'timeout' => env('PDF_SERVICE_TIMEOUT', 120),
        'retries' => env('PDF_SERVICE_RETRIES', 3),
    ],

];

--- FIN DU FICHIER : ./config/services.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./config/session.php
////////////////////////////////////////////////////////////////

<?php

use Illuminate\Support\Str;

return [

    /*
    |--------------------------------------------------------------------------
    | Default Session Driver
    |--------------------------------------------------------------------------
    |
    | This option controls the default session "driver" that will be used on
    | requests. By default, we will use the lightweight native driver but
    | you may specify any of the other wonderful drivers provided here.
    |
    | Supported: "file", "cookie", "database", "apc",
    |            "memcached", "redis", "dynamodb", "array"
    |
    */

    'driver' => env('SESSION_DRIVER', 'file'),

    /*
    |--------------------------------------------------------------------------
    | Session Lifetime
    |--------------------------------------------------------------------------
    |
    | Here you may specify the number of minutes that you wish the session
    | to be allowed to remain idle before it expires. If you want them
    | to immediately expire on the browser closing, set that option.
    |
    */

    'lifetime' => env('SESSION_LIFETIME', 120),

    'expire_on_close' => false,

    /*
    |--------------------------------------------------------------------------
    | Session Encryption
    |--------------------------------------------------------------------------
    |
    | This option allows you to easily specify that all of your session data
    | should be encrypted before it is stored. All encryption will be run
    | automatically by Laravel and you can use the Session like normal.
    |
    */

    'encrypt' => false,

    /*
    |--------------------------------------------------------------------------
    | Session File Location
    |--------------------------------------------------------------------------
    |
    | When using the native session driver, we need a location where session
    | files may be stored. A default has been set for you but a different
    | location may be specified. This is only needed for file sessions.
    |
    */

    'files' => storage_path('framework/sessions'),

    /*
    |--------------------------------------------------------------------------
    | Session Database Connection
    |--------------------------------------------------------------------------
    |
    | When using the "database" or "redis" session drivers, you may specify a
    | connection that should be used to manage these sessions. This should
    | correspond to a connection in your database configuration options.
    |
    */

    'connection' => env('SESSION_CONNECTION'),

    /*
    |--------------------------------------------------------------------------
    | Session Database Table
    |--------------------------------------------------------------------------
    |
    | When using the "database" session driver, you may specify the table we
    | should use to manage the sessions. Of course, a sensible default is
    | provided for you; however, you are free to change this as needed.
    |
    */

    'table' => 'sessions',

    /*
    |--------------------------------------------------------------------------
    | Session Cache Store
    |--------------------------------------------------------------------------
    |
    | While using one of the framework's cache driven session backends you may
    | list a cache store that should be used for these sessions. This value
    | must match with one of the application's configured cache "stores".
    |
    | Affects: "apc", "dynamodb", "memcached", "redis"
    |
    */

    'store' => env('SESSION_STORE'),

    /*
    |--------------------------------------------------------------------------
    | Session Sweeping Lottery
    |--------------------------------------------------------------------------
    |
    | Some session drivers must manually sweep their storage location to get
    | rid of old sessions from storage. Here are the chances that it will
    | happen on a given request. By default, the odds are 2 out of 100.
    |
    */

    'lottery' => [2, 100],

    /*
    |--------------------------------------------------------------------------
    | Session Cookie Name
    |--------------------------------------------------------------------------
    |
    | Here you may change the name of the cookie used to identify a session
    | instance by ID. The name specified here will get used every time a
    | new session cookie is created by the framework for every driver.
    |
    */

    'cookie' => env(
        'SESSION_COOKIE',
        Str::slug(env('APP_NAME', 'laravel'), '_').'_session'
    ),

    /*
    |--------------------------------------------------------------------------
    | Session Cookie Path
    |--------------------------------------------------------------------------
    |
    | The session cookie path determines the path for which the cookie will
    | be regarded as available. Typically, this will be the root path of
    | your application but you are free to change this when necessary.
    |
    */

    'path' => '/',

    /*
    |--------------------------------------------------------------------------
    | Session Cookie Domain
    |--------------------------------------------------------------------------
    |
    | Here you may change the domain of the cookie used to identify a session
    | in your application. This will determine which domains the cookie is
    | available to in your application. A sensible default has been set.
    |
    */

    'domain' => env('SESSION_DOMAIN'),

    /*
    |--------------------------------------------------------------------------
    | HTTPS Only Cookies
    |--------------------------------------------------------------------------
    |
    | By setting this option to true, session cookies will only be sent back
    | to the server if the browser has a HTTPS connection. This will keep
    | the cookie from being sent to you when it can't be done securely.
    |
    */

    'secure' => env('SESSION_SECURE_COOKIE'),

    /*
    |--------------------------------------------------------------------------
    | HTTP Access Only
    |--------------------------------------------------------------------------
    |
    | Setting this value to true will prevent JavaScript from accessing the
    | value of the cookie and the cookie will only be accessible through
    | the HTTP protocol. You are free to modify this option if needed.
    |
    */

    'http_only' => true,

    /*
    |--------------------------------------------------------------------------
    | Same-Site Cookies
    |--------------------------------------------------------------------------
    |
    | This option determines how your cookies behave when cross-site requests
    | take place, and can be used to mitigate CSRF attacks. By default, we
    | will set this value to "lax" since this is a secure default value.
    |
    | Supported: "lax", "strict", "none", null
    |
    */

    'same_site' => 'lax',

    /*
    |--------------------------------------------------------------------------
    | Partitioned Cookies
    |--------------------------------------------------------------------------
    |
    | Setting this value to true will tie the cookie to the top-level site for
    | a cross-site context. Partitioned cookies are accepted by the browser
    | when flagged "secure" and the Same-Site attribute is set to "none".
    |
    */

    'partitioned' => false,

];

--- FIN DU FICHIER : ./config/session.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./config/view.php
////////////////////////////////////////////////////////////////

<?php

return [

    /*
    |--------------------------------------------------------------------------
    | View Storage Paths
    |--------------------------------------------------------------------------
    |
    | Most templating systems load templates from disk. Here you may specify
    | an array of paths that should be checked for your views. Of course
    | the usual Laravel view path has already been registered for you.
    |
    */

    'paths' => [
        resource_path('views'),
    ],

    /*
    |--------------------------------------------------------------------------
    | Compiled View Path
    |--------------------------------------------------------------------------
    |
    | This option determines where all the compiled Blade templates will be
    | stored for your application. Typically, this is within the storage
    | directory. However, as usual, you are free to change this value.
    |
    */

    'compiled' => env(
        'VIEW_COMPILED_PATH',
        realpath(storage_path('framework/views'))
    ),

];

--- FIN DU FICHIER : ./config/view.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./database/.gitignore
////////////////////////////////////////////////////////////////

*.sqlite*

--- FIN DU FICHIER : ./database/.gitignore ---


////////////////////////////////////////////////////////////////
CHEMIN : ./database/factories/DriverFactory.php
////////////////////////////////////////////////////////////////

<?php

namespace Database\Factories;

use App\Models\Driver;
use App\Models\DriverStatus;
use App\Models\User;
use Illuminate\Database\Eloquent\Factories\Factory;

class DriverFactory extends Factory
{
    /**
     * The name of the factory's corresponding model.
     *
     * @var string
     */
    protected $model = Driver::class;

    /**
     * Define the model's default state.
     *
     * @return array<string, mixed>
     */
    public function definition(): array
    {
        $activeStatus = DriverStatus::whereIn('name', ['Actif', 'Disponible'])->inRandomOrder()->first();
        
        return [
            'first_name' => fake()->firstName(),
            'last_name' => fake()->lastName(),
            'employee_number' => fake()->unique()->numerify('EMP-#####'),
            'personal_phone' => fake()->unique()->phoneNumber(),
            'license_number' => fake()->unique()->numerify('LN-########'),
            'status_id' => $activeStatus ? $activeStatus->id : DriverStatus::factory(),
            'birth_date' => fake()->dateTimeBetween('-50 years', '-22 years'),
            'recruitment_date' => fake()->dateTimeBetween('-5 years', 'now'),
            'user_id' => User::factory(), // This links to a User factory call
        ];
    }

    /**
     * Configure the model factory.
     *
     * @return $this
     */
    public function configure()
    {
        return $this->afterCreating(function (Driver $driver) {
            // Ensure the associated user has the same organization and name details
            // and is assigned the 'Chauffeur' role.
            if ($driver->user) {
                $driver->user->update([
                    'organization_id' => $driver->organization_id,
                    'first_name' => $driver->first_name,
                    'last_name' => $driver->last_name,
                ]);
                $driver->user->assignRole('Chauffeur');
            }
        });
    }
}

--- FIN DU FICHIER : ./database/factories/DriverFactory.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./database/factories/OrganizationFactory.php
////////////////////////////////////////////////////////////////

<?php

namespace Database\Factories;

use Illuminate\Database\Eloquent\Factories\Factory;
use Illuminate\Support\Str;

/**
 * @extends \Illuminate\Database\Eloquent\Factories\Factory<\App\Models\Organization>
 */
class OrganizationFactory extends Factory
{
    /**
     * Define the model's default state.
     *
     * @return array<string, mixed>
     */
    public function definition(): array
    {
        return [
            'uuid' => (string) Str::uuid(),
            'name' => $this->faker->company(),
            'address' => $this->faker->address(),
            'contact_email' => $this->faker->unique()->safeEmail(),
            'status' => 'active',
        ];
    }
}

--- FIN DU FICHIER : ./database/factories/OrganizationFactory.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./database/factories/SupplierFactory.php
////////////////////////////////////////////////////////////////

<?php

namespace Database\Factories;

use App\Models\Supplier;
use Illuminate\Database\Eloquent\Factories\Factory;

class SupplierFactory extends Factory
{
    /**
     * The name of the factory's corresponding model.
     *
     * @var string
     */
    protected $model = Supplier::class;

    /**
     * Define the model's default state.
     *
     * @return array
     */
    public function definition()
    {
        return [
            'name' => $this->faker->company,
            'contact_name' => $this->faker->name,
            'phone' => $this->faker->phoneNumber,
            'email' => $this->faker->unique()->safeEmail,
            'address' => $this->faker->address,
            'supplier_category_id' => null, // Can be overridden in the seeder if needed
            // 'organization_id' is expected to be provided when creating a supplier.
        ];
    }
}

--- FIN DU FICHIER : ./database/factories/SupplierFactory.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./database/factories/UserFactory.php
////////////////////////////////////////////////////////////////

<?php

namespace Database\Factories;

use Illuminate\Database\Eloquent\Factories\Factory;
use Illuminate\Support\Facades\Hash;
use Illuminate\Support\Str;

/**
 * @extends \Illuminate\Database\Eloquent\Factories\Factory<\App\Models\User>
 */
class UserFactory extends Factory
{
    /**
     * The current password being used by the factory.
     */
    protected static ?string $password;

    /**
     * Define the model's default state.
     *
     * @return array<string, mixed>
     */
    public function definition(): array
    {
        return [
            'name' => fake()->name(),
            'email' => fake()->unique()->safeEmail(),
            'email_verified_at' => now(),
            'password' => static::$password ??= Hash::make('password'),
            'remember_token' => Str::random(10),
        ];
    }

    /**
     * Indicate that the model's email address should be unverified.
     */
    public function unverified(): static
    {
        return $this->state(fn (array $attributes) => [
            'email_verified_at' => null,
        ]);
    }
}

--- FIN DU FICHIER : ./database/factories/UserFactory.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./database/factories/VehicleFactory.php
////////////////////////////////////////////////////////////////

<?php

namespace Database\Factories;

use App\Models\FuelType;
use App\Models\TransmissionType;
use App\Models\VehicleStatus;
use App\Models\VehicleType;
use Illuminate\Database\Eloquent\Factories\Factory;

/**
 * @extends \Illuminate\Database\Eloquent\Factories\Factory<\App\Models\Vehicle>
 */
class VehicleFactory extends Factory
{
    /**
     * Define the model's default state.
     *
     * @return array<string, mixed>
     */
    public function definition(): array
    {
        $initialMileage = $this->faker->numberBetween(5000, 50000);

        return [
            'registration_plate' => $this->faker->unique()->regexify('[A-Z]{2}-[0-9]{3}-[A-Z]{2}'),
            'vin' => $this->faker->unique()->bothify('*****************'),
            'brand' => $this->faker->randomElement(['Renault', 'Peugeot', 'Dacia', 'Volkswagen', 'Toyota']),
            'model' => $this->faker->randomElement(['Clio', '208', 'Sandero', 'Golf', 'Yaris']),
            'color' => $this->faker->safeColorName(),
            'manufacturing_year' => $this->faker->numberBetween(2015, now()->year),
            'initial_mileage' => $initialMileage,
            'current_mileage' => $initialMileage + $this->faker->numberBetween(1000, 50000),
            'purchase_price' => $this->faker->randomFloat(2, 1000000, 5000000),
            'current_value' => $this->faker->randomFloat(2, 800000, 4000000),

            // On r√©cup√®re des IDs valides depuis les tables de r√©f√©rence
            'vehicle_type_id' => VehicleType::inRandomOrder()->first()->id,
            'fuel_type_id' => FuelType::inRandomOrder()->first()->id,
            'transmission_type_id' => TransmissionType::inRandomOrder()->first()->id,
            'status_id' => VehicleStatus::where('name', 'Parking')->first()->id,
        ];
    }
}
--- FIN DU FICHIER : ./database/factories/VehicleFactory.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./database/migrations/2014_10_12_000000_create_users_table.php
////////////////////////////////////////////////////////////////

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('users', function (Blueprint $table) {
            $table->id();
            $table->string('name');
            $table->string('email')->unique();
            $table->timestamp('email_verified_at')->nullable();
            $table->string('password');
            $table->rememberToken();
            $table->timestamps();
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('users');
    }
};

--- FIN DU FICHIER : ./database/migrations/2014_10_12_000000_create_users_table.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./database/migrations/2014_10_12_100000_create_password_reset_tokens_table.php
////////////////////////////////////////////////////////////////

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('password_reset_tokens', function (Blueprint $table) {
            $table->string('email')->primary();
            $table->string('token');
            $table->timestamp('created_at')->nullable();
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('password_reset_tokens');
    }
};

--- FIN DU FICHIER : ./database/migrations/2014_10_12_100000_create_password_reset_tokens_table.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./database/migrations/2019_08_19_000000_create_failed_jobs_table.php
////////////////////////////////////////////////////////////////

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('failed_jobs', function (Blueprint $table) {
            $table->id();
            $table->string('uuid')->unique();
            $table->text('connection');
            $table->text('queue');
            $table->longText('payload');
            $table->longText('exception');
            $table->timestamp('failed_at')->useCurrent();
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('failed_jobs');
    }
};

--- FIN DU FICHIER : ./database/migrations/2019_08_19_000000_create_failed_jobs_table.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./database/migrations/2019_12_14_000001_create_personal_access_tokens_table.php
////////////////////////////////////////////////////////////////

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('personal_access_tokens', function (Blueprint $table) {
            $table->id();
            $table->morphs('tokenable');
            $table->string('name');
            $table->string('token', 64)->unique();
            $table->text('abilities')->nullable();
            $table->timestamp('last_used_at')->nullable();
            $table->timestamp('expires_at')->nullable();
            $table->timestamps();
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('personal_access_tokens');
    }
};

--- FIN DU FICHIER : ./database/migrations/2019_12_14_000001_create_personal_access_tokens_table.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./database/migrations/2025_06_05_134749_add_custom_fields_to_users_table.php
////////////////////////////////////////////////////////////////

// database/migrations/YYYY_MM_DD_HHMMSS_add_custom_fields_to_users_table.php
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::table('users', function (Blueprint $table) {
            // Rendre la colonne 'name' nullable si elle ne l'est pas d√©j√†,
            // car nous allons la d√©river de first_name et last_name.
            // Ou, si on la garde NOT NULL, s'assurer qu'elle est remplie √† la cr√©ation.
            // Pour l'instant, nous ajoutons les champs. Breeze s'attend √† 'name' NOT NULL.
            // Nous allons g√©rer la population de 'name' dans le mod√®le ou un observer.

            $table->string('first_name')->after('name')->nullable(); // Ou apr√®s 'id' si 'name' n'est plus le premier champ pertinent
            $table->string('last_name')->after('first_name')->nullable();
            $table->string('phone', 50)->unique()->nullable()->after('email');
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::table('users', function (Blueprint $table) {
            $table->dropColumn(['first_name', 'last_name', 'phone']);
        });
    }
};

--- FIN DU FICHIER : ./database/migrations/2025_06_05_134749_add_custom_fields_to_users_table.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./database/migrations/2025_06_05_144141_create_permission_tables.php
////////////////////////////////////////////////////////////////

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        $teams = config('permission.teams');
        $tableNames = config('permission.table_names');
        $columnNames = config('permission.column_names');
        $pivotRole = $columnNames['role_pivot_key'] ?? 'role_id';
        $pivotPermission = $columnNames['permission_pivot_key'] ?? 'permission_id';

        throw_if(empty($tableNames), new Exception('Error: config/permission.php not loaded. Run [php artisan config:clear] and try again.'));
        throw_if($teams && empty($columnNames['team_foreign_key'] ?? null), new Exception('Error: team_foreign_key on config/permission.php not loaded. Run [php artisan config:clear] and try again.'));

        Schema::create($tableNames['permissions'], static function (Blueprint $table) {
            // $table->engine('InnoDB');
            $table->bigIncrements('id'); // permission id
            $table->string('name');       // For MyISAM use string('name', 225); // (or 166 for InnoDB with Redundant/Compact row format)
            $table->string('guard_name'); // For MyISAM use string('guard_name', 25);
            $table->timestamps();

            $table->unique(['name', 'guard_name']);
        });

        Schema::create($tableNames['roles'], static function (Blueprint $table) use ($teams, $columnNames) {
            // $table->engine('InnoDB');
            $table->bigIncrements('id'); // role id
            if ($teams || config('permission.testing')) { // permission.testing is a fix for sqlite testing
                $table->unsignedBigInteger($columnNames['team_foreign_key'])->nullable();
                $table->index($columnNames['team_foreign_key'], 'roles_team_foreign_key_index');
            }
            $table->string('name');       // For MyISAM use string('name', 225); // (or 166 for InnoDB with Redundant/Compact row format)
            $table->string('guard_name'); // For MyISAM use string('guard_name', 25);
            $table->timestamps();
            if ($teams || config('permission.testing')) {
                $table->unique([$columnNames['team_foreign_key'], 'name', 'guard_name']);
            } else {
                $table->unique(['name', 'guard_name']);
            }
        });

        Schema::create($tableNames['model_has_permissions'], static function (Blueprint $table) use ($tableNames, $columnNames, $pivotPermission, $teams) {
            $table->unsignedBigInteger($pivotPermission);

            $table->string('model_type');
            $table->unsignedBigInteger($columnNames['model_morph_key']);
            $table->index([$columnNames['model_morph_key'], 'model_type'], 'model_has_permissions_model_id_model_type_index');

            $table->foreign($pivotPermission)
                ->references('id') // permission id
                ->on($tableNames['permissions'])
                ->onDelete('cascade');
            if ($teams) {
                $table->unsignedBigInteger($columnNames['team_foreign_key']);
                $table->index($columnNames['team_foreign_key'], 'model_has_permissions_team_foreign_key_index');

                $table->primary([$columnNames['team_foreign_key'], $pivotPermission, $columnNames['model_morph_key'], 'model_type'],
                    'model_has_permissions_permission_model_type_primary');
            } else {
                $table->primary([$pivotPermission, $columnNames['model_morph_key'], 'model_type'],
                    'model_has_permissions_permission_model_type_primary');
            }

        });

        Schema::create($tableNames['model_has_roles'], static function (Blueprint $table) use ($tableNames, $columnNames, $pivotRole, $teams) {
            $table->unsignedBigInteger($pivotRole);

            $table->string('model_type');
            $table->unsignedBigInteger($columnNames['model_morph_key']);
            $table->index([$columnNames['model_morph_key'], 'model_type'], 'model_has_roles_model_id_model_type_index');

            $table->foreign($pivotRole)
                ->references('id') // role id
                ->on($tableNames['roles'])
                ->onDelete('cascade');
            if ($teams) {
                $table->unsignedBigInteger($columnNames['team_foreign_key']);
                $table->index($columnNames['team_foreign_key'], 'model_has_roles_team_foreign_key_index');

                $table->primary([$columnNames['team_foreign_key'], $pivotRole, $columnNames['model_morph_key'], 'model_type'],
                    'model_has_roles_role_model_type_primary');
            } else {
                $table->primary([$pivotRole, $columnNames['model_morph_key'], 'model_type'],
                    'model_has_roles_role_model_type_primary');
            }
        });

        Schema::create($tableNames['role_has_permissions'], static function (Blueprint $table) use ($tableNames, $pivotRole, $pivotPermission) {
            $table->unsignedBigInteger($pivotPermission);
            $table->unsignedBigInteger($pivotRole);

            $table->foreign($pivotPermission)
                ->references('id') // permission id
                ->on($tableNames['permissions'])
                ->onDelete('cascade');

            $table->foreign($pivotRole)
                ->references('id') // role id
                ->on($tableNames['roles'])
                ->onDelete('cascade');

            $table->primary([$pivotPermission, $pivotRole], 'role_has_permissions_permission_id_role_id_primary');
        });

        app('cache')
            ->store(config('permission.cache.store') != 'default' ? config('permission.cache.store') : null)
            ->forget(config('permission.cache.key'));
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        $tableNames = config('permission.table_names');

        if (empty($tableNames)) {
            throw new \Exception('Error: config/permission.php not found and defaults could not be merged. Please publish the package configuration before proceeding, or drop the tables manually.');
        }

        Schema::drop($tableNames['role_has_permissions']);
        Schema::drop($tableNames['model_has_roles']);
        Schema::drop($tableNames['model_has_permissions']);
        Schema::drop($tableNames['roles']);
        Schema::drop($tableNames['permissions']);
    }
};

--- FIN DU FICHIER : ./database/migrations/2025_06_05_144141_create_permission_tables.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./database/migrations/2025_06_05_150327_create_validation_levels_table.php
////////////////////////////////////////////////////////////////

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
   
	public function up(): void
  {
    Schema::create('validation_levels', function (Blueprint $table) {
        $table->id(); // Ou $table->serial('id')->primary(); pour SERIAL
        $table->smallInteger('level_number')->unique();
        $table->string('name', 100);
        $table->text('description')->nullable();
        $table->timestamps(); 
    });
  }




    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('validation_levels');
    }
};

--- FIN DU FICHIER : ./database/migrations/2025_06_05_150327_create_validation_levels_table.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./database/migrations/2025_06_05_150533_create_user_validation_levels_table.php
////////////////////////////////////////////////////////////////

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    
	public function up(): void
  {
    Schema::create('user_validation_levels', function (Blueprint $table) {
        $table->foreignId('user_id')->constrained('users')->onDelete('cascade');
        $table->foreignId('validation_level_id')->constrained('validation_levels')->onDelete('cascade');
        $table->primary(['user_id', 'validation_level_id']);
        // Pas de timestamps ici g√©n√©ralement.
    });
  }



    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('user_validation_levels');
    }
};

--- FIN DU FICHIER : ./database/migrations/2025_06_05_150533_create_user_validation_levels_table.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./database/migrations/2025_06_06_204451_create_vehicle_types_table.php
////////////////////////////////////////////////////////////////

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    public function up(): void
    {
        Schema::create('vehicle_types', function (Blueprint $table) {
            $table->id();
            $table->string('name', 100)->unique();
            // Pas de timestamps pour cette table de r√©f√©rence simple
        });
    }

    public function down(): void
    {
        Schema::dropIfExists('vehicle_types');
    }
};

--- FIN DU FICHIER : ./database/migrations/2025_06_06_204451_create_vehicle_types_table.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./database/migrations/2025_06_06_204514_create_fuel_types_table.php
////////////////////////////////////////////////////////////////

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    public function up(): void
    {
        Schema::create('fuel_types', function (Blueprint $table) {
            $table->id();
            $table->string('name', 100)->unique();
        });
    }

    public function down(): void
    {
        Schema::dropIfExists('fuel_types');
    }
};

--- FIN DU FICHIER : ./database/migrations/2025_06_06_204514_create_fuel_types_table.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./database/migrations/2025_06_06_204531_create_transmission_types_table.php
////////////////////////////////////////////////////////////////

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    public function up(): void
    {
        Schema::create('transmission_types', function (Blueprint $table) {
            $table->id();
            $table->string('name', 100)->unique();
        });
    }

    public function down(): void
    {
        Schema::dropIfExists('transmission_types');
    }
};

--- FIN DU FICHIER : ./database/migrations/2025_06_06_204531_create_transmission_types_table.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./database/migrations/2025_06_06_204549_create_vehicle_statuses_table.php
////////////////////////////////////////////////////////////////

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    public function up(): void
    {
        Schema::create('vehicle_statuses', function (Blueprint $table) {
            $table->id();
            $table->string('name', 100)->unique();
        });
    }

    public function down(): void
    {
        Schema::dropIfExists('vehicle_statuses');
    }
};

--- FIN DU FICHIER : ./database/migrations/2025_06_06_204549_create_vehicle_statuses_table.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./database/migrations/2025_06_06_205007_create_vehicles_table.php
////////////////////////////////////////////////////////////////

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
public function up(): void
{
    Schema::create('vehicles', function (Blueprint $table) {
        $table->id();
        $table->string('registration_plate', 50)->unique();
        $table->string('vin', 17)->unique()->nullable(); // VIN est nullable d√®s le d√©part
        $table->string('brand', 100)->nullable();
        $table->string('model', 100)->nullable();
        $table->string('color', 50)->nullable();

        $table->foreignId('vehicle_type_id')->nullable()->constrained('vehicle_types')->onDelete('set null');
        $table->foreignId('fuel_type_id')->nullable()->constrained('fuel_types')->onDelete('set null');
        $table->foreignId('transmission_type_id')->nullable()->constrained('transmission_types')->onDelete('set null');
        $table->foreignId('status_id')->nullable()->constrained('vehicle_statuses')->onDelete('set null');

        $table->smallInteger('manufacturing_year')->nullable();
        $table->date('acquisition_date')->nullable(); // CHAMP AJOUT√â ICI
        $table->decimal('purchase_price', 12, 2)->nullable(); // CHAMP AJOUT√â ICI
        $table->decimal('current_value', 12, 2)->nullable(); // CHAMP AJOUT√â ICI

        $table->unsignedBigInteger('initial_mileage')->default(0);
        $table->unsignedBigInteger('current_mileage')->default(0);
        $table->integer('engine_displacement_cc')->nullable();
        $table->integer('power_hp')->nullable();
        $table->smallInteger('seats')->nullable();

        $table->text('status_reason')->nullable();
        $table->text('notes')->nullable();

        $table->timestamps();
    });
}
    public function down(): void
    {
        Schema::dropIfExists('vehicles');
    }
};

--- FIN DU FICHIER : ./database/migrations/2025_06_06_205007_create_vehicles_table.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./database/migrations/2025_06_07_202347_add_soft_deletes_to_vehicles_table.php
////////////////////////////////////////////////////////////////

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    public function up(): void
    {
        Schema::table('vehicles', function (Blueprint $table) {
            $table->softDeletes(); // Ajoute la colonne 'deleted_at' nullable
        });
    }

    public function down(): void
    {
        Schema::table('vehicles', function (Blueprint $table) {
            $table->dropSoftDeletes(); // Supprime la colonne 'deleted_at'
        });
    }
};

--- FIN DU FICHIER : ./database/migrations/2025_06_07_202347_add_soft_deletes_to_vehicles_table.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./database/migrations/2025_06_07_231226_create_driver_statuses_table.php
////////////////////////////////////////////////////////////////

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    public function up(): void
    {
        Schema::create('driver_statuses', function (Blueprint $table) {
            $table->id();
            $table->string('name', 100)->unique();
        });
    }

    public function down(): void
    {
        Schema::dropIfExists('driver_statuses');
    }
};

--- FIN DU FICHIER : ./database/migrations/2025_06_07_231226_create_driver_statuses_table.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./database/migrations/2025_06_07_231452_create_drivers_table.php
////////////////////////////////////////////////////////////////

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
     {
        Schema::create('drivers', function (Blueprint $table) {
        $table->id();
        // Lien optionnel vers un compte utilisateur syst√®me.
        $table->foreignId('user_id')->nullable()->unique()->constrained('users')->onDelete('set null');

        $table->string('employee_number', 100)->nullable()->unique();
        $table->string('first_name');
        $table->string('last_name');
        $table->string('photo_path', 512)->nullable();
        $table->date('birth_date')->nullable();
        $table->string('blood_type', 10)->nullable();
        $table->text('address')->nullable();
        $table->string('personal_phone', 50)->nullable();
        $table->string('personal_email', 255)->nullable();
        $table->string('license_number', 100)->nullable();
        $table->string('license_category', 50)->nullable();
        $table->date('license_issue_date')->nullable();
        $table->string('license_authority')->nullable();
        $table->date('recruitment_date')->nullable();
        $table->date('contract_end_date')->nullable();

        $table->foreignId('status_id')->nullable()->constrained('driver_statuses')->onDelete('set null');

        $table->string('emergency_contact_name')->nullable();
        $table->string('emergency_contact_phone', 50)->nullable();

        $table->timestamps();
        $table->softDeletes(); // Pour la suppression douce
    	});
      }
    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('drivers');
    }
};

--- FIN DU FICHIER : ./database/migrations/2025_06_07_231452_create_drivers_table.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./database/migrations/2025_06_09_144736_create_assignments_table.php
////////////////////////////////////////////////////////////////

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('assignments', function (Blueprint $table) {
            $table->id();
            $table->foreignId('vehicle_id')->constrained('vehicles')->onDelete('restrict');
            $table->foreignId('driver_id')->constrained('drivers')->onDelete('restrict');
            $table->timestamp('start_datetime');
            $table->timestamp('end_datetime')->nullable();
            $table->unsignedBigInteger('start_mileage')->nullable();
            $table->unsignedBigInteger('end_mileage')->nullable();
            $table->text('reason')->nullable();
            $table->text('notes')->nullable();
            $table->foreignId('created_by_user_id')->nullable()->constrained('users')->onDelete('set null');
            $table->softDeletes();
            $table->timestamps();
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('assignments');
    }
};

--- FIN DU FICHIER : ./database/migrations/2025_06_09_144736_create_assignments_table.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./database/migrations/2025_06_10_113936_add_license_expiry_date_to_drivers_table.php
////////////////////////////////////////////////////////////////

<?php
use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;
return new class extends Migration {
    public function up(): void {
        Schema::table('drivers', function (Blueprint $table) {
            $table->date('license_expiry_date')->nullable()->after('license_authority');
        });
    }
    public function down(): void {
        Schema::table('drivers', function (Blueprint $table) {
            $table->dropColumn('license_expiry_date');
        });
    }
};

--- FIN DU FICHIER : ./database/migrations/2025_06_10_113936_add_license_expiry_date_to_drivers_table.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./database/migrations/2025_06_10_160701_create_maintenance_types_table.php
////////////////////////////////////////////////////////////////

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
    	Schema::create('maintenance_types', function (Blueprint $table) {
    		$table->id();
    		$table->string('name', 150)->unique();
    		$table->text('description')->nullable();
	});
    
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('maintenance_types');
    }
};

--- FIN DU FICHIER : ./database/migrations/2025_06_10_160701_create_maintenance_types_table.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./database/migrations/2025_06_10_160701_create_recurrence_units_table.php
////////////////////////////////////////////////////////////////

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
    
    Schema::create('recurrence_units', function (Blueprint $table) {
    $table->id();
    $table->string('name', 50)->unique(); // Ex: Jours, Kilom√®tres, Mois
});
    
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('recurrence_units');
    }
};

--- FIN DU FICHIER : ./database/migrations/2025_06_10_160701_create_recurrence_units_table.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./database/migrations/2025_06_10_160702_create_maintenance_statuses_table.php
////////////////////////////////////////////////////////////////

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
    
    Schema::create('maintenance_statuses', function (Blueprint $table) {
    $table->id();
    $table->string('name', 100)->unique(); // Ex: Planifi√©e, En cours, Termin√©e, Annul√©e
});
    
    
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('maintenance_statuses');
    }
};

--- FIN DU FICHIER : ./database/migrations/2025_06_10_160702_create_maintenance_statuses_table.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./database/migrations/2025_06_10_160703_create_maintenance_plans_table.php
////////////////////////////////////////////////////////////////

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
    
    Schema::create('maintenance_plans', function (Blueprint $table) {
    $table->id();
    $table->foreignId('vehicle_id')->constrained('vehicles')->onDelete('cascade');
    $table->foreignId('maintenance_type_id')->constrained('maintenance_types')->onDelete('cascade');
    $table->integer('recurrence_value');
    $table->foreignId('recurrence_unit_id')->constrained('recurrence_units');
    $table->date('next_due_date')->nullable();
    $table->bigInteger('next_due_mileage')->nullable();
    $table->text('notes')->nullable();
    $table->softDeletes();
    $table->timestamps();
});
    
    
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('maintenance_plans');
    }
};

--- FIN DU FICHIER : ./database/migrations/2025_06_10_160703_create_maintenance_plans_table.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./database/migrations/2025_06_10_160704_create_maintenance_logs_table.php
////////////////////////////////////////////////////////////////

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
    
    Schema::create('maintenance_logs', function (Blueprint $table) {
    $table->id();
    $table->foreignId('vehicle_id')->constrained('vehicles')->onDelete('cascade');
    $table->foreignId('maintenance_plan_id')->nullable()->constrained('maintenance_plans')->onDelete('set null');
    $table->foreignId('maintenance_type_id')->constrained('maintenance_types');
    $table->foreignId('maintenance_status_id')->constrained('maintenance_statuses');
    $table->date('performed_on_date');
    $table->bigInteger('performed_at_mileage');
    $table->decimal('cost', 12, 2)->nullable();
    // La table `suppliers` n'existant pas encore, nous laissons cette cl√© en commentaire.
    // $table->foreignId('supplier_id')->nullable()->constrained('suppliers');
    $table->text('details')->nullable();
    $table->string('performed_by')->nullable();
    $table->softDeletes();
    $table->timestamps();
});
    
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('maintenance_logs');
    }
};

--- FIN DU FICHIER : ./database/migrations/2025_06_10_160704_create_maintenance_logs_table.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./database/migrations/2025_06_17_233747_create_vehicle_handover_forms_table.php
////////////////////////////////////////////////////////////////

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
    
    Schema::create('vehicle_handover_forms', function (Blueprint $table) {
    $table->id();
    $table->foreignId('assignment_id')->unique()->constrained('assignments')->onDelete('cascade');
    $table->date('issue_date');
    $table->string('assignment_reason')->nullable();
    $table->unsignedBigInteger('current_mileage');
    $table->text('general_observations')->nullable();
    $table->text('additional_observations')->nullable();
    $table->string('signed_form_path', 512)->nullable();
    $table->boolean('is_latest_version')->default(true);
    $table->softDeletes();
    $table->timestamps();
    	
    });
    
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('vehicle_handover_forms');
    }
};

--- FIN DU FICHIER : ./database/migrations/2025_06_17_233747_create_vehicle_handover_forms_table.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./database/migrations/2025_06_17_233757_create_vehicle_handover_details_table.php
////////////////////////////////////////////////////////////////

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('vehicle_handover_details', function (Blueprint $table) {
            $table->id();
            $table->foreignId('handover_form_id')->constrained('vehicle_handover_forms')->onDelete('cascade');
            $table->string('category');
            $table->string('item');
            //$table->enum('status', ['Bon', 'Moyen', 'Mauvais', 'N/A']);
            $table->enum('status', ['Bon', 'Moyen', 'Mauvais', 'N/A', 'Oui', 'Non']);
        
            $table->timestamps();
        }); // <-- LE POINT-VIRGULE MANQUANT EST AJOUT√â ICI
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('vehicle_handover_details');
    }
};
--- FIN DU FICHIER : ./database/migrations/2025_06_17_233757_create_vehicle_handover_details_table.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./database/migrations/2025_07_07_000048_create_organizations_table.php
////////////////////////////////////////////////////////////////

<?php
use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;
return new class extends Migration {
    public function up(): void {
        Schema::create('organizations', function (Blueprint $table) {
            $table->id();
            $table->uuid('uuid')->unique();
            $table->string('name');
            $table->text('address')->nullable();
            $table->string('contact_email')->nullable();
            $table->string('status')->default('active'); // active, inactive, suspended
            $table->timestamps();
        });
    }
    public function down(): void {
        Schema::dropIfExists('organizations');
    }
};

--- FIN DU FICHIER : ./database/migrations/2025_07_07_000048_create_organizations_table.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./database/migrations/2025_07_07_000238_add_organization_id_to_tables.php
////////////////////////////////////////////////////////////////

<?php
use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;
return new class extends Migration {
    public function up(): void {
        $tables = ['users', 'vehicles', 'drivers', 'assignments', 'maintenance_plans', 'maintenance_logs', 'vehicle_handover_forms'];
        foreach ($tables as $tableName) {
            Schema::table($tableName, function (Blueprint $table) {
                $table->foreignId('organization_id')->nullable()->constrained('organizations')->onDelete('cascade');
            });
        }
    }
    public function down(): void {
        // ... (logique pour supprimer les colonnes) ...
    }
};

--- FIN DU FICHIER : ./database/migrations/2025_07_07_000238_add_organization_id_to_tables.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./database/migrations/2025_07_07_160317_add_soft_deletes_to_users_table.php
////////////////////////////////////////////////////////////////

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::table('users', function (Blueprint $table) {
            $table->softDeletes(); // Ajoute la colonne 'deleted_at' nullable
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::table('users', function (Blueprint $table) {
            $table->dropSoftDeletes(); // Supprime la colonne 'deleted_at'
        });
    }
};

--- FIN DU FICHIER : ./database/migrations/2025_07_07_160317_add_soft_deletes_to_users_table.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./database/migrations/2025_07_22_012046_add_strategic_indexes_to_tables.php
////////////////////////////////////////////////////////////////

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up(): void
    {
        // --- Index sur les cl√©s √©trang√®res d'organisation ---
        // Essentiel pour la performance du multi-tenant.
        // Chaque requ√™te √©tant filtr√©e par organization_id, cet index est capital.
        Schema::table('vehicles', function (Blueprint $table) {
            $table->index('organization_id', 'idx_vehicles_organization');
        });
        Schema::table('drivers', function (Blueprint $table) {
            $table->index('organization_id', 'idx_drivers_organization');
        });
        Schema::table('assignments', function (Blueprint $table) {
            $table->index('organization_id', 'idx_assignments_organization');
        });
        Schema::table('maintenance_logs', function (Blueprint $table) {
            $table->index('organization_id', 'idx_maintenance_logs_organization');
        });
        Schema::table('maintenance_plans', function (Blueprint $table) {
            $table->index('organization_id', 'idx_maintenance_plans_organization');
        });

        // --- Index composites pour les recherches et filtres fr√©quents ---
        // Un index sur plusieurs colonnes est plus performant qu'un index par colonne
        // lorsque les recherches utilisent ces colonnes conjointement.

        // Pour filtrer les v√©hicules par statut au sein d'une organisation.
        Schema::table('vehicles', function (Blueprint $table) {
            $table->index(['status_id', 'organization_id'], 'idx_vehicles_status_org');
        });

        // Pour rechercher des affectations dans une plage de dates pour une organisation.
        Schema::table('assignments', function (Blueprint $table) {
            $table->index(['start_datetime', 'end_datetime', 'organization_id'], 'idx_assignments_dates_org');
        });

        // Pour trouver rapidement les prochaines maintenances dues pour une organisation.
        Schema::table('maintenance_plans', function (Blueprint $table) {
            $table->index(['next_due_date', 'organization_id'], 'idx_maintenance_plans_next_due_date');
            $table->index(['next_due_mileage', 'organization_id'], 'idx_maintenance_plans_next_due_mileage');
        });
    }

    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down(): void
    {
        // La m√©thode down() est cruciale pour pouvoir annuler la migration si besoin.
        Schema::table('vehicles', function (Blueprint $table) {
            $table->dropIndex('idx_vehicles_organization');
            $table->dropIndex('idx_vehicles_status_org');
        });
        Schema::table('drivers', function (Blueprint $table) {
            $table->dropIndex('idx_drivers_organization');
        });
        Schema::table('assignments', function (Blueprint $table) {
            $table->dropIndex('idx_assignments_organization');
            $table->dropIndex('idx_assignments_dates_org');
        });
        Schema::table('maintenance_logs', function (Blueprint $table) {
            $table->dropIndex('idx_maintenance_logs_organization');
        });
        Schema::table('maintenance_plans', function (Blueprint $table) {
            $table->dropIndex('idx_maintenance_plans_organization');
            $table->dropIndex('idx_maintenance_plans_next_due_date');
            $table->dropIndex('idx_maintenance_plans_next_due_mileage');
        });
    }
};

--- FIN DU FICHIER : ./database/migrations/2025_07_22_012046_add_strategic_indexes_to_tables.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./database/migrations/2025_07_22_014038_create_fleet_management_extended_tables.php
////////////////////////////////////////////////////////////////

<?php

// CORRECTION : Remplacement des points par des anti-slashs dans les d√©clarations 'use'
use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up(): void
    {
        // MODULE: GESTION DES CO√õTS
        Schema::create('expense_types', function (Blueprint $table) {
            $table->id();
            $table->string('name', 100)->unique();
            $table->text('description')->nullable();
        });

        Schema::create('expenses', function (Blueprint $table) {
            $table->id();
            $table->foreignId('organization_id')->constrained('organizations')->onDelete('cascade');
            $table->foreignId('vehicle_id')->nullable()->constrained('vehicles')->onDelete('set null');
            $table->foreignId('driver_id')->nullable()->constrained('drivers')->onDelete('set null');
            $table->foreignId('expense_type_id')->constrained('expense_types')->onDelete('restrict');
            $table->decimal('amount', 12, 2);
            $table->date('expense_date');
            $table->text('description')->nullable();
            $table->string('receipt_path', 512)->nullable();
            $table->foreignId('created_by_user_id')->nullable()->constrained('users')->onDelete('set null');
            $table->timestamps();
            $table->softDeletes();
        });

        // MODULE: GESTION DU CARBURANT
        Schema::create('fuel_refills', function (Blueprint $table) {
            $table->id();
            $table->foreignId('organization_id')->constrained('organizations')->onDelete('cascade');
            $table->foreignId('vehicle_id')->constrained('vehicles')->onDelete('cascade');
            $table->foreignId('driver_id')->nullable()->constrained('drivers')->onDelete('set null');
            $table->timestamp('refill_date');
            $table->decimal('quantity_liters', 8, 2);
            $table->decimal('price_per_liter', 8, 3); // Supporte 3 d√©cimales pour plus de pr√©cision
            $table->decimal('total_cost', 10, 2);
            $table->unsignedBigInteger('mileage_at_refill');
            $table->boolean('full_tank')->default(true);
            $table->string('station_name')->nullable();
            $table->timestamps();
        });

        // MODULE: GESTION DES INCIDENTS
        Schema::create('incident_statuses', function (Blueprint $table) {
            $table->id();
            $table->string('name', 100)->unique();
        });

        Schema::create('incidents', function (Blueprint $table) {
            $table->id();
            $table->foreignId('organization_id')->constrained('organizations')->onDelete('cascade');
            $table->foreignId('vehicle_id')->constrained('vehicles')->onDelete('cascade');
            $table->foreignId('driver_id')->nullable()->constrained('drivers')->onDelete('set null');
            $table->timestamp('incident_date');
            $table->string('type'); // Ex: 'Accident', 'Panne', 'Vol', etc.
            $table->string('severity'); // Ex: 'Faible', 'Moyenne', '√âlev√©e', 'Critique'
            $table->text('location')->nullable();
            $table->text('description');
            $table->boolean('third_party_involved')->default(false);
            $table->string('police_report_number')->nullable();
            $table->string('insurance_claim_number')->nullable();
            $table->foreignId('incident_status_id')->constrained('incident_statuses');
            $table->decimal('estimated_cost', 12, 2)->nullable();
            $table->decimal('actual_cost', 12, 2)->nullable();
            $table->foreignId('created_by_user_id')->nullable()->constrained('users')->onDelete('set null');
            $table->timestamps();
            $table->softDeletes();
        });

    //recr√©√© par la suite pour une meilleures gestion

    // MODULE: GESTION DOCUMENTAIRE (Polymorphique)
    //    Schema::create('document_types', function (Blueprint $table) {
    //        $table->id();
    //        $table->string('name', 100)->unique();
    //    });

    // RECREE PLUTARD
    //    Schema::create('documents', function (Blueprint $table) {
    //        $table->id();
    //        $table->foreignId('organization_id')->constrained('organizations')->onDelete('cascade');
    //        $table->morphs('documentable'); // Cr√©e `documentable_id` (BIGINT) et `documentable_type` (VARCHAR)
    //        $table->foreignId('document_type_id')->constrained('document_types');
    //        $table->string('title');
    //        $table->string('file_path', 512);
    //        $table->unsignedBigInteger('file_size'); // en octets
    //        $table->string('mime_type', 100);
    //        $table->date('issue_date')->nullable();
    //        $table->date('expiry_date')->nullable();
    //        $table->foreignId('created_by_user_id')->nullable()->constrained('users')->onDelete('set null');
    //        $table->timestamps();
    //        $table->softDeletes();
    //    });
    }

    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down(): void
    {
        // On supprime les tables dans l'ordre inverse de leur cr√©ation pour respecter les contraintes
        Schema::dropIfExists('documents');
        Schema::dropIfExists('document_types');
        Schema::dropIfExists('incidents');
        Schema::dropIfExists('incident_statuses');
        Schema::dropIfExists('fuel_refills');
        Schema::dropIfExists('expenses');
        Schema::dropIfExists('expense_types');
    }
};

--- FIN DU FICHIER : ./database/migrations/2025_07_22_014038_create_fleet_management_extended_tables.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./database/migrations/2025_08_12_015505_create_user_vehicle_pivot_table.php
////////////////////////////////////////////////////////////////

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        // Cr√©e la table pivot pour la relation N-N entre les utilisateurs et les v√©hicules.
        Schema::create('user_vehicle', function (Blueprint $table) {
            // Cl√© primaire composite pour garantir l'unicit√© de la paire user/vehicle.
            $table->primary(['user_id', 'vehicle_id']);

            $table->foreignId('user_id')->constrained()->onDelete('cascade');
            $table->foreignId('vehicle_id')->constrained()->onDelete('cascade');
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('user_vehicle');
    }
};

--- FIN DU FICHIER : ./database/migrations/2025_08_12_015505_create_user_vehicle_pivot_table.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./database/migrations/2025_08_15_014729_create_supplier_categories_table.php
////////////////////////////////////////////////////////////////

<?php
use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration {
    public function up(): void
    {
        Schema::create('supplier_categories', function (Blueprint $table) {
            $table->id();
            $table->string('name');
            $table->foreignId('organization_id')->constrained()->onDelete('cascade');
            $table->timestamps();
        });
    }

    public function down(): void
    {
        Schema::dropIfExists('supplier_categories');
    }
};

--- FIN DU FICHIER : ./database/migrations/2025_08_15_014729_create_supplier_categories_table.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./database/migrations/2025_08_15_014730_create_suppliers_table.php
////////////////////////////////////////////////////////////////

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    public function up(): void
    {
        Schema::create('suppliers', function (Blueprint $table) {
            $table->id();
            $table->string('name');
            $table->string('contact_name')->nullable();
            $table->string('phone')->nullable();
            $table->string('email')->nullable()->unique();
            $table->text('address')->nullable();

            // CORRECTION : On ajoute la cl√© √©trang√®re pour la cat√©gorie
            $table->foreignId('supplier_category_id')->nullable()->constrained()->onDelete('set null');

            $table->foreignId('organization_id')->constrained()->onDelete('cascade');
            $table->softDeletes();
            $table->timestamps();
        });
    }

    public function down(): void
    {
        Schema::dropIfExists('suppliers');
    }
};

--- FIN DU FICHIER : ./database/migrations/2025_08_15_014730_create_suppliers_table.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./database/migrations/2025_08_23_214824_create_document_categories_table.php
////////////////////////////////////////////////////////////////

<?php

// database/migrations/2025_08_23_183000_create_document_categories_table.php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('document_categories', function (Blueprint $table) {
            $table->id();
            $table->foreignId('organization_id')->constrained()->onDelete('cascade');
            $table->string('name');
            $table->text('description')->nullable();
            $table->boolean('is_active')->default(true);
            $table->timestamps();
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('document_categories');
    }
};

--- FIN DU FICHIER : ./database/migrations/2025_08_23_214824_create_document_categories_table.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./database/migrations/2025_08_23_214900_create_documents_table.php
////////////////////////////////////////////////////////////////

<?php

// database/migrations/2025_08_23_183001_create_documents_table.php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('documents', function (Blueprint $table) {
            $table->id();
            $table->uuid('uuid')->unique();
            $table->foreignId('organization_id')->constrained()->onDelete('cascade');
            $table->foreignId('document_category_id')->constrained()->onDelete('cascade');
            $table->foreignId('user_id')->comment('User who uploaded the document')->constrained()->onDelete('cascade');

            $table->string('file_path');
            $table->string('original_filename');
            $table->string('mime_type');
            $table->unsignedBigInteger('size_in_bytes');

            $table->date('issue_date')->nullable();
            $table->date('expiry_date')->nullable();
            
            $table->text('description')->nullable();
            $table->json('extra_metadata')->nullable();

            $table->timestamps();
        });

        Schema::create('documentables', function (Blueprint $table) {
            $table->foreignId('document_id')->constrained()->onDelete('cascade');
            $table->morphs('documentable'); // Creates `documentable_id` and `documentable_type`
            $table->primary(['document_id', 'documentable_id', 'documentable_type'], 'documentables_primary_key');
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('documentables');
        Schema::dropIfExists('documents');
    }
};

--- FIN DU FICHIER : ./database/migrations/2025_08_23_214900_create_documents_table.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./database/migrations/2025_08_24_223300_add_is_default_and_meta_schema_to_document_categories_table.php
////////////////////////////////////////////////////////////////

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::table('document_categories', function (Blueprint $table) {
            // As per the plan, make organization_id nullable for default categories
            $table->unsignedBigInteger('organization_id')->nullable()->change();

            $table->boolean('is_default')->default(false)->after('description');
            $table->json('meta_schema')->nullable()->after('is_active');
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::table('document_categories', function (Blueprint $table) {
            $table->dropColumn('is_default');
            $table->dropColumn('meta_schema');
            // Revert organization_id to its original state.
            // Note: This assumes all categories have an organization_id after the rollback.
            // A more robust rollback might require handling categories where organization_id became null.
            $table->unsignedBigInteger('organization_id')->nullable(false)->change();
        });
    }
};

--- FIN DU FICHIER : ./database/migrations/2025_08_24_223300_add_is_default_and_meta_schema_to_document_categories_table.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./database/migrations/2025_09_06_101000_create_enhanced_rbac_system.php
////////////////////////////////////////////////////////////////

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;
use Illuminate\Support\Facades\DB;
use Illuminate\Support\Facades\Log;

return new class extends Migration
{
    public function up(): void
    {
        $this->logMessage('D√©but de la transformation Enterprise RBAC');
        
        // 1. Transformer la table organizations
        $this->transformOrganizations();
        
        // 2. Enrichir la table users
        $this->enrichUsers();
        
        // 3. Cr√©er les tables enterprise
        $this->createEnterpriseTables();
        
        // 4. Migrer les donn√©es existantes
        $this->migrateData();
        
        $this->logMessage('Transformation Enterprise RBAC termin√©e avec succ√®s');
    }

    public function down(): void
    {
        $this->logMessage('Rollback de la transformation Enterprise RBAC');
        
        $tables = [
            'subscription_changes',
            'subscription_plans', 
            'organization_metrics',
            'comprehensive_audit_logs',
            'user_vehicle_assignments',
            'supervisor_driver_assignments',
            'granular_permissions'
        ];
        
        foreach ($tables as $table) {
            Schema::dropIfExists($table);
        }
        
        $this->logMessage('Rollback termin√©');
    }

    private function transformOrganizations(): void
    {
        $this->logMessage('Transformation de la table organizations');
        
        $existingColumns = Schema::getColumnListing('organizations');
        
        Schema::table('organizations', function (Blueprint $table) use ($existingColumns) {
            // Informations de base enrichies
            if (!in_array('slug', $existingColumns)) {
                $table->string('slug')->nullable()->after('name');
            }
            if (!in_array('legal_name', $existingColumns)) {
                $table->string('legal_name')->nullable()->after('name');
            }
            if (!in_array('brand_name', $existingColumns)) {
                $table->string('brand_name')->nullable()->after('legal_name');
            }
            if (!in_array('registration_number', $existingColumns)) {
                $table->string('registration_number')->nullable()->after('brand_name');
            }
            if (!in_array('tax_id', $existingColumns)) {
                $table->string('tax_id')->nullable()->after('registration_number');
            }
            
            // Contact enrichi
            if (!in_array('primary_email', $existingColumns)) {
                $table->string('primary_email')->nullable()->after('contact_email');
            }
            if (!in_array('billing_email', $existingColumns)) {
                $table->string('billing_email')->nullable()->after('primary_email');
            }
            if (!in_array('support_email', $existingColumns)) {
                $table->string('support_email')->nullable()->after('billing_email');
            }
            if (!in_array('primary_phone', $existingColumns)) {
                $table->string('primary_phone')->nullable()->after('support_email');
            }
            if (!in_array('mobile_phone', $existingColumns)) {
                $table->string('mobile_phone')->nullable()->after('primary_phone');
            }
            if (!in_array('website', $existingColumns)) {
                $table->string('website')->nullable()->after('mobile_phone');
            }
            
            // Adresses structur√©es
            if (!in_array('headquarters_address', $existingColumns)) {
                $table->json('headquarters_address')->nullable()->after('address');
            }
            if (!in_array('billing_address', $existingColumns)) {
                $table->json('billing_address')->nullable()->after('headquarters_address');
            }
            
            // Statut enrichi
            if (!in_array('compliance_status', $existingColumns)) {
                $table->enum('compliance_status', ['compliant', 'warning', 'non_compliant', 'under_review'])->default('under_review')->after('status');
            }
            if (!in_array('status_changed_at', $existingColumns)) {
                $table->timestamp('status_changed_at')->nullable()->after('compliance_status');
            }
            if (!in_array('status_reason', $existingColumns)) {
                $table->text('status_reason')->nullable()->after('status_changed_at');
            }
            
            // Abonnement
            if (!in_array('subscription_plan', $existingColumns)) {
                $table->enum('subscription_plan', ['trial', 'basic', 'professional', 'enterprise', 'custom'])->default('trial')->after('status_reason');
            }
            if (!in_array('subscription_tier', $existingColumns)) {
                $table->string('subscription_tier')->nullable()->after('subscription_plan');
            }
            if (!in_array('subscription_starts_at', $existingColumns)) {
                $table->timestamp('subscription_starts_at')->nullable()->after('subscription_tier');
            }
            if (!in_array('subscription_expires_at', $existingColumns)) {
                $table->timestamp('subscription_expires_at')->nullable()->after('subscription_starts_at');
            }
            if (!in_array('trial_ends_at', $existingColumns)) {
                $table->timestamp('trial_ends_at')->nullable()->after('subscription_expires_at');
            }
            if (!in_array('monthly_rate', $existingColumns)) {
                $table->decimal('monthly_rate', 8, 2)->nullable()->after('trial_ends_at');
            }
            if (!in_array('annual_rate', $existingColumns)) {
                $table->decimal('annual_rate', 8, 2)->nullable()->after('monthly_rate');
            }
            if (!in_array('currency', $existingColumns)) {
                $table->string('currency', 3)->default('EUR')->after('annual_rate');
            }
            
            // Configuration
            if (!in_array('plan_limits', $existingColumns)) {
                $table->json('plan_limits')->nullable()->after('currency');
            }
            if (!in_array('current_usage', $existingColumns)) {
                $table->json('current_usage')->nullable()->after('plan_limits');
            }
            if (!in_array('feature_flags', $existingColumns)) {
                $table->json('feature_flags')->nullable()->after('current_usage');
            }
            if (!in_array('settings', $existingColumns)) {
                $table->json('settings')->nullable()->after('feature_flags');
            }
            if (!in_array('branding', $existingColumns)) {
                $table->json('branding')->nullable()->after('settings');
            }
            if (!in_array('notification_preferences', $existingColumns)) {
                $table->json('notification_preferences')->nullable()->after('branding');
            }
            
            // S√©curit√©
            if (!in_array('two_factor_required', $existingColumns)) {
                $table->boolean('two_factor_required')->default(false)->after('notification_preferences');
            }
            if (!in_array('ip_restriction_enabled', $existingColumns)) {
                $table->boolean('ip_restriction_enabled')->default(false)->after('two_factor_required');
            }
            if (!in_array('password_policy_strength', $existingColumns)) {
                $table->integer('password_policy_strength')->default(2)->after('ip_restriction_enabled');
            }
            if (!in_array('session_timeout_minutes', $existingColumns)) {
                $table->integer('session_timeout_minutes')->default(480)->after('password_policy_strength');
            }
            if (!in_array('gdpr_compliant', $existingColumns)) {
                $table->boolean('gdpr_compliant')->default(false)->after('session_timeout_minutes');
            }
            if (!in_array('gdpr_consent_at', $existingColumns)) {
                $table->timestamp('gdpr_consent_at')->nullable()->after('gdpr_compliant');
            }
            
            // M√©triques
            if (!in_array('last_activity_at', $existingColumns)) {
                $table->timestamp('last_activity_at')->nullable()->after('gdpr_consent_at');
            }
            if (!in_array('total_users', $existingColumns)) {
                $table->integer('total_users')->default(0)->after('last_activity_at');
            }
            if (!in_array('active_users', $existingColumns)) {
                $table->integer('active_users')->default(0)->after('total_users');
            }
            if (!in_array('total_vehicles', $existingColumns)) {
                $table->integer('total_vehicles')->default(0)->after('active_users');
            }
            if (!in_array('active_vehicles', $existingColumns)) {
                $table->integer('active_vehicles')->default(0)->after('total_vehicles');
            }
            
            // G√©olocalisation
            if (!in_array('timezone', $existingColumns)) {
                $table->string('timezone')->default('Europe/Paris')->after('active_vehicles');
            }
            if (!in_array('country_code', $existingColumns)) {
                $table->string('country_code', 2)->nullable()->after('timezone');
            }
            if (!in_array('language', $existingColumns)) {
                $table->string('language', 2)->default('fr')->after('country_code');
            }
            if (!in_array('latitude', $existingColumns)) {
                $table->decimal('latitude', 10, 8)->nullable()->after('language');
            }
            if (!in_array('longitude', $existingColumns)) {
                $table->decimal('longitude', 11, 8)->nullable()->after('latitude');
            }
            
            // Hi√©rarchie
            if (!in_array('parent_organization_id', $existingColumns)) {
                $table->foreignId('parent_organization_id')->nullable()->constrained('organizations')->onDelete('set null')->after('longitude');
            }
            if (!in_array('hierarchy_level', $existingColumns)) {
                $table->integer('hierarchy_level')->default(0)->after('parent_organization_id');
            }
            
            // M√©tadonn√©es
            if (!in_array('created_by', $existingColumns)) {
                $table->foreignId('created_by')->nullable()->constrained('users')->onDelete('set null')->after('hierarchy_level');
            }
            if (!in_array('updated_by', $existingColumns)) {
                $table->foreignId('updated_by')->nullable()->constrained('users')->onDelete('set null')->after('created_by');
            }
            if (!in_array('onboarding_completed_at', $existingColumns)) {
                $table->timestamp('onboarding_completed_at')->nullable()->after('updated_by');
            }
            if (!in_array('deleted_at', $existingColumns)) {
                $table->softDeletes();
            }
        });

        // G√©n√©rer les slugs
        $this->generateSlugs();
        
        // Cr√©er les index
        $this->createOrganizationIndexes();
    }

    private function enrichUsers(): void
    {
        $this->logMessage('Enrichissement de la table users');
        
        $existingColumns = Schema::getColumnListing('users');
        
        Schema::table('users', function (Blueprint $table) use ($existingColumns) {
            // Relations hi√©rarchiques
            if (!in_array('supervisor_id', $existingColumns)) {
                $table->foreignId('supervisor_id')->nullable()->constrained('users')->onDelete('set null')->after('organization_id');
            }
            if (!in_array('manager_id', $existingColumns)) {
                $table->foreignId('manager_id')->nullable()->constrained('users')->onDelete('set null')->after('supervisor_id');
            }
            
            // Permissions
            if (!in_array('is_super_admin', $existingColumns)) {
                $table->boolean('is_super_admin')->default(false)->after('manager_id');
            }
            if (!in_array('permissions_cache', $existingColumns)) {
                $table->json('permissions_cache')->nullable()->after('is_super_admin');
            }
            
            // Profil enrichi
            if (!in_array('first_name', $existingColumns)) {
                $table->string('first_name')->nullable()->after('name');
            }
            if (!in_array('last_name', $existingColumns)) {
                $table->string('last_name')->nullable()->after('first_name');
            }
            if (!in_array('phone', $existingColumns)) {
                $table->string('phone')->nullable()->after('email');
            }
            if (!in_array('job_title', $existingColumns)) {
                $table->string('job_title')->nullable()->after('phone');
            }
            if (!in_array('department', $existingColumns)) {
                $table->string('department')->nullable()->after('job_title');
            }
            if (!in_array('employee_id', $existingColumns)) {
                $table->string('employee_id')->nullable()->after('department');
            }
            
            // Dates
            if (!in_array('hire_date', $existingColumns)) {
                $table->date('hire_date')->nullable()->after('employee_id');
            }
            if (!in_array('birth_date', $existingColumns)) {
                $table->date('birth_date')->nullable()->after('hire_date');
            }
            
            // S√©curit√©
            if (!in_array('two_factor_enabled', $existingColumns)) {
                $table->boolean('two_factor_enabled')->default(false)->after('permissions_cache');
            }
            if (!in_array('failed_login_attempts', $existingColumns)) {
                $table->integer('failed_login_attempts')->default(0)->after('two_factor_enabled');
            }
            if (!in_array('locked_until', $existingColumns)) {
                $table->timestamp('locked_until')->nullable()->after('failed_login_attempts');
            }
            if (!in_array('password_changed_at', $existingColumns)) {
                $table->timestamp('password_changed_at')->nullable()->after('locked_until');
            }
            
            // Activit√©
            if (!in_array('last_activity_at', $existingColumns)) {
                $table->timestamp('last_activity_at')->nullable()->after('password_changed_at');
            }
            if (!in_array('last_login_at', $existingColumns)) {
                $table->timestamp('last_login_at')->nullable()->after('last_activity_at');
            }
            if (!in_array('last_login_ip', $existingColumns)) {
                $table->string('last_login_ip')->nullable()->after('last_login_at');
            }
            if (!in_array('login_count', $existingColumns)) {
                $table->integer('login_count')->default(0)->after('last_login_ip');
            }
            
            // Statut
            if (!in_array('is_active', $existingColumns)) {
                $table->boolean('is_active')->default(true)->after('login_count');
            }
            if (!in_array('user_status', $existingColumns)) {
                $table->enum('user_status', ['active', 'inactive', 'suspended', 'pending'])->default('pending')->after('is_active');
            }
            if (!in_array('timezone', $existingColumns)) {
                $table->string('timezone')->default('Europe/Paris')->after('user_status');
            }
            if (!in_array('language', $existingColumns)) {
                $table->string('language', 2)->default('fr')->after('timezone');
            }
            if (!in_array('preferences', $existingColumns)) {
                $table->json('preferences')->nullable()->after('language');
            }
            if (!in_array('notification_preferences', $existingColumns)) {
                $table->json('notification_preferences')->nullable()->after('preferences');
            }
        });

        $this->createUserIndexes();
    }

    private function createEnterpriseTables(): void
    {
        $this->logMessage('Cr√©ation des tables enterprise');
        
        // Table des permissions granulaires
        if (!Schema::hasTable('granular_permissions')) {
            Schema::create('granular_permissions', function (Blueprint $table) {
                $table->id();
                $table->string('name')->unique();
                $table->string('guard_name')->default('web');
                $table->string('module');
                $table->string('resource');
                $table->string('action');
                $table->enum('scope', ['global', 'organization', 'supervised', 'own'])->default('organization');
                $table->text('description')->nullable();
                $table->integer('risk_level')->default(1);
                $table->boolean('is_system')->default(false);
                $table->boolean('is_active')->default(true);
                $table->timestamps();
                
                $table->index(['module', 'resource', 'action']);
                $table->index(['scope', 'is_active']);
            });
        }

        // Table des assignations superviseur-chauffeur
        if (!Schema::hasTable('supervisor_driver_assignments')) {
            Schema::create('supervisor_driver_assignments', function (Blueprint $table) {
                $table->id();
                $table->foreignId('supervisor_id')->constrained('users')->onDelete('cascade');
                $table->foreignId('driver_id')->constrained('drivers')->onDelete('cascade');
                $table->foreignId('assigned_by')->constrained('users');
                $table->timestamp('assigned_at');
                $table->timestamp('expires_at')->nullable();
                $table->boolean('is_active')->default(true);
                $table->timestamps();
                
                $table->unique(['supervisor_id', 'driver_id']);
                $table->index(['supervisor_id', 'is_active']);
            });
        }

        // Table des assignations superviseur-v√©hicule
        if (!Schema::hasTable('user_vehicle_assignments')) {
            Schema::create('user_vehicle_assignments', function (Blueprint $table) {
                $table->id();
                $table->foreignId('supervisor_id')->constrained('users')->onDelete('cascade');
                $table->foreignId('vehicle_id')->constrained('vehicles')->onDelete('cascade');
                $table->foreignId('assigned_by')->constrained('users');
                $table->timestamp('assigned_at');
                $table->timestamp('expires_at')->nullable();
                $table->boolean('is_active')->default(true);
                $table->timestamps();
                
                $table->unique(['supervisor_id', 'vehicle_id']);
                $table->index(['supervisor_id', 'is_active']);
            });
        }

        // Table d'audit
        if (!Schema::hasTable('comprehensive_audit_logs')) {
            Schema::create('comprehensive_audit_logs', function (Blueprint $table) {
                $table->id();
                $table->uuid('audit_uuid')->unique();
                $table->foreignId('organization_id')->constrained()->onDelete('cascade');
                $table->foreignId('user_id')->nullable()->constrained()->onDelete('set null');
                
                $table->string('event_category');
                $table->string('event_type');
                $table->string('event_action');
                $table->enum('severity_level', ['low', 'medium', 'high', 'critical'])->default('medium');
                $table->text('event_description');
                $table->json('event_data');
                $table->json('before_state')->nullable();
                $table->json('after_state')->nullable();
                
                $table->string('resource_type')->nullable();
                $table->unsignedBigInteger('resource_id')->nullable();
                $table->string('ip_address')->nullable();
                $table->text('user_agent')->nullable();
                $table->string('session_id')->nullable();
                
                $table->boolean('gdpr_relevant')->default(false);
                $table->timestamp('occurred_at');
                $table->timestamps();
                
                $table->index(['organization_id', 'occurred_at']);
                $table->index(['event_category', 'event_type']);
                $table->index(['resource_type', 'resource_id']);
            });
        }

        // Table des m√©triques
        if (!Schema::hasTable('organization_metrics')) {
            Schema::create('organization_metrics', function (Blueprint $table) {
                $table->id();
                $table->foreignId('organization_id')->constrained()->onDelete('cascade');
                $table->date('metric_date');
                $table->string('metric_period');
                
                $table->integer('total_users')->default(0);
                $table->integer('active_users')->default(0);
                $table->integer('total_vehicles')->default(0);
                $table->integer('active_vehicles')->default(0);
                $table->decimal('total_distance_km', 12, 2)->default(0);
                $table->decimal('fuel_costs', 10, 2)->default(0);
                $table->decimal('maintenance_costs', 10, 2)->default(0);
                
                $table->timestamps();
                
                $table->unique(['organization_id', 'metric_date', 'metric_period']);
                $table->index(['metric_date', 'metric_period']);
            });
        }

        // Table des plans d'abonnement
        if (!Schema::hasTable('subscription_plans')) {
            Schema::create('subscription_plans', function (Blueprint $table) {
                $table->id();
                $table->string('name');
                $table->string('slug')->unique();
                $table->text('description')->nullable();
                $table->enum('tier', ['trial', 'basic', 'professional', 'enterprise', 'custom']);
                $table->decimal('base_monthly_price', 8, 2)->default(0);
                $table->decimal('base_annual_price', 8, 2)->default(0);
                $table->json('feature_limits');
                $table->json('included_features');
                $table->integer('trial_days')->default(14);
                $table->boolean('is_public')->default(true);
                $table->boolean('is_active')->default(true);
                $table->integer('sort_order')->default(0);
                $table->timestamps();
                
                $table->index(['tier', 'is_active']);
                $table->index(['is_public', 'sort_order']);
            });
        }

        // Table des changements d'abonnement
        if (!Schema::hasTable('subscription_changes')) {
            Schema::create('subscription_changes', function (Blueprint $table) {
                $table->id();
                $table->foreignId('organization_id')->constrained()->onDelete('cascade');
                $table->foreignId('old_plan_id')->nullable()->constrained('subscription_plans');
                $table->foreignId('new_plan_id')->constrained('subscription_plans');
                $table->enum('change_type', ['upgrade', 'downgrade', 'renewal', 'cancellation']);
                $table->text('change_reason')->nullable();
                $table->decimal('amount_due', 8, 2)->nullable();
                $table->timestamp('effective_date');
                $table->foreignId('initiated_by')->constrained('users');
                $table->enum('status', ['pending', 'processed', 'failed'])->default('pending');
                $table->timestamps();
                
                $table->index(['organization_id', 'effective_date']);
                $table->index(['change_type', 'status']);
            });
        }
    }

    private function generateSlugs(): void
    {
        $this->logMessage('G√©n√©ration des slugs pour organisations');
        
        $organizations = DB::table('organizations')->whereNull('slug')->get();
        
        foreach ($organizations as $org) {
            $slug = \Illuminate\Support\Str::slug($org->name);
            $originalSlug = $slug;
            $counter = 1;
            
            while (DB::table('organizations')->where('slug', $slug)->where('id', '!=', $org->id)->exists()) {
                $slug = $originalSlug . '-' . $counter;
                $counter++;
            }
            
            DB::table('organizations')->where('id', $org->id)->update([
                'slug' => $slug,
                'legal_name' => $org->name,
                'primary_email' => $org->contact_email ?: 'contact@' . $slug . '.zenfleet.app',
                'headquarters_address' => json_encode([
                    'street' => $org->address,
                    'city' => null,
                    'postal_code' => null,
                    'country' => 'France'
                ]),
                'subscription_plan' => 'professional',
                'subscription_starts_at' => $org->created_at,
                'plan_limits' => json_encode([
                    'max_users' => 100,
                    'max_vehicles' => 500,
                    'max_drivers' => 200
                ]),
                'current_usage' => json_encode([
                    'users' => 0,
                    'vehicles' => 0,
                    'drivers' => 0
                ]),
                'feature_flags' => json_encode([
                    'advanced_analytics' => true,
                    'api_access' => true,
                    'supervisor_management' => true
                ]),
                'settings' => json_encode([
                    'timezone' => 'Europe/Paris',
                    'currency' => 'EUR',
                    'language' => 'fr'
                ]),
                'notification_preferences' => json_encode([
                    'email_notifications' => true,
                    'push_notifications' => true
                ])
            ]);
        }
    }

    private function migrateData(): void
    {
        $this->logMessage('Migration des donn√©es existantes');
        
        $plans = [
            [
                'name' => 'Trial',
                'slug' => 'trial',
                'tier' => 'trial',
                'description' => 'Essai gratuit 14 jours',
                'base_monthly_price' => 0.00,
                'base_annual_price' => 0.00,
                'feature_limits' => json_encode(['max_users' => 3, 'max_vehicles' => 10]),
                'included_features' => json_encode(['basic_management']),
                'created_at' => now(),
                'updated_at' => now()
            ],
            [
                'name' => 'Professional',
                'slug' => 'professional',
                'tier' => 'professional',
                'description' => 'Solution compl√®te',
                'base_monthly_price' => 299.00,
                'base_annual_price' => 2990.00,
                'feature_limits' => json_encode(['max_users' => 100, 'max_vehicles' => 500]),
                'included_features' => json_encode(['advanced_management', 'analytics', 'api']),
                'created_at' => now(),
                'updated_at' => now()
            ],
            [
                'name' => 'Enterprise',
                'slug' => 'enterprise',
                'tier' => 'enterprise',
                'description' => 'Solution enterprise',
                'base_monthly_price' => 999.00,
                'base_annual_price' => 9990.00,
                'feature_limits' => json_encode(['max_users' => null, 'max_vehicles' => null]),
                'included_features' => json_encode(['everything', 'white_labeling', 'sla']),
                'created_at' => now(),
                'updated_at' => now()
            ]
        ];

        foreach ($plans as $plan) {
            DB::table('subscription_plans')->insertOrIgnore($plan);
        }
    }

    private function createOrganizationIndexes(): void
    {
        $this->createIndex('organizations', ['slug']);
        $this->createIndex('organizations', ['status', 'subscription_expires_at']);
        $this->createIndex('organizations', ['subscription_plan', 'status']);
        $this->createIndex('organizations', ['parent_organization_id', 'hierarchy_level']);
        $this->createIndex('organizations', ['last_activity_at']);
    }

    private function createUserIndexes(): void
    {
        $this->createIndex('users', ['organization_id', 'user_status', 'is_active']);
        $this->createIndex('users', ['supervisor_id']);
        $this->createIndex('users', ['manager_id']);
        $this->createIndex('users', ['employee_id']);
        $this->createIndex('users', ['last_activity_at']);
        $this->createIndex('users', ['is_super_admin']);
    }

    private function createIndex(string $table, array $columns): void
    {
        try {
            $indexName = $table . '_' . implode('_', $columns) . '_index';
            
            $exists = DB::select(
                "SELECT indexname FROM pg_indexes WHERE tablename = ? AND indexname = ?",
                [$table, $indexName]
            );
            
            if (empty($exists)) {
                Schema::table($table, function (Blueprint $table) use ($columns) {
                    $table->index($columns);
                });
            }
        } catch (\Exception $e) {
            Log::warning("Index creation failed for {$table}: " . $e->getMessage());
        }
    }

    private function logMessage(string $message): void
    {
        Log::info("[ZENFLEET MIGRATION] {$message}");
        if (app()->runningInConsole()) {
            echo "[INFO] {$message}\n";
        }
    }
};


--- FIN DU FICHIER : ./database/migrations/2025_09_06_101000_create_enhanced_rbac_system.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./database/migrations/2025_09_06_212409_add_missing_columns_to_organizations_table.php
////////////////////////////////////////////////////////////////

<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

class AddMissingColumnsToOrganizationsTable extends Migration
{
    /**
     * üöÄ AJOUT DES COLONNES MANQUANTES - ORGANIZATIONS ENTERPRISE
     */
    public function up(): void
    {
        Schema::table('organizations', function (Blueprint $table) {
            // V√©rifier et ajouter chaque colonne seulement si elle n'existe pas
            
            // Colonnes de base manquantes
            if (!Schema::hasColumn('organizations', 'legal_name')) {
                $table->string('legal_name')->nullable();
            }
            
            if (!Schema::hasColumn('organizations', 'organization_type')) {
                $table->string('organization_type')->nullable()->index();
            }
            
            if (!Schema::hasColumn('organizations', 'industry')) {
                $table->string('industry', 100)->nullable();
            }
            
            if (!Schema::hasColumn('organizations', 'description')) {
                $table->text('description')->nullable();
            }
            
            // Informations l√©gales
            if (!Schema::hasColumn('organizations', 'siret')) {
                $table->string('siret', 20)->nullable()->unique();
            }
            
            if (!Schema::hasColumn('organizations', 'vat_number')) {
                $table->string('vat_number', 20)->nullable()->unique();
            }
            
            if (!Schema::hasColumn('organizations', 'legal_form')) {
                $table->string('legal_form', 50)->nullable();
            }
            
            if (!Schema::hasColumn('organizations', 'registration_number')) {
                $table->string('registration_number', 50)->nullable();
            }
            
            if (!Schema::hasColumn('organizations', 'registration_date')) {
                $table->date('registration_date')->nullable();
            }
            
            // Contact et communication
            if (!Schema::hasColumn('organizations', 'phone')) {
                $table->string('phone', 20)->nullable();
            }
            
            if (!Schema::hasColumn('organizations', 'website')) {
                $table->string('website')->nullable();
            }
            
            // Adresse compl√®te
            if (!Schema::hasColumn('organizations', 'address')) {
                $table->string('address')->nullable();
            }
            
            if (!Schema::hasColumn('organizations', 'address_line_2')) {
                $table->string('address_line_2')->nullable();
            }
            
            if (!Schema::hasColumn('organizations', 'city')) {
                $table->string('city', 100)->nullable()->index();
            }
            
            if (!Schema::hasColumn('organizations', 'postal_code')) {
                $table->string('postal_code', 20)->nullable();
            }
            
            if (!Schema::hasColumn('organizations', 'state_province')) {
                $table->string('state_province', 100)->nullable();
            }
            
            // ‚úÖ COLONNE COUNTRY - CRITIQUE
            if (!Schema::hasColumn('organizations', 'country')) {
                $table->string('country', 2)->nullable()->index()->comment('Code pays ISO 3166-1 alpha-2');
            }
            
            // Param√®tres r√©gionaux
            if (!Schema::hasColumn('organizations', 'timezone')) {
                $table->string('timezone', 50)->nullable()->default('Europe/Paris');
            }
            
            if (!Schema::hasColumn('organizations', 'currency')) {
                $table->string('currency', 3)->nullable()->default('EUR');
            }
            
            if (!Schema::hasColumn('organizations', 'language')) {
                $table->string('language', 5)->nullable()->default('fr');
            }
            
            if (!Schema::hasColumn('organizations', 'date_format')) {
                $table->string('date_format', 20)->nullable()->default('d/m/Y');
            }
            
            if (!Schema::hasColumn('organizations', 'time_format')) {
                $table->string('time_format', 10)->nullable()->default('H:i');
            }
            
            // Logo et branding
            if (!Schema::hasColumn('organizations', 'logo_path')) {
                $table->string('logo_path')->nullable();
            }
            
            // Statut et abonnement
            if (!Schema::hasColumn('organizations', 'status')) {
                $table->enum('status', ['active', 'inactive', 'pending', 'suspended'])->default('active')->index();
            }
            
            if (!Schema::hasColumn('organizations', 'subscription_plan')) {
                $table->enum('subscription_plan', ['basic', 'professional', 'enterprise'])->default('basic');
            }
            
            if (!Schema::hasColumn('organizations', 'subscription_expires_at')) {
                $table->timestamp('subscription_expires_at')->nullable();
            }
            
            // Limites et quotas
            if (!Schema::hasColumn('organizations', 'max_vehicles')) {
                $table->integer('max_vehicles')->default(25);
            }
            
            if (!Schema::hasColumn('organizations', 'max_drivers')) {
                $table->integer('max_drivers')->default(25);
            }
            
            if (!Schema::hasColumn('organizations', 'max_users')) {
                $table->integer('max_users')->default(10);
            }
            
            // Configuration avanc√©e
            if (!Schema::hasColumn('organizations', 'working_days')) {
                $table->json('working_days')->nullable()->comment('Jours ouvr√©s [1,2,3,4,5]');
            }
            
            if (!Schema::hasColumn('organizations', 'settings')) {
                $table->json('settings')->nullable()->comment('Configuration organisation');
            }
            
            // Audit et tra√ßabilit√©
            if (!Schema::hasColumn('organizations', 'created_by')) {
                $table->unsignedBigInteger('created_by')->nullable();
            }
            
            if (!Schema::hasColumn('organizations', 'updated_by')) {
                $table->unsignedBigInteger('updated_by')->nullable();
            }
            
            if (!Schema::hasColumn('organizations', 'admin_user_id')) {
                $table->unsignedBigInteger('admin_user_id')->nullable();
            }
            
            // Compteurs de performance
            if (!Schema::hasColumn('organizations', 'total_users')) {
                $table->integer('total_users')->default(0);
            }
            
            if (!Schema::hasColumn('organizations', 'active_users')) {
                $table->integer('active_users')->default(0);
            }
            
            // Index pour performance
            $table->index(['status', 'subscription_plan']);
            $table->index(['country', 'city']);
        });
    }

    /**
     * üîÑ ROLLBACK - Supprimer les colonnes ajout√©es
     */
    public function down(): void
    {
        Schema::table('organizations', function (Blueprint $table) {
            $columnsToRemove = [
                'legal_name', 'organization_type', 'industry', 'description',
                'siret', 'vat_number', 'legal_form', 'registration_number', 'registration_date',
                'phone', 'website', 'address', 'address_line_2', 'city', 'postal_code', 
                'state_province', 'country', 'timezone', 'currency', 'language', 
                'date_format', 'time_format', 'logo_path', 'status', 'subscription_plan',
                'subscription_expires_at', 'max_vehicles', 'max_drivers', 'max_users',
                'working_days', 'settings', 'created_by', 'updated_by', 'admin_user_id',
                'total_users', 'active_users'
            ];
            
            foreach ($columnsToRemove as $column) {
                if (Schema::hasColumn('organizations', $column)) {
                    $table->dropColumn($column);
                }
            }
        });
    }
}


--- FIN DU FICHIER : ./database/migrations/2025_09_06_212409_add_missing_columns_to_organizations_table.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./database/seeders/DatabaseSeeder.php
////////////////////////////////////////////////////////////////

<?php

namespace Database\Seeders;

use App\Models\Driver;
use App\Models\Organization;
use App\Models\Supplier;
use App\Models\User;
use App\Models\Vehicle;
use Illuminate\Database\Seeder;
use Illuminate\Support\Str;

class DatabaseSeeder extends Seeder
{
    public function run(): void
    {
        $this->call([
            PermissionSeeder::class,
            ValidationLevelSeeder::class,
            VehicleDataSeeder::class,
            DriverStatusSeeder::class,
            Maintenance\MaintenanceDataSeeder::class,
            DefaultDocumentCategoriesSeeder::class,
        ]);

        $zenfleetOrganization = Organization::firstOrCreate(
            ['name' => 'ZENFLEET Platform'],
            ['uuid' => (string) Str::uuid()]
        );

        // --- Cr√©ation de l'utilisateur SUPER ADMIN ---
        $superAdminUser = User::firstOrCreate(
            ['email' => 'admin@zenfleet.com'],
            [
                'first_name' => 'Super',
                'last_name' => 'Admin',
                'password' => bcrypt('password'),
                'organization_id' => $zenfleetOrganization->id,
                'email_verified_at' => now(),
            ]
        );

        // CORRECTION : On assigne le bon r√¥le
        $superAdminUser->syncRoles(['Super Admin']);
        $this->command->info('Super Admin user created and assigned.');
        
        // --- Cr√©ation de donn√©es de test pour les environnements de d√©veloppement ---
        if (app()->environment('local', 'development')) {
            // Seed data for ZENFLEET organization only if it was just created
            if ($zenfleetOrganization->wasRecentlyCreated) {
                Driver::factory()->count(2)->create(['organization_id' => $zenfleetOrganization->id]);
                Vehicle::factory()->count(3)->create(['organization_id' => $zenfleetOrganization->id]);
                Supplier::factory()->count(2)->create(['organization_id' => $zenfleetOrganization->id]);
                $this->command->info('Test data for ZENFLEET organization created.');
            }

            // Seed data for a demo client organization
            $clientOrganization = Organization::firstOrCreate(
                ['name' => 'Client de D√©mo Inc.'],
                ['uuid' => (string) Str::uuid()]
            );

            $clientAdmin = User::firstOrCreate(
                ['email' => 'client.admin@exemple.com'],
                [
                    'first_name' => 'Admin',
                    'last_name' => 'Client',
                    'password' => bcrypt('password'),
                    'organization_id' => $clientOrganization->id,
                    'email_verified_at' => now(),
                ]
            );
            $clientAdmin->assignRole('Admin');

            // Seed related data only if the demo organization was just created
            if ($clientOrganization->wasRecentlyCreated) {
                Driver::factory()->count(5)->create(['organization_id' => $clientOrganization->id]);
                Vehicle::factory()->count(10)->create(['organization_id' => $clientOrganization->id]);
                Supplier::factory()->count(5)->create(['organization_id' => $clientOrganization->id]);
                $this->command->info('Demo organization with data created.');
            }
        }
    }
}
--- FIN DU FICHIER : ./database/seeders/DatabaseSeeder.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./database/seeders/DefaultDocumentCategoriesSeeder.php
////////////////////////////////////////////////////////////////

<?php

namespace Database\Seeders;

use Illuminate\Database\Seeder;
use App\Models\DocumentCategory;

class DefaultDocumentCategoriesSeeder extends Seeder
{
    /**
     * Run the database seeds.
     *
     * @return void
     */
    public function run()
    {
        $defaultCategories = [
            [
                'name' => 'Assurance',
                'description' => 'Document d\'assurance du v√©hicule.',
                'is_default' => true,
                'organization_id' => null,
                'meta_schema' => json_encode([
                    'fields' => [
                        ['name' => 'fournisseur_id', 'label' => 'Fournisseur', 'type' => 'entity_select', 'entity' => 'supplier', 'required' => true, 'visible' => true, 'editable' => true],
                        ['name' => 'date_debut', 'label' => 'Date de D√©but', 'type' => 'date', 'required' => true, 'visible' => true, 'editable' => true],
                        ['name' => 'date_fin', 'label' => 'Date de Fin', 'type' => 'date', 'required' => true, 'visible' => true, 'editable' => true],
                    ]
                ]),
            ],
            [
                'name' => 'Assurance Marchandise',
                'description' => 'Assurance sp√©cifique pour la marchandise transport√©e.',
                'is_default' => true,
                'organization_id' => null,
                'meta_schema' => json_encode([
                    'fields' => [
                        ['name' => 'fournisseur_id', 'label' => 'Fournisseur', 'type' => 'entity_select', 'entity' => 'supplier', 'required' => true, 'visible' => true, 'editable' => true],
                        ['name' => 'date_debut', 'label' => 'Date de D√©but', 'type' => 'date', 'required' => true, 'visible' => true, 'editable' => true],
                        ['name' => 'date_fin', 'label' => 'Date de Fin', 'type' => 'date', 'required' => true, 'visible' => true, 'editable' => true],
                    ]
                ]),
            ],
            [
                'name' => 'Permis de Circuler',
                'description' => 'Document autorisant la circulation du v√©hicule.',
                'is_default' => true,
                'organization_id' => null,
                'meta_schema' => json_encode([
                    'fields' => [
                        ['name' => 'fournisseur_id', 'label' => 'Fournisseur', 'type' => 'entity_select', 'entity' => 'supplier', 'required' => true, 'visible' => true, 'editable' => true],
                        ['name' => 'date_debut', 'label' => 'Date de D√©but', 'type' => 'date', 'required' => true, 'visible' => true, 'editable' => true],
                        ['name' => 'date_fin', 'label' => 'Date de Fin', 'type' => 'date', 'required' => true, 'visible' => true, 'editable' => true],
                    ]
                ]),
            ],
            [
                'name' => 'Vignette',
                'description' => 'Vignette fiscale ou environnementale.',
                'is_default' => true,
                'organization_id' => null,
                'meta_schema' => json_encode([
                    'fields' => [
                        ['name' => 'date_debut', 'label' => 'Date de D√©but', 'type' => 'date', 'required' => true, 'visible' => true, 'editable' => true],
                        ['name' => 'date_fin', 'label' => 'Date de Fin', 'type' => 'date', 'required' => true, 'visible' => true, 'editable' => true],
                    ]
                ]),
            ],
            [
                'name' => 'Contr√¥le Technique',
                'description' => 'Rapport de contr√¥le technique du v√©hicule.',
                'is_default' => true,
                'organization_id' => null,
                'meta_schema' => json_encode([
                    'fields' => [
                        ['name' => 'fournisseur_id', 'label' => 'Fournisseur', 'type' => 'entity_select', 'entity' => 'supplier', 'required' => true, 'visible' => true, 'editable' => true],
                        ['name' => 'date_debut', 'label' => 'Date de D√©but', 'type' => 'date', 'required' => true, 'visible' => true, 'editable' => true],
                        ['name' => 'date_fin', 'label' => 'Date de Fin', 'type' => 'date', 'required' => true, 'visible' => true, 'editable' => true],
                    ]
                ]),
            ],
            [
                'name' => 'Constat d\'Accident',
                'description' => 'Constat amiable ou rapport d\'accident.',
                'is_default' => true,
                'organization_id' => null,
                'meta_schema' => json_encode([
                    'fields' => [
                        ['name' => 'date_accident', 'label' => 'Date de l\'Accident', 'type' => 'date', 'required' => true, 'visible' => true, 'editable' => true],
                    ]
                ]),
            ],
            [
                'name' => 'Fiche Remise V√©hicule',
                'description' => 'Document de remise du v√©hicule √† un chauffeur.',
                'is_default' => true,
                'organization_id' => null,
                'meta_schema' => json_encode([
                    'fields' => [
                        ['name' => 'date_remise', 'label' => 'Date de Remise', 'type' => 'date', 'required' => true, 'visible' => true, 'editable' => true],
                        ['name' => 'date_reprise_prevue', 'label' => 'Date de Reprise Pr√©vue', 'type' => 'date', 'required' => false, 'visible' => true, 'editable' => true],
                    ]
                ]),
            ],
            [
                'name' => 'Fiche Reprise V√©hicule',
                'description' => 'Document de reprise du v√©hicule d\'un chauffeur.',
                'is_default' => true,
                'organization_id' => null,
                'meta_schema' => json_encode([
                    'fields' => [
                        ['name' => 'date_reprise', 'label' => 'Date de Reprise', 'type' => 'date', 'required' => true, 'visible' => true, 'editable' => true],
                    ]
                ]),
            ],
            [
                'name' => 'Permis de Conduire',
                'description' => 'Permis de conduire du chauffeur.',
                'is_default' => true,
                'organization_id' => null,
                'meta_schema' => json_encode([
                    'fields' => [
                        ['name' => 'categories_permis', 'label' => 'Cat√©gories de Permis', 'type' => 'multiselect', 'options' => ['A', 'B', 'C', 'D', 'E'], 'required' => true, 'visible' => true, 'editable' => true],
                        ['name' => 'restrictions', 'label' => 'Restrictions', 'type' => 'textarea', 'required' => false, 'visible' => true, 'editable' => true],
                    ]
                ]),
            ],
            [
                'name' => 'Avertissement',
                'description' => 'Avertissement disciplinaire ou observation.',
                'is_default' => true,
                'organization_id' => null,
                'meta_schema' => json_encode([
                    'fields' => [
                        ['name' => 'date_avertissement', 'label' => 'Date d\'Avertissement', 'type' => 'date', 'required' => true, 'visible' => true, 'editable' => true],
                        ['name' => 'observation', 'label' => 'Observation', 'type' => 'textarea', 'required' => true, 'visible' => true, 'editable' => true],
                    ]
                ]),
            ],
            [
                'name' => 'Facture',
                'description' => 'Facture de service ou d\'achat.',
                'is_default' => true,
                'organization_id' => null,
                'meta_schema' => json_encode([
                    'fields' => [
                        ['name' => 'montant_ht', 'label' => 'Montant HT', 'type' => 'number', 'required' => true, 'visible' => true, 'editable' => true],
                        ['name' => 'numero_facture', 'label' => 'Num√©ro de Facture', 'type' => 'string', 'required' => true, 'visible' => true, 'editable' => true],
                        ['name' => 'date_emission', 'label' => 'Date d\'√âmission', 'type' => 'date', 'required' => true, 'visible' => true, 'editable' => true],
                    ]
                ]),
            ],
        ];

        foreach ($defaultCategories as $categoryData) {
            // Use updateOrCreate to avoid duplicates
            DocumentCategory::updateOrCreate(
                ['name' => $categoryData['name'], 'is_default' => true],
                $categoryData
            );
        }
    }
}

--- FIN DU FICHIER : ./database/seeders/DefaultDocumentCategoriesSeeder.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./database/seeders/DefaultDocumentCategoriesSeeder.php:Zone.Identifier
////////////////////////////////////////////////////////////////


--- FIN DU FICHIER : ./database/seeders/DefaultDocumentCategoriesSeeder.php:Zone.Identifier ---


////////////////////////////////////////////////////////////////
CHEMIN : ./database/seeders/DriverSeeder.php
////////////////////////////////////////////////////////////////

<?php

namespace Database\Seeders;

use App\Models\Driver;
use Illuminate\Database\Console\Seeds\WithoutModelEvents;
use Illuminate\Database\Seeder;

class DriverSeeder extends Seeder
{
    /**
     * Run the database seeds.
     */
    public function run(): void
    {
        // Cr√©e 5 chauffeurs en utilisant la DriverFactory
        Driver::factory()->count(7)->create();

        $this->command->info('7 sample drivers have been created.');
    }
}

--- FIN DU FICHIER : ./database/seeders/DriverSeeder.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./database/seeders/DriverStatusSeeder.php
////////////////////////////////////////////////////////////////

<?php
namespace Database\Seeders;
use App\Models\DriverStatus;
use Illuminate\Database\Seeder;

class DriverStatusSeeder extends Seeder
{
    public function run(): void
    {
        $statuses = ['Disponible', 'En cong√©', 'Suspendu', 'Inactif', 'En mission', 'Ex-employ√©'];
        foreach ($statuses as $status) {
            DriverStatus::firstOrCreate(['name' => $status]);
        }
    }
}

--- FIN DU FICHIER : ./database/seeders/DriverStatusSeeder.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./database/seeders/EnterpriseRbacSeeder.php
////////////////////////////////////////////////////////////////

<?php

namespace Database\Seeders;

use Illuminate\Database\Seeder;
use App\Models\User;
use App\Models\Organization;
use Spatie\Permission\Models\Permission;
use Spatie\Permission\Models\Role;
use Spatie\Permission\PermissionRegistrar;
use Illuminate\Support\Facades\Hash;
use Illuminate\Support\Str;
use Illuminate\Support\Facades\DB;

class EnterpriseRbacSeeder extends Seeder
{
    /**
     * üöÄ SEEDER RBAC ENTERPRISE ZENFLEET - STANDARD INTERNATIONAL
     * Version: 2.0 - Ultra-Professionnel
     * Compatible: Laravel 9+ & Spatie Permission v5+
     */
    public function run(): void
    {
        $this->command->info('üöÄ ZENFLEET ENTERPRISE RBAC SYSTEM - INITIALISATION');
        $this->command->info('=========================================================');
        
        // Reset du cache des permissions
        app()[PermissionRegistrar::class]->forgetCachedPermissions();
        
        // 1. Cr√©er toutes les permissions
        $this->createEnterprisePermissions();
        
        // 2. Cr√©er les r√¥les hi√©rarchiques 
        $this->createEnterpriseRoles();
        
        // 3. Cr√©er les utilisateurs de test
        $this->createTestUsers();
        
        // 4. Affichage final
        $this->displayFinalSummary();
        
        $this->command->info('‚úÖ SYST√àME RBAC ENTERPRISE INITIALIS√â AVEC SUCC√àS !');
    }

    /**
     * üõ°Ô∏è CR√âATION DES PERMISSIONS ENTERPRISE - COMPL√àTES
     */
    private function createEnterprisePermissions(): void
    {
        $this->command->info('üõ°Ô∏è Cr√©ation des permissions enterprise...');
        
        $permissions = [
            // üåê PERMISSIONS SYST√àME (Super Admin uniquement)
            'manage system',
            'view system dashboard',
            'view all organizations',
            'create organizations',
            'edit organizations', 
            'delete organizations',
            'suspend organizations',
            'activate organizations',
            'manage global settings',
            'view system logs',
            'create global admins',
            'manage global roles',
            'view system metrics',
            'manage system backups',
            
            // üè¢ PERMISSIONS ORGANISATION
            'view organizations',
            'edit organizations',
            'manage organization settings',
            'manage organization billing',
            'view organization analytics',
            'export organization data',
            
            // üë• PERMISSIONS UTILISATEURS ET R√îLES
            'view users',
            'create users',
            'edit users',
            'delete users',
            'restore users',
            'assign user roles',
            'view user profiles',
            'manage roles',
            'view roles',
            'edit roles',
            'assign permissions',
            
            // üöó PERMISSIONS V√âHICULES
            'view vehicles',
            'create vehicles',
            'edit vehicles',
            'delete vehicles',
            'restore vehicles',
            'force delete vehicles',
            'assign vehicles',
            'track vehicles',
            'import vehicles',
            'export vehicles',
            'view vehicle history',
            'manage vehicle status',
            
            // üë®‚Äçüíº PERMISSIONS CHAUFFEURS
            'view drivers',
            'create drivers',
            'edit drivers', 
            'delete drivers',
            'restore drivers',
            'force delete drivers',
            'assign drivers',
            'view driver profiles',
            'manage driver licenses',
            'import drivers',
            'export drivers',
            'view driver history',
            
            // üìã PERMISSIONS AFFECTATIONS
            'view assignments',
            'create assignments',
            'edit assignments',
            'end assignments',
            'extend assignments',
            'view assignment history',
            'manage assignment status',
            
            // üîß PERMISSIONS MAINTENANCE
            'view maintenance',
            'manage maintenance plans',
            'log maintenance',
            'schedule maintenance',
            'view maintenance history',
            'manage maintenance alerts',
            'approve maintenance',
            'view maintenance costs',
            
            // üìã PERMISSIONS FICHES DE REMISE
            'create handovers',
            'view handovers',
            'edit handovers',
            'delete handovers',
            'upload signed handovers',
            'download handovers',
            'approve handovers',
            
            // üè≠ PERMISSIONS FOURNISSEURS
            'view suppliers',
            'create suppliers',
            'edit suppliers',
            'delete suppliers',
            'manage supplier contracts',
            'view supplier performance',
            
            // üìÑ PERMISSIONS DOCUMENTS
            'view documents',
            'create documents',
            'edit documents',
            'delete documents',
            'manage document categories',
            'upload documents',
            'download documents',
            'archive documents',
            
            // üìä PERMISSIONS RAPPORTS ET ANALYTICS
            'view reports',
            'create reports',
            'edit reports',
            'delete reports',
            'export reports',
            'schedule reports',
            'view basic analytics',
            'view advanced analytics',
            'export analytics',
            'manage dashboards',
            
            // üîç PERMISSIONS AUDIT ET S√âCURIT√â
            'view audit logs',
            'export audit logs',
            'manage security settings',
            'view login attempts',
            'manage user sessions',
            'view system security',
            
            // üîë PERMISSIONS API ET INT√âGRATIONS
            'view api settings',
            'manage api keys',
            'view api logs',
            'manage webhooks',
            'test integrations',
            
            // üí∞ PERMISSIONS FINANCI√àRES
            'view costs',
            'manage budgets',
            'view financial reports',
            'export financial data',
            'manage invoicing',
            
            // üéõÔ∏è PERMISSIONS CONFIGURATION
            'manage settings',
            'view system configuration',
            'manage notifications',
            'configure alerts',
            'manage email templates',
            
            // üì± PERMISSIONS SP√âCIALES CHAUFFEURS
            'view own vehicles',
            'view own assignments',
            'update assignment status',
            'view own handovers',
            'sign handovers',
            'view own maintenance',
            'report vehicle issues',
            'log trip data',
            'view own profile',
        ];

        foreach ($permissions as $permission) {
            Permission::firstOrCreate([
                'name' => $permission,
                'guard_name' => 'web'
            ]);
        }

        $this->command->info("   ‚úÖ " . count($permissions) . " permissions cr√©√©es/v√©rifi√©es");
    }

    /**
     * üëë CR√âATION DES R√îLES HI√âRARCHIQUES ENTERPRISE
     */
    private function createEnterpriseRoles(): void
    {
        $this->command->info('üëë Cr√©ation des r√¥les hi√©rarchiques enterprise...');
        
        // üåê SUPER ADMIN - Niveau Syst√®me Global
        $superAdminRole = Role::firstOrCreate([
            'name' => 'Super Admin',
            'guard_name' => 'web'
        ]);
        
        $superAdminPermissions = Permission::all()->pluck('name')->toArray();
        $superAdminRole->syncPermissions($superAdminPermissions);
        $this->command->info("   ‚úÖ Super Admin: " . count($superAdminPermissions) . " permissions (TOUTES)");
        
        // üè¢ ADMIN - Niveau Organisation
        $adminRole = Role::firstOrCreate([
            'name' => 'Admin', 
            'guard_name' => 'web'
        ]);
        
        $adminPermissions = [
            // Organisation (sans cr√©ation)
            'view organizations', 'edit organizations', 'manage organization settings',
            'manage organization billing', 'view organization analytics', 'export organization data',
            
            // Utilisateurs complets
            'view users', 'create users', 'edit users', 'delete users', 'restore users',
            'assign user roles', 'view user profiles', 'manage roles', 'view roles', 'edit roles',
            
            // V√©hicules complets
            'view vehicles', 'create vehicles', 'edit vehicles', 'delete vehicles', 'restore vehicles',
            'assign vehicles', 'track vehicles', 'import vehicles', 'export vehicles', 'view vehicle history',
            
            // Chauffeurs complets  
            'view drivers', 'create drivers', 'edit drivers', 'delete drivers', 'restore drivers',
            'assign drivers', 'view driver profiles', 'manage driver licenses', 'import drivers', 'export drivers',
            
            // Op√©rations
            'view assignments', 'create assignments', 'edit assignments', 'end assignments',
            'view maintenance', 'manage maintenance plans', 'log maintenance', 'schedule maintenance',
            'create handovers', 'view handovers', 'edit handovers', 'delete handovers', 'upload signed handovers',
            'view suppliers', 'create suppliers', 'edit suppliers', 'delete suppliers',
            'view documents', 'create documents', 'edit documents', 'delete documents', 'manage document categories',
            
            // Rapports et Analytics
            'view reports', 'create reports', 'export reports', 'view basic analytics', 'view advanced analytics',
            'export analytics', 'view audit logs', 'export audit logs',
        ];
        $adminRole->syncPermissions($adminPermissions);
        $this->command->info("   ‚úÖ Admin: " . count($adminPermissions) . " permissions");
        
        // üöó GESTIONNAIRE FLOTTE - Niveau Op√©rationnel
        $fleetManagerRole = Role::firstOrCreate([
            'name' => 'Gestionnaire Flotte',
            'guard_name' => 'web'
        ]);
        
        $fleetManagerPermissions = [
            // V√©hicules (gestion compl√®te)
            'view vehicles', 'create vehicles', 'edit vehicles', 'assign vehicles', 'track vehicles',
            'import vehicles', 'export vehicles', 'view vehicle history', 'manage vehicle status',
            
            // Chauffeurs (gestion compl√®te)
            'view drivers', 'create drivers', 'edit drivers', 'assign drivers', 'view driver profiles',
            'manage driver licenses', 'import drivers', 'export drivers', 'view driver history',
            
            // Affectations
            'view assignments', 'create assignments', 'edit assignments', 'end assignments', 'extend assignments',
            
            // Maintenance
            'view maintenance', 'manage maintenance plans', 'log maintenance', 'schedule maintenance',
            'view maintenance history', 'manage maintenance alerts',
            
            // Handovers
            'create handovers', 'view handovers', 'edit handovers', 'upload signed handovers', 'approve handovers',
            
            // Fournisseurs
            'view suppliers', 'create suppliers', 'edit suppliers', 'manage supplier contracts',
            
            // Documents
            'view documents', 'create documents', 'edit documents', 'manage document categories',
            
            // Rapports
            'view reports', 'create reports', 'export reports', 'view basic analytics', 'view advanced analytics',
        ];
        $fleetManagerRole->syncPermissions($fleetManagerPermissions);
        $this->command->info("   ‚úÖ Gestionnaire Flotte: " . count($fleetManagerPermissions) . " permissions");
        
        // üë• SUPERVISOR - Niveau Supervision
        $supervisorRole = Role::firstOrCreate([
            'name' => 'supervisor',
            'guard_name' => 'web'
        ]);
        
        $supervisorPermissions = [
            // Consultation
            'view vehicles', 'view vehicle history', 'track vehicles',
            'view drivers', 'view driver profiles', 'view driver history',
            'view assignments', 'view assignment history',
            'view maintenance', 'view maintenance history',
            'view handovers', 'view suppliers',
            'view documents', 'view reports', 'view basic analytics',
            
            // Actions limit√©es
            'create assignments', 'edit assignments', 'log maintenance',
            'create handovers', 'edit handovers', 'create reports',
        ];
        $supervisorRole->syncPermissions($supervisorPermissions);
        $this->command->info("   ‚úÖ supervisor: " . count($supervisorPermissions) . " permissions");
        
        // üöô CHAUFFEUR - Niveau Utilisateur Final
        $chauffeurRole = Role::firstOrCreate([
            'name' => 'Chauffeur',
            'guard_name' => 'web'
        ]);
        
        $chauffeurPermissions = [
            'view own vehicles',
            'view own assignments', 
            'update assignment status',
            'view own handovers',
            'sign handovers',
            'view own maintenance',
            'report vehicle issues',
            'log trip data',
            'view own profile',
        ];
        $chauffeurRole->syncPermissions($chauffeurPermissions);
        $this->command->info("   ‚úÖ Chauffeur: " . count($chauffeurPermissions) . " permissions");
    }

    /**
     * üë§ CR√âATION DES UTILISATEURS DE TEST
     */
    private function createTestUsers(): void
    {
        $this->command->info('üë§ Cr√©ation des utilisateurs de test...');
        
        // R√©cup√©rer une organisation active ou cr√©er une organisation de test
        $organization = Organization::where('status', 'active')->first();
        if (!$organization) {
            $organization = Organization::create([
                'name' => 'Organisation de Test',
                'slug' => 'organisation-test',
                'legal_name' => 'Test Organization SAS',
                'organization_type' => 'enterprise',
                'email' => 'contact@test-org.com',
                'address' => '123 Rue de Test',
                'city' => 'Paris',
                'postal_code' => '75001',
                'country' => 'FR',
                'timezone' => 'Europe/Paris',
                'currency' => 'EUR',
                'language' => 'fr',
                'status' => 'active',
                'subscription_plan' => 'enterprise',
                'subscription_expires_at' => now()->addYear(),
                'max_vehicles' => 1000,
                'max_drivers' => 500,
                'max_users' => 100,
            ]);
            $this->command->info("   üìã Organisation de test cr√©√©e: {$organization->name}");
        }

        $testUsers = [
            [
                'email' => 'superadmin@zenfleet.app',
                'name' => 'Super Administrateur',
                'first_name' => 'Super',
                'last_name' => 'Admin',
                'role' => 'Super Admin',
                'password' => 'SuperAdmin2025!',
                'organization_id' => null, // Global
                'job_title' => 'Super Administrateur Syst√®me',
                'department' => 'IT Syst√®me'
            ],
            [
                'email' => 'admin@zenfleet.app',
                'name' => 'Administrateur',
                'first_name' => 'Admin',
                'last_name' => 'Organisation',
                'role' => 'Admin',
                'password' => 'AdminZen2025!',
                'organization_id' => $organization->id,
                'job_title' => 'Administrateur',
                'department' => 'Direction'
            ],
            [
                'email' => 'fleet@zenfleet.app',
                'name' => 'Gestionnaire de Flotte',
                'first_name' => 'Gestionnaire',
                'last_name' => 'Flotte',
                'role' => 'Gestionnaire Flotte',
                'password' => 'FleetManager2025!',
                'organization_id' => $organization->id,
                'job_title' => 'Gestionnaire de Flotte',
                'department' => 'Op√©rations'
            ],
            [
                'email' => 'supervisor@zenfleet.app',
                'name' => 'Superviseur √âquipe',
                'first_name' => 'Superviseur',
                'last_name' => '√âquipe',
                'role' => 'supervisor',
                'password' => 'Supervisor2025!',
                'organization_id' => $organization->id,
                'job_title' => 'Superviseur',
                'department' => 'Op√©rations'
            ],
            [
                'email' => 'driver@zenfleet.app',
                'name' => 'Chauffeur Professionnel',
                'first_name' => 'Chauffeur',
                'last_name' => 'Pro',
                'role' => 'Chauffeur',
                'password' => 'Driver2025!',
                'organization_id' => $organization->id,
                'job_title' => 'Chauffeur Professionnel',
                'department' => 'Transport'
            ]
        ];

        foreach ($testUsers as $userData) {
            $user = User::updateOrCreate(
                ['email' => $userData['email']],
                [
                    'name' => $userData['name'],
                    'first_name' => $userData['first_name'],
                    'last_name' => $userData['last_name'],
                    'job_title' => $userData['job_title'],
                    'department' => $userData['department'],
                    'organization_id' => $userData['organization_id'],
                    'is_super_admin' => $userData['role'] === 'Super Admin',
                    'is_active' => true,
                    'user_status' => 'active',
                    'email_verified_at' => now(),
                    'password' => Hash::make($userData['password']),
                    'remember_token' => Str::random(10),
                    'timezone' => 'Europe/Paris',
                    'language' => 'fr',
                ]
            );

            // Assigner le r√¥le
            $user->syncRoles([$userData['role']]);
            
            $this->command->info("   ‚úÖ {$userData['role']}: {$userData['email']}");
        }
    }

    /**
     * üìä AFFICHAGE DU R√âSUM√â FINAL
     */
    private function displayFinalSummary(): void
    {
        $this->command->info('');
        $this->command->info('üèÜ R√âSUM√â FINAL - SYST√àME RBAC ENTERPRISE ZENFLEET');
        $this->command->info('=========================================================');
        
        // Statistiques
        $permissionsCount = Permission::count();
        $rolesCount = Role::count();
        $usersCount = User::count();
        
        $this->command->info("üìä STATISTIQUES:");
        $this->command->info("   üõ°Ô∏è Permissions cr√©√©es: {$permissionsCount}");
        $this->command->info("   üëë R√¥les configur√©s: {$rolesCount}");
        $this->command->info("   üë§ Utilisateurs de test: {$usersCount}");
        $this->command->info('');
        
        // Hi√©rarchie des r√¥les
        $this->command->info("üèóÔ∏è HI√âRARCHIE DES R√îLES:");
        $this->command->info("   1Ô∏è‚É£ Super Admin (superadmin@zenfleet.app) - Syst√®me Global");
        $this->command->info("   2Ô∏è‚É£ Admin (admin@zenfleet.app) - Organisation");
        $this->command->info("   3Ô∏è‚É£ Gestionnaire Flotte (fleet@zenfleet.app) - Op√©rationnel");
        $this->command->info("   4Ô∏è‚É£ supervisor (supervisor@zenfleet.app) - Supervision");
        $this->command->info("   5Ô∏è‚É£ Chauffeur (driver@zenfleet.app) - Utilisateur Final");
        $this->command->info('');
        
        // Comptes de test
        $this->command->info("üîê COMPTES DE TEST:");
        $this->command->info("   üåê superadmin@zenfleet.app / SuperAdmin2025!");
        $this->command->info("   üè¢ admin@zenfleet.app / AdminZen2025!");
        $this->command->info("   üöó fleet@zenfleet.app / FleetManager2025!");
        $this->command->info("   üë• supervisor@zenfleet.app / Supervisor2025!");
        $this->command->info("   üöô driver@zenfleet.app / Driver2025!");
        $this->command->info('');
        
        // Instructions finales
        $this->command->info("üéØ PROCHAINES √âTAPES:");
        $this->command->info("   1. Testez la connexion avec les comptes ci-dessus");
        $this->command->info("   2. V√©rifiez les permissions pour chaque r√¥le");
        $this->command->info("   3. Configurez les organisations selon vos besoins");
        $this->command->info("   4. Personnalisez les r√¥les si n√©cessaire");
        $this->command->info('');
    }
}

--- FIN DU FICHIER : ./database/seeders/EnterpriseRbacSeeder.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./database/seeders/FuelTypeSeeder.php
////////////////////////////////////////////////////////////////

<?php
namespace Database\Seeders;
use Illuminate\Database\Seeder;
use App\Models\FuelType;

class FuelTypeSeeder extends Seeder
{
    public function run(): void
    {
        $types = ['Essence', 'Diesel', 'GPL', '√âlectrique', 'Hybride'];
        foreach ($types as $type) {
            FuelType::firstOrCreate(['name' => $type]);
        }
    }
}

--- FIN DU FICHIER : ./database/seeders/FuelTypeSeeder.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./database/seeders/InitialRbacSeeder.php
////////////////////////////////////////////////////////////////

<?php

namespace Database\Seeders;

use Illuminate\Database\Seeder;
use App\Models\Organization;
use App\Models\User;
use App\Services\PermissionService;
use Spatie\Permission\Models\Role;
use Spatie\Permission\Models\Permission;
use Illuminate\Support\Facades\Hash;
use Illuminate\Support\Str;

class InitialRbacSeeder extends Seeder
{
    private PermissionService $permissionService;

    public function __construct(PermissionService $permissionService)
    {
        $this->permissionService = $permissionService;
    }

    public function run(): void
    {
        // 1. Initialiser les permissions syst√®me
        $this->permissionService->initializeSystemPermissions();

        // 2. Cr√©er l'organisation principale
        $mainOrganization = Organization::firstOrCreate([
            'slug' => 'zenfleet-main'
        ], [
            'name' => 'ZenFleet Principal',
            'email' => 'admin@zenfleet.app',
            'phone' => '+33 1 23 45 67 89',
            'address' => '123 Rue de la Technologie, Paris, France',
            'subscription_plan' => 'enterprise',
            'is_active' => true,
            'settings' => [
                'timezone' => 'Europe/Paris',
                'currency' => 'EUR',
                'language' => 'fr',
                'date_format' => 'd/m/Y'
            ]
        ]);

        // 3. Cr√©er le Super Admin
        $superAdmin = User::firstOrCreate([
            'email' => 'superadmin@zenfleet.app'
        ], [
            'name' => 'Super Administrateur',
            'email_verified_at' => now(),
            'password' => Hash::make('SuperAdmin2025!'),
            'organization_id' => null, // Super admin n'appartient √† aucune organisation sp√©cifique
            'is_super_admin' => true,
            'is_active' => true,
            'remember_token' => Str::random(10)
        ]);

        $superAdmin->assignRole('super_admin');

        // 4. Cr√©er un Admin pour l'organisation principale
        $orgAdmin = User::firstOrCreate([
            'email' => 'admin@zenfleet.app'
        ], [
            'name' => 'Administrateur Organisation',
            'email_verified_at' => now(),
            'password' => Hash::make('AdminZen2025!'),
            'organization_id' => $mainOrganization->id,
            'is_super_admin' => false,
            'is_active' => true,
            'remember_token' => Str::random(10)
        ]);

        $orgAdmin->assignRole('admin');

        // 5. Cr√©er un Gestionnaire de Flotte
        $fleetManager = User::firstOrCreate([
            'email' => 'fleet@zenfleet.app'
        ], [
            'name' => 'Gestionnaire de Flotte',
            'email_verified_at' => now(),
            'password' => Hash::make('FleetManager2025!'),
            'organization_id' => $mainOrganization->id,
            'is_super_admin' => false,
            'is_active' => true,
            'remember_token' => Str::random(10)
        ]);

        $fleetManager->assignRole('fleet_manager');

        // 6. Cr√©er un Superviseur
        $supervisor = User::firstOrCreate([
            'email' => 'supervisor@zenfleet.app'
        ], [
            'name' => 'Superviseur √âquipe',
            'email_verified_at' => now(),
            'password' => Hash::make('Supervisor2025!'),
            'organization_id' => $mainOrganization->id,
            'is_super_admin' => false,
            'is_active' => true,
            'remember_token' => Str::random(10)
        ]);

        $supervisor->assignRole('supervisor');

        // 7. Cr√©er des Chauffeurs de test
        for ($i = 1; $i <= 3; $i++) {
            $driver = User::firstOrCreate([
                'email' => "chauffeur{$i}@zenfleet.app"
            ], [
                'name' => "Chauffeur Test {$i}",
                'email_verified_at' => now(),
                'password' => Hash::make('Driver2025!'),
                'organization_id' => $mainOrganization->id,
                'is_super_admin' => false,
                'is_active' => true,
                'remember_token' => Str::random(10)
            ]);

            $driver->assignRole('driver');
        }

        $this->command->info('‚úÖ Syst√®me RBAC initialis√© avec succ√®s');
        $this->command->info('üîê Comptes cr√©√©s :');
        $this->command->info('   Super Admin: superadmin@zenfleet.app / SuperAdmin2025!');
        $this->command->info('   Admin Org: admin@zenfleet.app / AdminZen2025!');
        $this->command->info('   Gestionnaire: fleet@zenfleet.app / FleetManager2025!');
        $this->command->info('   Superviseur: supervisor@zenfleet.app / Supervisor2025!');
        $this->command->info('   Chauffeurs: chauffeur1-3@zenfleet.app / Driver2025!');
    }
}


--- FIN DU FICHIER : ./database/seeders/InitialRbacSeeder.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./database/seeders/Maintenance/MaintenanceDataSeeder.php
////////////////////////////////////////////////////////////////

<?php
namespace Database\Seeders\Maintenance;
use Illuminate\Database\Seeder;
class MaintenanceDataSeeder extends Seeder
{
    public function run(): void
    {
        $this->call([
            MaintenanceTypeSeeder::class,
            RecurrenceUnitSeeder::class,
            MaintenanceStatusSeeder::class,
        ]);
    }
}

--- FIN DU FICHIER : ./database/seeders/Maintenance/MaintenanceDataSeeder.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./database/seeders/Maintenance/MaintenanceStatusSeeder.php
////////////////////////////////////////////////////////////////

<?php
namespace Database\Seeders\Maintenance;
use App\Models\Maintenance\MaintenanceStatus;
use Illuminate\Database\Seeder;
class MaintenanceStatusSeeder extends Seeder
{
    public function run(): void
    {
        $statuses = ['Planifi√©e', 'En cours', 'Termin√©e', 'Annul√©e'];
        foreach ($statuses as $status) {
            MaintenanceStatus::firstOrCreate(['name' => $status]);
        }
    }
}

--- FIN DU FICHIER : ./database/seeders/Maintenance/MaintenanceStatusSeeder.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./database/seeders/Maintenance/MaintenanceTypeSeeder.php
////////////////////////////////////////////////////////////////

<?php

namespace Database\Seeders\Maintenance;

use App\Models\Maintenance\MaintenanceType;
use Illuminate\Database\Seeder;

class MaintenanceTypeSeeder extends Seeder
{
    /**
     * Ex√©cute les seeds pour la table des types de maintenance.
     */
    public function run(): void
    {
        // La m√©thode firstOrCreate garantit que nous ne cr√©erons pas de doublons
        // si le seeder est ex√©cut√© plusieurs fois.

        // --- Types techniques (maintenance & entretien courant) ---
        $this->createType(
            'Vidange moteur', 
            'Changement de l\'huile moteur uniquement.'
        );
        $this->createType(
            'Vidange moteur compl√®te', 
            'Changement de l\'huile moteur et du filtre √† huile.'
        );
        $this->createType(
            'Vidange bo√Æte de vitesse', 
            'Changement de l\'huile de la bo√Æte de vitesse (manuelle ou automatique).'
        );
        $this->createType(
            'Courroie de distribution', 
            'V√©rification ou remplacement du kit de distribution.'
        );
        $this->createType(
            'Courroie d\'accessoires', 
            'V√©rification ou remplacement de la courroie d\'accessoires (poly-V).'
        );
        $this->createType(
            'Pneumatiques', 
            'Contr√¥le ou remplacement des pneus (pression, usure, g√©om√©trie).'
        );
        $this->createType(
            'Syst√®me de freinage', 
            'Contr√¥le ou remplacement des disques, plaquettes, et purge du liquide de frein.'
        );
        $this->createType(
            'Syst√®me √©lectrique', 
            'Contr√¥le de la batterie, de l\'alternateur et du d√©marreur.'
        );
        $this->createType(
            'Filtres', 
            'Remplacement des filtres √† air, √† carburant, et d\'habitacle (pollen).'
        );
        $this->createType(
            'Nettoyage FAP/DPF', 
            'Nettoyage ou r√©g√©n√©ration du filtre √† particules.'
        );
        $this->createType(
            'Syst√®me de climatisation', 
            'Recharge de gaz, contr√¥le d\'√©tanch√©it√©, et remplacement du filtre d√©shydrateur.'
        );

        // --- Types administratifs & r√©glementaires ---
        $this->createType(
            'Contr√¥le technique', 
            'Inspection r√©glementaire p√©riodique obligatoire.'
        );
        $this->createType(
            'Vignette automobile', 
            'Paiement annuel de la taxe de circulation.'
        );
        $this->createType(
            'Permis de circuler', 
            'Renouvellement ou mise √† jour de la carte grise / permis de circuler.'
        );
        $this->createType(
            'Assurance automobile', 
            'Paiement ou renouvellement de la police d\'assurance (RC, tous risques, etc.).'
        );
        $this->createType(
            'Assurance marchandises', 
            'Paiement ou renouvellement de l\'assurance pour les biens transport√©s.'
        );
        $this->createType(
            'Autorisation de mise en circulation (AMC)', 
            'Contr√¥les sp√©cifiques pour les v√©hicules de transport de marchandises ou de personnes.'
        );
        $this->createType(
            'R√©vision g√©n√©rale constructeur', 
            'Entretien complet suivant les pr√©conisations du constructeur.'
        );

        $this->command->info('Maintenance types seeded successfully.');
    }

    /**
     * M√©thode priv√©e pour simplifier la cr√©ation.
     */
    private function createType(string $name, string $description): void
    {
        MaintenanceType::firstOrCreate(
            ['name' => $name], 
            ['description' => $description]
        );
    }
}

--- FIN DU FICHIER : ./database/seeders/Maintenance/MaintenanceTypeSeeder.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./database/seeders/Maintenance/RecurrenceUnitSeeder.php
////////////////////////////////////////////////////////////////

<?php
namespace Database\Seeders\Maintenance;
use App\Models\Maintenance\RecurrenceUnit;
use Illuminate\Database\Seeder;
class RecurrenceUnitSeeder extends Seeder
{
    public function run(): void
    {
        $units = ['Jours', 'Mois', 'Kilom√®tres'];
        foreach ($units as $unit) {
            RecurrenceUnit::firstOrCreate(['name' => $unit]);
        }
    }
}

--- FIN DU FICHIER : ./database/seeders/Maintenance/RecurrenceUnitSeeder.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./database/seeders/PermissionSeeder.php
////////////////////////////////////////////////////////////////

<?php

namespace Database\Seeders;

use Illuminate\Database\Seeder;
use Spatie\Permission\Models\Role;
use Spatie\Permission\Models\Permission;
use Spatie\Permission\PermissionRegistrar;

class PermissionSeeder extends Seeder
{
    public function run(): void
    {
        app()[PermissionRegistrar::class]->forgetCachedPermissions();

        // --- D√©finition de toutes les permissions ---
        $permissions = [
            'view organizations', 'create organizations', 'edit organizations', 'delete organizations',
            'manage roles', 'view users', 'create users', 'edit users', 'delete users',
            'view vehicles', 'create vehicles', 'edit vehicles', 'delete vehicles', 'restore vehicles', 'force delete vehicles',
            'view drivers', 'create drivers', 'edit drivers', 'delete drivers', 'restore drivers', 'force delete drivers',
            'view assignments', 'create assignments', 'edit assignments', 'end assignments',
            'view maintenance', 'manage maintenance plans', 'log maintenance',
            'create handovers', 'view handovers', 'edit handovers', 'delete handovers', 'upload signed handovers',
            'view suppliers', 'create suppliers', 'edit suppliers', 'delete suppliers',
            'view documents', 'create documents', 'edit documents', 'delete documents',
            'manage document_categories',
        ];

        foreach ($permissions as $permission) {
            Permission::firstOrCreate(['name' => $permission, 'guard_name' => 'web']);
        }
        $this->command->info('All permissions created or verified successfully.');

        // --- Cr√©ation des R√¥les ---
        $superAdminRole = Role::firstOrCreate(['name' => 'Super Admin']);
        $adminRole = Role::firstOrCreate(['name' => 'Admin']);
        $managerRole = Role::firstOrCreate(['name' => 'Gestionnaire Flotte']);
        $driverRole = Role::firstOrCreate(['name' => 'Chauffeur']);
        $this->command->info('Roles created or verified successfully.');

        // --- Attribution des Permissions ---
        $superAdminRole->givePermissionTo(Permission::all());
        $this->command->info('All permissions granted to Super Admin role.');

        $adminPermissions = Permission::where('name', 'not like', '%organizations%')->get();
        $adminRole->syncPermissions($adminPermissions);
        $this->command->info('Permissions granted to Admin role.');

        $managerRole->syncPermissions([
            'view vehicles', 'create vehicles', 'edit vehicles', 'delete vehicles', 'restore vehicles',
            'view drivers', 'create drivers', 'edit drivers', 'delete drivers', 'restore drivers',
            'view assignments', 'create assignments', 'edit assignments', 'end assignments',
            'view maintenance', 'manage maintenance plans', 'log maintenance',
            'create handovers', 'view handovers', 'edit handovers',
            'view documents', 'create documents', 'edit documents', 'delete documents',
            'manage document_categories',
        ]);
        $this->command->info('Permissions granted to "Gestionnaire Flotte" role.');

        // Le r√¥le Chauffeur peut voir les v√©hicules et ses affectations.
        $driverRole->syncPermissions([
            'view vehicles',
            'view assignments',
        ]);
        $this->command->info('Permissions for "Chauffeur" role have been set.');
    }
}
--- FIN DU FICHIER : ./database/seeders/PermissionSeeder.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./database/seeders/RoleSeeder.php
////////////////////////////////////////////////////////////////

<?php

namespace Database\Seeders;

use Illuminate\Database\Console\Seeds\WithoutModelEvents;
use Illuminate\Database\Seeder;
use Spatie\Permission\Models\Role; // Importez le mod√®le Role

class RoleSeeder extends Seeder
{
    /**
     * Run the database seeds.
     */
    public function run(): void
    {
        // Cr√©ation des r√¥les d√©finis dans le document
        // La m√©thode firstOrCreate s'assure que le r√¥le n'est cr√©√© que s'il n'existe pas d√©j√†.
        Role::firstOrCreate(['name' => 'Admin', 'guard_name' => 'web']);
        Role::firstOrCreate(['name' => 'Gestionnaire Flotte', 'guard_name' => 'web']);
        Role::firstOrCreate(['name' => 'Chauffeur', 'guard_name' => 'web']);
        // 'guard_name' => 'web' est le guard par d√©faut pour les applications web Laravel.
        // Vous pouvez le personnaliser dans config/auth.php si besoin.

        $this->command->info('Roles created successfully.');
    }
}

--- FIN DU FICHIER : ./database/seeders/RoleSeeder.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./database/seeders/RolesAndPermissionsSeeder.php
////////////////////////////////////////////////////////////////

<?php

namespace Database\Seeders;

use Illuminate\Database\Seeder;
use Spatie\Permission\Models\Role;
use Spatie\Permission\Models\Permission;
use App\Models\User; // Assurez-vous que le namespace est correct pour votre mod√®le User
use Illuminate\Support\Facades\Hash; // Importer la fa√ßade Hash pour le mot de passe

class RolesAndPermissionsSeeder extends Seeder
{
    /**
     * Run the database seeds.
     *
     * @return void
     */
    public function run(): void
    {
        // R√©initialiser les r√¥les et permissions mis en cache.
        // Ceci est utile pour √©viter les probl√®mes de cache lors du re-seed pendant le d√©veloppement.
        app()[\Spatie\Permission\PermissionRegistrar::class]->forgetCachedPermissions();

        // === CR√âATION DES PERMISSIONS ===
        // Permissions pour la gestion des utilisateurs
        Permission::firstOrCreate(['name' => 'manage users', 'guard_name' => 'web']); // CRUD complet sur les utilisateurs
        Permission::firstOrCreate(['name' => 'view users', 'guard_name' => 'web']);
        Permission::firstOrCreate(['name' => 'create users', 'guard_name' => 'web']);
        Permission::firstOrCreate(['name' => 'edit users', 'guard_name' => 'web']);
        Permission::firstOrCreate(['name' => 'delete users', 'guard_name' => 'web']);

        // Permissions pour la gestion des r√¥les et permissions
        Permission::firstOrCreate(['name' => 'manage roles', 'guard_name' => 'web']);
        Permission::firstOrCreate(['name' => 'manage permissions', 'guard_name' => 'web']); // Souvent r√©serv√© au Super Admin

        // Permissions pour les futurs modules (exemples)
        Permission::firstOrCreate(['name' => 'manage fleet', 'guard_name' => 'web']); // Gestion compl√®te de la flotte
        Permission::firstOrCreate(['name' => 'view fleet dashboard', 'guard_name' => 'web']); // Voir le tableau de bord de la flotte
        Permission::firstOrCreate(['name' => 'manage vehicles', 'guard_name' => 'web']); // CRUD v√©hicules
        Permission::firstOrCreate(['name' => 'view vehicles', 'guard_name' => 'web']);
        Permission::firstOrCreate(['name' => 'manage drivers', 'guard_name' => 'web']); // CRUD chauffeurs (en tant qu'entit√© sp√©cifique)
        Permission::firstOrCreate(['name' => 'view drivers', 'guard_name' => 'web']);
        Permission::firstOrCreate(['name' => 'manage missions', 'guard_name' => 'web']); // CRUD missions
        Permission::firstOrCreate(['name' => 'view missions', 'guard_name' => 'web']);
        Permission::firstOrCreate(['name' => 'manage document_categories', 'guard_name' => 'web']);


        // === CR√âATION DES R√îLES ET ASSIGNATION DES PERMISSIONS ===

        // R√¥le: Super Administrateur (a acc√®s √† tout, souvent g√©r√© via un Gate::before)
        $superAdminRole = Role::firstOrCreate(['name' => 'Super Admin', 'guard_name' => 'web']);
        // Pour le Super Admin, on peut soit lui donner toutes les permissions explicitement,
        // soit utiliser un Gate::before (voir √©tape suivante) pour un acc√®s global.
        $superAdminRole->givePermissionTo(Permission::all()); // Le Super Admin a toutes les permissions

        // R√îLE : Administrateur d'Organisation
        $adminRole = Role::firstOrCreate(['name' => 'Admin', 'guard_name' => 'web']);
        $adminRole->givePermissionTo([
            'manage users',
            'view users',
            'manage fleet',
            'view fleet dashboard',
            'manage vehicles',
            'view vehicles',
            'manage drivers',
            'view drivers',
            'manage missions',
            'view missions',
            'manage document_categories',
        ]);

        // R√¥le: Gestionnaire de Flotte
        $fleetManagerRole = Role::firstOrCreate(['name' => 'Fleet Manager', 'guard_name' => 'web']);
        $fleetManagerRole->givePermissionTo([
            'view users',       // Peut voir les utilisateurs (ex: chauffeurs)
            'create users',     // Peut cr√©er des chauffeurs (si pertinent, sinon g√©rer via 'manage drivers')
            'edit users',       // Peut modifier les chauffeurs (si pertinent)
            'manage fleet',
            'view fleet dashboard',
            'manage vehicles',
            'view vehicles',
            'manage drivers',
            'view drivers',
            'manage missions',
            'view missions',
            'manage document_categories',
        ]);

        // R√¥le: Chauffeur
        $driverRole = Role::firstOrCreate(['name' => 'Driver', 'guard_name' => 'web']);
        $driverRole->givePermissionTo([
            'view fleet dashboard', // Peut voir son propre tableau de bord / missions assign√©es
            'view missions',        // Peut voir ses missions
            // Ajouter d'autres permissions sp√©cifiques aux chauffeurs au fur et √† mesure
        ]);

        // === CR√âATION DES UTILISATEURS DE D√âMONSTRATION ===

        // Utilisateur Super Administrateur
        // `firstOrCreate` √©vite de cr√©er des doublons si le seeder est ex√©cut√© plusieurs fois.
        $superAdminUser = User::firstOrCreate(
            ['email' => 'superadmin@zenfleet.com'], // Cl√© unique pour la recherche
            [                                       // Valeurs √† cr√©er si non trouv√©
                'name' => 'Super Administrator',
                'password' => Hash::make('password'), // Utilisez un mot de passe s√©curis√© !
            ]
        );
        $superAdminUser->assignRole($superAdminRole);

        // Utilisateur Gestionnaire de Flotte (pour tests)
        $fleetManagerUser = User::firstOrCreate(
            ['email' => 'manager@zenfleet.com'],
            [
                'name' => 'Fleet Manager User',
                'password' => Hash::make('password123'), // Changez ceci !
            ]
        );
        $fleetManagerUser->assignRole($fleetManagerRole);

        // Utilisateur Administrateur (pour tests)
        $adminUser = User::firstOrCreate(
            ['email' => 'admin@zenfleet.com'],
            [
                'name' => 'Admin User',
                'password' => Hash::make('password'), // Changez ceci !
            ]
        );
        $adminUser->assignRole($adminRole);

         // Utilisateur Chauffeur (pour tests)
         $driverUser = User::firstOrCreate(
            ['email' => 'driver@zenfleet.com'],
            [
                'name' => 'Driver User',
                'password' => Hash::make('password123'), // Changez ceci !
            ]
        );
        $driverUser->assignRole($driverRole);
    }
}
--- FIN DU FICHIER : ./database/seeders/RolesAndPermissionsSeeder.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./database/seeders/SecurityEnhancedRbacSeeder.php
////////////////////////////////////////////////////////////////

<?php

namespace Database\Seeders;

use Database\Seeders\EnterpriseRbacSeeder;

class SecurityEnhancedRbacSeeder extends EnterpriseRbacSeeder
{
    public function run(): void
    {
        $this->command->info('üõ°Ô∏è INITIALISATION RBAC AVEC S√âCURIT√â RENFORC√âE');
        
        parent::run();
        
        // Ajouter les permissions de s√©curit√© sp√©cifiques
        $this->createSecurityPermissions();
        
        // Appliquer les restrictions de s√©curit√©
        $this->applySecurityRestrictions();
    }
    
    private function createSecurityPermissions(): void
    {
        $this->command->info('üîê Cr√©ation des permissions de s√©curit√©...');
        
        $securityPermissions = [
            'promote to super admin',   // Exclusif Super Admin
            'demote super admin',       // Exclusif Super Admin
            'manage standard roles',    // Admin peut g√©rer r√¥les non-critiques
            'assign standard roles',    // Admin peut assigner r√¥les <= Admin
            'view security logs',       // Monitoring des actions sensibles
            'manage security settings', // Configuration s√©curit√©
        ];
        
        foreach ($securityPermissions as $permission) {
            Permission::firstOrCreate([
                'name' => $permission,
                'guard_name' => 'web'
            ]);
        }
        
        // Assigner exclusivement au Super Admin
        $superAdminRole = Role::where('name', 'Super Admin')->first();
        $superAdminRole->givePermissionTo($securityPermissions);
        
        // Retirer les permissions dangereuses de l'Admin
        $adminRole = Role::where('name', 'Admin')->first();
        $dangerousPermissions = [
            'manage roles',  // Trop large
            'create organizations',
            'manage system',
        ];
        
        foreach ($dangerousPermissions as $permission) {
            if ($adminRole->hasPermissionTo($permission)) {
                $adminRole->revokePermissionTo($permission);
            }
        }
        
        // Ajouter les permissions s√©curis√©es √† l'Admin
        $adminRole->givePermissionTo(['manage standard roles', 'assign standard roles']);
        
        $this->command->info('   ‚úÖ Permissions de s√©curit√© appliqu√©es');
        $this->command->info('   üö´ Permissions dangereuses retir√©es de Admin');
    }
    
    private function applySecurityRestrictions(): void
    {
        $this->command->info('üîí Application des restrictions de s√©curit√©...');
        
        // S'assurer qu'il y a au moins un Super Admin
        $superAdminCount = User::role('Super Admin')->count();
        if ($superAdminCount === 0) {
            $this->command->error('‚ö†Ô∏è ALERTE: Aucun Super Admin trouv√©!');
        }
        
        // V√©rifier que l'Admin ne peut pas s'auto-promouvoir
        $adminUsers = User::role('Admin')->get();
        foreach ($adminUsers as $admin) {
            if ($admin->can('promote to super admin')) {
                $this->command->error("‚ö†Ô∏è FAILLE: {$admin->email} peut se promouvoir Super Admin!");
            }
        }
        
        $this->command->info('   ‚úÖ Restrictions de s√©curit√© v√©rifi√©es');
    }
}


--- FIN DU FICHIER : ./database/seeders/SecurityEnhancedRbacSeeder.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./database/seeders/TransmissionTypeSeeder.php
////////////////////////////////////////////////////////////////

<?php
namespace Database\Seeders;
use Illuminate\Database\Seeder;
use App\Models\TransmissionType;

class TransmissionTypeSeeder extends Seeder
{
    public function run(): void
    {
        $types = ['Manuelle', 'Automatique'];
        foreach ($types as $type) {
            TransmissionType::firstOrCreate(['name' => $type]);
        }
    }
}

--- FIN DU FICHIER : ./database/seeders/TransmissionTypeSeeder.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./database/seeders/ValidationLevelSeeder.php
////////////////////////////////////////////////////////////////

<?php

namespace Database\Seeders;

use Illuminate\Database\Console\Seeds\WithoutModelEvents;
use Illuminate\Database\Seeder;
use App\Models\ValidationLevel; // Assurez-vous que le mod√®le existe et est import√©

class ValidationLevelSeeder extends Seeder
{
    /**
     * Run the database seeds.
     */
    public function run(): void
    {
        $levels = [
            ['level_number' => 1, 'name' => 'Demandeur', 'description' => 'Niveau initial de la demande.'],
            ['level_number' => 2, 'name' => 'Validation Interm√©diaire', 'description' => 'Premier niveau d\'approbation.'], // Exemple de niveau interm√©diaire
            ['level_number' => 3, 'name' => 'Validation Finale', 'description' => 'Approbation finale.'],
            // Ajoutez d'autres niveaux selon votre document ou vos besoins
        ];

        foreach ($levels as $level) {
            ValidationLevel::firstOrCreate(
                ['level_number' => $level['level_number']], // Crit√®re de recherche
                $level // Valeurs √† ins√©rer/mettre √† jour
            );
        }

        $this->command->info('Validation levels created successfully.');
    }
}

--- FIN DU FICHIER : ./database/seeders/ValidationLevelSeeder.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./database/seeders/VehicleDataSeeder.php
////////////////////////////////////////////////////////////////

<?php
namespace Database\Seeders;
use Illuminate\Database\Seeder;

class VehicleDataSeeder extends Seeder
{
    public function run(): void
    {
        $this->call([
            VehicleTypeSeeder::class,
            FuelTypeSeeder::class,
            TransmissionTypeSeeder::class,
            VehicleStatusSeeder::class,
            // Nous pourrons ajouter un VehicleSeeder ici plus tard pour des v√©hicules de test
        ]);
    }
}

--- FIN DU FICHIER : ./database/seeders/VehicleDataSeeder.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./database/seeders/VehicleStatusSeeder.php
////////////////////////////////////////////////////////////////

<?php
namespace Database\Seeders;
use Illuminate\Database\Seeder;
use App\Models\VehicleStatus;

class VehicleStatusSeeder extends Seeder
{
    public function run(): void
    {
        $types = ['Parking', 'En maintenance', 'Hors service', 'En mission', 'En attente'];
        foreach ($types as $type) {
            VehicleStatus::firstOrCreate(['name' => $type]);
        }
    }
}

--- FIN DU FICHIER : ./database/seeders/VehicleStatusSeeder.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./database/seeders/VehicleTypeSeeder.php
////////////////////////////////////////////////////////////////

<?php
namespace Database\Seeders;
use Illuminate\Database\Seeder;
use App\Models\VehicleType;

class VehicleTypeSeeder extends Seeder
{
    public function run(): void
    {
        $types = ['Berline', 'SUV', 'Utilitaire l√©ger', 'Camion', 'Bus', 'Moto'];
        foreach ($types as $type) {
            VehicleType::firstOrCreate(['name' => $type]);
        }
    }
}

--- FIN DU FICHIER : ./database/seeders/VehicleTypeSeeder.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./docker/nginx/Dockerfile
////////////////////////////////////////////////////////////////

# ~/projects/zenfleet/docker/nginx/Dockerfile

FROM nginx:1.25-alpine

# D√©finir le r√©pertoire de travail
WORKDIR /var/www/html

# Supprimer la configuration Nginx par d√©faut
RUN rm /etc/nginx/conf.d/default.conf

# Copier notre configuration Nginx personnalis√©e
# Le chemin est maintenant relatif √† la racine du projet
COPY ./docker/nginx/zenfleet.conf /etc/nginx/conf.d/

# Exposer les ports HTTP et HTTPS
EXPOSE 80
EXPOSE 443
--- FIN DU FICHIER : ./docker/nginx/Dockerfile ---


////////////////////////////////////////////////////////////////
CHEMIN : ./docker/nginx/zenfleet.conf
////////////////////////////////////////////////////////////////

server {
    listen 80;
    server_name localhost;
    root /var/www/html/public;

    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options "nosniff";

    index index.php;
    charset utf-8;

    # Sert les assets compil√©s s'ils existent (pour la production)
    location /build {
        try_files $uri =404;
    }

    # Route toutes les autres requ√™tes vers Laravel
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    # G√®re l'ex√©cution des scripts PHP
    location ~ \.php$ {
        fastcgi_pass php:9000;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
    }

    location ~ /\.ht {
        deny all;
    }
}
--- FIN DU FICHIER : ./docker/nginx/zenfleet.conf ---


////////////////////////////////////////////////////////////////
CHEMIN : ./docker/node/Dockerfile - Copy.ok:Zone.Identifier
////////////////////////////////////////////////////////////////


--- FIN DU FICHIER : ./docker/node/Dockerfile - Copy.ok:Zone.Identifier ---


////////////////////////////////////////////////////////////////
CHEMIN : ./docker/node/Dockerfile - Copy:Zone.Identifier
////////////////////////////////////////////////////////////////


--- FIN DU FICHIER : ./docker/node/Dockerfile - Copy:Zone.Identifier ---


////////////////////////////////////////////////////////////////
CHEMIN : ./docker/node/Dockerfile - OK
////////////////////////////////////////////////////////////////

# ~/projects/zenfleet/docker/node/Dockerfile - Version de Production Finale et Compl√®te

FROM node:20-bullseye
ARG USER_ID
ARG GROUP_ID

# --- MISE √Ä JOUR FINALE ---
# √âtape 1 : Installer TOUTES les d√©pendances syst√®me requises par Chrome Headless
# Cette liste exhaustive garantit la compatibilit√© et pr√©vient les erreurs de librairies partag√©es.
RUN apt-get update && apt-get install -y --no-install-recommends \
    # Utilitaires de base
    gosu \
    ca-certificates \
    netcat-openbsd \
    sudo \
    # Polices de caract√®res pour un rendu correct
    fonts-liberation \
    # D√©pendances directes de Puppeteer/Chrome list√©es dans la documentation officielle
    libasound2 \
    libatk-bridge2.0-0 \
    libatspi2.0-0 \
    libcups2 \
    libdbus-1-3 \
    libdrm2 \
    libgbm1 \
    libgtk-3-0 \
    libnss3 \
    libx11-xcb1 \
    libxcomposite1 \
    libxcursor1 \
    libxdamage1 \
    libxext6 \
    libxfixes3 \
    libxi6 \
    libxrandr2 \
    libxrender1 \
    libxss1 \
    libxtst6 \
    && rm -rf /var/lib/apt/lists/*
# --- FIN DE LA MISE √Ä JOUR ---

# √âtape 2 : Cr√©ation/modification robuste de l'utilisateur (inchang√©)
RUN export TARGET_USER=zenfleet_user && \
    export TARGET_GROUP=zenfleet_user && \
    export TARGET_UID=${USER_ID:-1000} && \
    export TARGET_GID=${GROUP_ID:-1000} && \
    if getent group $TARGET_GID >/dev/null; then \
        EXISTING_GROUP_NAME=$(getent group $TARGET_GID | cut -d: -f1); \
        if [ "$EXISTING_GROUP_NAME" != "$TARGET_GROUP" ]; then groupmod -n $TARGET_GROUP $EXISTING_GROUP_NAME; fi; \
    else \
        groupadd -g $TARGET_GID $TARGET_GROUP; \
    fi && \
    if getent passwd $TARGET_UID >/dev/null; then \
        EXISTING_USER_NAME=$(getent passwd $TARGET_UID | cut -d: -f1); \
        usermod -l $TARGET_USER -g $TARGET_GROUP -d /home/$TARGET_USER -m $EXISTING_USER_NAME; \
    else \
        useradd -u $TARGET_UID -g $TARGET_GROUP -m -s /bin/bash $TARGET_USER; \
    fi

# √âtape 3 : D√©finir le chemin du cache de Puppeteer comme variable d'environnement (inchang√©)
ENV PUPPETEER_CACHE_DIR=/home/zenfleet_user/.cache/puppeteer

# √âtape 4 : Cr√©er le r√©pertoire de cache et s'assurer que l'utilisateur en est propri√©taire (inchang√©)
RUN mkdir -p ${PUPPETEER_CACHE_DIR} && chown -R zenfleet_user:zenfleet_user /home/zenfleet_user

# √âtape 5 : D√©finir le r√©pertoire de travail (inchang√©)
WORKDIR /app

# √âtape 6 : Copier le manifeste des d√©pendances (inchang√©)
COPY pdf-service/package.json ./package.json

# √âtape 7 : Installer les d√©pendances. (inchang√©)
RUN yarn install --production && npx puppeteer browsers install chrome

# √âtape 8 : Copier le code source de l'application (inchang√©)
COPY pdf-service/ .

# √âtape 9 : Donner les permissions sur le code de l'application (inchang√©)
RUN chown -R zenfleet_user:zenfleet_user /app

# √âtape 10 : Configurer l'entrypoint (inchang√©)
COPY ./docker/node/entrypoint.sh /usr/local/bin/entrypoint.sh
RUN chmod +x /usr/local/bin/entrypoint.sh
ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]

# √âtape 11 : Commande par d√©faut (inchang√©)
CMD ["node", "server.js"]
--- FIN DU FICHIER : ./docker/node/Dockerfile - OK ---


////////////////////////////////////////////////////////////////
CHEMIN : ./docker/node/Dockerfile.ok
////////////////////////////////////////////////////////////////

# ~/projects/zenfleet/docker/node/Dockerfile
# Version corrig√©e pour fonctionner avec le contexte √† la racine du projet

FROM node:20-bullseye
ARG USER_ID
ARG GROUP_ID

# √âtape 1 : Installer les d√©pendances syst√®me n√©cessaires
RUN apt-get update && apt-get install -y --no-install-recommends \
    gosu \
    ca-certificates \
    fonts-liberation \
    libnss3 \
    libatk-bridge2.0-0 \
    libgtk-3-0 \
    libasound2 \
    libxshmfence1 \
    netcat-openbsd \
    curl \
    # D√©pendances suppl√©mentaires pour Puppeteer 24.x
    libxss1 \
    libgconf-2-4 \
    libxtst6 \
    libxrandr2 \
    libasound2 \
    libpangocairo-1.0-0 \
    libatk1.0-0 \
    libcairo-gobject2 \
    libgtk-3-0 \
    libgdk-pixbuf2.0-0 \
    && rm -rf /var/lib/apt/lists/*

# √âtape 2 : Cr√©ation robuste de l'utilisateur et du groupe
RUN export TARGET_USER=zenfleet_user && \
    export TARGET_GROUP=zenfleet_user && \
    export TARGET_UID=${USER_ID:-1000} && \
    export TARGET_GID=${GROUP_ID:-1000} && \
    if getent group $TARGET_GID >/dev/null; then \
        EXISTING_GROUP_NAME=$(getent group $TARGET_GID | cut -d: -f1); \
        if [ "$EXISTING_GROUP_NAME" != "$TARGET_GROUP" ]; then \
            groupmod -n $TARGET_GROUP $EXISTING_GROUP_NAME; \
        fi; \
    else \
        groupadd -g $TARGET_GID $TARGET_GROUP; \
    fi && \
    if getent passwd $TARGET_UID >/dev/null; then \
        EXISTING_USER_NAME=$(getent passwd $TARGET_UID | cut -d: -f1); \
        usermod -l $TARGET_USER -g $TARGET_GROUP $EXISTING_USER_NAME; \
    else \
        useradd -u $TARGET_UID -g $TARGET_GROUP -m -s /bin/bash $TARGET_USER; \
    fi

# √âtape 3 : D√©finir le r√©pertoire de travail
WORKDIR /var/www/html

# √âtape 4 : Copier le package.json depuis la racine du projet
# Maintenant que le contexte est √† la racine, package.json est accessible
COPY package.json package-lock.json* ./

# √âtape 5 : Installer les d√©pendances Node.js
# Utiliser npm ci pour une installation plus rapide et d√©terministe si package-lock.json existe
RUN if [ -f package-lock.json ]; then \
        npm ci --only=production; \
    else \
        npm install --only=production; \
    fi

# √âtape 6 : Installer Chrome via Puppeteer 24.x
# La nouvelle version de Puppeteer g√®re mieux l'installation de Chrome
RUN npx puppeteer browsers install chrome --path /home/zenfleet_user/.cache/puppeteer

# √âtape 7 : Copier le code de l'application
# Copier tous les fichiers du projet (contexte √† la racine)
COPY . .

# √âtape 8 : Cr√©er les r√©pertoires n√©cessaires avec les bonnes permissions
RUN mkdir -p /home/zenfleet_user/.cache/puppeteer && \
    mkdir -p /var/www/html/storage/logs && \
    chown -R zenfleet_user:zenfleet_user /home/zenfleet_user/.cache && \
    chmod 755 /home/zenfleet_user/.cache && \
    chown -R zenfleet_user:zenfleet_user /var/www/html

# √âtape 9 : Configurer l'entrypoint
COPY ./docker/node/entrypoint.sh /usr/local/bin/entrypoint.sh
RUN chmod +x /usr/local/bin/entrypoint.sh

# √âtape 10 : Variables d'environnement pour Puppeteer 24.x
ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
ENV PUPPETEER_CACHE_DIR=/home/zenfleet_user/.cache/puppeteer
ENV NODE_ENV=production

# √âtape 11 : Exposer le port
EXPOSE 3000

# √âtape 12 : Healthcheck adapt√© pour Express 5.x
HEALTHCHECK --interval=15s --timeout=10s --start-period=45s --retries=5 \
    #CMD curl -f http://localhost:3000/health || exit 1
    CMD curl -f --max-time 5 http://localhost:3000/health || exit 1

# √âtape 13 : D√©finir l'entrypoint et la commande
# IMPORTANT: Ne pas d√©finir USER ici pour permettre √† l'entrypoint de fonctionner
ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]
CMD ["node", "server.js"]


--- FIN DU FICHIER : ./docker/node/Dockerfile.ok ---


////////////////////////////////////////////////////////////////
CHEMIN : ./docker/node/Dockerfile___
////////////////////////////////////////////////////////////////

FROM node:20-bullseye

# Installer les d√©pendances syst√®me critiques pour Puppeteer en tant que root
RUN apt-get update && apt-get install -y --no-install-recommends \
    ca-certificates fonts-liberation libnss3 libasound2 libatk-bridge2.0-0 libatk1.0-0 \
    libcups2 libdbus-1-3 libdrm2 libgbm1 libgtk-3-0 libx11-xcb1 libxcomposite1 \
    libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 \
    && rm -rf /var/lib/apt/lists/*

# Cr√©er un utilisateur non-root pour la s√©curit√©
RUN groupadd -r pptruser && useradd -r -g pptruser -G audio,video pptruser \
    && mkdir -p /home/pptruser/app \
    && chown -R pptruser:pptruser /home/pptruser

# D√©finir le r√©pertoire de travail
WORKDIR /home/pptruser/app

# Passer √† l'utilisateur non-root AVANT d'installer les d√©pendances
USER pptruser

# Copier uniquement package.json pour tirer parti du cache Docker
COPY --chown=pptruser:pptruser pdf-service/package.json ./

# Installer les d√©pendances. C'est ici que yarn.lock sera cr√©√© si absent.
RUN yarn install --frozen-lockfile || yarn install

# Copier le reste du code de l'application
COPY --chown=pptruser:pptruser pdf-service/ .

# La commande pour d√©marrer le service
CMD ["node", "server.js"]
--- FIN DU FICHIER : ./docker/node/Dockerfile___ ---


////////////////////////////////////////////////////////////////
CHEMIN : ./docker/node/entrypoint - Copy.sh
////////////////////////////////////////////////////////////////

#!/bin/bash
# Entrypoint optimis√© pour Express 5.x et Puppeteer 24.x
set -e
#______AJOUTE SUR RECOMMANDATION DE DEEPSEEK
# Ajouter en d√©but de script
if [ "$1" = "healthcheck" ]; then
    curl -f http://localhost:3000/health || exit 1
    exit 0
fi


# Fonction pour afficher des messages de debug avec timestamp et couleurs
log() {
    local level=${2:-INFO}
    local color=""
    case $level in
        "ERROR") color="\033[31m" ;; # Rouge
        "WARN")  color="\033[33m" ;; # Jaune
        "INFO")  color="\033[32m" ;; # Vert
        "DEBUG") color="\033[36m" ;; # Cyan
        *)       color="\033[0m"  ;; # Default
    esac
    echo -e "${color}[$(date '+%Y-%m-%d %H:%M:%S')] [ZenFleet Node Entrypoint] [$level] $1\033[0m"
}

log "D√©marrage de l'entrypoint optimis√© pour Express 5.x et Puppeteer 24.x..."



# === √âtape 1 : V√©rifier l'utilisateur actuel ===
CURRENT_USER=$(whoami)
log "Utilisateur actuel: $CURRENT_USER"

# === √âtape 2 : Configuration en tant que root (si n√©cessaire) ===
if [ "$CURRENT_USER" = "root" ]; then
    log "Ex√©cution en tant que root, configuration et passage √† zenfleet_user..."
    log "DEBUG" "Configuration des r√©pertoires..."

    # S'assurer que les r√©pertoires n√©cessaires existent avec les bons droits
    mkdir -p /home/zenfleet_user/.cache/puppeteer
    mkdir -p /var/www/html # R√©pertoire de travail par d√©faut

    # Changer le propri√©taire des dossiers n√©cessaires pour l'utilisateur non-root
    chown -R zenfleet_user:zenfleet_user /home/zenfleet_user/.cache/puppeteer
    # Si /var/www/html est mont√© comme volume, il peut √™tre utile de le chown aussi
    # chown -R zenfleet_user:zenfleet_user /var/www/html

    log "DEBUG" "Optimisation de l'environnement..."
    # Toute autre optimisation sp√©cifique peut aller ici

    # === √âtape 3 : Passer √† l'utilisateur non-root ===
    log "Passage √† l'utilisateur zenfleet_user (UID: $(id -u zenfleet_user), GID: $(id -g zenfleet_user))..."
    # Utiliser gosu pour ex√©cuter le reste du script en tant que zenfleet_user
    # "$0" est le chemin de ce script, "$@" sont les arguments pass√©s au script
    exec gosu zenfleet_user "$0" "$@"
else
    # === √âtape 4 : Ex√©cut√© en tant qu'utilisateur non-root (zenfleet_user) ===
    log "Maintenant ex√©cut√© en tant que $CURRENT_USER (UID: $(id -u), GID: $(id -g))."

    # === √âtape 5 : Logique optionnelle en tant qu'utilisateur non-root ===
    log "DEBUG" "V√©rification de la sant√© du syst√®me..."
    log "INFO" "Version Node.js d√©tect√©e: $(node --version)"

    # Essayer de trouver Chrome (logique bas√©e sur votre log)
    CHROME_PATH=""
    # Utiliser le cache dir d√©fini dans l'environnement ou par d√©faut
    CACHE_DIR="${PUPPETEER_CACHE_DIR:-/home/zenfleet_user/.cache/puppeteer}"
    # Trouver le binaire Chrome (simplifi√©, peut n√©cessiter ajustement)
    if [ -d "$CACHE_DIR" ]; then
        # Trouver le premier ex√©cutable Chrome trouv√© (g√©n√©rique)
        #CHROME_PATH=$(find "$CACHE_DIR" -name "chrome" -type f -executable 2>/dev/null | head -n 1)
        CHROME_PATH="${PUPPETEER_CACHE_DIR}/chrome/linux-*/chrome-linux*/chrome"
    fi
    if [ -n "$CHROME_PATH" ]; then
         log "INFO" "Chrome trouv√©: $CHROME_PATH"
    else
         log "WARN" "Chrome non trouv√© dans $CACHE_DIR. Puppeteer pourrait √©chouer √† le lancer."
    fi

    # V√©rifier les d√©pendances Node.js (optionnel, mais utile pour le debug)
    if [ -f "package.json" ]; then
        EXPRESS_VERSION=$(node -p "require('./package.json').dependencies?.express || 'Not Found'")
        PUPPETEER_VERSION=$(node -p "require('./package.json').dependencies?.puppeteer || 'Not Found'")
        CORS_VERSION=$(node -p "require('./package.json').dependencies?.cors || 'Not Found'")
        log "INFO" "Express Version (from package.json dependencies): $EXPRESS_VERSION"
        log "INFO" "Puppeteer Version (from package.json dependencies): $PUPPETEER_VERSION"
        log "INFO" "Cors Version (from package.json dependencies): $CORS_VERSION"
    else
        log "WARN" "package.json non trouv√© dans le r√©pertoire de travail."
    fi

    # V√©rifier si server.js existe
    if [ ! -f "server.js" ]; then
        log "ERROR" "server.js non trouv√© dans le r√©pertoire de travail (/var/www/html). Impossible de d√©marrer l'application."
        exit 1
    fi

    # === √âtape 6 : D√©marrer l'application ===
    # V√©rifier s'il y a des commandes pass√©es au conteneur
    if [ $# -gt 0 ]; then
        log "INFO" "Ex√©cution de la commande pass√©e au conteneur: $*"
        exec "$@"
    else
        # D√©marrer l'application Node.js par d√©faut
        log "INFO" "D√©marrage de l'application Node.js (server.js)..."
        exec node server.js
    fi
fi

# Si le script arrive ici, quelque chose s'est mal pass√©.
log "ERROR" "Le script entrypoint a atteint une fin inattendue."
exit 1
--- FIN DU FICHIER : ./docker/node/entrypoint - Copy.sh ---


////////////////////////////////////////////////////////////////
CHEMIN : ./docker/node/entrypoint - Copy.sh:Zone.Identifier
////////////////////////////////////////////////////////////////


--- FIN DU FICHIER : ./docker/node/entrypoint - Copy.sh:Zone.Identifier ---


////////////////////////////////////////////////////////////////
CHEMIN : ./docker/node/entrypoint.sh___supperime__2025-07-31
////////////////////////////////////////////////////////////////

#!/bin/bash
# Entrypoint optimis√© pour Express 5.x et Puppeteer 24.x
set -e
#______AJOUTE SUR RECOMMANDATION DE DEEPSEEK
# Ajouter en d√©but de script
if [ "$1" = "healthcheck" ]; then
    curl -f http://localhost:3000/health || exit 1
    exit 0
fi


# Fonction pour afficher des messages de debug avec timestamp et couleurs
log() {
    local level=${2:-INFO}
    local color=""
    case $level in
        "ERROR") color="\033[31m" ;; # Rouge
        "WARN")  color="\033[33m" ;; # Jaune
        "INFO")  color="\033[32m" ;; # Vert
        "DEBUG") color="\033[36m" ;; # Cyan
        *)       color="\033[0m"  ;; # Default
    esac
    echo -e "${color}[$(date '+%Y-%m-%d %H:%M:%S')] [ZenFleet Node Entrypoint] [$level] $1\033[0m"
}

log "D√©marrage de l'entrypoint optimis√© pour Express 5.x et Puppeteer 24.x..."



# === √âtape 1 : V√©rifier l'utilisateur actuel ===
CURRENT_USER=$(whoami)
log "Utilisateur actuel: $CURRENT_USER"

# === √âtape 2 : Configuration en tant que root (si n√©cessaire) ===
if [ "$CURRENT_USER" = "root" ]; then
    log "Ex√©cution en tant que root, configuration et passage √† zenfleet_user..."
    log "DEBUG" "Configuration des r√©pertoires..."

    # S'assurer que les r√©pertoires n√©cessaires existent avec les bons droits
    mkdir -p /home/zenfleet_user/.cache/puppeteer
    mkdir -p /var/www/html # R√©pertoire de travail par d√©faut

    # Changer le propri√©taire des dossiers n√©cessaires pour l'utilisateur non-root
    chown -R zenfleet_user:zenfleet_user /home/zenfleet_user/.cache/puppeteer
    # Si /var/www/html est mont√© comme volume, il peut √™tre utile de le chown aussi
    # chown -R zenfleet_user:zenfleet_user /var/www/html

    log "DEBUG" "Optimisation de l'environnement..."
    # Toute autre optimisation sp√©cifique peut aller ici

    # === √âtape 3 : Passer √† l'utilisateur non-root ===
    log "Passage √† l'utilisateur zenfleet_user (UID: $(id -u zenfleet_user), GID: $(id -g zenfleet_user))..."
    # Utiliser gosu pour ex√©cuter le reste du script en tant que zenfleet_user
    # "$0" est le chemin de ce script, "$@" sont les arguments pass√©s au script
    exec gosu zenfleet_user "$0" "$@"
else
    # === √âtape 4 : Ex√©cut√© en tant qu'utilisateur non-root (zenfleet_user) ===
    log "Maintenant ex√©cut√© en tant que $CURRENT_USER (UID: $(id -u), GID: $(id -g))."

    # === √âtape 5 : Logique optionnelle en tant qu'utilisateur non-root ===
    log "DEBUG" "V√©rification de la sant√© du syst√®me..."
    log "INFO" "Version Node.js d√©tect√©e: $(node --version)"

    # Essayer de trouver Chrome (logique bas√©e sur votre log)
    CHROME_PATH=""
    # Utiliser le cache dir d√©fini dans l'environnement ou par d√©faut
    CACHE_DIR="${PUPPETEER_CACHE_DIR:-/home/zenfleet_user/.cache/puppeteer}"
    # Trouver le binaire Chrome (simplifi√©, peut n√©cessiter ajustement)
    if [ -d "$CACHE_DIR" ]; then
        # Trouver le premier ex√©cutable Chrome trouv√© (g√©n√©rique)
        #CHROME_PATH=$(find "$CACHE_DIR" -name "chrome" -type f -executable 2>/dev/null | head -n 1)
        CHROME_PATH="${PUPPETEER_CACHE_DIR}/chrome/linux-*/chrome-linux*/chrome"
    fi
    if [ -n "$CHROME_PATH" ]; then
         log "INFO" "Chrome trouv√©: $CHROME_PATH"
    else
         log "WARN" "Chrome non trouv√© dans $CACHE_DIR. Puppeteer pourrait √©chouer √† le lancer."
    fi

    # V√©rifier les d√©pendances Node.js (optionnel, mais utile pour le debug)
    if [ -f "package.json" ]; then
        EXPRESS_VERSION=$(node -p "require('./package.json').dependencies?.express || 'Not Found'")
        PUPPETEER_VERSION=$(node -p "require('./package.json').dependencies?.puppeteer || 'Not Found'")
        CORS_VERSION=$(node -p "require('./package.json').dependencies?.cors || 'Not Found'")
        log "INFO" "Express Version (from package.json dependencies): $EXPRESS_VERSION"
        log "INFO" "Puppeteer Version (from package.json dependencies): $PUPPETEER_VERSION"
        log "INFO" "Cors Version (from package.json dependencies): $CORS_VERSION"
    else
        log "WARN" "package.json non trouv√© dans le r√©pertoire de travail."
    fi

    # V√©rifier si server.js existe
    if [ ! -f "server.js" ]; then
        log "ERROR" "server.js non trouv√© dans le r√©pertoire de travail (/var/www/html). Impossible de d√©marrer l'application."
        exit 1
    fi

    # === √âtape 6 : D√©marrer l'application ===
    # V√©rifier s'il y a des commandes pass√©es au conteneur
    if [ $# -gt 0 ]; then
        log "INFO" "Ex√©cution de la commande pass√©e au conteneur: $*"
        exec "$@"
    else
        # D√©marrer l'application Node.js par d√©faut
        log "INFO" "D√©marrage de l'application Node.js (server.js)..."
        exec node server.js
    fi
fi

# Si le script arrive ici, quelque chose s'est mal pass√©.
log "ERROR" "Le script entrypoint a atteint une fin inattendue."
exit 1
--- FIN DU FICHIER : ./docker/node/entrypoint.sh___supperime__2025-07-31 ---


////////////////////////////////////////////////////////////////
CHEMIN : ./docker/node_dev/Dockerfile
////////////////////////////////////////////////////////////////

FROM node:20-bullseye

ARG USER_ID
ARG GROUP_ID

# CORRECTION D√âFINITIVE :
# 1. Supprime l'utilisateur 'node' s'il existe pour lib√©rer l'UID 1000.
# 2. Cr√©e notre groupe et notre utilisateur avec les bons IDs.
RUN if getent passwd node > /dev/null 2>&1; then userdel -r node; fi && \
    groupadd --gid ${GROUP_ID:-1000} zenfleet_user && \
    useradd --uid ${USER_ID:-1000} --gid ${GROUP_ID:-1000} --shell /bin/bash --create-home zenfleet_user

# Pr√©parer le r√©pertoire de travail avec les bonnes permissions
RUN mkdir -p /var/www/html && chown -R zenfleet_user:zenfleet_user /var/www/html

WORKDIR /var/www/html
USER zenfleet_user
--- FIN DU FICHIER : ./docker/node_dev/Dockerfile ---


////////////////////////////////////////////////////////////////
CHEMIN : ./docker/php/Dockerfile
////////////////////////////////////////////////////////////////

FROM php:8.2-fpm-alpine

# Installer les d√©pendances syst√®me, y compris les librairies pour Redis
RUN apk update && apk add --no-cache \
    build-base autoconf automake libtool \
    bash ca-certificates curl git libzip-dev libpng-dev libjpeg-turbo-dev \
    freetype-dev supervisor icu-dev postgresql-dev linux-headers \
    redis # <-- AJOUT DE LA D√âPENDANCE REDIS

# Installer les extensions PHP
RUN docker-php-ext-configure gd --with-freetype --with-jpeg \
    && docker-php-ext-install -j$(nproc) gd \
    && docker-php-ext-install pdo pdo_pgsql pgsql zip exif intl bcmath sockets opcache

# Installer et activer l'extension Redis
RUN pecl install redis \
    && docker-php-ext-enable redis

# Installer Composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# Cr√©er l'utilisateur
ARG USER_ID
ARG GROUP_ID
RUN addgroup -g ${GROUP_ID:-1000} zenfleet_user && \
    adduser -u ${USER_ID:-1000} -G zenfleet_user -s /bin/sh -D zenfleet_user

# Copier la configuration Supervisor
COPY ./docker/php/supervisord.conf /etc/supervisor/supervisord.conf

# Pr√©parer les r√©pertoires de l'application AVANT de copier le code
USER root
RUN mkdir -p /var/www/html/storage/framework/sessions \
             /var/www/html/storage/framework/views \
             /var/www/html/storage/framework/cache \
             /var/www/html/storage/logs \
    && chown -R zenfleet_user:zenfleet_user /var/www/html

# Passer √† l'utilisateur de l'application
USER zenfleet_user
WORKDIR /var/www/html

# Copier le code et installer les d√©pendances
COPY --chown=zenfleet_user:zenfleet_user . .
RUN composer install --no-dev --optimize-autoloader

CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/supervisord.conf"]
--- FIN DU FICHIER : ./docker/php/Dockerfile ---


////////////////////////////////////////////////////////////////
CHEMIN : ./docker/php/supervisord.conf
////////////////////////////////////////////////////////////////

[supervisord]
nodaemon=true
user=zenfleet_user  ; <-- Changement critique : tout est g√©r√© par l'utilisateur de l'app

[program:php-fpm]
command=php-fpm -F -R  ; -R permet de s'ex√©cuter en tant que non-root
autostart=true
autorestart=true
priority=5
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0

[program:laravel-worker]
process_name=%(program_name)s_%(process_num)02d
command=php /var/www/html/artisan queue:work --sleep=3 --tries=3
autostart=true
autorestart=true
user=zenfleet_user
numprocs=2
redirect_stderr=true
stdout_logfile=/var/www/html/storage/logs/worker.log
--- FIN DU FICHIER : ./docker/php/supervisord.conf ---


////////////////////////////////////////////////////////////////
CHEMIN : ./pdf-service/Dockerfile
////////////////////////////////////////////////////////////////

# √âtape 1 : Image de base
FROM node:20-bullseye

# Installer toutes les d√©pendances syst√®me requises par Chromium
RUN apt-get update && apt-get install -y --no-install-recommends \
    ca-certificates fonts-liberation libnss3 libasound2 libatk-bridge2.0-0 libatk1.0-0 \
    libcups2 libdbus-1-3 libdrm2 libgbm1 libgtk-3-0 libx11-xcb1 libxcomposite1 \
    libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Cr√©er un utilisateur non-root pour la s√©curit√©
RUN groupadd -r pptruser && useradd -r -g pptruser -G audio,video pptruser \
    && mkdir -p /home/pptruser/app \
    && chown -R pptruser:pptruser /home/pptruser

# D√©finir le r√©pertoire de travail
WORKDIR /home/pptruser/app

# Passer √† l'utilisateur non-root
USER pptruser

# Copier uniquement package.json et yarn.lock pour tirer parti du cache Docker
COPY package.json yarn.lock* ./

# Installer les d√©pendances. La double commande est une s√©curit√©.
RUN yarn install --frozen-lockfile || yarn install

# Copier le reste du code de l'application
COPY . .

# Exposer le port du service
EXPOSE 3000

# La commande pour d√©marrer le serveur
CMD ["node", "server.js"]
--- FIN DU FICHIER : ./pdf-service/Dockerfile ---


////////////////////////////////////////////////////////////////
CHEMIN : ./pdf-service/package.json
////////////////////////////////////////////////////////////////

{
  "name": "zenfleet-pdf-service",
  "version": "1.0.0",
  "description": "Microservice de g√©n√©ration de PDF pour ZenFleet",
  "main": "server.js",
  "type": "module",
  "private": true,
  "scripts": {
    "start": "node server.js"
  },
  "dependencies": {
    "cors": "^2.8.5",
    "express": "^4.19.2",
    "puppeteer": "^22.12.1"
  }
}
--- FIN DU FICHIER : ./pdf-service/package.json ---


////////////////////////////////////////////////////////////////
CHEMIN : ./pdf-service/server - Copy.js:Zone.Identifier
////////////////////////////////////////////////////////////////


--- FIN DU FICHIER : ./pdf-service/server - Copy.js:Zone.Identifier ---


////////////////////////////////////////////////////////////////
CHEMIN : ./pdf-service/server.js
////////////////////////////////////////////////////////////////

import express from 'express';
import puppeteer from 'puppeteer';

const app = express();
const PORT = process.env.PORT || 3000;

app.use(express.json({ limit: '10mb' }));

app.get('/health', (req, res) => {
    res.status(200).json({ status: 'OK' });
});

app.post('/generate-pdf', async (req, res) => {
    const { html, options = {} } = req.body;

    if (!html) {
        return res.status(400).json({ error: 'Le contenu HTML est manquant.' });
    }

    let browser = null;
    try {
        console.log('Lancement du navigateur pour la g√©n√©ration PDF...');
        browser = await puppeteer.launch({
            headless: true,
            args: [
                '--no-sandbox',
                '--disable-setuid-sandbox',
                '--disable-dev-shm-usage',
                '--disable-gpu',
            ],
            executablePath: puppeteer.executablePath()
        });

        const page = await browser.newPage();
        
        // √âmuler le m√©dia 'print' pour appliquer les styles @media print
        await page.emulateMediaType('print');

        // D√©finir le contenu de la page
        await page.setContent(html, { waitUntil: 'networkidle0' });

        // Options PDF par d√©faut, qui peuvent √™tre surcharg√©es par la requ√™te
        const pdfOptions = {
            format: 'A4',
            printBackground: true,
            margin: {
                top: '15mm',
                right: '15mm',
                bottom: '15mm',
                left: '15mm',
            },
            ...options,
        };

        const pdfBuffer = await page.pdf(pdfOptions);
        console.log(`PDF g√©n√©r√© avec succ√®s (${(pdfBuffer.length / 1024).toFixed(2)} KB)`);

        res.setHeader('Content-Type', 'application/pdf');
        res.setHeader('Content-Disposition', 'attachment; filename="document.pdf"');
        res.send(pdfBuffer);

    } catch (error) {
        console.error('Erreur lors de la g√©n√©ration du PDF:', error);
        res.status(500).json({ error: 'Erreur serveur lors de la g√©n√©ration du PDF.', details: error.message });
    } finally {
        if (browser) {
            await browser.close();
            console.log('Navigateur ferm√©.');
        }
    }
});

app.listen(PORT, '0.0.0.0', () => {
    console.log(`üöÄ Service PDF ZenFleet d√©marr√© sur le port ${PORT}`);
});
--- FIN DU FICHIER : ./pdf-service/server.js ---


////////////////////////////////////////////////////////////////
CHEMIN : ./pdf-service/server.js.ok
////////////////////////////////////////////////////////////////

import express from 'express';
import puppeteer from 'puppeteer';
import { fileURLToPath } from 'url';
import { dirname } from 'path';
import fs from 'fs';

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

const app = express();
const port = process.env.PORT || 3000;

// Configuration du middleware avec des limites appropri√©es pour Express 5.x
app.use(express.json({ 
    limit: '50mb',
    strict: false // Express 5.x par d√©faut est plus strict
}));
app.use(express.urlencoded({ 
    extended: true, 
    limit: '50mb',
    parameterLimit: 1000 // Nouvelle option Express 5.x
}));

// Variables globales pour la gestion du navigateur
let browser = null;
let isShuttingDown = false;
let initializationPromise = null;

// Configuration Puppeteer optimis√©e pour la version 24.x
const puppeteerConfig = {
    headless: 'new', // Nouvelle syntaxe Puppeteer 24.x
    args: [
        '--no-sandbox',
        '--disable-setuid-sandbox',
        '--disable-dev-shm-usage',
        '--disable-gpu',
        '--disable-web-security',
        '--disable-features=VizDisplayCompositor',
        '--run-all-compositor-stages-before-draw',
        '--memory-pressure-off',
        '--max_old_space_size=1536',
        '--disable-background-timer-throttling',
        '--disable-backgrounding-occluded-windows',
        '--disable-renderer-backgrounding',
        '--no-first-run',
        '--no-default-browser-check',
        '--disable-extensions',
        '--disable-plugins',
        '--disable-images',
        '--disable-javascript', // D√©sactiver JS pour am√©liorer les performances PDF
        '--virtual-time-budget=30000' // Nouvelle option Puppeteer 24.x
    ],
    timeout: 30000,
    protocolTimeout: 30000,
    // Configuration sp√©cifique √† Puppeteer 24.x
    waitForInitialPage: false,
    ignoreDefaultArgs: ['--enable-automation']
};

// Fonction pour logger avec timestamp
function log(message, level = 'INFO') {
    const timestamp = new Date().toISOString();
    console.log(`[${timestamp}] [${level}] [ZenFleet PDF Service] ${message}`);
}

// Fonction pour initialiser le navigateur avec retry (compatible Puppeteer 24.x)
async function initBrowser(retries = 3) {
    for (let attempt = 1; attempt <= retries; attempt++) {
        try {
            log(`Tentative d'initialisation du navigateur (${attempt}/${retries})...`);
            
            // Puppeteer 24.x - Nouvelle m√©thode de lancement
            browser = await puppeteer.launch(puppeteerConfig);
            
            // Test de fonctionnement avec une page simple
            const testPage = await browser.newPage();
            
            // Configuration de la page pour Puppeteer 24.x
            await testPage.setViewport({ 
                width: 1200, 
                height: 800,
                deviceScaleFactor: 1,
                isMobile: false,
                hasTouch: false
            });
            
            // Test simple de rendu
            await testPage.setContent('<html><body><h1>Test Init</h1></body></html>', {
                waitUntil: 'domcontentloaded',
                timeout: 10000
            });
            
            await testPage.close();
            
            log('Navigateur initialis√© avec succ√®s');
            return true;
            
        } catch (error) {
            log(`Erreur lors de l'initialisation du navigateur (tentative ${attempt}): ${error.message}`, 'ERROR');
            
            if (browser) {
                try {
                    await browser.close();
                } catch (closeError) {
                    log(`Erreur lors de la fermeture du navigateur: ${closeError.message}`, 'WARN');
                }
                browser = null;
            }
            
            if (attempt < retries) {
                const waitTime = Math.pow(2, attempt) * 1000; // Backoff exponentiel
                log(`Attente de ${waitTime}ms avant la prochaine tentative...`);
                await new Promise(resolve => setTimeout(resolve, waitTime));
            }
        }
    }
    
    log('Impossible d\'initialiser le navigateur apr√®s toutes les tentatives', 'ERROR');
    return false;
}

// Fonction pour fermer proprement le navigateur
async function closeBrowser() {
    if (browser) {
        try {
            await browser.close();
            log('Navigateur ferm√© proprement');
        } catch (error) {
            log(`Erreur lors de la fermeture du navigateur: ${error.message}`, 'ERROR');
        }
        browser = null;
    }
}

// Middleware de logging des requ√™tes (compatible Express 5.x)
app.use((req, res, next) => {
    const start = Date.now();
    
    // Express 5.x - Nouvelle m√©thode pour les √©v√©nements de r√©ponse
    res.on('finish', () => {
        const duration = Date.now() - start;
        log(`${req.method} ${req.path} - ${res.statusCode} - ${duration}ms`);
    });
    
    next();
});

// Endpoint de sant√© am√©lior√© pour Puppeteer 24.x
app.get('/health', async (req, res) => {
    const healthStatus = {
        status: 'ok',
        timestamp: new Date().toISOString(),
        uptime: Math.floor(process.uptime()),
        memory: process.memoryUsage(),
        browser: browser ? 'connected' : 'disconnected',
        version: '2.0.0',
        environment: process.env.NODE_ENV || 'development',
        express_version: '5.1.0',
        puppeteer_version: '24.14.0'
    };
    
    // Test rapide du navigateur si disponible
    if (browser) {
        try {
            const pages = await browser.pages();
            const version = await browser.version();
            
            healthStatus.browser_pages = pages.length;
            healthStatus.browser_version = version;
            healthStatus.browser_status = 'healthy';
        } catch (error) {
            healthStatus.browser_status = 'unhealthy';
            healthStatus.browser_error = error.message;
            healthStatus.status = 'degraded';
        }
    }
    
    const statusCode = healthStatus.status === 'ok' ? 200 : 503;
    res.status(statusCode).json(healthStatus);
});

// Endpoint de test simple
app.get('/test', (req, res) => {
    res.json({
        message: 'Service PDF ZenFleet op√©rationnel',
        timestamp: new Date().toISOString(),
        browser_available: browser !== null,
        express_version: '5.1.0',
        puppeteer_version: '24.14.0'
    });
});

// Endpoint principal de g√©n√©ration PDF (optimis√© pour Express 5.x et Puppeteer 24.x)
app.post('/generate-pdf', async (req, res) => {
    if (isShuttingDown) {
        return res.status(503).json({ 
            error: 'Service en cours d\'arr√™t',
            retry_after: 30
        });
    }

    const startTime = Date.now();
    let page = null;
    const requestId = Math.random().toString(36).substr(2, 9);

    try {
        const { html, options = {} } = req.body;

        if (!html) {
            return res.status(400).json({ 
                error: 'Le contenu HTML est requis',
                request_id: requestId
            });
        }

        log(`[${requestId}] D√©but de g√©n√©ration PDF (taille HTML: ${html.length} caract√®res)`);

        // V√©rifier que le navigateur est disponible
        if (!browser) {
            log(`[${requestId}] Navigateur non disponible, tentative de r√©initialisation...`);
            const initialized = await initBrowser();
            if (!initialized) {
                throw new Error('Impossible d\'initialiser le navigateur');
            }
        }

        // Cr√©er une nouvelle page avec configuration optimis√©e pour Puppeteer 24.x
        page = await browser.newPage();
        
        // Configuration de la page pour Puppeteer 24.x
        await page.setViewport({ 
            width: 1200, 
            height: 800,
            deviceScaleFactor: 1,
            isMobile: false,
            hasTouch: false
        });

        // Puppeteer 24.x - Nouvelle m√©thode d'interception des requ√™tes
        await page.setRequestInterception(true);
        page.on('request', (request) => {
            const resourceType = request.resourceType();
            // Bloquer les ressources inutiles pour am√©liorer les performances
            if (['image', 'stylesheet', 'font', 'media'].includes(resourceType)) {
                request.abort();
            } else {
                request.continue();
            }
        });

        // Puppeteer 24.x - Options de navigation am√©lior√©es
        await page.setContent(html, { 
            waitUntil: 'domcontentloaded',
            timeout: 30000
        });

        // Attendre que le contenu soit compl√®tement rendu
        await page.evaluateHandle('document.fonts.ready');

        // Options par d√©faut pour le PDF (compatibles Puppeteer 24.x)
        const pdfOptions = {
            format: 'A4',
            printBackground: true,
            margin: {
                top: '1cm',
                right: '1cm',
                bottom: '1cm',
                left: '1cm'
            },
            preferCSSPageSize: true,
            // Nouvelles options Puppeteer 24.x
            tagged: false, // D√©sactiver le PDF tagu√© pour am√©liorer les performances
            outline: false, // D√©sactiver les signets
            ...options
        };

        log(`[${requestId}] G√©n√©ration du PDF avec les options:`, JSON.stringify(pdfOptions));
        
        // G√©n√©rer le PDF avec Puppeteer 24.x
        const pdfBuffer = await page.pdf(pdfOptions);

        const duration = Date.now() - startTime;
        const sizeKB = Math.round(pdfBuffer.length / 1024 * 100) / 100;
        
        log(`[${requestId}] PDF g√©n√©r√© avec succ√®s en ${duration}ms, taille: ${sizeKB}KB`);

        // Headers de r√©ponse optimis√©s pour Express 5.x
        res.set({
            'Content-Type': 'application/pdf',
            'Content-Length': pdfBuffer.length,
            'X-Generation-Time': `${duration}ms`,
            'X-Request-ID': requestId,
            'X-Express-Version': '5.1.0',
            'X-Puppeteer-Version': '24.14.0',
            'Cache-Control': 'no-cache, no-store, must-revalidate',
            'Pragma': 'no-cache',
            'Expires': '0'
        });

        res.send(pdfBuffer);

    } catch (error) {
        const duration = Date.now() - startTime;
        log(`[${requestId}] Erreur lors de la g√©n√©ration PDF (${duration}ms): ${error.message}`, 'ERROR');

        // D√©terminer le code d'erreur appropri√©
        let statusCode = 500;
        if (error.message.includes('timeout')) {
            statusCode = 408;
        } else if (error.message.includes('navigation')) {
            statusCode = 422;
        } else if (error.message.includes('Protocol error')) {
            statusCode = 503; // Service temporairement indisponible
        }

        res.status(statusCode).json({
            error: 'Erreur lors de la g√©n√©ration du PDF',
            message: error.message,
            request_id: requestId,
            duration: `${duration}ms`,
            timestamp: new Date().toISOString(),
            express_version: '5.1.0',
            puppeteer_version: '24.14.0'
        });
    } finally {
        // Fermer la page si elle a √©t√© cr√©√©e
        if (page) {
            try {
                await page.close();
            } catch (error) {
                log(`[${requestId}] Erreur lors de la fermeture de la page: ${error.message}`, 'WARN');
            }
        }
    }
});

// Gestion des erreurs globales (Express 5.x)
app.use((error, req, res, next) => {
    log(`Erreur non g√©r√©e: ${error.message}`, 'ERROR');
    log(`Stack trace: ${error.stack}`, 'ERROR');
    
    if (!res.headersSent) {
        res.status(500).json({
            error: 'Erreur interne du serveur',
            message: error.message,
            timestamp: new Date().toISOString(),
            express_version: '5.1.0'
        });
    }
});

// Gestion des routes non trouv√©es (Express 5.x)
app.use('*', (req, res) => {
    res.status(404).json({
        error: 'Endpoint non trouv√©',
        path: req.originalUrl,
        method: req.method,
        available_endpoints: [
            'GET /health - V√©rification de l\'√©tat du service',
            'GET /test - Test simple du service',
            'POST /generate-pdf - G√©n√©ration de PDF'
        ],
        express_version: '5.1.0'
    });
});

// Gestion de l'arr√™t propre
async function gracefulShutdown(signal) {
    log(`Signal ${signal} re√ßu, arr√™t en cours...`);
    isShuttingDown = true;
    
    // Attendre un peu pour permettre aux requ√™tes en cours de se terminer
    await new Promise(resolve => setTimeout(resolve, 5000));
    
    await closeBrowser();
    log('Arr√™t termin√©');
    process.exit(0);
}

process.on('SIGTERM', () => gracefulShutdown('SIGTERM'));
process.on('SIGINT', () => gracefulShutdown('SIGINT'));

// Gestion des erreurs non captur√©es
process.on('uncaughtException', (error) => {
    log(`Exception non captur√©e: ${error.message}`, 'ERROR');
    log(`Stack trace: ${error.stack}`, 'ERROR');
    gracefulShutdown('uncaughtException');
});

process.on('unhandledRejection', (reason, promise) => {
    log(`Promesse rejet√©e non g√©r√©e: ${reason}`, 'ERROR');
    log(`Promise: ${promise}`, 'ERROR');
});

// D√©marrage du serveur
async function startServer() {
    try {
        log('D√©marrage du service PDF ZenFleet...');
        log(`Version Node.js: ${process.version}`);
        log(`Version Express: 5.1.0`);
        log(`Version Puppeteer: 24.14.0`);
        log(`Environnement: ${process.env.NODE_ENV || 'development'}`);
        
        // Initialiser le navigateur au d√©marrage
        initializationPromise = initBrowser();
        const browserInitialized = await initializationPromise;
        
        if (!browserInitialized) {
            log('Impossible de d√©marrer sans navigateur', 'ERROR');
            process.exit(1);
        }

        // D√©marrer le serveur HTTP avec Express 5.x
        const server = app.listen(port, '0.0.0.0', () => {
            log(`Service en √©coute sur le port ${port}`);
            log(`Endpoints disponibles:`);
            log(`  - POST http://localhost:${port}/generate-pdf`);
            log(`  - GET  http://localhost:${port}/health`);
            log(`  - GET  http://localhost:${port}/test`);
            log('Service PDF ZenFleet pr√™t √† recevoir des requ√™tes');
        });

        // Configuration du serveur pour Express 5.x
        server.timeout = 120000; // 2 minutes
        server.keepAliveTimeout = 65000;
        server.headersTimeout = 66000;
        server.requestTimeout = 120000; // Nouvelle option Express 5.x

    } catch (error) {
        log(`Erreur lors du d√©marrage: ${error.message}`, 'ERROR');
        process.exit(1);
    }
}

// D√©marrer le serveur
startServer();


--- FIN DU FICHIER : ./pdf-service/server.js.ok ---


////////////////////////////////////////////////////////////////
CHEMIN : ./pdf-service/server.js:Zone.Identifier
////////////////////////////////////////////////////////////////


--- FIN DU FICHIER : ./pdf-service/server.js:Zone.Identifier ---


////////////////////////////////////////////////////////////////
CHEMIN : ./pdf-service/server.js__
////////////////////////////////////////////////////////////////

import express from 'express';
import puppeteer from 'puppeteer';

const app = express();
const PORT = process.env.PORT || 3000;

app.use(express.json({ limit: '10mb' }));

app.get('/health', (req, res) => {
    res.status(200).json({ status: 'OK' });
});

app.post('/generate-pdf', async (req, res) => {
    const { html, options = {} } = req.body;

    if (!html) {
        return res.status(400).json({ error: 'Le contenu HTML est manquant.' });
    }

    let browser = null;
    try {
        console.log('Lancement du navigateur...');
        // Puppeteer trouvera automatiquement le navigateur install√© dans le conteneur
        browser = await puppeteer.launch({
            headless: true,
            args: [
                '--no-sandbox',
                '--disable-setuid-sandbox',
                '--disable-dev-shm-usage',
                '--disable-gpu',
            ],
            executablePath: puppeteer.executablePath()
        });

        const page = await browser.newPage();
        await page.setContent(html, { waitUntil: 'networkidle0' });

        const pdfBuffer = await page.pdf({ format: 'A4', printBackground: true, ...options });
        console.log(`PDF g√©n√©r√© avec succ√®s (${(pdfBuffer.length / 1024).toFixed(2)} KB)`);

        res.setHeader('Content-Type', 'application/pdf');
        res.setHeader('Content-Disposition', 'attachment; filename="document.pdf"');
        res.send(pdfBuffer);

    } catch (error) {
        console.error('Erreur lors de la g√©n√©ration du PDF:', error);
        res.status(500).json({ error: 'Erreur serveur lors de la g√©n√©ration du PDF.', details: error.message });
    } finally {
        if (browser) await browser.close();
    }
});

app.listen(PORT, '0.0.0.0', () => {
    console.log(`üöÄ Service PDF ZenFleet d√©marr√© sur le port ${PORT}`);
});
--- FIN DU FICHIER : ./pdf-service/server.js__ ---


////////////////////////////////////////////////////////////////
CHEMIN : ./public/.htaccess
////////////////////////////////////////////////////////////////

<IfModule mod_rewrite.c>
    <IfModule mod_negotiation.c>
        Options -MultiViews -Indexes
    </IfModule>

    RewriteEngine On

    # Handle Authorization Header
    RewriteCond %{HTTP:Authorization} .
    RewriteRule .* - [E=HTTP_AUTHORIZATION:%{HTTP:Authorization}]

    # Redirect Trailing Slashes If Not A Folder...
    RewriteCond %{REQUEST_FILENAME} !-d
    RewriteCond %{REQUEST_URI} (.+)/$
    RewriteRule ^ %1 [L,R=301]

    # Send Requests To Front Controller...
    RewriteCond %{REQUEST_FILENAME} !-d
    RewriteCond %{REQUEST_FILENAME} !-f
    RewriteRule ^ index.php [L]
</IfModule>

--- FIN DU FICHIER : ./public/.htaccess ---


////////////////////////////////////////////////////////////////
CHEMIN : ./public/build/assets/app-CNv0O1K2.js
////////////////////////////////////////////////////////////////

var gh=Object.defineProperty;var ph=(n,s,i)=>s in n?gh(n,s,{enumerable:!0,configurable:!0,writable:!0,value:i}):n[s]=i;var Ai=(n,s,i)=>ph(n,typeof s!="symbol"?s+"":s,i);function sl(n,s){return function(){return n.apply(s,arguments)}}const{toString:mh}=Object.prototype,{getPrototypeOf:_s}=Object,{iterator:Kn,toStringTag:ol}=Symbol,Jn=(n=>s=>{const i=mh.call(s);return n[i]||(n[i]=i.slice(8,-1).toLowerCase())})(Object.create(null)),Gt=n=>(n=n.toLowerCase(),s=>Jn(s)===n),Qn=n=>s=>typeof s===n,{isArray:oa}=Array,Ya=Qn("undefined");function Wa(n){return n!==null&&!Ya(n)&&n.constructor!==null&&!Ya(n.constructor)&&St(n.constructor.isBuffer)&&n.constructor.isBuffer(n)}const ll=Gt("ArrayBuffer");function xh(n){let s;return typeof ArrayBuffer<"u"&&ArrayBuffer.isView?s=ArrayBuffer.isView(n):s=n&&n.buffer&&ll(n.buffer),s}const vh=Qn("string"),St=Qn("function"),cl=Qn("number"),Ga=n=>n!==null&&typeof n=="object",bh=n=>n===!0||n===!1,kn=n=>{if(Jn(n)!=="object")return!1;const s=_s(n);return(s===null||s===Object.prototype||Object.getPrototypeOf(s)===null)&&!(ol in n)&&!(Kn in n)},yh=n=>{if(!Ga(n)||Wa(n))return!1;try{return Object.keys(n).length===0&&Object.getPrototypeOf(n)===Object.prototype}catch{return!1}},wh=Gt("Date"),Ah=Gt("File"),Sh=Gt("Blob"),Ch=Gt("FileList"),kh=n=>Ga(n)&&St(n.pipe),Eh=n=>{let s;return n&&(typeof FormData=="function"&&n instanceof FormData||St(n.append)&&((s=Jn(n))==="formdata"||s==="object"&&St(n.toString)&&n.toString()==="[object FormData]"))},Mh=Gt("URLSearchParams"),[_h,Ph,Lh,Th]=["ReadableStream","Request","Response","Headers"].map(Gt),Dh=n=>n.trim?n.trim():n.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"");function Va(n,s,{allOwnKeys:i=!1}={}){if(n===null||typeof n>"u")return;let h,g;if(typeof n!="object"&&(n=[n]),oa(n))for(h=0,g=n.length;h<g;h++)s.call(null,n[h],h,n);else{if(Wa(n))return;const b=i?Object.getOwnPropertyNames(n):Object.keys(n),v=b.length;let k;for(h=0;h<v;h++)k=b[h],s.call(null,n[k],k,n)}}function hl(n,s){if(Wa(n))return null;s=s.toLowerCase();const i=Object.keys(n);let h=i.length,g;for(;h-- >0;)if(g=i[h],s===g.toLowerCase())return g;return null}const Li=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:global,dl=n=>!Ya(n)&&n!==Li;function Jr(){const{caseless:n}=dl(this)&&this||{},s={},i=(h,g)=>{const b=n&&hl(s,g)||g;kn(s[b])&&kn(h)?s[b]=Jr(s[b],h):kn(h)?s[b]=Jr({},h):oa(h)?s[b]=h.slice():s[b]=h};for(let h=0,g=arguments.length;h<g;h++)arguments[h]&&Va(arguments[h],i);return s}const Ih=(n,s,i,{allOwnKeys:h}={})=>(Va(s,(g,b)=>{i&&St(g)?n[b]=sl(g,i):n[b]=g},{allOwnKeys:h}),n),Oh=n=>(n.charCodeAt(0)===65279&&(n=n.slice(1)),n),Fh=(n,s,i,h)=>{n.prototype=Object.create(s.prototype,h),n.prototype.constructor=n,Object.defineProperty(n,"super",{value:s.prototype}),i&&Object.assign(n.prototype,i)},Rh=(n,s,i,h)=>{let g,b,v;const k={};if(s=s||{},n==null)return s;do{for(g=Object.getOwnPropertyNames(n),b=g.length;b-- >0;)v=g[b],(!h||h(v,n,s))&&!k[v]&&(s[v]=n[v],k[v]=!0);n=i!==!1&&_s(n)}while(n&&(!i||i(n,s))&&n!==Object.prototype);return s},Nh=(n,s,i)=>{n=String(n),(i===void 0||i>n.length)&&(i=n.length),i-=s.length;const h=n.indexOf(s,i);return h!==-1&&h===i},zh=n=>{if(!n)return null;if(oa(n))return n;let s=n.length;if(!cl(s))return null;const i=new Array(s);for(;s-- >0;)i[s]=n[s];return i},Yh=(n=>s=>n&&s instanceof n)(typeof Uint8Array<"u"&&_s(Uint8Array)),Hh=(n,s)=>{const h=(n&&n[Kn]).call(n);let g;for(;(g=h.next())&&!g.done;){const b=g.value;s.call(n,b[0],b[1])}},Xh=(n,s)=>{let i;const h=[];for(;(i=n.exec(s))!==null;)h.push(i);return h},Bh=Gt("HTMLFormElement"),Wh=n=>n.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g,function(i,h,g){return h.toUpperCase()+g}),ao=(({hasOwnProperty:n})=>(s,i)=>n.call(s,i))(Object.prototype),Gh=Gt("RegExp"),ul=(n,s)=>{const i=Object.getOwnPropertyDescriptors(n),h={};Va(i,(g,b)=>{let v;(v=s(g,b,n))!==!1&&(h[b]=v||g)}),Object.defineProperties(n,h)},Vh=n=>{ul(n,(s,i)=>{if(St(n)&&["arguments","caller","callee"].indexOf(i)!==-1)return!1;const h=n[i];if(St(h)){if(s.enumerable=!1,"writable"in s){s.writable=!1;return}s.set||(s.set=()=>{throw Error("Can not rewrite read-only method '"+i+"'")})}})},jh=(n,s)=>{const i={},h=g=>{g.forEach(b=>{i[b]=!0})};return oa(n)?h(n):h(String(n).split(s)),i},Uh=()=>{},$h=(n,s)=>n!=null&&Number.isFinite(n=+n)?n:s;function qh(n){return!!(n&&St(n.append)&&n[ol]==="FormData"&&n[Kn])}const Zh=n=>{const s=new Array(10),i=(h,g)=>{if(Ga(h)){if(s.indexOf(h)>=0)return;if(Wa(h))return h;if(!("toJSON"in h)){s[g]=h;const b=oa(h)?[]:{};return Va(h,(v,k)=>{const T=i(v,g+1);!Ya(T)&&(b[k]=T)}),s[g]=void 0,b}}return h};return i(n,0)},Kh=Gt("AsyncFunction"),Jh=n=>n&&(Ga(n)||St(n))&&St(n.then)&&St(n.catch),fl=((n,s)=>n?setImmediate:s?((i,h)=>(Li.addEventListener("message",({source:g,data:b})=>{g===Li&&b===i&&h.length&&h.shift()()},!1),g=>{h.push(g),Li.postMessage(i,"*")}))(`axios@${Math.random()}`,[]):i=>setTimeout(i))(typeof setImmediate=="function",St(Li.postMessage)),Qh=typeof queueMicrotask<"u"?queueMicrotask.bind(Li):typeof process<"u"&&process.nextTick||fl,ed=n=>n!=null&&St(n[Kn]),Z={isArray:oa,isArrayBuffer:ll,isBuffer:Wa,isFormData:Eh,isArrayBufferView:xh,isString:vh,isNumber:cl,isBoolean:bh,isObject:Ga,isPlainObject:kn,isEmptyObject:yh,isReadableStream:_h,isRequest:Ph,isResponse:Lh,isHeaders:Th,isUndefined:Ya,isDate:wh,isFile:Ah,isBlob:Sh,isRegExp:Gh,isFunction:St,isStream:kh,isURLSearchParams:Mh,isTypedArray:Yh,isFileList:Ch,forEach:Va,merge:Jr,extend:Ih,trim:Dh,stripBOM:Oh,inherits:Fh,toFlatObject:Rh,kindOf:Jn,kindOfTest:Gt,endsWith:Nh,toArray:zh,forEachEntry:Hh,matchAll:Xh,isHTMLForm:Bh,hasOwnProperty:ao,hasOwnProp:ao,reduceDescriptors:ul,freezeMethods:Vh,toObjectSet:jh,toCamelCase:Wh,noop:Uh,toFiniteNumber:$h,findKey:hl,global:Li,isContextDefined:dl,isSpecCompliantForm:qh,toJSONObject:Zh,isAsyncFn:Kh,isThenable:Jh,setImmediate:fl,asap:Qh,isIterable:ed};function Ee(n,s,i,h,g){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=new Error().stack,this.message=n,this.name="AxiosError",s&&(this.code=s),i&&(this.config=i),h&&(this.request=h),g&&(this.response=g,this.status=g.status?g.status:null)}Z.inherits(Ee,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:Z.toJSONObject(this.config),code:this.code,status:this.status}}});const gl=Ee.prototype,pl={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED","ERR_NOT_SUPPORT","ERR_INVALID_URL"].forEach(n=>{pl[n]={value:n}});Object.defineProperties(Ee,pl);Object.defineProperty(gl,"isAxiosError",{value:!0});Ee.from=(n,s,i,h,g,b)=>{const v=Object.create(gl);return Z.toFlatObject(n,v,function(T){return T!==Error.prototype},k=>k!=="isAxiosError"),Ee.call(v,n.message,s,i,h,g),v.cause=n,v.name=n.name,b&&Object.assign(v,b),v};const td=null;function Qr(n){return Z.isPlainObject(n)||Z.isArray(n)}function ml(n){return Z.endsWith(n,"[]")?n.slice(0,-2):n}function no(n,s,i){return n?n.concat(s).map(function(g,b){return g=ml(g),!i&&b?"["+g+"]":g}).join(i?".":""):s}function id(n){return Z.isArray(n)&&!n.some(Qr)}const ad=Z.toFlatObject(Z,{},null,function(s){return/^is[A-Z]/.test(s)});function er(n,s,i){if(!Z.isObject(n))throw new TypeError("target must be an object");s=s||new FormData,i=Z.toFlatObject(i,{metaTokens:!0,dots:!1,indexes:!1},!1,function(q,$){return!Z.isUndefined($[q])});const h=i.metaTokens,g=i.visitor||F,b=i.dots,v=i.indexes,T=(i.Blob||typeof Blob<"u"&&Blob)&&Z.isSpecCompliantForm(s);if(!Z.isFunction(g))throw new TypeError("visitor must be a function");function O(Y){if(Y===null)return"";if(Z.isDate(Y))return Y.toISOString();if(Z.isBoolean(Y))return Y.toString();if(!T&&Z.isBlob(Y))throw new Ee("Blob is not supported. Use a Buffer instead.");return Z.isArrayBuffer(Y)||Z.isTypedArray(Y)?T&&typeof Blob=="function"?new Blob([Y]):Buffer.from(Y):Y}function F(Y,q,$){let ie=Y;if(Y&&!$&&typeof Y=="object"){if(Z.endsWith(q,"{}"))q=h?q:q.slice(0,-2),Y=JSON.stringify(Y);else if(Z.isArray(Y)&&id(Y)||(Z.isFileList(Y)||Z.endsWith(q,"[]"))&&(ie=Z.toArray(Y)))return q=ml(q),ie.forEach(function(ne,pe){!(Z.isUndefined(ne)||ne===null)&&s.append(v===!0?no([q],pe,b):v===null?q:q+"[]",O(ne))}),!1}return Qr(Y)?!0:(s.append(no($,q,b),O(Y)),!1)}const z=[],G=Object.assign(ad,{defaultVisitor:F,convertValue:O,isVisitable:Qr});function ae(Y,q){if(!Z.isUndefined(Y)){if(z.indexOf(Y)!==-1)throw Error("Circular reference detected in "+q.join("."));z.push(Y),Z.forEach(Y,function(ie,Q){(!(Z.isUndefined(ie)||ie===null)&&g.call(s,ie,Z.isString(Q)?Q.trim():Q,q,G))===!0&&ae(ie,q?q.concat(Q):[Q])}),z.pop()}}if(!Z.isObject(n))throw new TypeError("data must be an object");return ae(n),s}function ro(n){const s={"!":"%21","'":"%27","(":"%28",")":"%29","~":"%7E","%20":"+","%00":"\0"};return encodeURIComponent(n).replace(/[!'()~]|%20|%00/g,function(h){return s[h]})}function Ps(n,s){this._pairs=[],n&&er(n,this,s)}const xl=Ps.prototype;xl.append=function(s,i){this._pairs.push([s,i])};xl.toString=function(s){const i=s?function(h){return s.call(this,h,ro)}:ro;return this._pairs.map(function(g){return i(g[0])+"="+i(g[1])},"").join("&")};function nd(n){return encodeURIComponent(n).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}function vl(n,s,i){if(!s)return n;const h=i&&i.encode||nd;Z.isFunction(i)&&(i={serialize:i});const g=i&&i.serialize;let b;if(g?b=g(s,i):b=Z.isURLSearchParams(s)?s.toString():new Ps(s,i).toString(h),b){const v=n.indexOf("#");v!==-1&&(n=n.slice(0,v)),n+=(n.indexOf("?")===-1?"?":"&")+b}return n}class so{constructor(){this.handlers=[]}use(s,i,h){return this.handlers.push({fulfilled:s,rejected:i,synchronous:h?h.synchronous:!1,runWhen:h?h.runWhen:null}),this.handlers.length-1}eject(s){this.handlers[s]&&(this.handlers[s]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(s){Z.forEach(this.handlers,function(h){h!==null&&s(h)})}}const bl={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1},rd=typeof URLSearchParams<"u"?URLSearchParams:Ps,sd=typeof FormData<"u"?FormData:null,od=typeof Blob<"u"?Blob:null,ld={isBrowser:!0,classes:{URLSearchParams:rd,FormData:sd,Blob:od},protocols:["http","https","file","blob","url","data"]},Ls=typeof window<"u"&&typeof document<"u",es=typeof navigator=="object"&&navigator||void 0,cd=Ls&&(!es||["ReactNative","NativeScript","NS"].indexOf(es.product)<0),hd=typeof WorkerGlobalScope<"u"&&self instanceof WorkerGlobalScope&&typeof self.importScripts=="function",dd=Ls&&window.location.href||"http://localhost",ud=Object.freeze(Object.defineProperty({__proto__:null,hasBrowserEnv:Ls,hasStandardBrowserEnv:cd,hasStandardBrowserWebWorkerEnv:hd,navigator:es,origin:dd},Symbol.toStringTag,{value:"Module"})),ht={...ud,...ld};function fd(n,s){return er(n,new ht.classes.URLSearchParams,{visitor:function(i,h,g,b){return ht.isNode&&Z.isBuffer(i)?(this.append(h,i.toString("base64")),!1):b.defaultVisitor.apply(this,arguments)},...s})}function gd(n){return Z.matchAll(/\w+|\[(\w*)]/g,n).map(s=>s[0]==="[]"?"":s[1]||s[0])}function pd(n){const s={},i=Object.keys(n);let h;const g=i.length;let b;for(h=0;h<g;h++)b=i[h],s[b]=n[b];return s}function yl(n){function s(i,h,g,b){let v=i[b++];if(v==="__proto__")return!0;const k=Number.isFinite(+v),T=b>=i.length;return v=!v&&Z.isArray(g)?g.length:v,T?(Z.hasOwnProp(g,v)?g[v]=[g[v],h]:g[v]=h,!k):((!g[v]||!Z.isObject(g[v]))&&(g[v]=[]),s(i,h,g[v],b)&&Z.isArray(g[v])&&(g[v]=pd(g[v])),!k)}if(Z.isFormData(n)&&Z.isFunction(n.entries)){const i={};return Z.forEachEntry(n,(h,g)=>{s(gd(h),g,i,0)}),i}return null}function md(n,s,i){if(Z.isString(n))try{return(s||JSON.parse)(n),Z.trim(n)}catch(h){if(h.name!=="SyntaxError")throw h}return(i||JSON.stringify)(n)}const ja={transitional:bl,adapter:["xhr","http","fetch"],transformRequest:[function(s,i){const h=i.getContentType()||"",g=h.indexOf("application/json")>-1,b=Z.isObject(s);if(b&&Z.isHTMLForm(s)&&(s=new FormData(s)),Z.isFormData(s))return g?JSON.stringify(yl(s)):s;if(Z.isArrayBuffer(s)||Z.isBuffer(s)||Z.isStream(s)||Z.isFile(s)||Z.isBlob(s)||Z.isReadableStream(s))return s;if(Z.isArrayBufferView(s))return s.buffer;if(Z.isURLSearchParams(s))return i.setContentType("application/x-www-form-urlencoded;charset=utf-8",!1),s.toString();let k;if(b){if(h.indexOf("application/x-www-form-urlencoded")>-1)return fd(s,this.formSerializer).toString();if((k=Z.isFileList(s))||h.indexOf("multipart/form-data")>-1){const T=this.env&&this.env.FormData;return er(k?{"files[]":s}:s,T&&new T,this.formSerializer)}}return b||g?(i.setContentType("application/json",!1),md(s)):s}],transformResponse:[function(s){const i=this.transitional||ja.transitional,h=i&&i.forcedJSONParsing,g=this.responseType==="json";if(Z.isResponse(s)||Z.isReadableStream(s))return s;if(s&&Z.isString(s)&&(h&&!this.responseType||g)){const v=!(i&&i.silentJSONParsing)&&g;try{return JSON.parse(s)}catch(k){if(v)throw k.name==="SyntaxError"?Ee.from(k,Ee.ERR_BAD_RESPONSE,this,null,this.response):k}}return s}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:ht.classes.FormData,Blob:ht.classes.Blob},validateStatus:function(s){return s>=200&&s<300},headers:{common:{Accept:"application/json, text/plain, */*","Content-Type":void 0}}};Z.forEach(["delete","get","head","post","put","patch"],n=>{ja.headers[n]={}});const xd=Z.toObjectSet(["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"]),vd=n=>{const s={};let i,h,g;return n&&n.split(`
`).forEach(function(v){g=v.indexOf(":"),i=v.substring(0,g).trim().toLowerCase(),h=v.substring(g+1).trim(),!(!i||s[i]&&xd[i])&&(i==="set-cookie"?s[i]?s[i].push(h):s[i]=[h]:s[i]=s[i]?s[i]+", "+h:h)}),s},oo=Symbol("internals");function Sa(n){return n&&String(n).trim().toLowerCase()}function En(n){return n===!1||n==null?n:Z.isArray(n)?n.map(En):String(n)}function bd(n){const s=Object.create(null),i=/([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;let h;for(;h=i.exec(n);)s[h[1]]=h[2];return s}const yd=n=>/^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(n.trim());function Sr(n,s,i,h,g){if(Z.isFunction(h))return h.call(this,s,i);if(g&&(s=i),!!Z.isString(s)){if(Z.isString(h))return s.indexOf(h)!==-1;if(Z.isRegExp(h))return h.test(s)}}function wd(n){return n.trim().toLowerCase().replace(/([a-z\d])(\w*)/g,(s,i,h)=>i.toUpperCase()+h)}function Ad(n,s){const i=Z.toCamelCase(" "+s);["get","set","has"].forEach(h=>{Object.defineProperty(n,h+i,{value:function(g,b,v){return this[h].call(this,s,g,b,v)},configurable:!0})})}let Ct=class{constructor(s){s&&this.set(s)}set(s,i,h){const g=this;function b(k,T,O){const F=Sa(T);if(!F)throw new Error("header name must be a non-empty string");const z=Z.findKey(g,F);(!z||g[z]===void 0||O===!0||O===void 0&&g[z]!==!1)&&(g[z||T]=En(k))}const v=(k,T)=>Z.forEach(k,(O,F)=>b(O,F,T));if(Z.isPlainObject(s)||s instanceof this.constructor)v(s,i);else if(Z.isString(s)&&(s=s.trim())&&!yd(s))v(vd(s),i);else if(Z.isObject(s)&&Z.isIterable(s)){let k={},T,O;for(const F of s){if(!Z.isArray(F))throw TypeError("Object iterator must return a key-value pair");k[O=F[0]]=(T=k[O])?Z.isArray(T)?[...T,F[1]]:[T,F[1]]:F[1]}v(k,i)}else s!=null&&b(i,s,h);return this}get(s,i){if(s=Sa(s),s){const h=Z.findKey(this,s);if(h){const g=this[h];if(!i)return g;if(i===!0)return bd(g);if(Z.isFunction(i))return i.call(this,g,h);if(Z.isRegExp(i))return i.exec(g);throw new TypeError("parser must be boolean|regexp|function")}}}has(s,i){if(s=Sa(s),s){const h=Z.findKey(this,s);return!!(h&&this[h]!==void 0&&(!i||Sr(this,this[h],h,i)))}return!1}delete(s,i){const h=this;let g=!1;function b(v){if(v=Sa(v),v){const k=Z.findKey(h,v);k&&(!i||Sr(h,h[k],k,i))&&(delete h[k],g=!0)}}return Z.isArray(s)?s.forEach(b):b(s),g}clear(s){const i=Object.keys(this);let h=i.length,g=!1;for(;h--;){const b=i[h];(!s||Sr(this,this[b],b,s,!0))&&(delete this[b],g=!0)}return g}normalize(s){const i=this,h={};return Z.forEach(this,(g,b)=>{const v=Z.findKey(h,b);if(v){i[v]=En(g),delete i[b];return}const k=s?wd(b):String(b).trim();k!==b&&delete i[b],i[k]=En(g),h[k]=!0}),this}concat(...s){return this.constructor.concat(this,...s)}toJSON(s){const i=Object.create(null);return Z.forEach(this,(h,g)=>{h!=null&&h!==!1&&(i[g]=s&&Z.isArray(h)?h.join(", "):h)}),i}[Symbol.iterator](){return Object.entries(this.toJSON())[Symbol.iterator]()}toString(){return Object.entries(this.toJSON()).map(([s,i])=>s+": "+i).join(`
`)}getSetCookie(){return this.get("set-cookie")||[]}get[Symbol.toStringTag](){return"AxiosHeaders"}static from(s){return s instanceof this?s:new this(s)}static concat(s,...i){const h=new this(s);return i.forEach(g=>h.set(g)),h}static accessor(s){const h=(this[oo]=this[oo]={accessors:{}}).accessors,g=this.prototype;function b(v){const k=Sa(v);h[k]||(Ad(g,v),h[k]=!0)}return Z.isArray(s)?s.forEach(b):b(s),this}};Ct.accessor(["Content-Type","Content-Length","Accept","Accept-Encoding","User-Agent","Authorization"]);Z.reduceDescriptors(Ct.prototype,({value:n},s)=>{let i=s[0].toUpperCase()+s.slice(1);return{get:()=>n,set(h){this[i]=h}}});Z.freezeMethods(Ct);function Cr(n,s){const i=this||ja,h=s||i,g=Ct.from(h.headers);let b=h.data;return Z.forEach(n,function(k){b=k.call(i,b,g.normalize(),s?s.status:void 0)}),g.normalize(),b}function wl(n){return!!(n&&n.__CANCEL__)}function la(n,s,i){Ee.call(this,n??"canceled",Ee.ERR_CANCELED,s,i),this.name="CanceledError"}Z.inherits(la,Ee,{__CANCEL__:!0});function Al(n,s,i){const h=i.config.validateStatus;!i.status||!h||h(i.status)?n(i):s(new Ee("Request failed with status code "+i.status,[Ee.ERR_BAD_REQUEST,Ee.ERR_BAD_RESPONSE][Math.floor(i.status/100)-4],i.config,i.request,i))}function Sd(n){const s=/^([-+\w]{1,25})(:?\/\/|:)/.exec(n);return s&&s[1]||""}function Cd(n,s){n=n||10;const i=new Array(n),h=new Array(n);let g=0,b=0,v;return s=s!==void 0?s:1e3,function(T){const O=Date.now(),F=h[b];v||(v=O),i[g]=T,h[g]=O;let z=b,G=0;for(;z!==g;)G+=i[z++],z=z%n;if(g=(g+1)%n,g===b&&(b=(b+1)%n),O-v<s)return;const ae=F&&O-F;return ae?Math.round(G*1e3/ae):void 0}}function kd(n,s){let i=0,h=1e3/s,g,b;const v=(O,F=Date.now())=>{i=F,g=null,b&&(clearTimeout(b),b=null),n(...O)};return[(...O)=>{const F=Date.now(),z=F-i;z>=h?v(O,F):(g=O,b||(b=setTimeout(()=>{b=null,v(g)},h-z)))},()=>g&&v(g)]}const Rn=(n,s,i=3)=>{let h=0;const g=Cd(50,250);return kd(b=>{const v=b.loaded,k=b.lengthComputable?b.total:void 0,T=v-h,O=g(T),F=v<=k;h=v;const z={loaded:v,total:k,progress:k?v/k:void 0,bytes:T,rate:O||void 0,estimated:O&&k&&F?(k-v)/O:void 0,event:b,lengthComputable:k!=null,[s?"download":"upload"]:!0};n(z)},i)},lo=(n,s)=>{const i=n!=null;return[h=>s[0]({lengthComputable:i,total:n,loaded:h}),s[1]]},co=n=>(...s)=>Z.asap(()=>n(...s)),Ed=ht.hasStandardBrowserEnv?((n,s)=>i=>(i=new URL(i,ht.origin),n.protocol===i.protocol&&n.host===i.host&&(s||n.port===i.port)))(new URL(ht.origin),ht.navigator&&/(msie|trident)/i.test(ht.navigator.userAgent)):()=>!0,Md=ht.hasStandardBrowserEnv?{write(n,s,i,h,g,b){const v=[n+"="+encodeURIComponent(s)];Z.isNumber(i)&&v.push("expires="+new Date(i).toGMTString()),Z.isString(h)&&v.push("path="+h),Z.isString(g)&&v.push("domain="+g),b===!0&&v.push("secure"),document.cookie=v.join("; ")},read(n){const s=document.cookie.match(new RegExp("(^|;\\s*)("+n+")=([^;]*)"));return s?decodeURIComponent(s[3]):null},remove(n){this.write(n,"",Date.now()-864e5)}}:{write(){},read(){return null},remove(){}};function _d(n){return/^([a-z][a-z\d+\-.]*:)?\/\//i.test(n)}function Pd(n,s){return s?n.replace(/\/?\/$/,"")+"/"+s.replace(/^\/+/,""):n}function Sl(n,s,i){let h=!_d(s);return n&&(h||i==!1)?Pd(n,s):s}const ho=n=>n instanceof Ct?{...n}:n;function Ni(n,s){s=s||{};const i={};function h(O,F,z,G){return Z.isPlainObject(O)&&Z.isPlainObject(F)?Z.merge.call({caseless:G},O,F):Z.isPlainObject(F)?Z.merge({},F):Z.isArray(F)?F.slice():F}function g(O,F,z,G){if(Z.isUndefined(F)){if(!Z.isUndefined(O))return h(void 0,O,z,G)}else return h(O,F,z,G)}function b(O,F){if(!Z.isUndefined(F))return h(void 0,F)}function v(O,F){if(Z.isUndefined(F)){if(!Z.isUndefined(O))return h(void 0,O)}else return h(void 0,F)}function k(O,F,z){if(z in s)return h(O,F);if(z in n)return h(void 0,O)}const T={url:b,method:b,data:b,baseURL:v,transformRequest:v,transformResponse:v,paramsSerializer:v,timeout:v,timeoutMessage:v,withCredentials:v,withXSRFToken:v,adapter:v,responseType:v,xsrfCookieName:v,xsrfHeaderName:v,onUploadProgress:v,onDownloadProgress:v,decompress:v,maxContentLength:v,maxBodyLength:v,beforeRedirect:v,transport:v,httpAgent:v,httpsAgent:v,cancelToken:v,socketPath:v,responseEncoding:v,validateStatus:k,headers:(O,F,z)=>g(ho(O),ho(F),z,!0)};return Z.forEach(Object.keys({...n,...s}),function(F){const z=T[F]||g,G=z(n[F],s[F],F);Z.isUndefined(G)&&z!==k||(i[F]=G)}),i}const Cl=n=>{const s=Ni({},n);let{data:i,withXSRFToken:h,xsrfHeaderName:g,xsrfCookieName:b,headers:v,auth:k}=s;s.headers=v=Ct.from(v),s.url=vl(Sl(s.baseURL,s.url,s.allowAbsoluteUrls),n.params,n.paramsSerializer),k&&v.set("Authorization","Basic "+btoa((k.username||"")+":"+(k.password?unescape(encodeURIComponent(k.password)):"")));let T;if(Z.isFormData(i)){if(ht.hasStandardBrowserEnv||ht.hasStandardBrowserWebWorkerEnv)v.setContentType(void 0);else if((T=v.getContentType())!==!1){const[O,...F]=T?T.split(";").map(z=>z.trim()).filter(Boolean):[];v.setContentType([O||"multipart/form-data",...F].join("; "))}}if(ht.hasStandardBrowserEnv&&(h&&Z.isFunction(h)&&(h=h(s)),h||h!==!1&&Ed(s.url))){const O=g&&b&&Md.read(b);O&&v.set(g,O)}return s},Ld=typeof XMLHttpRequest<"u",Td=Ld&&function(n){return new Promise(function(i,h){const g=Cl(n);let b=g.data;const v=Ct.from(g.headers).normalize();let{responseType:k,onUploadProgress:T,onDownloadProgress:O}=g,F,z,G,ae,Y;function q(){ae&&ae(),Y&&Y(),g.cancelToken&&g.cancelToken.unsubscribe(F),g.signal&&g.signal.removeEventListener("abort",F)}let $=new XMLHttpRequest;$.open(g.method.toUpperCase(),g.url,!0),$.timeout=g.timeout;function ie(){if(!$)return;const ne=Ct.from("getAllResponseHeaders"in $&&$.getAllResponseHeaders()),X={data:!k||k==="text"||k==="json"?$.responseText:$.response,status:$.status,statusText:$.statusText,headers:ne,config:n,request:$};Al(function(ce){i(ce),q()},function(ce){h(ce),q()},X),$=null}"onloadend"in $?$.onloadend=ie:$.onreadystatechange=function(){!$||$.readyState!==4||$.status===0&&!($.responseURL&&$.responseURL.indexOf("file:")===0)||setTimeout(ie)},$.onabort=function(){$&&(h(new Ee("Request aborted",Ee.ECONNABORTED,n,$)),$=null)},$.onerror=function(){h(new Ee("Network Error",Ee.ERR_NETWORK,n,$)),$=null},$.ontimeout=function(){let pe=g.timeout?"timeout of "+g.timeout+"ms exceeded":"timeout exceeded";const X=g.transitional||bl;g.timeoutErrorMessage&&(pe=g.timeoutErrorMessage),h(new Ee(pe,X.clarifyTimeoutError?Ee.ETIMEDOUT:Ee.ECONNABORTED,n,$)),$=null},b===void 0&&v.setContentType(null),"setRequestHeader"in $&&Z.forEach(v.toJSON(),function(pe,X){$.setRequestHeader(X,pe)}),Z.isUndefined(g.withCredentials)||($.withCredentials=!!g.withCredentials),k&&k!=="json"&&($.responseType=g.responseType),O&&([G,Y]=Rn(O,!0),$.addEventListener("progress",G)),T&&$.upload&&([z,ae]=Rn(T),$.upload.addEventListener("progress",z),$.upload.addEventListener("loadend",ae)),(g.cancelToken||g.signal)&&(F=ne=>{$&&(h(!ne||ne.type?new la(null,n,$):ne),$.abort(),$=null)},g.cancelToken&&g.cancelToken.subscribe(F),g.signal&&(g.signal.aborted?F():g.signal.addEventListener("abort",F)));const Q=Sd(g.url);if(Q&&ht.protocols.indexOf(Q)===-1){h(new Ee("Unsupported protocol "+Q+":",Ee.ERR_BAD_REQUEST,n));return}$.send(b||null)})},Dd=(n,s)=>{const{length:i}=n=n?n.filter(Boolean):[];if(s||i){let h=new AbortController,g;const b=function(O){if(!g){g=!0,k();const F=O instanceof Error?O:this.reason;h.abort(F instanceof Ee?F:new la(F instanceof Error?F.message:F))}};let v=s&&setTimeout(()=>{v=null,b(new Ee(`timeout ${s} of ms exceeded`,Ee.ETIMEDOUT))},s);const k=()=>{n&&(v&&clearTimeout(v),v=null,n.forEach(O=>{O.unsubscribe?O.unsubscribe(b):O.removeEventListener("abort",b)}),n=null)};n.forEach(O=>O.addEventListener("abort",b));const{signal:T}=h;return T.unsubscribe=()=>Z.asap(k),T}},Id=function*(n,s){let i=n.byteLength;if(i<s){yield n;return}let h=0,g;for(;h<i;)g=h+s,yield n.slice(h,g),h=g},Od=async function*(n,s){for await(const i of Fd(n))yield*Id(i,s)},Fd=async function*(n){if(n[Symbol.asyncIterator]){yield*n;return}const s=n.getReader();try{for(;;){const{done:i,value:h}=await s.read();if(i)break;yield h}}finally{await s.cancel()}},uo=(n,s,i,h)=>{const g=Od(n,s);let b=0,v,k=T=>{v||(v=!0,h&&h(T))};return new ReadableStream({async pull(T){try{const{done:O,value:F}=await g.next();if(O){k(),T.close();return}let z=F.byteLength;if(i){let G=b+=z;i(G)}T.enqueue(new Uint8Array(F))}catch(O){throw k(O),O}},cancel(T){return k(T),g.return()}},{highWaterMark:2})},tr=typeof fetch=="function"&&typeof Request=="function"&&typeof Response=="function",kl=tr&&typeof ReadableStream=="function",Rd=tr&&(typeof TextEncoder=="function"?(n=>s=>n.encode(s))(new TextEncoder):async n=>new Uint8Array(await new Response(n).arrayBuffer())),El=(n,...s)=>{try{return!!n(...s)}catch{return!1}},Nd=kl&&El(()=>{let n=!1;const s=new Request(ht.origin,{body:new ReadableStream,method:"POST",get duplex(){return n=!0,"half"}}).headers.has("Content-Type");return n&&!s}),fo=64*1024,ts=kl&&El(()=>Z.isReadableStream(new Response("").body)),Nn={stream:ts&&(n=>n.body)};tr&&(n=>{["text","arrayBuffer","blob","formData","stream"].forEach(s=>{!Nn[s]&&(Nn[s]=Z.isFunction(n[s])?i=>i[s]():(i,h)=>{throw new Ee(`Response type '${s}' is not supported`,Ee.ERR_NOT_SUPPORT,h)})})})(new Response);const zd=async n=>{if(n==null)return 0;if(Z.isBlob(n))return n.size;if(Z.isSpecCompliantForm(n))return(await new Request(ht.origin,{method:"POST",body:n}).arrayBuffer()).byteLength;if(Z.isArrayBufferView(n)||Z.isArrayBuffer(n))return n.byteLength;if(Z.isURLSearchParams(n)&&(n=n+""),Z.isString(n))return(await Rd(n)).byteLength},Yd=async(n,s)=>{const i=Z.toFiniteNumber(n.getContentLength());return i??zd(s)},Hd=tr&&(async n=>{let{url:s,method:i,data:h,signal:g,cancelToken:b,timeout:v,onDownloadProgress:k,onUploadProgress:T,responseType:O,headers:F,withCredentials:z="same-origin",fetchOptions:G}=Cl(n);O=O?(O+"").toLowerCase():"text";let ae=Dd([g,b&&b.toAbortSignal()],v),Y;const q=ae&&ae.unsubscribe&&(()=>{ae.unsubscribe()});let $;try{if(T&&Nd&&i!=="get"&&i!=="head"&&($=await Yd(F,h))!==0){let X=new Request(s,{method:"POST",body:h,duplex:"half"}),we;if(Z.isFormData(h)&&(we=X.headers.get("content-type"))&&F.setContentType(we),X.body){const[ce,V]=lo($,Rn(co(T)));h=uo(X.body,fo,ce,V)}}Z.isString(z)||(z=z?"include":"omit");const ie="credentials"in Request.prototype;Y=new Request(s,{...G,signal:ae,method:i.toUpperCase(),headers:F.normalize().toJSON(),body:h,duplex:"half",credentials:ie?z:void 0});let Q=await fetch(Y,G);const ne=ts&&(O==="stream"||O==="response");if(ts&&(k||ne&&q)){const X={};["status","statusText","headers"].forEach(se=>{X[se]=Q[se]});const we=Z.toFiniteNumber(Q.headers.get("content-length")),[ce,V]=k&&lo(we,Rn(co(k),!0))||[];Q=new Response(uo(Q.body,fo,ce,()=>{V&&V(),q&&q()}),X)}O=O||"text";let pe=await Nn[Z.findKey(Nn,O)||"text"](Q,n);return!ne&&q&&q(),await new Promise((X,we)=>{Al(X,we,{data:pe,headers:Ct.from(Q.headers),status:Q.status,statusText:Q.statusText,config:n,request:Y})})}catch(ie){throw q&&q(),ie&&ie.name==="TypeError"&&/Load failed|fetch/i.test(ie.message)?Object.assign(new Ee("Network Error",Ee.ERR_NETWORK,n,Y),{cause:ie.cause||ie}):Ee.from(ie,ie&&ie.code,n,Y)}}),is={http:td,xhr:Td,fetch:Hd};Z.forEach(is,(n,s)=>{if(n){try{Object.defineProperty(n,"name",{value:s})}catch{}Object.defineProperty(n,"adapterName",{value:s})}});const go=n=>`- ${n}`,Xd=n=>Z.isFunction(n)||n===null||n===!1,Ml={getAdapter:n=>{n=Z.isArray(n)?n:[n];const{length:s}=n;let i,h;const g={};for(let b=0;b<s;b++){i=n[b];let v;if(h=i,!Xd(i)&&(h=is[(v=String(i)).toLowerCase()],h===void 0))throw new Ee(`Unknown adapter '${v}'`);if(h)break;g[v||"#"+b]=h}if(!h){const b=Object.entries(g).map(([k,T])=>`adapter ${k} `+(T===!1?"is not supported by the environment":"is not available in the build"));let v=s?b.length>1?`since :
`+b.map(go).join(`
`):" "+go(b[0]):"as no adapter specified";throw new Ee("There is no suitable adapter to dispatch the request "+v,"ERR_NOT_SUPPORT")}return h},adapters:is};function kr(n){if(n.cancelToken&&n.cancelToken.throwIfRequested(),n.signal&&n.signal.aborted)throw new la(null,n)}function po(n){return kr(n),n.headers=Ct.from(n.headers),n.data=Cr.call(n,n.transformRequest),["post","put","patch"].indexOf(n.method)!==-1&&n.headers.setContentType("application/x-www-form-urlencoded",!1),Ml.getAdapter(n.adapter||ja.adapter)(n).then(function(h){return kr(n),h.data=Cr.call(n,n.transformResponse,h),h.headers=Ct.from(h.headers),h},function(h){return wl(h)||(kr(n),h&&h.response&&(h.response.data=Cr.call(n,n.transformResponse,h.response),h.response.headers=Ct.from(h.response.headers))),Promise.reject(h)})}const _l="1.11.0",ir={};["object","boolean","number","function","string","symbol"].forEach((n,s)=>{ir[n]=function(h){return typeof h===n||"a"+(s<1?"n ":" ")+n}});const mo={};ir.transitional=function(s,i,h){function g(b,v){return"[Axios v"+_l+"] Transitional option '"+b+"'"+v+(h?". "+h:"")}return(b,v,k)=>{if(s===!1)throw new Ee(g(v," has been removed"+(i?" in "+i:"")),Ee.ERR_DEPRECATED);return i&&!mo[v]&&(mo[v]=!0,console.warn(g(v," has been deprecated since v"+i+" and will be removed in the near future"))),s?s(b,v,k):!0}};ir.spelling=function(s){return(i,h)=>(console.warn(`${h} is likely a misspelling of ${s}`),!0)};function Bd(n,s,i){if(typeof n!="object")throw new Ee("options must be an object",Ee.ERR_BAD_OPTION_VALUE);const h=Object.keys(n);let g=h.length;for(;g-- >0;){const b=h[g],v=s[b];if(v){const k=n[b],T=k===void 0||v(k,b,n);if(T!==!0)throw new Ee("option "+b+" must be "+T,Ee.ERR_BAD_OPTION_VALUE);continue}if(i!==!0)throw new Ee("Unknown option "+b,Ee.ERR_BAD_OPTION)}}const Mn={assertOptions:Bd,validators:ir},qt=Mn.validators;let Di=class{constructor(s){this.defaults=s||{},this.interceptors={request:new so,response:new so}}async request(s,i){try{return await this._request(s,i)}catch(h){if(h instanceof Error){let g={};Error.captureStackTrace?Error.captureStackTrace(g):g=new Error;const b=g.stack?g.stack.replace(/^.+\n/,""):"";try{h.stack?b&&!String(h.stack).endsWith(b.replace(/^.+\n.+\n/,""))&&(h.stack+=`
`+b):h.stack=b}catch{}}throw h}}_request(s,i){typeof s=="string"?(i=i||{},i.url=s):i=s||{},i=Ni(this.defaults,i);const{transitional:h,paramsSerializer:g,headers:b}=i;h!==void 0&&Mn.assertOptions(h,{silentJSONParsing:qt.transitional(qt.boolean),forcedJSONParsing:qt.transitional(qt.boolean),clarifyTimeoutError:qt.transitional(qt.boolean)},!1),g!=null&&(Z.isFunction(g)?i.paramsSerializer={serialize:g}:Mn.assertOptions(g,{encode:qt.function,serialize:qt.function},!0)),i.allowAbsoluteUrls!==void 0||(this.defaults.allowAbsoluteUrls!==void 0?i.allowAbsoluteUrls=this.defaults.allowAbsoluteUrls:i.allowAbsoluteUrls=!0),Mn.assertOptions(i,{baseUrl:qt.spelling("baseURL"),withXsrfToken:qt.spelling("withXSRFToken")},!0),i.method=(i.method||this.defaults.method||"get").toLowerCase();let v=b&&Z.merge(b.common,b[i.method]);b&&Z.forEach(["delete","get","head","post","put","patch","common"],Y=>{delete b[Y]}),i.headers=Ct.concat(v,b);const k=[];let T=!0;this.interceptors.request.forEach(function(q){typeof q.runWhen=="function"&&q.runWhen(i)===!1||(T=T&&q.synchronous,k.unshift(q.fulfilled,q.rejected))});const O=[];this.interceptors.response.forEach(function(q){O.push(q.fulfilled,q.rejected)});let F,z=0,G;if(!T){const Y=[po.bind(this),void 0];for(Y.unshift(...k),Y.push(...O),G=Y.length,F=Promise.resolve(i);z<G;)F=F.then(Y[z++],Y[z++]);return F}G=k.length;let ae=i;for(z=0;z<G;){const Y=k[z++],q=k[z++];try{ae=Y(ae)}catch($){q.call(this,$);break}}try{F=po.call(this,ae)}catch(Y){return Promise.reject(Y)}for(z=0,G=O.length;z<G;)F=F.then(O[z++],O[z++]);return F}getUri(s){s=Ni(this.defaults,s);const i=Sl(s.baseURL,s.url,s.allowAbsoluteUrls);return vl(i,s.params,s.paramsSerializer)}};Z.forEach(["delete","get","head","options"],function(s){Di.prototype[s]=function(i,h){return this.request(Ni(h||{},{method:s,url:i,data:(h||{}).data}))}});Z.forEach(["post","put","patch"],function(s){function i(h){return function(b,v,k){return this.request(Ni(k||{},{method:s,headers:h?{"Content-Type":"multipart/form-data"}:{},url:b,data:v}))}}Di.prototype[s]=i(),Di.prototype[s+"Form"]=i(!0)});let Wd=class Pl{constructor(s){if(typeof s!="function")throw new TypeError("executor must be a function.");let i;this.promise=new Promise(function(b){i=b});const h=this;this.promise.then(g=>{if(!h._listeners)return;let b=h._listeners.length;for(;b-- >0;)h._listeners[b](g);h._listeners=null}),this.promise.then=g=>{let b;const v=new Promise(k=>{h.subscribe(k),b=k}).then(g);return v.cancel=function(){h.unsubscribe(b)},v},s(function(b,v,k){h.reason||(h.reason=new la(b,v,k),i(h.reason))})}throwIfRequested(){if(this.reason)throw this.reason}subscribe(s){if(this.reason){s(this.reason);return}this._listeners?this._listeners.push(s):this._listeners=[s]}unsubscribe(s){if(!this._listeners)return;const i=this._listeners.indexOf(s);i!==-1&&this._listeners.splice(i,1)}toAbortSignal(){const s=new AbortController,i=h=>{s.abort(h)};return this.subscribe(i),s.signal.unsubscribe=()=>this.unsubscribe(i),s.signal}static source(){let s;return{token:new Pl(function(g){s=g}),cancel:s}}};function Gd(n){return function(i){return n.apply(null,i)}}function Vd(n){return Z.isObject(n)&&n.isAxiosError===!0}const as={Continue:100,SwitchingProtocols:101,Processing:102,EarlyHints:103,Ok:200,Created:201,Accepted:202,NonAuthoritativeInformation:203,NoContent:204,ResetContent:205,PartialContent:206,MultiStatus:207,AlreadyReported:208,ImUsed:226,MultipleChoices:300,MovedPermanently:301,Found:302,SeeOther:303,NotModified:304,UseProxy:305,Unused:306,TemporaryRedirect:307,PermanentRedirect:308,BadRequest:400,Unauthorized:401,PaymentRequired:402,Forbidden:403,NotFound:404,MethodNotAllowed:405,NotAcceptable:406,ProxyAuthenticationRequired:407,RequestTimeout:408,Conflict:409,Gone:410,LengthRequired:411,PreconditionFailed:412,PayloadTooLarge:413,UriTooLong:414,UnsupportedMediaType:415,RangeNotSatisfiable:416,ExpectationFailed:417,ImATeapot:418,MisdirectedRequest:421,UnprocessableEntity:422,Locked:423,FailedDependency:424,TooEarly:425,UpgradeRequired:426,PreconditionRequired:428,TooManyRequests:429,RequestHeaderFieldsTooLarge:431,UnavailableForLegalReasons:451,InternalServerError:500,NotImplemented:501,BadGateway:502,ServiceUnavailable:503,GatewayTimeout:504,HttpVersionNotSupported:505,VariantAlsoNegotiates:506,InsufficientStorage:507,LoopDetected:508,NotExtended:510,NetworkAuthenticationRequired:511};Object.entries(as).forEach(([n,s])=>{as[s]=n});function Ll(n){const s=new Di(n),i=sl(Di.prototype.request,s);return Z.extend(i,Di.prototype,s,{allOwnKeys:!0}),Z.extend(i,s,null,{allOwnKeys:!0}),i.create=function(g){return Ll(Ni(n,g))},i}const Ze=Ll(ja);Ze.Axios=Di;Ze.CanceledError=la;Ze.CancelToken=Wd;Ze.isCancel=wl;Ze.VERSION=_l;Ze.toFormData=er;Ze.AxiosError=Ee;Ze.Cancel=Ze.CanceledError;Ze.all=function(s){return Promise.all(s)};Ze.spread=Gd;Ze.isAxiosError=Vd;Ze.mergeConfig=Ni;Ze.AxiosHeaders=Ct;Ze.formToJSON=n=>yl(Z.isHTMLForm(n)?new FormData(n):n);Ze.getAdapter=Ml.getAdapter;Ze.HttpStatusCode=as;Ze.default=Ze;const{Axios:Cm,AxiosError:km,CanceledError:Em,isCancel:Mm,CancelToken:_m,VERSION:Pm,all:Lm,Cancel:Tm,isAxiosError:Dm,spread:Im,toFormData:Om,AxiosHeaders:Fm,HttpStatusCode:Rm,formToJSON:Nm,getAdapter:zm,mergeConfig:Ym}=Ze;window.axios=Ze;window.axios.defaults.headers.common["X-Requested-With"]="XMLHttpRequest";var ns=!1,rs=!1,Ii=[],ss=-1;function jd(n){Ud(n)}function Ud(n){Ii.includes(n)||Ii.push(n),qd()}function $d(n){let s=Ii.indexOf(n);s!==-1&&s>ss&&Ii.splice(s,1)}function qd(){!rs&&!ns&&(ns=!0,queueMicrotask(Zd))}function Zd(){ns=!1,rs=!0;for(let n=0;n<Ii.length;n++)Ii[n](),ss=n;Ii.length=0,ss=-1,rs=!1}var ca,Yi,ha,Tl,os=!0;function Kd(n){os=!1,n(),os=!0}function Jd(n){ca=n.reactive,ha=n.release,Yi=s=>n.effect(s,{scheduler:i=>{os?jd(i):i()}}),Tl=n.raw}function xo(n){Yi=n}function Qd(n){let s=()=>{};return[h=>{let g=Yi(h);return n._x_effects||(n._x_effects=new Set,n._x_runEffects=()=>{n._x_effects.forEach(b=>b())}),n._x_effects.add(g),s=()=>{g!==void 0&&(n._x_effects.delete(g),ha(g))},g},()=>{s()}]}function Dl(n,s){let i=!0,h,g=Yi(()=>{let b=n();JSON.stringify(b),i?h=b:queueMicrotask(()=>{s(b,h),h=b}),i=!1});return()=>ha(g)}var Il=[],Ol=[],Fl=[];function eu(n){Fl.push(n)}function Ts(n,s){typeof s=="function"?(n._x_cleanups||(n._x_cleanups=[]),n._x_cleanups.push(s)):(s=n,Ol.push(s))}function Rl(n){Il.push(n)}function Nl(n,s,i){n._x_attributeCleanups||(n._x_attributeCleanups={}),n._x_attributeCleanups[s]||(n._x_attributeCleanups[s]=[]),n._x_attributeCleanups[s].push(i)}function zl(n,s){n._x_attributeCleanups&&Object.entries(n._x_attributeCleanups).forEach(([i,h])=>{(s===void 0||s.includes(i))&&(h.forEach(g=>g()),delete n._x_attributeCleanups[i])})}function tu(n){var s,i;for((s=n._x_effects)==null||s.forEach($d);(i=n._x_cleanups)!=null&&i.length;)n._x_cleanups.pop()()}var Ds=new MutationObserver(Rs),Is=!1;function Os(){Ds.observe(document,{subtree:!0,childList:!0,attributes:!0,attributeOldValue:!0}),Is=!0}function Yl(){iu(),Ds.disconnect(),Is=!1}var Ca=[];function iu(){let n=Ds.takeRecords();Ca.push(()=>n.length>0&&Rs(n));let s=Ca.length;queueMicrotask(()=>{if(Ca.length===s)for(;Ca.length>0;)Ca.shift()()})}function Ue(n){if(!Is)return n();Yl();let s=n();return Os(),s}var Fs=!1,zn=[];function au(){Fs=!0}function nu(){Fs=!1,Rs(zn),zn=[]}function Rs(n){if(Fs){zn=zn.concat(n);return}let s=[],i=new Set,h=new Map,g=new Map;for(let b=0;b<n.length;b++)if(!n[b].target._x_ignoreMutationObserver&&(n[b].type==="childList"&&(n[b].removedNodes.forEach(v=>{v.nodeType===1&&v._x_marker&&i.add(v)}),n[b].addedNodes.forEach(v=>{if(v.nodeType===1){if(i.has(v)){i.delete(v);return}v._x_marker||s.push(v)}})),n[b].type==="attributes")){let v=n[b].target,k=n[b].attributeName,T=n[b].oldValue,O=()=>{h.has(v)||h.set(v,[]),h.get(v).push({name:k,value:v.getAttribute(k)})},F=()=>{g.has(v)||g.set(v,[]),g.get(v).push(k)};v.hasAttribute(k)&&T===null?O():v.hasAttribute(k)?(F(),O()):F()}g.forEach((b,v)=>{zl(v,b)}),h.forEach((b,v)=>{Il.forEach(k=>k(v,b))});for(let b of i)s.some(v=>v.contains(b))||Ol.forEach(v=>v(b));for(let b of s)b.isConnected&&Fl.forEach(v=>v(b));s=null,i=null,h=null,g=null}function Hl(n){return $a(na(n))}function Ua(n,s,i){return n._x_dataStack=[s,...na(i||n)],()=>{n._x_dataStack=n._x_dataStack.filter(h=>h!==s)}}function na(n){return n._x_dataStack?n._x_dataStack:typeof ShadowRoot=="function"&&n instanceof ShadowRoot?na(n.host):n.parentNode?na(n.parentNode):[]}function $a(n){return new Proxy({objects:n},ru)}var ru={ownKeys({objects:n}){return Array.from(new Set(n.flatMap(s=>Object.keys(s))))},has({objects:n},s){return s==Symbol.unscopables?!1:n.some(i=>Object.prototype.hasOwnProperty.call(i,s)||Reflect.has(i,s))},get({objects:n},s,i){return s=="toJSON"?su:Reflect.get(n.find(h=>Reflect.has(h,s))||{},s,i)},set({objects:n},s,i,h){const g=n.find(v=>Object.prototype.hasOwnProperty.call(v,s))||n[n.length-1],b=Object.getOwnPropertyDescriptor(g,s);return b!=null&&b.set&&(b!=null&&b.get)?b.set.call(h,i)||!0:Reflect.set(g,s,i)}};function su(){return Reflect.ownKeys(this).reduce((s,i)=>(s[i]=Reflect.get(this,i),s),{})}function Xl(n){let s=h=>typeof h=="object"&&!Array.isArray(h)&&h!==null,i=(h,g="")=>{Object.entries(Object.getOwnPropertyDescriptors(h)).forEach(([b,{value:v,enumerable:k}])=>{if(k===!1||v===void 0||typeof v=="object"&&v!==null&&v.__v_skip)return;let T=g===""?b:`${g}.${b}`;typeof v=="object"&&v!==null&&v._x_interceptor?h[b]=v.initialize(n,T,b):s(v)&&v!==h&&!(v instanceof Element)&&i(v,T)})};return i(n)}function Bl(n,s=()=>{}){let i={initialValue:void 0,_x_interceptor:!0,initialize(h,g,b){return n(this.initialValue,()=>ou(h,g),v=>ls(h,g,v),g,b)}};return s(i),h=>{if(typeof h=="object"&&h!==null&&h._x_interceptor){let g=i.initialize.bind(i);i.initialize=(b,v,k)=>{let T=h.initialize(b,v,k);return i.initialValue=T,g(b,v,k)}}else i.initialValue=h;return i}}function ou(n,s){return s.split(".").reduce((i,h)=>i[h],n)}function ls(n,s,i){if(typeof s=="string"&&(s=s.split(".")),s.length===1)n[s[0]]=i;else{if(s.length===0)throw error;return n[s[0]]||(n[s[0]]={}),ls(n[s[0]],s.slice(1),i)}}var Wl={};function Vt(n,s){Wl[n]=s}function cs(n,s){let i=lu(s);return Object.entries(Wl).forEach(([h,g])=>{Object.defineProperty(n,`$${h}`,{get(){return g(s,i)},enumerable:!1})}),n}function lu(n){let[s,i]=ql(n),h={interceptor:Bl,...s};return Ts(n,i),h}function cu(n,s,i,...h){try{return i(...h)}catch(g){Ha(g,n,s)}}function Ha(n,s,i=void 0){n=Object.assign(n??{message:"No error message given."},{el:s,expression:i}),console.warn(`Alpine Expression Error: ${n.message}

${i?'Expression: "'+i+`"

`:""}`,s),setTimeout(()=>{throw n},0)}var _n=!0;function Gl(n){let s=_n;_n=!1;let i=n();return _n=s,i}function Oi(n,s,i={}){let h;return mt(n,s)(g=>h=g,i),h}function mt(...n){return Vl(...n)}var Vl=jl;function hu(n){Vl=n}function jl(n,s){let i={};cs(i,n);let h=[i,...na(n)],g=typeof s=="function"?du(h,s):fu(h,s,n);return cu.bind(null,n,s,g)}function du(n,s){return(i=()=>{},{scope:h={},params:g=[]}={})=>{let b=s.apply($a([h,...n]),g);Yn(i,b)}}var Er={};function uu(n,s){if(Er[n])return Er[n];let i=Object.getPrototypeOf(async function(){}).constructor,h=/^[\n\s]*if.*\(.*\)/.test(n.trim())||/^(let|const)\s/.test(n.trim())?`(async()=>{ ${n} })()`:n,b=(()=>{try{let v=new i(["__self","scope"],`with (scope) { __self.result = ${h} }; __self.finished = true; return __self.result;`);return Object.defineProperty(v,"name",{value:`[Alpine] ${n}`}),v}catch(v){return Ha(v,s,n),Promise.resolve()}})();return Er[n]=b,b}function fu(n,s,i){let h=uu(s,i);return(g=()=>{},{scope:b={},params:v=[]}={})=>{h.result=void 0,h.finished=!1;let k=$a([b,...n]);if(typeof h=="function"){let T=h(h,k).catch(O=>Ha(O,i,s));h.finished?(Yn(g,h.result,k,v,i),h.result=void 0):T.then(O=>{Yn(g,O,k,v,i)}).catch(O=>Ha(O,i,s)).finally(()=>h.result=void 0)}}}function Yn(n,s,i,h,g){if(_n&&typeof s=="function"){let b=s.apply(i,h);b instanceof Promise?b.then(v=>Yn(n,v,i,h)).catch(v=>Ha(v,g,s)):n(b)}else typeof s=="object"&&s instanceof Promise?s.then(b=>n(b)):n(s)}var Ns="x-";function da(n=""){return Ns+n}function gu(n){Ns=n}var Hn={};function tt(n,s){return Hn[n]=s,{before(i){if(!Hn[i]){console.warn(String.raw`Cannot find directive \`${i}\`. \`${n}\` will use the default order of execution`);return}const h=Ti.indexOf(i);Ti.splice(h>=0?h:Ti.indexOf("DEFAULT"),0,n)}}}function pu(n){return Object.keys(Hn).includes(n)}function zs(n,s,i){if(s=Array.from(s),n._x_virtualDirectives){let b=Object.entries(n._x_virtualDirectives).map(([k,T])=>({name:k,value:T})),v=Ul(b);b=b.map(k=>v.find(T=>T.name===k.name)?{name:`x-bind:${k.name}`,value:`"${k.value}"`}:k),s=s.concat(b)}let h={};return s.map(Jl((b,v)=>h[b]=v)).filter(ec).map(vu(h,i)).sort(bu).map(b=>xu(n,b))}function Ul(n){return Array.from(n).map(Jl()).filter(s=>!ec(s))}var hs=!1,Ma=new Map,$l=Symbol();function mu(n){hs=!0;let s=Symbol();$l=s,Ma.set(s,[]);let i=()=>{for(;Ma.get(s).length;)Ma.get(s).shift()();Ma.delete(s)},h=()=>{hs=!1,i()};n(i),h()}function ql(n){let s=[],i=k=>s.push(k),[h,g]=Qd(n);return s.push(g),[{Alpine:qa,effect:h,cleanup:i,evaluateLater:mt.bind(mt,n),evaluate:Oi.bind(Oi,n)},()=>s.forEach(k=>k())]}function xu(n,s){let i=()=>{},h=Hn[s.type]||i,[g,b]=ql(n);Nl(n,s.original,b);let v=()=>{n._x_ignore||n._x_ignoreSelf||(h.inline&&h.inline(n,s,g),h=h.bind(h,n,s,g),hs?Ma.get($l).push(h):h())};return v.runCleanups=b,v}var Zl=(n,s)=>({name:i,value:h})=>(i.startsWith(n)&&(i=i.replace(n,s)),{name:i,value:h}),Kl=n=>n;function Jl(n=()=>{}){return({name:s,value:i})=>{let{name:h,value:g}=Ql.reduce((b,v)=>v(b),{name:s,value:i});return h!==s&&n(h,s),{name:h,value:g}}}var Ql=[];function Ys(n){Ql.push(n)}function ec({name:n}){return tc().test(n)}var tc=()=>new RegExp(`^${Ns}([^:^.]+)\\b`);function vu(n,s){return({name:i,value:h})=>{let g=i.match(tc()),b=i.match(/:([a-zA-Z0-9\-_:]+)/),v=i.match(/\.[^.\]]+(?=[^\]]*$)/g)||[],k=s||n[i]||i;return{type:g?g[1]:null,value:b?b[1]:null,modifiers:v.map(T=>T.replace(".","")),expression:h,original:k}}}var ds="DEFAULT",Ti=["ignore","ref","data","id","anchor","bind","init","for","model","modelable","transition","show","if",ds,"teleport"];function bu(n,s){let i=Ti.indexOf(n.type)===-1?ds:n.type,h=Ti.indexOf(s.type)===-1?ds:s.type;return Ti.indexOf(i)-Ti.indexOf(h)}function Ta(n,s,i={}){n.dispatchEvent(new CustomEvent(s,{detail:i,bubbles:!0,composed:!0,cancelable:!0}))}function zi(n,s){if(typeof ShadowRoot=="function"&&n instanceof ShadowRoot){Array.from(n.children).forEach(g=>zi(g,s));return}let i=!1;if(s(n,()=>i=!0),i)return;let h=n.firstElementChild;for(;h;)zi(h,s),h=h.nextElementSibling}function Rt(n,...s){console.warn(`Alpine Warning: ${n}`,...s)}var vo=!1;function yu(){vo&&Rt("Alpine has already been initialized on this page. Calling Alpine.start() more than once can cause problems."),vo=!0,document.body||Rt("Unable to initialize. Trying to load Alpine before `<body>` is available. Did you forget to add `defer` in Alpine's `<script>` tag?"),Ta(document,"alpine:init"),Ta(document,"alpine:initializing"),Os(),eu(s=>si(s,zi)),Ts(s=>fa(s)),Rl((s,i)=>{zs(s,i).forEach(h=>h())});let n=s=>!ar(s.parentElement,!0);Array.from(document.querySelectorAll(nc().join(","))).filter(n).forEach(s=>{si(s)}),Ta(document,"alpine:initialized"),setTimeout(()=>{Cu()})}var Hs=[],ic=[];function ac(){return Hs.map(n=>n())}function nc(){return Hs.concat(ic).map(n=>n())}function rc(n){Hs.push(n)}function sc(n){ic.push(n)}function ar(n,s=!1){return ua(n,i=>{if((s?nc():ac()).some(g=>i.matches(g)))return!0})}function ua(n,s){if(n){if(s(n))return n;if(n._x_teleportBack&&(n=n._x_teleportBack),!!n.parentElement)return ua(n.parentElement,s)}}function wu(n){return ac().some(s=>n.matches(s))}var oc=[];function Au(n){oc.push(n)}var Su=1;function si(n,s=zi,i=()=>{}){ua(n,h=>h._x_ignore)||mu(()=>{s(n,(h,g)=>{h._x_marker||(i(h,g),oc.forEach(b=>b(h,g)),zs(h,h.attributes).forEach(b=>b()),h._x_ignore||(h._x_marker=Su++),h._x_ignore&&g())})})}function fa(n,s=zi){s(n,i=>{tu(i),zl(i),delete i._x_marker})}function Cu(){[["ui","dialog",["[x-dialog], [x-popover]"]],["anchor","anchor",["[x-anchor]"]],["sort","sort",["[x-sort]"]]].forEach(([s,i,h])=>{pu(i)||h.some(g=>{if(document.querySelector(g))return Rt(`found "${g}", but missing ${s} plugin`),!0})})}var us=[],Xs=!1;function Bs(n=()=>{}){return queueMicrotask(()=>{Xs||setTimeout(()=>{fs()})}),new Promise(s=>{us.push(()=>{n(),s()})})}function fs(){for(Xs=!1;us.length;)us.shift()()}function ku(){Xs=!0}function Ws(n,s){return Array.isArray(s)?bo(n,s.join(" ")):typeof s=="object"&&s!==null?Eu(n,s):typeof s=="function"?Ws(n,s()):bo(n,s)}function bo(n,s){let i=g=>g.split(" ").filter(b=>!n.classList.contains(b)).filter(Boolean),h=g=>(n.classList.add(...g),()=>{n.classList.remove(...g)});return s=s===!0?s="":s||"",h(i(s))}function Eu(n,s){let i=k=>k.split(" ").filter(Boolean),h=Object.entries(s).flatMap(([k,T])=>T?i(k):!1).filter(Boolean),g=Object.entries(s).flatMap(([k,T])=>T?!1:i(k)).filter(Boolean),b=[],v=[];return g.forEach(k=>{n.classList.contains(k)&&(n.classList.remove(k),v.push(k))}),h.forEach(k=>{n.classList.contains(k)||(n.classList.add(k),b.push(k))}),()=>{v.forEach(k=>n.classList.add(k)),b.forEach(k=>n.classList.remove(k))}}function nr(n,s){return typeof s=="object"&&s!==null?Mu(n,s):_u(n,s)}function Mu(n,s){let i={};return Object.entries(s).forEach(([h,g])=>{i[h]=n.style[h],h.startsWith("--")||(h=Pu(h)),n.style.setProperty(h,g)}),setTimeout(()=>{n.style.length===0&&n.removeAttribute("style")}),()=>{nr(n,i)}}function _u(n,s){let i=n.getAttribute("style",s);return n.setAttribute("style",s),()=>{n.setAttribute("style",i||"")}}function Pu(n){return n.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase()}function gs(n,s=()=>{}){let i=!1;return function(){i?s.apply(this,arguments):(i=!0,n.apply(this,arguments))}}tt("transition",(n,{value:s,modifiers:i,expression:h},{evaluate:g})=>{typeof h=="function"&&(h=g(h)),h!==!1&&(!h||typeof h=="boolean"?Tu(n,i,s):Lu(n,h,s))});function Lu(n,s,i){lc(n,Ws,""),{enter:g=>{n._x_transition.enter.during=g},"enter-start":g=>{n._x_transition.enter.start=g},"enter-end":g=>{n._x_transition.enter.end=g},leave:g=>{n._x_transition.leave.during=g},"leave-start":g=>{n._x_transition.leave.start=g},"leave-end":g=>{n._x_transition.leave.end=g}}[i](s)}function Tu(n,s,i){lc(n,nr);let h=!s.includes("in")&&!s.includes("out")&&!i,g=h||s.includes("in")||["enter"].includes(i),b=h||s.includes("out")||["leave"].includes(i);s.includes("in")&&!h&&(s=s.filter((ie,Q)=>Q<s.indexOf("out"))),s.includes("out")&&!h&&(s=s.filter((ie,Q)=>Q>s.indexOf("out")));let v=!s.includes("opacity")&&!s.includes("scale"),k=v||s.includes("opacity"),T=v||s.includes("scale"),O=k?0:1,F=T?ka(s,"scale",95)/100:1,z=ka(s,"delay",0)/1e3,G=ka(s,"origin","center"),ae="opacity, transform",Y=ka(s,"duration",150)/1e3,q=ka(s,"duration",75)/1e3,$="cubic-bezier(0.4, 0.0, 0.2, 1)";g&&(n._x_transition.enter.during={transformOrigin:G,transitionDelay:`${z}s`,transitionProperty:ae,transitionDuration:`${Y}s`,transitionTimingFunction:$},n._x_transition.enter.start={opacity:O,transform:`scale(${F})`},n._x_transition.enter.end={opacity:1,transform:"scale(1)"}),b&&(n._x_transition.leave.during={transformOrigin:G,transitionDelay:`${z}s`,transitionProperty:ae,transitionDuration:`${q}s`,transitionTimingFunction:$},n._x_transition.leave.start={opacity:1,transform:"scale(1)"},n._x_transition.leave.end={opacity:O,transform:`scale(${F})`})}function lc(n,s,i={}){n._x_transition||(n._x_transition={enter:{during:i,start:i,end:i},leave:{during:i,start:i,end:i},in(h=()=>{},g=()=>{}){ps(n,s,{during:this.enter.during,start:this.enter.start,end:this.enter.end},h,g)},out(h=()=>{},g=()=>{}){ps(n,s,{during:this.leave.during,start:this.leave.start,end:this.leave.end},h,g)}})}window.Element.prototype._x_toggleAndCascadeWithTransitions=function(n,s,i,h){const g=document.visibilityState==="visible"?requestAnimationFrame:setTimeout;let b=()=>g(i);if(s){n._x_transition&&(n._x_transition.enter||n._x_transition.leave)?n._x_transition.enter&&(Object.entries(n._x_transition.enter.during).length||Object.entries(n._x_transition.enter.start).length||Object.entries(n._x_transition.enter.end).length)?n._x_transition.in(i):b():n._x_transition?n._x_transition.in(i):b();return}n._x_hidePromise=n._x_transition?new Promise((v,k)=>{n._x_transition.out(()=>{},()=>v(h)),n._x_transitioning&&n._x_transitioning.beforeCancel(()=>k({isFromCancelledTransition:!0}))}):Promise.resolve(h),queueMicrotask(()=>{let v=cc(n);v?(v._x_hideChildren||(v._x_hideChildren=[]),v._x_hideChildren.push(n)):g(()=>{let k=T=>{let O=Promise.all([T._x_hidePromise,...(T._x_hideChildren||[]).map(k)]).then(([F])=>F==null?void 0:F());return delete T._x_hidePromise,delete T._x_hideChildren,O};k(n).catch(T=>{if(!T.isFromCancelledTransition)throw T})})})};function cc(n){let s=n.parentNode;if(s)return s._x_hidePromise?s:cc(s)}function ps(n,s,{during:i,start:h,end:g}={},b=()=>{},v=()=>{}){if(n._x_transitioning&&n._x_transitioning.cancel(),Object.keys(i).length===0&&Object.keys(h).length===0&&Object.keys(g).length===0){b(),v();return}let k,T,O;Du(n,{start(){k=s(n,h)},during(){T=s(n,i)},before:b,end(){k(),O=s(n,g)},after:v,cleanup(){T(),O()}})}function Du(n,s){let i,h,g,b=gs(()=>{Ue(()=>{i=!0,h||s.before(),g||(s.end(),fs()),s.after(),n.isConnected&&s.cleanup(),delete n._x_transitioning})});n._x_transitioning={beforeCancels:[],beforeCancel(v){this.beforeCancels.push(v)},cancel:gs(function(){for(;this.beforeCancels.length;)this.beforeCancels.shift()();b()}),finish:b},Ue(()=>{s.start(),s.during()}),ku(),requestAnimationFrame(()=>{if(i)return;let v=Number(getComputedStyle(n).transitionDuration.replace(/,.*/,"").replace("s",""))*1e3,k=Number(getComputedStyle(n).transitionDelay.replace(/,.*/,"").replace("s",""))*1e3;v===0&&(v=Number(getComputedStyle(n).animationDuration.replace("s",""))*1e3),Ue(()=>{s.before()}),h=!0,requestAnimationFrame(()=>{i||(Ue(()=>{s.end()}),fs(),setTimeout(n._x_transitioning.finish,v+k),g=!0)})})}function ka(n,s,i){if(n.indexOf(s)===-1)return i;const h=n[n.indexOf(s)+1];if(!h||s==="scale"&&isNaN(h))return i;if(s==="duration"||s==="delay"){let g=h.match(/([0-9]+)ms/);if(g)return g[1]}return s==="origin"&&["top","right","left","center","bottom"].includes(n[n.indexOf(s)+2])?[h,n[n.indexOf(s)+2]].join(" "):h}var pi=!1;function xi(n,s=()=>{}){return(...i)=>pi?s(...i):n(...i)}function Iu(n){return(...s)=>pi&&n(...s)}var hc=[];function rr(n){hc.push(n)}function Ou(n,s){hc.forEach(i=>i(n,s)),pi=!0,dc(()=>{si(s,(i,h)=>{h(i,()=>{})})}),pi=!1}var ms=!1;function Fu(n,s){s._x_dataStack||(s._x_dataStack=n._x_dataStack),pi=!0,ms=!0,dc(()=>{Ru(s)}),pi=!1,ms=!1}function Ru(n){let s=!1;si(n,(h,g)=>{zi(h,(b,v)=>{if(s&&wu(b))return v();s=!0,g(b,v)})})}function dc(n){let s=Yi;xo((i,h)=>{let g=s(i);return ha(g),()=>{}}),n(),xo(s)}function uc(n,s,i,h=[]){switch(n._x_bindings||(n._x_bindings=ca({})),n._x_bindings[s]=i,s=h.includes("camel")?Gu(s):s,s){case"value":Nu(n,i);break;case"style":Yu(n,i);break;case"class":zu(n,i);break;case"selected":case"checked":Hu(n,s,i);break;default:fc(n,s,i);break}}function Nu(n,s){if(mc(n))n.attributes.value===void 0&&(n.value=s),window.fromModel&&(typeof s=="boolean"?n.checked=Pn(n.value)===s:n.checked=yo(n.value,s));else if(Gs(n))Number.isInteger(s)?n.value=s:!Array.isArray(s)&&typeof s!="boolean"&&![null,void 0].includes(s)?n.value=String(s):Array.isArray(s)?n.checked=s.some(i=>yo(i,n.value)):n.checked=!!s;else if(n.tagName==="SELECT")Wu(n,s);else{if(n.value===s)return;n.value=s===void 0?"":s}}function zu(n,s){n._x_undoAddedClasses&&n._x_undoAddedClasses(),n._x_undoAddedClasses=Ws(n,s)}function Yu(n,s){n._x_undoAddedStyles&&n._x_undoAddedStyles(),n._x_undoAddedStyles=nr(n,s)}function Hu(n,s,i){fc(n,s,i),Bu(n,s,i)}function fc(n,s,i){[null,void 0,!1].includes(i)&&ju(s)?n.removeAttribute(s):(gc(s)&&(i=s),Xu(n,s,i))}function Xu(n,s,i){n.getAttribute(s)!=i&&n.setAttribute(s,i)}function Bu(n,s,i){n[s]!==i&&(n[s]=i)}function Wu(n,s){const i=[].concat(s).map(h=>h+"");Array.from(n.options).forEach(h=>{h.selected=i.includes(h.value)})}function Gu(n){return n.toLowerCase().replace(/-(\w)/g,(s,i)=>i.toUpperCase())}function yo(n,s){return n==s}function Pn(n){return[1,"1","true","on","yes",!0].includes(n)?!0:[0,"0","false","off","no",!1].includes(n)?!1:n?!!n:null}var Vu=new Set(["allowfullscreen","async","autofocus","autoplay","checked","controls","default","defer","disabled","formnovalidate","inert","ismap","itemscope","loop","multiple","muted","nomodule","novalidate","open","playsinline","readonly","required","reversed","selected","shadowrootclonable","shadowrootdelegatesfocus","shadowrootserializable"]);function gc(n){return Vu.has(n)}function ju(n){return!["aria-pressed","aria-checked","aria-expanded","aria-selected"].includes(n)}function Uu(n,s,i){return n._x_bindings&&n._x_bindings[s]!==void 0?n._x_bindings[s]:pc(n,s,i)}function $u(n,s,i,h=!0){if(n._x_bindings&&n._x_bindings[s]!==void 0)return n._x_bindings[s];if(n._x_inlineBindings&&n._x_inlineBindings[s]!==void 0){let g=n._x_inlineBindings[s];return g.extract=h,Gl(()=>Oi(n,g.expression))}return pc(n,s,i)}function pc(n,s,i){let h=n.getAttribute(s);return h===null?typeof i=="function"?i():i:h===""?!0:gc(s)?!![s,"true"].includes(h):h}function Gs(n){return n.type==="checkbox"||n.localName==="ui-checkbox"||n.localName==="ui-switch"}function mc(n){return n.type==="radio"||n.localName==="ui-radio"}function xc(n,s){var i;return function(){var h=this,g=arguments,b=function(){i=null,n.apply(h,g)};clearTimeout(i),i=setTimeout(b,s)}}function vc(n,s){let i;return function(){let h=this,g=arguments;i||(n.apply(h,g),i=!0,setTimeout(()=>i=!1,s))}}function bc({get:n,set:s},{get:i,set:h}){let g=!0,b,v=Yi(()=>{let k=n(),T=i();if(g)h(Mr(k)),g=!1;else{let O=JSON.stringify(k),F=JSON.stringify(T);O!==b?h(Mr(k)):O!==F&&s(Mr(T))}b=JSON.stringify(n()),JSON.stringify(i())});return()=>{ha(v)}}function Mr(n){return typeof n=="object"?JSON.parse(JSON.stringify(n)):n}function qu(n){(Array.isArray(n)?n:[n]).forEach(i=>i(qa))}var Mi={},wo=!1;function Zu(n,s){if(wo||(Mi=ca(Mi),wo=!0),s===void 0)return Mi[n];Mi[n]=s,Xl(Mi[n]),typeof s=="object"&&s!==null&&s.hasOwnProperty("init")&&typeof s.init=="function"&&Mi[n].init()}function Ku(){return Mi}var yc={};function Ju(n,s){let i=typeof s!="function"?()=>s:s;return n instanceof Element?wc(n,i()):(yc[n]=i,()=>{})}function Qu(n){return Object.entries(yc).forEach(([s,i])=>{Object.defineProperty(n,s,{get(){return(...h)=>i(...h)}})}),n}function wc(n,s,i){let h=[];for(;h.length;)h.pop()();let g=Object.entries(s).map(([v,k])=>({name:v,value:k})),b=Ul(g);return g=g.map(v=>b.find(k=>k.name===v.name)?{name:`x-bind:${v.name}`,value:`"${v.value}"`}:v),zs(n,g,i).map(v=>{h.push(v.runCleanups),v()}),()=>{for(;h.length;)h.pop()()}}var Ac={};function ef(n,s){Ac[n]=s}function tf(n,s){return Object.entries(Ac).forEach(([i,h])=>{Object.defineProperty(n,i,{get(){return(...g)=>h.bind(s)(...g)},enumerable:!1})}),n}var af={get reactive(){return ca},get release(){return ha},get effect(){return Yi},get raw(){return Tl},version:"3.14.9",flushAndStopDeferringMutations:nu,dontAutoEvaluateFunctions:Gl,disableEffectScheduling:Kd,startObservingMutations:Os,stopObservingMutations:Yl,setReactivityEngine:Jd,onAttributeRemoved:Nl,onAttributesAdded:Rl,closestDataStack:na,skipDuringClone:xi,onlyDuringClone:Iu,addRootSelector:rc,addInitSelector:sc,interceptClone:rr,addScopeToNode:Ua,deferMutations:au,mapAttributes:Ys,evaluateLater:mt,interceptInit:Au,setEvaluator:hu,mergeProxies:$a,extractProp:$u,findClosest:ua,onElRemoved:Ts,closestRoot:ar,destroyTree:fa,interceptor:Bl,transition:ps,setStyles:nr,mutateDom:Ue,directive:tt,entangle:bc,throttle:vc,debounce:xc,evaluate:Oi,initTree:si,nextTick:Bs,prefixed:da,prefix:gu,plugin:qu,magic:Vt,store:Zu,start:yu,clone:Fu,cloneNode:Ou,bound:Uu,$data:Hl,watch:Dl,walk:zi,data:ef,bind:Ju},qa=af;function nf(n,s){const i=Object.create(null),h=n.split(",");for(let g=0;g<h.length;g++)i[h[g]]=!0;return g=>!!i[g]}var rf=Object.freeze({}),sf=Object.prototype.hasOwnProperty,sr=(n,s)=>sf.call(n,s),Fi=Array.isArray,Da=n=>Sc(n)==="[object Map]",of=n=>typeof n=="string",Vs=n=>typeof n=="symbol",or=n=>n!==null&&typeof n=="object",lf=Object.prototype.toString,Sc=n=>lf.call(n),Cc=n=>Sc(n).slice(8,-1),js=n=>of(n)&&n!=="NaN"&&n[0]!=="-"&&""+parseInt(n,10)===n,cf=n=>{const s=Object.create(null);return i=>s[i]||(s[i]=n(i))},hf=cf(n=>n.charAt(0).toUpperCase()+n.slice(1)),kc=(n,s)=>n!==s&&(n===n||s===s),xs=new WeakMap,Ea=[],Kt,Ri=Symbol("iterate"),vs=Symbol("Map key iterate");function df(n){return n&&n._isEffect===!0}function uf(n,s=rf){df(n)&&(n=n.raw);const i=pf(n,s);return s.lazy||i(),i}function ff(n){n.active&&(Ec(n),n.options.onStop&&n.options.onStop(),n.active=!1)}var gf=0;function pf(n,s){const i=function(){if(!i.active)return n();if(!Ea.includes(i)){Ec(i);try{return xf(),Ea.push(i),Kt=i,n()}finally{Ea.pop(),Mc(),Kt=Ea[Ea.length-1]}}};return i.id=gf++,i.allowRecurse=!!s.allowRecurse,i._isEffect=!0,i.active=!0,i.raw=n,i.deps=[],i.options=s,i}function Ec(n){const{deps:s}=n;if(s.length){for(let i=0;i<s.length;i++)s[i].delete(n);s.length=0}}var ra=!0,Us=[];function mf(){Us.push(ra),ra=!1}function xf(){Us.push(ra),ra=!0}function Mc(){const n=Us.pop();ra=n===void 0?!0:n}function Wt(n,s,i){if(!ra||Kt===void 0)return;let h=xs.get(n);h||xs.set(n,h=new Map);let g=h.get(i);g||h.set(i,g=new Set),g.has(Kt)||(g.add(Kt),Kt.deps.push(g),Kt.options.onTrack&&Kt.options.onTrack({effect:Kt,target:n,type:s,key:i}))}function mi(n,s,i,h,g,b){const v=xs.get(n);if(!v)return;const k=new Set,T=F=>{F&&F.forEach(z=>{(z!==Kt||z.allowRecurse)&&k.add(z)})};if(s==="clear")v.forEach(T);else if(i==="length"&&Fi(n))v.forEach((F,z)=>{(z==="length"||z>=h)&&T(F)});else switch(i!==void 0&&T(v.get(i)),s){case"add":Fi(n)?js(i)&&T(v.get("length")):(T(v.get(Ri)),Da(n)&&T(v.get(vs)));break;case"delete":Fi(n)||(T(v.get(Ri)),Da(n)&&T(v.get(vs)));break;case"set":Da(n)&&T(v.get(Ri));break}const O=F=>{F.options.onTrigger&&F.options.onTrigger({effect:F,target:n,key:i,type:s,newValue:h,oldValue:g,oldTarget:b}),F.options.scheduler?F.options.scheduler(F):F()};k.forEach(O)}var vf=nf("__proto__,__v_isRef,__isVue"),_c=new Set(Object.getOwnPropertyNames(Symbol).map(n=>Symbol[n]).filter(Vs)),bf=Pc(),yf=Pc(!0),Ao=wf();function wf(){const n={};return["includes","indexOf","lastIndexOf"].forEach(s=>{n[s]=function(...i){const h=Xe(this);for(let b=0,v=this.length;b<v;b++)Wt(h,"get",b+"");const g=h[s](...i);return g===-1||g===!1?h[s](...i.map(Xe)):g}}),["push","pop","shift","unshift","splice"].forEach(s=>{n[s]=function(...i){mf();const h=Xe(this)[s].apply(this,i);return Mc(),h}}),n}function Pc(n=!1,s=!1){return function(h,g,b){if(g==="__v_isReactive")return!n;if(g==="__v_isReadonly")return n;if(g==="__v_raw"&&b===(n?s?Ff:Ic:s?Of:Dc).get(h))return h;const v=Fi(h);if(!n&&v&&sr(Ao,g))return Reflect.get(Ao,g,b);const k=Reflect.get(h,g,b);return(Vs(g)?_c.has(g):vf(g))||(n||Wt(h,"get",g),s)?k:bs(k)?!v||!js(g)?k.value:k:or(k)?n?Oc(k):Ks(k):k}}var Af=Sf();function Sf(n=!1){return function(i,h,g,b){let v=i[h];if(!n&&(g=Xe(g),v=Xe(v),!Fi(i)&&bs(v)&&!bs(g)))return v.value=g,!0;const k=Fi(i)&&js(h)?Number(h)<i.length:sr(i,h),T=Reflect.set(i,h,g,b);return i===Xe(b)&&(k?kc(g,v)&&mi(i,"set",h,g,v):mi(i,"add",h,g)),T}}function Cf(n,s){const i=sr(n,s),h=n[s],g=Reflect.deleteProperty(n,s);return g&&i&&mi(n,"delete",s,void 0,h),g}function kf(n,s){const i=Reflect.has(n,s);return(!Vs(s)||!_c.has(s))&&Wt(n,"has",s),i}function Ef(n){return Wt(n,"iterate",Fi(n)?"length":Ri),Reflect.ownKeys(n)}var Mf={get:bf,set:Af,deleteProperty:Cf,has:kf,ownKeys:Ef},_f={get:yf,set(n,s){return console.warn(`Set operation on key "${String(s)}" failed: target is readonly.`,n),!0},deleteProperty(n,s){return console.warn(`Delete operation on key "${String(s)}" failed: target is readonly.`,n),!0}},$s=n=>or(n)?Ks(n):n,qs=n=>or(n)?Oc(n):n,Zs=n=>n,lr=n=>Reflect.getPrototypeOf(n);function hn(n,s,i=!1,h=!1){n=n.__v_raw;const g=Xe(n),b=Xe(s);s!==b&&!i&&Wt(g,"get",s),!i&&Wt(g,"get",b);const{has:v}=lr(g),k=h?Zs:i?qs:$s;if(v.call(g,s))return k(n.get(s));if(v.call(g,b))return k(n.get(b));n!==g&&n.get(s)}function dn(n,s=!1){const i=this.__v_raw,h=Xe(i),g=Xe(n);return n!==g&&!s&&Wt(h,"has",n),!s&&Wt(h,"has",g),n===g?i.has(n):i.has(n)||i.has(g)}function un(n,s=!1){return n=n.__v_raw,!s&&Wt(Xe(n),"iterate",Ri),Reflect.get(n,"size",n)}function So(n){n=Xe(n);const s=Xe(this);return lr(s).has.call(s,n)||(s.add(n),mi(s,"add",n,n)),this}function Co(n,s){s=Xe(s);const i=Xe(this),{has:h,get:g}=lr(i);let b=h.call(i,n);b?Tc(i,h,n):(n=Xe(n),b=h.call(i,n));const v=g.call(i,n);return i.set(n,s),b?kc(s,v)&&mi(i,"set",n,s,v):mi(i,"add",n,s),this}function ko(n){const s=Xe(this),{has:i,get:h}=lr(s);let g=i.call(s,n);g?Tc(s,i,n):(n=Xe(n),g=i.call(s,n));const b=h?h.call(s,n):void 0,v=s.delete(n);return g&&mi(s,"delete",n,void 0,b),v}function Eo(){const n=Xe(this),s=n.size!==0,i=Da(n)?new Map(n):new Set(n),h=n.clear();return s&&mi(n,"clear",void 0,void 0,i),h}function fn(n,s){return function(h,g){const b=this,v=b.__v_raw,k=Xe(v),T=s?Zs:n?qs:$s;return!n&&Wt(k,"iterate",Ri),v.forEach((O,F)=>h.call(g,T(O),T(F),b))}}function gn(n,s,i){return function(...h){const g=this.__v_raw,b=Xe(g),v=Da(b),k=n==="entries"||n===Symbol.iterator&&v,T=n==="keys"&&v,O=g[n](...h),F=i?Zs:s?qs:$s;return!s&&Wt(b,"iterate",T?vs:Ri),{next(){const{value:z,done:G}=O.next();return G?{value:z,done:G}:{value:k?[F(z[0]),F(z[1])]:F(z),done:G}},[Symbol.iterator](){return this}}}}function hi(n){return function(...s){{const i=s[0]?`on key "${s[0]}" `:"";console.warn(`${hf(n)} operation ${i}failed: target is readonly.`,Xe(this))}return n==="delete"?!1:this}}function Pf(){const n={get(b){return hn(this,b)},get size(){return un(this)},has:dn,add:So,set:Co,delete:ko,clear:Eo,forEach:fn(!1,!1)},s={get(b){return hn(this,b,!1,!0)},get size(){return un(this)},has:dn,add:So,set:Co,delete:ko,clear:Eo,forEach:fn(!1,!0)},i={get(b){return hn(this,b,!0)},get size(){return un(this,!0)},has(b){return dn.call(this,b,!0)},add:hi("add"),set:hi("set"),delete:hi("delete"),clear:hi("clear"),forEach:fn(!0,!1)},h={get(b){return hn(this,b,!0,!0)},get size(){return un(this,!0)},has(b){return dn.call(this,b,!0)},add:hi("add"),set:hi("set"),delete:hi("delete"),clear:hi("clear"),forEach:fn(!0,!0)};return["keys","values","entries",Symbol.iterator].forEach(b=>{n[b]=gn(b,!1,!1),i[b]=gn(b,!0,!1),s[b]=gn(b,!1,!0),h[b]=gn(b,!0,!0)}),[n,i,s,h]}var[Lf,Tf,Hm,Xm]=Pf();function Lc(n,s){const i=n?Tf:Lf;return(h,g,b)=>g==="__v_isReactive"?!n:g==="__v_isReadonly"?n:g==="__v_raw"?h:Reflect.get(sr(i,g)&&g in h?i:h,g,b)}var Df={get:Lc(!1)},If={get:Lc(!0)};function Tc(n,s,i){const h=Xe(i);if(h!==i&&s.call(n,h)){const g=Cc(n);console.warn(`Reactive ${g} contains both the raw and reactive versions of the same object${g==="Map"?" as keys":""}, which can lead to inconsistencies. Avoid differentiating between the raw and reactive versions of an object and only use the reactive version if possible.`)}}var Dc=new WeakMap,Of=new WeakMap,Ic=new WeakMap,Ff=new WeakMap;function Rf(n){switch(n){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function Nf(n){return n.__v_skip||!Object.isExtensible(n)?0:Rf(Cc(n))}function Ks(n){return n&&n.__v_isReadonly?n:Fc(n,!1,Mf,Df,Dc)}function Oc(n){return Fc(n,!0,_f,If,Ic)}function Fc(n,s,i,h,g){if(!or(n))return console.warn(`value cannot be made reactive: ${String(n)}`),n;if(n.__v_raw&&!(s&&n.__v_isReactive))return n;const b=g.get(n);if(b)return b;const v=Nf(n);if(v===0)return n;const k=new Proxy(n,v===2?h:i);return g.set(n,k),k}function Xe(n){return n&&Xe(n.__v_raw)||n}function bs(n){return!!(n&&n.__v_isRef===!0)}Vt("nextTick",()=>Bs);Vt("dispatch",n=>Ta.bind(Ta,n));Vt("watch",(n,{evaluateLater:s,cleanup:i})=>(h,g)=>{let b=s(h),k=Dl(()=>{let T;return b(O=>T=O),T},g);i(k)});Vt("store",Ku);Vt("data",n=>Hl(n));Vt("root",n=>ar(n));Vt("refs",n=>(n._x_refs_proxy||(n._x_refs_proxy=$a(zf(n))),n._x_refs_proxy));function zf(n){let s=[];return ua(n,i=>{i._x_refs&&s.push(i._x_refs)}),s}var _r={};function Rc(n){return _r[n]||(_r[n]=0),++_r[n]}function Yf(n,s){return ua(n,i=>{if(i._x_ids&&i._x_ids[s])return!0})}function Hf(n,s){n._x_ids||(n._x_ids={}),n._x_ids[s]||(n._x_ids[s]=Rc(s))}Vt("id",(n,{cleanup:s})=>(i,h=null)=>{let g=`${i}${h?`-${h}`:""}`;return Xf(n,g,s,()=>{let b=Yf(n,i),v=b?b._x_ids[i]:Rc(i);return h?`${i}-${v}-${h}`:`${i}-${v}`})});rr((n,s)=>{n._x_id&&(s._x_id=n._x_id)});function Xf(n,s,i,h){if(n._x_id||(n._x_id={}),n._x_id[s])return n._x_id[s];let g=h();return n._x_id[s]=g,i(()=>{delete n._x_id[s]}),g}Vt("el",n=>n);Nc("Focus","focus","focus");Nc("Persist","persist","persist");function Nc(n,s,i){Vt(s,h=>Rt(`You can't use [$${s}] without first installing the "${n}" plugin here: https://alpinejs.dev/plugins/${i}`,h))}tt("modelable",(n,{expression:s},{effect:i,evaluateLater:h,cleanup:g})=>{let b=h(s),v=()=>{let F;return b(z=>F=z),F},k=h(`${s} = __placeholder`),T=F=>k(()=>{},{scope:{__placeholder:F}}),O=v();T(O),queueMicrotask(()=>{if(!n._x_model)return;n._x_removeModelListeners.default();let F=n._x_model.get,z=n._x_model.set,G=bc({get(){return F()},set(ae){z(ae)}},{get(){return v()},set(ae){T(ae)}});g(G)})});tt("teleport",(n,{modifiers:s,expression:i},{cleanup:h})=>{n.tagName.toLowerCase()!=="template"&&Rt("x-teleport can only be used on a <template> tag",n);let g=Mo(i),b=n.content.cloneNode(!0).firstElementChild;n._x_teleport=b,b._x_teleportBack=n,n.setAttribute("data-teleport-template",!0),b.setAttribute("data-teleport-target",!0),n._x_forwardEvents&&n._x_forwardEvents.forEach(k=>{b.addEventListener(k,T=>{T.stopPropagation(),n.dispatchEvent(new T.constructor(T.type,T))})}),Ua(b,{},n);let v=(k,T,O)=>{O.includes("prepend")?T.parentNode.insertBefore(k,T):O.includes("append")?T.parentNode.insertBefore(k,T.nextSibling):T.appendChild(k)};Ue(()=>{v(b,g,s),xi(()=>{si(b)})()}),n._x_teleportPutBack=()=>{let k=Mo(i);Ue(()=>{v(n._x_teleport,k,s)})},h(()=>Ue(()=>{b.remove(),fa(b)}))});var Bf=document.createElement("div");function Mo(n){let s=xi(()=>document.querySelector(n),()=>Bf)();return s||Rt(`Cannot find x-teleport element for selector: "${n}"`),s}var zc=()=>{};zc.inline=(n,{modifiers:s},{cleanup:i})=>{s.includes("self")?n._x_ignoreSelf=!0:n._x_ignore=!0,i(()=>{s.includes("self")?delete n._x_ignoreSelf:delete n._x_ignore})};tt("ignore",zc);tt("effect",xi((n,{expression:s},{effect:i})=>{i(mt(n,s))}));function ys(n,s,i,h){let g=n,b=T=>h(T),v={},k=(T,O)=>F=>O(T,F);if(i.includes("dot")&&(s=Wf(s)),i.includes("camel")&&(s=Gf(s)),i.includes("passive")&&(v.passive=!0),i.includes("capture")&&(v.capture=!0),i.includes("window")&&(g=window),i.includes("document")&&(g=document),i.includes("debounce")){let T=i[i.indexOf("debounce")+1]||"invalid-wait",O=Xn(T.split("ms")[0])?Number(T.split("ms")[0]):250;b=xc(b,O)}if(i.includes("throttle")){let T=i[i.indexOf("throttle")+1]||"invalid-wait",O=Xn(T.split("ms")[0])?Number(T.split("ms")[0]):250;b=vc(b,O)}return i.includes("prevent")&&(b=k(b,(T,O)=>{O.preventDefault(),T(O)})),i.includes("stop")&&(b=k(b,(T,O)=>{O.stopPropagation(),T(O)})),i.includes("once")&&(b=k(b,(T,O)=>{T(O),g.removeEventListener(s,b,v)})),(i.includes("away")||i.includes("outside"))&&(g=document,b=k(b,(T,O)=>{n.contains(O.target)||O.target.isConnected!==!1&&(n.offsetWidth<1&&n.offsetHeight<1||n._x_isShown!==!1&&T(O))})),i.includes("self")&&(b=k(b,(T,O)=>{O.target===n&&T(O)})),(jf(s)||Yc(s))&&(b=k(b,(T,O)=>{Uf(O,i)||T(O)})),g.addEventListener(s,b,v),()=>{g.removeEventListener(s,b,v)}}function Wf(n){return n.replace(/-/g,".")}function Gf(n){return n.toLowerCase().replace(/-(\w)/g,(s,i)=>i.toUpperCase())}function Xn(n){return!Array.isArray(n)&&!isNaN(n)}function Vf(n){return[" ","_"].includes(n)?n:n.replace(/([a-z])([A-Z])/g,"$1-$2").replace(/[_\s]/,"-").toLowerCase()}function jf(n){return["keydown","keyup"].includes(n)}function Yc(n){return["contextmenu","click","mouse"].some(s=>n.includes(s))}function Uf(n,s){let i=s.filter(b=>!["window","document","prevent","stop","once","capture","self","away","outside","passive"].includes(b));if(i.includes("debounce")){let b=i.indexOf("debounce");i.splice(b,Xn((i[b+1]||"invalid-wait").split("ms")[0])?2:1)}if(i.includes("throttle")){let b=i.indexOf("throttle");i.splice(b,Xn((i[b+1]||"invalid-wait").split("ms")[0])?2:1)}if(i.length===0||i.length===1&&_o(n.key).includes(i[0]))return!1;const g=["ctrl","shift","alt","meta","cmd","super"].filter(b=>i.includes(b));return i=i.filter(b=>!g.includes(b)),!(g.length>0&&g.filter(v=>((v==="cmd"||v==="super")&&(v="meta"),n[`${v}Key`])).length===g.length&&(Yc(n.type)||_o(n.key).includes(i[0])))}function _o(n){if(!n)return[];n=Vf(n);let s={ctrl:"control",slash:"/",space:" ",spacebar:" ",cmd:"meta",esc:"escape",up:"arrow-up",down:"arrow-down",left:"arrow-left",right:"arrow-right",period:".",comma:",",equal:"=",minus:"-",underscore:"_"};return s[n]=n,Object.keys(s).map(i=>{if(s[i]===n)return i}).filter(i=>i)}tt("model",(n,{modifiers:s,expression:i},{effect:h,cleanup:g})=>{let b=n;s.includes("parent")&&(b=n.parentNode);let v=mt(b,i),k;typeof i=="string"?k=mt(b,`${i} = __placeholder`):typeof i=="function"&&typeof i()=="string"?k=mt(b,`${i()} = __placeholder`):k=()=>{};let T=()=>{let G;return v(ae=>G=ae),Po(G)?G.get():G},O=G=>{let ae;v(Y=>ae=Y),Po(ae)?ae.set(G):k(()=>{},{scope:{__placeholder:G}})};typeof i=="string"&&n.type==="radio"&&Ue(()=>{n.hasAttribute("name")||n.setAttribute("name",i)});var F=n.tagName.toLowerCase()==="select"||["checkbox","radio"].includes(n.type)||s.includes("lazy")?"change":"input";let z=pi?()=>{}:ys(n,F,s,G=>{O(Pr(n,s,G,T()))});if(s.includes("fill")&&([void 0,null,""].includes(T())||Gs(n)&&Array.isArray(T())||n.tagName.toLowerCase()==="select"&&n.multiple)&&O(Pr(n,s,{target:n},T())),n._x_removeModelListeners||(n._x_removeModelListeners={}),n._x_removeModelListeners.default=z,g(()=>n._x_removeModelListeners.default()),n.form){let G=ys(n.form,"reset",[],ae=>{Bs(()=>n._x_model&&n._x_model.set(Pr(n,s,{target:n},T())))});g(()=>G())}n._x_model={get(){return T()},set(G){O(G)}},n._x_forceModelUpdate=G=>{G===void 0&&typeof i=="string"&&i.match(/\./)&&(G=""),window.fromModel=!0,Ue(()=>uc(n,"value",G)),delete window.fromModel},h(()=>{let G=T();s.includes("unintrusive")&&document.activeElement.isSameNode(n)||n._x_forceModelUpdate(G)})});function Pr(n,s,i,h){return Ue(()=>{if(i instanceof CustomEvent&&i.detail!==void 0)return i.detail!==null&&i.detail!==void 0?i.detail:i.target.value;if(Gs(n))if(Array.isArray(h)){let g=null;return s.includes("number")?g=Lr(i.target.value):s.includes("boolean")?g=Pn(i.target.value):g=i.target.value,i.target.checked?h.includes(g)?h:h.concat([g]):h.filter(b=>!$f(b,g))}else return i.target.checked;else{if(n.tagName.toLowerCase()==="select"&&n.multiple)return s.includes("number")?Array.from(i.target.selectedOptions).map(g=>{let b=g.value||g.text;return Lr(b)}):s.includes("boolean")?Array.from(i.target.selectedOptions).map(g=>{let b=g.value||g.text;return Pn(b)}):Array.from(i.target.selectedOptions).map(g=>g.value||g.text);{let g;return mc(n)?i.target.checked?g=i.target.value:g=h:g=i.target.value,s.includes("number")?Lr(g):s.includes("boolean")?Pn(g):s.includes("trim")?g.trim():g}}})}function Lr(n){let s=n?parseFloat(n):null;return qf(s)?s:n}function $f(n,s){return n==s}function qf(n){return!Array.isArray(n)&&!isNaN(n)}function Po(n){return n!==null&&typeof n=="object"&&typeof n.get=="function"&&typeof n.set=="function"}tt("cloak",n=>queueMicrotask(()=>Ue(()=>n.removeAttribute(da("cloak")))));sc(()=>`[${da("init")}]`);tt("init",xi((n,{expression:s},{evaluate:i})=>typeof s=="string"?!!s.trim()&&i(s,{},!1):i(s,{},!1)));tt("text",(n,{expression:s},{effect:i,evaluateLater:h})=>{let g=h(s);i(()=>{g(b=>{Ue(()=>{n.textContent=b})})})});tt("html",(n,{expression:s},{effect:i,evaluateLater:h})=>{let g=h(s);i(()=>{g(b=>{Ue(()=>{n.innerHTML=b,n._x_ignoreSelf=!0,si(n),delete n._x_ignoreSelf})})})});Ys(Zl(":",Kl(da("bind:"))));var Hc=(n,{value:s,modifiers:i,expression:h,original:g},{effect:b,cleanup:v})=>{if(!s){let T={};Qu(T),mt(n,h)(F=>{wc(n,F,g)},{scope:T});return}if(s==="key")return Zf(n,h);if(n._x_inlineBindings&&n._x_inlineBindings[s]&&n._x_inlineBindings[s].extract)return;let k=mt(n,h);b(()=>k(T=>{T===void 0&&typeof h=="string"&&h.match(/\./)&&(T=""),Ue(()=>uc(n,s,T,i))})),v(()=>{n._x_undoAddedClasses&&n._x_undoAddedClasses(),n._x_undoAddedStyles&&n._x_undoAddedStyles()})};Hc.inline=(n,{value:s,modifiers:i,expression:h})=>{s&&(n._x_inlineBindings||(n._x_inlineBindings={}),n._x_inlineBindings[s]={expression:h,extract:!1})};tt("bind",Hc);function Zf(n,s){n._x_keyExpression=s}rc(()=>`[${da("data")}]`);tt("data",(n,{expression:s},{cleanup:i})=>{if(Kf(n))return;s=s===""?"{}":s;let h={};cs(h,n);let g={};tf(g,h);let b=Oi(n,s,{scope:g});(b===void 0||b===!0)&&(b={}),cs(b,n);let v=ca(b);Xl(v);let k=Ua(n,v);v.init&&Oi(n,v.init),i(()=>{v.destroy&&Oi(n,v.destroy),k()})});rr((n,s)=>{n._x_dataStack&&(s._x_dataStack=n._x_dataStack,s.setAttribute("data-has-alpine-state",!0))});function Kf(n){return pi?ms?!0:n.hasAttribute("data-has-alpine-state"):!1}tt("show",(n,{modifiers:s,expression:i},{effect:h})=>{let g=mt(n,i);n._x_doHide||(n._x_doHide=()=>{Ue(()=>{n.style.setProperty("display","none",s.includes("important")?"important":void 0)})}),n._x_doShow||(n._x_doShow=()=>{Ue(()=>{n.style.length===1&&n.style.display==="none"?n.removeAttribute("style"):n.style.removeProperty("display")})});let b=()=>{n._x_doHide(),n._x_isShown=!1},v=()=>{n._x_doShow(),n._x_isShown=!0},k=()=>setTimeout(v),T=gs(z=>z?v():b(),z=>{typeof n._x_toggleAndCascadeWithTransitions=="function"?n._x_toggleAndCascadeWithTransitions(n,z,v,b):z?k():b()}),O,F=!0;h(()=>g(z=>{!F&&z===O||(s.includes("immediate")&&(z?k():b()),T(z),O=z,F=!1)}))});tt("for",(n,{expression:s},{effect:i,cleanup:h})=>{let g=Qf(s),b=mt(n,g.items),v=mt(n,n._x_keyExpression||"index");n._x_prevKeys=[],n._x_lookup={},i(()=>Jf(n,g,b,v)),h(()=>{Object.values(n._x_lookup).forEach(k=>Ue(()=>{fa(k),k.remove()})),delete n._x_prevKeys,delete n._x_lookup})});function Jf(n,s,i,h){let g=v=>typeof v=="object"&&!Array.isArray(v),b=n;i(v=>{eg(v)&&v>=0&&(v=Array.from(Array(v).keys(),$=>$+1)),v===void 0&&(v=[]);let k=n._x_lookup,T=n._x_prevKeys,O=[],F=[];if(g(v))v=Object.entries(v).map(([$,ie])=>{let Q=Lo(s,ie,$,v);h(ne=>{F.includes(ne)&&Rt("Duplicate key on x-for",n),F.push(ne)},{scope:{index:$,...Q}}),O.push(Q)});else for(let $=0;$<v.length;$++){let ie=Lo(s,v[$],$,v);h(Q=>{F.includes(Q)&&Rt("Duplicate key on x-for",n),F.push(Q)},{scope:{index:$,...ie}}),O.push(ie)}let z=[],G=[],ae=[],Y=[];for(let $=0;$<T.length;$++){let ie=T[$];F.indexOf(ie)===-1&&ae.push(ie)}T=T.filter($=>!ae.includes($));let q="template";for(let $=0;$<F.length;$++){let ie=F[$],Q=T.indexOf(ie);if(Q===-1)T.splice($,0,ie),z.push([q,$]);else if(Q!==$){let ne=T.splice($,1)[0],pe=T.splice(Q-1,1)[0];T.splice($,0,pe),T.splice(Q,0,ne),G.push([ne,pe])}else Y.push(ie);q=ie}for(let $=0;$<ae.length;$++){let ie=ae[$];ie in k&&(Ue(()=>{fa(k[ie]),k[ie].remove()}),delete k[ie])}for(let $=0;$<G.length;$++){let[ie,Q]=G[$],ne=k[ie],pe=k[Q],X=document.createElement("div");Ue(()=>{pe||Rt('x-for ":key" is undefined or invalid',b,Q,k),pe.after(X),ne.after(pe),pe._x_currentIfEl&&pe.after(pe._x_currentIfEl),X.before(ne),ne._x_currentIfEl&&ne.after(ne._x_currentIfEl),X.remove()}),pe._x_refreshXForScope(O[F.indexOf(Q)])}for(let $=0;$<z.length;$++){let[ie,Q]=z[$],ne=ie==="template"?b:k[ie];ne._x_currentIfEl&&(ne=ne._x_currentIfEl);let pe=O[Q],X=F[Q],we=document.importNode(b.content,!0).firstElementChild,ce=ca(pe);Ua(we,ce,b),we._x_refreshXForScope=V=>{Object.entries(V).forEach(([se,Le])=>{ce[se]=Le})},Ue(()=>{ne.after(we),xi(()=>si(we))()}),typeof X=="object"&&Rt("x-for key cannot be an object, it must be a string or an integer",b),k[X]=we}for(let $=0;$<Y.length;$++)k[Y[$]]._x_refreshXForScope(O[F.indexOf(Y[$])]);b._x_prevKeys=F})}function Qf(n){let s=/,([^,\}\]]*)(?:,([^,\}\]]*))?$/,i=/^\s*\(|\)\s*$/g,h=/([\s\S]*?)\s+(?:in|of)\s+([\s\S]*)/,g=n.match(h);if(!g)return;let b={};b.items=g[2].trim();let v=g[1].replace(i,"").trim(),k=v.match(s);return k?(b.item=v.replace(s,"").trim(),b.index=k[1].trim(),k[2]&&(b.collection=k[2].trim())):b.item=v,b}function Lo(n,s,i,h){let g={};return/^\[.*\]$/.test(n.item)&&Array.isArray(s)?n.item.replace("[","").replace("]","").split(",").map(v=>v.trim()).forEach((v,k)=>{g[v]=s[k]}):/^\{.*\}$/.test(n.item)&&!Array.isArray(s)&&typeof s=="object"?n.item.replace("{","").replace("}","").split(",").map(v=>v.trim()).forEach(v=>{g[v]=s[v]}):g[n.item]=s,n.index&&(g[n.index]=i),n.collection&&(g[n.collection]=h),g}function eg(n){return!Array.isArray(n)&&!isNaN(n)}function Xc(){}Xc.inline=(n,{expression:s},{cleanup:i})=>{let h=ar(n);h._x_refs||(h._x_refs={}),h._x_refs[s]=n,i(()=>delete h._x_refs[s])};tt("ref",Xc);tt("if",(n,{expression:s},{effect:i,cleanup:h})=>{n.tagName.toLowerCase()!=="template"&&Rt("x-if can only be used on a <template> tag",n);let g=mt(n,s),b=()=>{if(n._x_currentIfEl)return n._x_currentIfEl;let k=n.content.cloneNode(!0).firstElementChild;return Ua(k,{},n),Ue(()=>{n.after(k),xi(()=>si(k))()}),n._x_currentIfEl=k,n._x_undoIf=()=>{Ue(()=>{fa(k),k.remove()}),delete n._x_currentIfEl},k},v=()=>{n._x_undoIf&&(n._x_undoIf(),delete n._x_undoIf)};i(()=>g(k=>{k?b():v()})),h(()=>n._x_undoIf&&n._x_undoIf())});tt("id",(n,{expression:s},{evaluate:i})=>{i(s).forEach(g=>Hf(n,g))});rr((n,s)=>{n._x_ids&&(s._x_ids=n._x_ids)});Ys(Zl("@",Kl(da("on:"))));tt("on",xi((n,{value:s,modifiers:i,expression:h},{cleanup:g})=>{let b=h?mt(n,h):()=>{};n.tagName.toLowerCase()==="template"&&(n._x_forwardEvents||(n._x_forwardEvents=[]),n._x_forwardEvents.includes(s)||n._x_forwardEvents.push(s));let v=ys(n,s,i,k=>{b(()=>{},{scope:{$event:k},params:[k]})});g(()=>v())}));cr("Collapse","collapse","collapse");cr("Intersect","intersect","intersect");cr("Focus","trap","focus");cr("Mask","mask","mask");function cr(n,s,i){tt(s,h=>Rt(`You can't use [x-${s}] without first installing the "${n}" plugin here: https://alpinejs.dev/plugins/${i}`,h))}qa.setEvaluator(jl);qa.setReactivityEngine({reactive:Ks,effect:uf,release:ff,raw:Xe});var tg=qa,Bc=tg;function Tr(n,s){n.split(/\s+/).forEach(i=>{s(i)})}class ig{constructor(){this._events={}}on(s,i){Tr(s,h=>{const g=this._events[h]||[];g.push(i),this._events[h]=g})}off(s,i){var h=arguments.length;if(h===0){this._events={};return}Tr(s,g=>{if(h===1){delete this._events[g];return}const b=this._events[g];b!==void 0&&(b.splice(b.indexOf(i),1),this._events[g]=b)})}trigger(s,...i){var h=this;Tr(s,g=>{const b=h._events[g];b!==void 0&&b.forEach(v=>{v.apply(h,i)})})}}function ag(n){return n.plugins={},class extends n{constructor(){super(...arguments),this.plugins={names:[],settings:{},requested:{},loaded:{}}}static define(s,i){n.plugins[s]={name:s,fn:i}}initializePlugins(s){var i,h;const g=this,b=[];if(Array.isArray(s))s.forEach(v=>{typeof v=="string"?b.push(v):(g.plugins.settings[v.name]=v.options,b.push(v.name))});else if(s)for(i in s)s.hasOwnProperty(i)&&(g.plugins.settings[i]=s[i],b.push(i));for(;h=b.shift();)g.require(h)}loadPlugin(s){var i=this,h=i.plugins,g=n.plugins[s];if(!n.plugins.hasOwnProperty(s))throw new Error('Unable to find "'+s+'" plugin');h.requested[s]=!0,h.loaded[s]=g.fn.apply(i,[i.plugins.settings[s]||{}]),h.names.push(s)}require(s){var i=this,h=i.plugins;if(!i.plugins.loaded.hasOwnProperty(s)){if(h.requested[s])throw new Error('Plugin has circular dependency ("'+s+'")');i.loadPlugin(s)}return h.loaded[s]}}}const hr=n=>(n=n.filter(Boolean),n.length<2?n[0]||"":rg(n)==1?"["+n.join("")+"]":"(?:"+n.join("|")+")"),Wc=n=>{if(!ng(n))return n.join("");let s="",i=0;const h=()=>{i>1&&(s+="{"+i+"}")};return n.forEach((g,b)=>{if(g===n[b-1]){i++;return}h(),s+=g,i=1}),h(),s},Gc=n=>{let s=Array.from(n);return hr(s)},ng=n=>new Set(n).size!==n.length,Xa=n=>(n+"").replace(/([\$\(\)\*\+\.\?\[\]\^\{\|\}\\])/gu,"\\$1"),rg=n=>n.reduce((s,i)=>Math.max(s,sg(i)),0),sg=n=>Array.from(n).length,Vc=n=>{if(n.length===1)return[[n]];let s=[];const i=n.substring(1);return Vc(i).forEach(function(g){let b=g.slice(0);b[0]=n.charAt(0)+b[0],s.push(b),b=g.slice(0),b.unshift(n.charAt(0)),s.push(b)}),s},og=[[0,65535]],lg="[ÃÄ-ÕØ¬∑ æ º]";let Bn,jc;const cg=3,Js={},To={"/":"‚ÅÑ‚àï",0:"ﬂÄ",a:"‚±•…ê…ë",aa:"Íú≥",ae:"√¶«Ω«£",ao:"Íúµ",au:"Íú∑",av:"ÍúπÍúª",ay:"ÍúΩ",b:"∆Ä…ì∆É",c:"Íúø∆à»º‚ÜÑ",d:"ƒë…ó…ñ·¥Ö∆åÍÆ∑‘Å…¶",e:"…õ«ù·¥á…á",f:"Íùº∆í",g:"«•…†Íû°·µπÍùø…¢",h:"ƒß‚±®‚±∂…•",i:"…®ƒ±",j:"…â»∑",k:"∆ô‚±™ÍùÅÍùÉÍùÖÍû£",l:"≈Ç∆ö…´‚±°ÍùâÍùáÍûÅ…≠",m:"…±…Øœª",n:"Íû•∆û…≤Íûë·¥é–ª‘â",o:"√∏«ø…î…µÍùãÍùç·¥ë",oe:"≈ì",oi:"∆£",oo:"Íùè",ou:"»£",p:"∆•·µΩÍùëÍùìÍùïœÅ",q:"ÍùóÍùô…ã",r:"…ç…ΩÍùõÍûßÍûÉ",s:"√ü»øÍû©ÍûÖ Ç",t:"≈ß∆≠ à‚±¶Íûá",th:"√æ",tz:"Íú©",u:" â",v:" ãÍùü å",vy:"Íù°",w:"‚±≥",y:"∆¥…è·ªø",z:"∆∂»•…Ä‚±¨Íù£",hv:"∆ï"};for(let n in To){let s=To[n]||"";for(let i=0;i<s.length;i++){let h=s.substring(i,i+1);Js[h]=n}}const hg=new RegExp(Object.keys(Js).join("|")+"|"+lg,"gu"),dg=n=>{Bn===void 0&&(Bn=pg(og))},Do=(n,s="NFKD")=>n.normalize(s),Wn=n=>Array.from(n).reduce((s,i)=>s+ug(i),""),ug=n=>(n=Do(n).toLowerCase().replace(hg,s=>Js[s]||""),Do(n,"NFC"));function*fg(n){for(const[s,i]of n)for(let h=s;h<=i;h++){let g=String.fromCharCode(h),b=Wn(g);b!=g.toLowerCase()&&(b.length>cg||b.length!=0&&(yield{folded:b,composed:g,code_point:h}))}}const gg=n=>{const s={},i=(h,g)=>{const b=s[h]||new Set,v=new RegExp("^"+Gc(b)+"$","iu");g.match(v)||(b.add(Xa(g)),s[h]=b)};for(let h of fg(n))i(h.folded,h.folded),i(h.folded,h.composed);return s},pg=n=>{const s=gg(n),i={};let h=[];for(let b in s){let v=s[b];v&&(i[b]=Gc(v)),b.length>1&&h.push(Xa(b))}h.sort((b,v)=>v.length-b.length);const g=hr(h);return jc=new RegExp("^"+g,"u"),i},mg=(n,s=1)=>{let i=0;return n=n.map(h=>(Bn[h]&&(i+=h.length),Bn[h]||h)),i>=s?Wc(n):""},xg=(n,s=1)=>(s=Math.max(s,n.length-1),hr(Vc(n).map(i=>mg(i,s)))),Io=(n,s=!0)=>{let i=n.length>1?1:0;return hr(n.map(h=>{let g=[];const b=s?h.length():h.length()-1;for(let v=0;v<b;v++)g.push(xg(h.substrs[v]||"",i));return Wc(g)}))},vg=(n,s)=>{for(const i of s){if(i.start!=n.start||i.end!=n.end||i.substrs.join("")!==n.substrs.join(""))continue;let h=n.parts;const g=v=>{for(const k of h){if(k.start===v.start&&k.substr===v.substr)return!1;if(!(v.length==1||k.length==1)&&(v.start<k.start&&v.end>k.start||k.start<v.start&&k.end>v.start))return!0}return!1};if(!(i.parts.filter(g).length>0))return!0}return!1};class Gn{constructor(){Ai(this,"parts");Ai(this,"substrs");Ai(this,"start");Ai(this,"end");this.parts=[],this.substrs=[],this.start=0,this.end=0}add(s){s&&(this.parts.push(s),this.substrs.push(s.substr),this.start=Math.min(s.start,this.start),this.end=Math.max(s.end,this.end))}last(){return this.parts[this.parts.length-1]}length(){return this.parts.length}clone(s,i){let h=new Gn,g=JSON.parse(JSON.stringify(this.parts)),b=g.pop();for(const T of g)h.add(T);let v=i.substr.substring(0,s-b.start),k=v.length;return h.add({start:b.start,end:b.start+k,length:k,substr:v}),h}}const bg=n=>{dg(),n=Wn(n);let s="",i=[new Gn];for(let h=0;h<n.length;h++){let b=n.substring(h).match(jc);const v=n.substring(h,h+1),k=b?b[0]:null;let T=[],O=new Set;for(const F of i){const z=F.last();if(!z||z.length==1||z.end<=h)if(k){const G=k.length;F.add({start:h,end:h+G,length:G,substr:k}),O.add("1")}else F.add({start:h,end:h+1,length:1,substr:v}),O.add("2");else if(k){let G=F.clone(h,z);const ae=k.length;G.add({start:h,end:h+ae,length:ae,substr:k}),T.push(G)}else O.add("3")}if(T.length>0){T=T.sort((F,z)=>F.length()-z.length());for(let F of T)vg(F,i)||i.push(F);continue}if(h>0&&O.size==1&&!O.has("3")){s+=Io(i,!1);let F=new Gn;const z=i[0];z&&F.add(z.last()),i=[F]}}return s+=Io(i,!0),s},yg=(n,s)=>{if(n)return n[s]},wg=(n,s)=>{if(n){for(var i,h=s.split(".");(i=h.shift())&&(n=n[i]););return n}},Dr=(n,s,i)=>{var h,g;return!n||(n=n+"",s.regex==null)||(g=n.search(s.regex),g===-1)?0:(h=s.string.length/n.length,g===0&&(h+=.5),h*i)},Ir=(n,s)=>{var i=n[s];if(typeof i=="function")return i;i&&!Array.isArray(i)&&(n[s]=[i])},pn=(n,s)=>{if(Array.isArray(n))n.forEach(s);else for(var i in n)n.hasOwnProperty(i)&&s(n[i],i)},Ag=(n,s)=>typeof n=="number"&&typeof s=="number"?n>s?1:n<s?-1:0:(n=Wn(n+"").toLowerCase(),s=Wn(s+"").toLowerCase(),n>s?1:s>n?-1:0);class Sg{constructor(s,i){Ai(this,"items");Ai(this,"settings");this.items=s,this.settings=i||{diacritics:!0}}tokenize(s,i,h){if(!s||!s.length)return[];const g=[],b=s.split(/\s+/);var v;return h&&(v=new RegExp("^("+Object.keys(h).map(Xa).join("|")+"):(.*)$")),b.forEach(k=>{let T,O=null,F=null;v&&(T=k.match(v))&&(O=T[1],k=T[2]),k.length>0&&(this.settings.diacritics?F=bg(k)||null:F=Xa(k),F&&i&&(F="\\b"+F)),g.push({string:k,regex:F?new RegExp(F,"iu"):null,field:O})}),g}getScoreFunction(s,i){var h=this.prepareSearch(s,i);return this._getScoreFunction(h)}_getScoreFunction(s){const i=s.tokens,h=i.length;if(!h)return function(){return 0};const g=s.options.fields,b=s.weights,v=g.length,k=s.getAttrFn;if(!v)return function(){return 1};const T=function(){return v===1?function(O,F){const z=g[0].field;return Dr(k(F,z),O,b[z]||1)}:function(O,F){var z=0;if(O.field){const G=k(F,O.field);!O.regex&&G?z+=1/v:z+=Dr(G,O,1)}else pn(b,(G,ae)=>{z+=Dr(k(F,ae),O,G)});return z/v}}();return h===1?function(O){return T(i[0],O)}:s.options.conjunction==="and"?function(O){var F,z=0;for(let G of i){if(F=T(G,O),F<=0)return 0;z+=F}return z/h}:function(O){var F=0;return pn(i,z=>{F+=T(z,O)}),F/h}}getSortFunction(s,i){var h=this.prepareSearch(s,i);return this._getSortFunction(h)}_getSortFunction(s){var i,h=[];const g=this,b=s.options,v=!s.query&&b.sort_empty?b.sort_empty:b.sort;if(typeof v=="function")return v.bind(this);const k=function(O,F){return O==="$score"?F.score:s.getAttrFn(g.items[F.id],O)};if(v)for(let O of v)(s.query||O.field!=="$score")&&h.push(O);if(s.query){i=!0;for(let O of h)if(O.field==="$score"){i=!1;break}i&&h.unshift({field:"$score",direction:"desc"})}else h=h.filter(O=>O.field!=="$score");return h.length?function(O,F){var z,G;for(let ae of h)if(G=ae.field,z=(ae.direction==="desc"?-1:1)*Ag(k(G,O),k(G,F)),z)return z;return 0}:null}prepareSearch(s,i){const h={};var g=Object.assign({},i);if(Ir(g,"sort"),Ir(g,"sort_empty"),g.fields){Ir(g,"fields");const b=[];g.fields.forEach(v=>{typeof v=="string"&&(v={field:v,weight:1}),b.push(v),h[v.field]="weight"in v?v.weight:1}),g.fields=b}return{options:g,query:s.toLowerCase().trim(),tokens:this.tokenize(s,g.respect_word_boundaries,h),total:0,items:[],weights:h,getAttrFn:g.nesting?wg:yg}}search(s,i){var h=this,g,b;b=this.prepareSearch(s,i),i=b.options,s=b.query;const v=i.score||h._getScoreFunction(b);s.length?pn(h.items,(T,O)=>{g=v(T),(i.filter===!1||g>0)&&b.items.push({score:g,id:O})}):pn(h.items,(T,O)=>{b.items.push({score:1,id:O})});const k=h._getSortFunction(b);return k&&b.items.sort(k),b.total=b.items.length,typeof i.limit=="number"&&(b.items=b.items.slice(0,i.limit)),b}}const Xt=n=>typeof n>"u"||n===null?null:Ln(n),Ln=n=>typeof n=="boolean"?n?"1":"0":n+"",Or=n=>(n+"").replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;"),Cg=(n,s)=>s>0?window.setTimeout(n,s):(n.call(null),null),kg=(n,s)=>{var i;return function(h,g){var b=this;i&&(b.loading=Math.max(b.loading-1,0),clearTimeout(i)),i=setTimeout(function(){i=null,b.loadedSearches[h]=!0,n.call(b,h,g)},s)}},Oo=(n,s,i)=>{var h,g=n.trigger,b={};n.trigger=function(){var v=arguments[0];if(s.indexOf(v)!==-1)b[v]=arguments;else return g.apply(n,arguments)},i.apply(n,[]),n.trigger=g;for(h of s)h in b&&g.apply(n,b[h])},Eg=n=>({start:n.selectionStart||0,length:(n.selectionEnd||0)-(n.selectionStart||0)}),$e=(n,s=!1)=>{n&&(n.preventDefault(),s&&n.stopPropagation())},ft=(n,s,i,h)=>{n.addEventListener(s,i,h)},Si=(n,s)=>{if(!s||!s[n])return!1;var i=(s.altKey?1:0)+(s.ctrlKey?1:0)+(s.shiftKey?1:0)+(s.metaKey?1:0);return i===1},Fr=(n,s)=>{const i=n.getAttribute("id");return i||(n.setAttribute("id",s),s)},Fo=n=>n.replace(/[\\"']/g,"\\$&"),Ci=(n,s)=>{s&&n.append(s)},nt=(n,s)=>{if(Array.isArray(n))n.forEach(s);else for(var i in n)n.hasOwnProperty(i)&&s(n[i],i)},Zt=n=>{if(n.jquery)return n[0];if(n instanceof HTMLElement)return n;if(Uc(n)){var s=document.createElement("template");return s.innerHTML=n.trim(),s.content.firstChild}return document.querySelector(n)},Uc=n=>typeof n=="string"&&n.indexOf("<")>-1,Mg=n=>n.replace(/['"\\]/g,"\\$&"),Rr=(n,s)=>{var i=document.createEvent("HTMLEvents");i.initEvent(s,!0,!1),n.dispatchEvent(i)},mn=(n,s)=>{Object.assign(n.style,s)},Et=(n,...s)=>{var i=$c(s);n=qc(n),n.map(h=>{i.map(g=>{h.classList.add(g)})})},di=(n,...s)=>{var i=$c(s);n=qc(n),n.map(h=>{i.map(g=>{h.classList.remove(g)})})},$c=n=>{var s=[];return nt(n,i=>{typeof i=="string"&&(i=i.trim().split(/[\t\n\f\r\s]/)),Array.isArray(i)&&(s=s.concat(i))}),s.filter(Boolean)},qc=n=>(Array.isArray(n)||(n=[n]),n),Nr=(n,s,i)=>{if(!(i&&!i.contains(n)))for(;n&&n.matches;){if(n.matches(s))return n;n=n.parentNode}},Ro=(n,s=0)=>s>0?n[n.length-1]:n[0],_g=n=>Object.keys(n).length===0,No=(n,s)=>{if(!n)return-1;s=s||n.nodeName;for(var i=0;n=n.previousElementSibling;)n.matches(s)&&i++;return i},Ge=(n,s)=>{nt(s,(i,h)=>{i==null?n.removeAttribute(h):n.setAttribute(h,""+i)})},ws=(n,s)=>{n.parentNode&&n.parentNode.replaceChild(s,n)},Pg=(n,s)=>{if(s===null)return;if(typeof s=="string"){if(!s.length)return;s=new RegExp(s,"i")}const i=b=>{var v=b.data.match(s);if(v&&b.data.length>0){var k=document.createElement("span");k.className="highlight";var T=b.splitText(v.index);T.splitText(v[0].length);var O=T.cloneNode(!0);return k.appendChild(O),ws(T,k),1}return 0},h=b=>{b.nodeType===1&&b.childNodes&&!/(script|style)/i.test(b.tagName)&&(b.className!=="highlight"||b.tagName!=="SPAN")&&Array.from(b.childNodes).forEach(v=>{g(v)})},g=b=>b.nodeType===3?i(b):(h(b),0);g(n)},Lg=n=>{var s=n.querySelectorAll("span.highlight");Array.prototype.forEach.call(s,function(i){var h=i.parentNode;h.replaceChild(i.firstChild,i),h.normalize()})},Tg=65,Dg=13,Ig=27,Og=37,Fg=38,Rg=39,Ng=40,zo=8,zg=46,Yo=9,Yg=typeof navigator>"u"?!1:/Mac/.test(navigator.userAgent),xn=Yg?"metaKey":"ctrlKey",Ho={options:[],optgroups:[],plugins:[],delimiter:",",splitOn:null,persist:!0,diacritics:!0,create:null,createOnBlur:!1,createFilter:null,highlight:!0,openOnFocus:!0,shouldOpen:null,maxOptions:50,maxItems:null,hideSelected:null,duplicates:!1,addPrecedence:!1,selectOnTab:!1,preload:null,allowEmptyOption:!1,refreshThrottle:300,loadThrottle:300,loadingClass:"loading",dataAttr:null,optgroupField:"optgroup",valueField:"value",labelField:"text",disabledField:"disabled",optgroupLabelField:"label",optgroupValueField:"value",lockOptgroupOrder:!1,sortField:"$order",searchField:["text"],searchConjunction:"and",mode:null,wrapperClass:"ts-wrapper",controlClass:"ts-control",dropdownClass:"ts-dropdown",dropdownContentClass:"ts-dropdown-content",itemClass:"item",optionClass:"option",dropdownParent:null,controlInput:'<input type="text" autocomplete="off" size="1" />',copyClassesToDropdown:!1,placeholder:null,hidePlaceholder:null,shouldLoad:function(n){return n.length>0},render:{}};function Xo(n,s){var i=Object.assign({},Ho,s),h=i.dataAttr,g=i.labelField,b=i.valueField,v=i.disabledField,k=i.optgroupField,T=i.optgroupLabelField,O=i.optgroupValueField,F=n.tagName.toLowerCase(),z=n.getAttribute("placeholder")||n.getAttribute("data-placeholder");if(!z&&!i.allowEmptyOption){let q=n.querySelector('option[value=""]');q&&(z=q.textContent)}var G={placeholder:z,options:[],optgroups:[],items:[],maxItems:null},ae=()=>{var q,$=G.options,ie={},Q=1;let ne=0;var pe=ce=>{var V=Object.assign({},ce.dataset),se=h&&V[h];return typeof se=="string"&&se.length&&(V=Object.assign(V,JSON.parse(se))),V},X=(ce,V)=>{var se=Xt(ce.value);if(se!=null&&!(!se&&!i.allowEmptyOption)){if(ie.hasOwnProperty(se)){if(V){var Le=ie[se][k];Le?Array.isArray(Le)?Le.push(V):ie[se][k]=[Le,V]:ie[se][k]=V}}else{var ke=pe(ce);ke[g]=ke[g]||ce.textContent,ke[b]=ke[b]||se,ke[v]=ke[v]||ce.disabled,ke[k]=ke[k]||V,ke.$option=ce,ke.$order=ke.$order||++ne,ie[se]=ke,$.push(ke)}ce.selected&&G.items.push(se)}},we=ce=>{var V,se;se=pe(ce),se[T]=se[T]||ce.getAttribute("label")||"",se[O]=se[O]||Q++,se[v]=se[v]||ce.disabled,se.$order=se.$order||++ne,G.optgroups.push(se),V=se[O],nt(ce.children,Le=>{X(Le,V)})};G.maxItems=n.hasAttribute("multiple")?null:1,nt(n.children,ce=>{q=ce.tagName.toLowerCase(),q==="optgroup"?we(ce):q==="option"&&X(ce)})},Y=()=>{const q=n.getAttribute(h);if(q)G.options=JSON.parse(q),nt(G.options,ie=>{G.items.push(ie[b])});else{var $=n.value.trim()||"";if(!i.allowEmptyOption&&!$.length)return;const ie=$.split(i.delimiter);nt(ie,Q=>{const ne={};ne[g]=Q,ne[b]=Q,G.options.push(ne)}),G.items=ie}};return F==="select"?ae():Y(),Object.assign({},Ho,G,s)}var Bo=0;class xt extends ag(ig){constructor(s,i){super(),this.order=0,this.isOpen=!1,this.isDisabled=!1,this.isReadOnly=!1,this.isInvalid=!1,this.isValid=!0,this.isLocked=!1,this.isFocused=!1,this.isInputHidden=!1,this.isSetup=!1,this.ignoreFocus=!1,this.ignoreHover=!1,this.hasOptions=!1,this.lastValue="",this.caretPos=0,this.loading=0,this.loadedSearches={},this.activeOption=null,this.activeItems=[],this.optgroups={},this.options={},this.userOptions={},this.items=[],this.refreshTimeout=null,Bo++;var h,g=Zt(s);if(g.tomselect)throw new Error("Tom Select already initialized on this element");g.tomselect=this;var b=window.getComputedStyle&&window.getComputedStyle(g,null);h=b.getPropertyValue("direction");const v=Xo(g,i);this.settings=v,this.input=g,this.tabIndex=g.tabIndex||0,this.is_select_tag=g.tagName.toLowerCase()==="select",this.rtl=/rtl/i.test(h),this.inputId=Fr(g,"tomselect-"+Bo),this.isRequired=g.required,this.sifter=new Sg(this.options,{diacritics:v.diacritics}),v.mode=v.mode||(v.maxItems===1?"single":"multi"),typeof v.hideSelected!="boolean"&&(v.hideSelected=v.mode==="multi"),typeof v.hidePlaceholder!="boolean"&&(v.hidePlaceholder=v.mode!=="multi");var k=v.createFilter;typeof k!="function"&&(typeof k=="string"&&(k=new RegExp(k)),k instanceof RegExp?v.createFilter=$=>k.test($):v.createFilter=$=>this.settings.duplicates||!this.options[$]),this.initializePlugins(v.plugins),this.setupCallbacks(),this.setupTemplates();const T=Zt("<div>"),O=Zt("<div>"),F=this._render("dropdown"),z=Zt('<div role="listbox" tabindex="-1">'),G=this.input.getAttribute("class")||"",ae=v.mode;var Y;if(Et(T,v.wrapperClass,G,ae),Et(O,v.controlClass),Ci(T,O),Et(F,v.dropdownClass,ae),v.copyClassesToDropdown&&Et(F,G),Et(z,v.dropdownContentClass),Ci(F,z),Zt(v.dropdownParent||T).appendChild(F),Uc(v.controlInput)){Y=Zt(v.controlInput);var q=["autocorrect","autocapitalize","autocomplete","spellcheck"];nt(q,$=>{g.getAttribute($)&&Ge(Y,{[$]:g.getAttribute($)})}),Y.tabIndex=-1,O.appendChild(Y),this.focus_node=Y}else v.controlInput?(Y=Zt(v.controlInput),this.focus_node=Y):(Y=Zt("<input/>"),this.focus_node=O);this.wrapper=T,this.dropdown=F,this.dropdown_content=z,this.control=O,this.control_input=Y,this.setup()}setup(){const s=this,i=s.settings,h=s.control_input,g=s.dropdown,b=s.dropdown_content,v=s.wrapper,k=s.control,T=s.input,O=s.focus_node,F={passive:!0},z=s.inputId+"-ts-dropdown";Ge(b,{id:z}),Ge(O,{role:"combobox","aria-haspopup":"listbox","aria-expanded":"false","aria-controls":z});const G=Fr(O,s.inputId+"-ts-control"),ae="label[for='"+Mg(s.inputId)+"']",Y=document.querySelector(ae),q=s.focus.bind(s);if(Y){ft(Y,"click",q),Ge(Y,{for:G});const Q=Fr(Y,s.inputId+"-ts-label");Ge(O,{"aria-labelledby":Q}),Ge(b,{"aria-labelledby":Q})}if(v.style.width=T.style.width,s.plugins.names.length){const Q="plugin-"+s.plugins.names.join(" plugin-");Et([v,g],Q)}(i.maxItems===null||i.maxItems>1)&&s.is_select_tag&&Ge(T,{multiple:"multiple"}),i.placeholder&&Ge(h,{placeholder:i.placeholder}),!i.splitOn&&i.delimiter&&(i.splitOn=new RegExp("\\s*"+Xa(i.delimiter)+"+\\s*")),i.load&&i.loadThrottle&&(i.load=kg(i.load,i.loadThrottle)),ft(g,"mousemove",()=>{s.ignoreHover=!1}),ft(g,"mouseenter",Q=>{var ne=Nr(Q.target,"[data-selectable]",g);ne&&s.onOptionHover(Q,ne)},{capture:!0}),ft(g,"click",Q=>{const ne=Nr(Q.target,"[data-selectable]");ne&&(s.onOptionSelect(Q,ne),$e(Q,!0))}),ft(k,"click",Q=>{var ne=Nr(Q.target,"[data-ts-item]",k);if(ne&&s.onItemSelect(Q,ne)){$e(Q,!0);return}h.value==""&&(s.onClick(),$e(Q,!0))}),ft(O,"keydown",Q=>s.onKeyDown(Q)),ft(h,"keypress",Q=>s.onKeyPress(Q)),ft(h,"input",Q=>s.onInput(Q)),ft(O,"blur",Q=>s.onBlur(Q)),ft(O,"focus",Q=>s.onFocus(Q)),ft(h,"paste",Q=>s.onPaste(Q));const $=Q=>{const ne=Q.composedPath()[0];if(!v.contains(ne)&&!g.contains(ne)){s.isFocused&&s.blur(),s.inputState();return}ne==h&&s.isOpen?Q.stopPropagation():$e(Q,!0)},ie=()=>{s.isOpen&&s.positionDropdown()};ft(document,"mousedown",$),ft(window,"scroll",ie,F),ft(window,"resize",ie,F),this._destroy=()=>{document.removeEventListener("mousedown",$),window.removeEventListener("scroll",ie),window.removeEventListener("resize",ie),Y&&Y.removeEventListener("click",q)},this.revertSettings={innerHTML:T.innerHTML,tabIndex:T.tabIndex},T.tabIndex=-1,T.insertAdjacentElement("afterend",s.wrapper),s.sync(!1),i.items=[],delete i.optgroups,delete i.options,ft(T,"invalid",()=>{s.isValid&&(s.isValid=!1,s.isInvalid=!0,s.refreshState())}),s.updateOriginalInput(),s.refreshItems(),s.close(!1),s.inputState(),s.isSetup=!0,T.disabled?s.disable():T.readOnly?s.setReadOnly(!0):s.enable(),s.on("change",this.onChange),Et(T,"tomselected","ts-hidden-accessible"),s.trigger("initialize"),i.preload===!0&&s.preload()}setupOptions(s=[],i=[]){this.addOptions(s),nt(i,h=>{this.registerOptionGroup(h)})}setupTemplates(){var s=this,i=s.settings.labelField,h=s.settings.optgroupLabelField,g={optgroup:b=>{let v=document.createElement("div");return v.className="optgroup",v.appendChild(b.options),v},optgroup_header:(b,v)=>'<div class="optgroup-header">'+v(b[h])+"</div>",option:(b,v)=>"<div>"+v(b[i])+"</div>",item:(b,v)=>"<div>"+v(b[i])+"</div>",option_create:(b,v)=>'<div class="create">Add <strong>'+v(b.input)+"</strong>&hellip;</div>",no_results:()=>'<div class="no-results">No results found</div>',loading:()=>'<div class="spinner"></div>',not_loading:()=>{},dropdown:()=>"<div></div>"};s.settings.render=Object.assign({},g,s.settings.render)}setupCallbacks(){var s,i,h={initialize:"onInitialize",change:"onChange",item_add:"onItemAdd",item_remove:"onItemRemove",item_select:"onItemSelect",clear:"onClear",option_add:"onOptionAdd",option_remove:"onOptionRemove",option_clear:"onOptionClear",optgroup_add:"onOptionGroupAdd",optgroup_remove:"onOptionGroupRemove",optgroup_clear:"onOptionGroupClear",dropdown_open:"onDropdownOpen",dropdown_close:"onDropdownClose",type:"onType",load:"onLoad",focus:"onFocus",blur:"onBlur"};for(s in h)i=this.settings[h[s]],i&&this.on(s,i)}sync(s=!0){const i=this,h=s?Xo(i.input,{delimiter:i.settings.delimiter}):i.settings;i.setupOptions(h.options,h.optgroups),i.setValue(h.items||[],!0),i.lastQuery=null}onClick(){var s=this;if(s.activeItems.length>0){s.clearActiveItems(),s.focus();return}s.isFocused&&s.isOpen?s.blur():s.focus()}onMouseDown(){}onChange(){Rr(this.input,"input"),Rr(this.input,"change")}onPaste(s){var i=this;if(i.isInputHidden||i.isLocked){$e(s);return}i.settings.splitOn&&setTimeout(()=>{var h=i.inputValue();if(h.match(i.settings.splitOn)){var g=h.trim().split(i.settings.splitOn);nt(g,b=>{Xt(b)&&(this.options[b]?i.addItem(b):i.createItem(b))})}},0)}onKeyPress(s){var i=this;if(i.isLocked){$e(s);return}var h=String.fromCharCode(s.keyCode||s.which);if(i.settings.create&&i.settings.mode==="multi"&&h===i.settings.delimiter){i.createItem(),$e(s);return}}onKeyDown(s){var i=this;if(i.ignoreHover=!0,i.isLocked){s.keyCode!==Yo&&$e(s);return}switch(s.keyCode){case Tg:if(Si(xn,s)&&i.control_input.value==""){$e(s),i.selectAll();return}break;case Ig:i.isOpen&&($e(s,!0),i.close()),i.clearActiveItems();return;case Ng:if(!i.isOpen&&i.hasOptions)i.open();else if(i.activeOption){let h=i.getAdjacent(i.activeOption,1);h&&i.setActiveOption(h)}$e(s);return;case Fg:if(i.activeOption){let h=i.getAdjacent(i.activeOption,-1);h&&i.setActiveOption(h)}$e(s);return;case Dg:i.canSelect(i.activeOption)?(i.onOptionSelect(s,i.activeOption),$e(s)):(i.settings.create&&i.createItem()||document.activeElement==i.control_input&&i.isOpen)&&$e(s);return;case Og:i.advanceSelection(-1,s);return;case Rg:i.advanceSelection(1,s);return;case Yo:i.settings.selectOnTab&&(i.canSelect(i.activeOption)&&(i.onOptionSelect(s,i.activeOption),$e(s)),i.settings.create&&i.createItem()&&$e(s));return;case zo:case zg:i.deleteSelection(s);return}i.isInputHidden&&!Si(xn,s)&&$e(s)}onInput(s){if(this.isLocked)return;const i=this.inputValue();if(this.lastValue!==i){if(this.lastValue=i,i==""){this._onInput();return}this.refreshTimeout&&window.clearTimeout(this.refreshTimeout),this.refreshTimeout=Cg(()=>{this.refreshTimeout=null,this._onInput()},this.settings.refreshThrottle)}}_onInput(){const s=this.lastValue;this.settings.shouldLoad.call(this,s)&&this.load(s),this.refreshOptions(),this.trigger("type",s)}onOptionHover(s,i){this.ignoreHover||this.setActiveOption(i,!1)}onFocus(s){var i=this,h=i.isFocused;if(i.isDisabled||i.isReadOnly){i.blur(),$e(s);return}i.ignoreFocus||(i.isFocused=!0,i.settings.preload==="focus"&&i.preload(),h||i.trigger("focus"),i.activeItems.length||(i.inputState(),i.refreshOptions(!!i.settings.openOnFocus)),i.refreshState())}onBlur(s){if(document.hasFocus()!==!1){var i=this;if(i.isFocused){i.isFocused=!1,i.ignoreFocus=!1;var h=()=>{i.close(),i.setActiveItem(),i.setCaret(i.items.length),i.trigger("blur")};i.settings.create&&i.settings.createOnBlur?i.createItem(null,h):h()}}}onOptionSelect(s,i){var h,g=this;i.parentElement&&i.parentElement.matches("[data-disabled]")||(i.classList.contains("create")?g.createItem(null,()=>{g.settings.closeAfterSelect&&g.close()}):(h=i.dataset.value,typeof h<"u"&&(g.lastQuery=null,g.addItem(h),g.settings.closeAfterSelect&&g.close(),!g.settings.hideSelected&&s.type&&/click/.test(s.type)&&g.setActiveOption(i))))}canSelect(s){return!!(this.isOpen&&s&&this.dropdown_content.contains(s))}onItemSelect(s,i){var h=this;return!h.isLocked&&h.settings.mode==="multi"?($e(s),h.setActiveItem(i,s),!0):!1}canLoad(s){return!(!this.settings.load||this.loadedSearches.hasOwnProperty(s))}load(s){const i=this;if(!i.canLoad(s))return;Et(i.wrapper,i.settings.loadingClass),i.loading++;const h=i.loadCallback.bind(i);i.settings.load.call(i,s,h)}loadCallback(s,i){const h=this;h.loading=Math.max(h.loading-1,0),h.lastQuery=null,h.clearActiveOption(),h.setupOptions(s,i),h.refreshOptions(h.isFocused&&!h.isInputHidden),h.loading||di(h.wrapper,h.settings.loadingClass),h.trigger("load",s,i)}preload(){var s=this.wrapper.classList;s.contains("preloaded")||(s.add("preloaded"),this.load(""))}setTextboxValue(s=""){var i=this.control_input,h=i.value!==s;h&&(i.value=s,Rr(i,"update"),this.lastValue=s)}getValue(){return this.is_select_tag&&this.input.hasAttribute("multiple")?this.items:this.items.join(this.settings.delimiter)}setValue(s,i){var h=i?[]:["change"];Oo(this,h,()=>{this.clear(i),this.addItems(s,i)})}setMaxItems(s){s===0&&(s=null),this.settings.maxItems=s,this.refreshState()}setActiveItem(s,i){var h=this,g,b,v,k,T,O;if(h.settings.mode!=="single"){if(!s){h.clearActiveItems(),h.isFocused&&h.inputState();return}if(g=i&&i.type.toLowerCase(),g==="click"&&Si("shiftKey",i)&&h.activeItems.length){for(O=h.getLastActive(),v=Array.prototype.indexOf.call(h.control.children,O),k=Array.prototype.indexOf.call(h.control.children,s),v>k&&(T=v,v=k,k=T),b=v;b<=k;b++)s=h.control.children[b],h.activeItems.indexOf(s)===-1&&h.setActiveItemClass(s);$e(i)}else g==="click"&&Si(xn,i)||g==="keydown"&&Si("shiftKey",i)?s.classList.contains("active")?h.removeActiveItem(s):h.setActiveItemClass(s):(h.clearActiveItems(),h.setActiveItemClass(s));h.inputState(),h.isFocused||h.focus()}}setActiveItemClass(s){const i=this,h=i.control.querySelector(".last-active");h&&di(h,"last-active"),Et(s,"active last-active"),i.trigger("item_select",s),i.activeItems.indexOf(s)==-1&&i.activeItems.push(s)}removeActiveItem(s){var i=this.activeItems.indexOf(s);this.activeItems.splice(i,1),di(s,"active")}clearActiveItems(){di(this.activeItems,"active"),this.activeItems=[]}setActiveOption(s,i=!0){s!==this.activeOption&&(this.clearActiveOption(),s&&(this.activeOption=s,Ge(this.focus_node,{"aria-activedescendant":s.getAttribute("id")}),Ge(s,{"aria-selected":"true"}),Et(s,"active"),i&&this.scrollToOption(s)))}scrollToOption(s,i){if(!s)return;const h=this.dropdown_content,g=h.clientHeight,b=h.scrollTop||0,v=s.offsetHeight,k=s.getBoundingClientRect().top-h.getBoundingClientRect().top+b;k+v>g+b?this.scroll(k-g+v,i):k<b&&this.scroll(k,i)}scroll(s,i){const h=this.dropdown_content;i&&(h.style.scrollBehavior=i),h.scrollTop=s,h.style.scrollBehavior=""}clearActiveOption(){this.activeOption&&(di(this.activeOption,"active"),Ge(this.activeOption,{"aria-selected":null})),this.activeOption=null,Ge(this.focus_node,{"aria-activedescendant":null})}selectAll(){const s=this;if(s.settings.mode==="single")return;const i=s.controlChildren();i.length&&(s.inputState(),s.close(),s.activeItems=i,nt(i,h=>{s.setActiveItemClass(h)}))}inputState(){var s=this;s.control.contains(s.control_input)&&(Ge(s.control_input,{placeholder:s.settings.placeholder}),s.activeItems.length>0||!s.isFocused&&s.settings.hidePlaceholder&&s.items.length>0?(s.setTextboxValue(),s.isInputHidden=!0):(s.settings.hidePlaceholder&&s.items.length>0&&Ge(s.control_input,{placeholder:""}),s.isInputHidden=!1),s.wrapper.classList.toggle("input-hidden",s.isInputHidden))}inputValue(){return this.control_input.value.trim()}focus(){var s=this;s.isDisabled||s.isReadOnly||(s.ignoreFocus=!0,s.control_input.offsetWidth?s.control_input.focus():s.focus_node.focus(),setTimeout(()=>{s.ignoreFocus=!1,s.onFocus()},0))}blur(){this.focus_node.blur(),this.onBlur()}getScoreFunction(s){return this.sifter.getScoreFunction(s,this.getSearchOptions())}getSearchOptions(){var s=this.settings,i=s.sortField;return typeof s.sortField=="string"&&(i=[{field:s.sortField}]),{fields:s.searchField,conjunction:s.searchConjunction,sort:i,nesting:s.nesting}}search(s){var i,h,g=this,b=this.getSearchOptions();if(g.settings.score&&(h=g.settings.score.call(g,s),typeof h!="function"))throw new Error('Tom Select "score" setting must be a function that returns a function');return s!==g.lastQuery?(g.lastQuery=s,i=g.sifter.search(s,Object.assign(b,{score:h})),g.currentResults=i):i=Object.assign({},g.currentResults),g.settings.hideSelected&&(i.items=i.items.filter(v=>{let k=Xt(v.id);return!(k&&g.items.indexOf(k)!==-1)})),i}refreshOptions(s=!0){var i,h,g,b,v,k,T,O,F,z;const G={},ae=[];var Y=this,q=Y.inputValue();const $=q===Y.lastQuery||q==""&&Y.lastQuery==null;var ie=Y.search(q),Q=null,ne=Y.settings.shouldOpen||!1,pe=Y.dropdown_content;$&&(Q=Y.activeOption,Q&&(F=Q.closest("[data-group]"))),b=ie.items.length,typeof Y.settings.maxOptions=="number"&&(b=Math.min(b,Y.settings.maxOptions)),b>0&&(ne=!0);const X=(ce,V)=>{let se=G[ce];if(se!==void 0){let ke=ae[se];if(ke!==void 0)return[se,ke.fragment]}let Le=document.createDocumentFragment();return se=ae.length,ae.push({fragment:Le,order:V,optgroup:ce}),[se,Le]};for(i=0;i<b;i++){let ce=ie.items[i];if(!ce)continue;let V=ce.id,se=Y.options[V];if(se===void 0)continue;let Le=Ln(V),ke=Y.getOption(Le,!0);for(Y.settings.hideSelected||ke.classList.toggle("selected",Y.items.includes(Le)),v=se[Y.settings.optgroupField]||"",k=Array.isArray(v)?v:[v],h=0,g=k&&k.length;h<g;h++){v=k[h];let De=se.$order,Ye=Y.optgroups[v];Ye===void 0?v="":De=Ye.$order;const[Ke,Tt]=X(v,De);h>0&&(ke=ke.cloneNode(!0),Ge(ke,{id:se.$id+"-clone-"+h,"aria-selected":null}),ke.classList.add("ts-cloned"),di(ke,"active"),Y.activeOption&&Y.activeOption.dataset.value==V&&F&&F.dataset.group===v.toString()&&(Q=ke)),Tt.appendChild(ke),v!=""&&(G[v]=Ke)}}Y.settings.lockOptgroupOrder&&ae.sort((ce,V)=>ce.order-V.order),T=document.createDocumentFragment(),nt(ae,ce=>{let V=ce.fragment,se=ce.optgroup;if(!V||!V.children.length)return;let Le=Y.optgroups[se];if(Le!==void 0){let ke=document.createDocumentFragment(),De=Y.render("optgroup_header",Le);Ci(ke,De),Ci(ke,V);let Ye=Y.render("optgroup",{group:Le,options:ke});Ci(T,Ye)}else Ci(T,V)}),pe.innerHTML="",Ci(pe,T),Y.settings.highlight&&(Lg(pe),ie.query.length&&ie.tokens.length&&nt(ie.tokens,ce=>{Pg(pe,ce.regex)}));var we=ce=>{let V=Y.render(ce,{input:q});return V&&(ne=!0,pe.insertBefore(V,pe.firstChild)),V};if(Y.loading?we("loading"):Y.settings.shouldLoad.call(Y,q)?ie.items.length===0&&we("no_results"):we("not_loading"),O=Y.canCreate(q),O&&(z=we("option_create")),Y.hasOptions=ie.items.length>0||O,ne){if(ie.items.length>0){if(!Q&&Y.settings.mode==="single"&&Y.items[0]!=null&&(Q=Y.getOption(Y.items[0])),!pe.contains(Q)){let ce=0;z&&!Y.settings.addPrecedence&&(ce=1),Q=Y.selectable()[ce]}}else z&&(Q=z);s&&!Y.isOpen&&(Y.open(),Y.scrollToOption(Q,"auto")),Y.setActiveOption(Q)}else Y.clearActiveOption(),s&&Y.isOpen&&Y.close(!1)}selectable(){return this.dropdown_content.querySelectorAll("[data-selectable]")}addOption(s,i=!1){const h=this;if(Array.isArray(s))return h.addOptions(s,i),!1;const g=Xt(s[h.settings.valueField]);return g===null||h.options.hasOwnProperty(g)?!1:(s.$order=s.$order||++h.order,s.$id=h.inputId+"-opt-"+s.$order,h.options[g]=s,h.lastQuery=null,i&&(h.userOptions[g]=i,h.trigger("option_add",g,s)),g)}addOptions(s,i=!1){nt(s,h=>{this.addOption(h,i)})}registerOption(s){return this.addOption(s)}registerOptionGroup(s){var i=Xt(s[this.settings.optgroupValueField]);return i===null?!1:(s.$order=s.$order||++this.order,this.optgroups[i]=s,i)}addOptionGroup(s,i){var h;i[this.settings.optgroupValueField]=s,(h=this.registerOptionGroup(i))&&this.trigger("optgroup_add",h,i)}removeOptionGroup(s){this.optgroups.hasOwnProperty(s)&&(delete this.optgroups[s],this.clearCache(),this.trigger("optgroup_remove",s))}clearOptionGroups(){this.optgroups={},this.clearCache(),this.trigger("optgroup_clear")}updateOption(s,i){const h=this;var g,b;const v=Xt(s),k=Xt(i[h.settings.valueField]);if(v===null)return;const T=h.options[v];if(T==null)return;if(typeof k!="string")throw new Error("Value must be set in option data");const O=h.getOption(v),F=h.getItem(v);if(i.$order=i.$order||T.$order,delete h.options[v],h.uncacheValue(k),h.options[k]=i,O){if(h.dropdown_content.contains(O)){const z=h._render("option",i);ws(O,z),h.activeOption===O&&h.setActiveOption(z)}O.remove()}F&&(b=h.items.indexOf(v),b!==-1&&h.items.splice(b,1,k),g=h._render("item",i),F.classList.contains("active")&&Et(g,"active"),ws(F,g)),h.lastQuery=null}removeOption(s,i){const h=this;s=Ln(s),h.uncacheValue(s),delete h.userOptions[s],delete h.options[s],h.lastQuery=null,h.trigger("option_remove",s),h.removeItem(s,i)}clearOptions(s){const i=(s||this.clearFilter).bind(this);this.loadedSearches={},this.userOptions={},this.clearCache();const h={};nt(this.options,(g,b)=>{i(g,b)&&(h[b]=g)}),this.options=this.sifter.items=h,this.lastQuery=null,this.trigger("option_clear")}clearFilter(s,i){return this.items.indexOf(i)>=0}getOption(s,i=!1){const h=Xt(s);if(h===null)return null;const g=this.options[h];if(g!=null){if(g.$div)return g.$div;if(i)return this._render("option",g)}return null}getAdjacent(s,i,h="option"){var g=this,b;if(!s)return null;h=="item"?b=g.controlChildren():b=g.dropdown_content.querySelectorAll("[data-selectable]");for(let v=0;v<b.length;v++)if(b[v]==s)return i>0?b[v+1]:b[v-1];return null}getItem(s){if(typeof s=="object")return s;var i=Xt(s);return i!==null?this.control.querySelector(`[data-value="${Fo(i)}"]`):null}addItems(s,i){var h=this,g=Array.isArray(s)?s:[s];g=g.filter(v=>h.items.indexOf(v)===-1);const b=g[g.length-1];g.forEach(v=>{h.isPending=v!==b,h.addItem(v,i)})}addItem(s,i){var h=i?[]:["change","dropdown_close"];Oo(this,h,()=>{var g,b;const v=this,k=v.settings.mode,T=Xt(s);if(!(T&&v.items.indexOf(T)!==-1&&(k==="single"&&v.close(),k==="single"||!v.settings.duplicates))&&!(T===null||!v.options.hasOwnProperty(T))&&(k==="single"&&v.clear(i),!(k==="multi"&&v.isFull()))){if(g=v._render("item",v.options[T]),v.control.contains(g)&&(g=g.cloneNode(!0)),b=v.isFull(),v.items.splice(v.caretPos,0,T),v.insertAtCaret(g),v.isSetup){if(!v.isPending&&v.settings.hideSelected){let O=v.getOption(T),F=v.getAdjacent(O,1);F&&v.setActiveOption(F)}!v.isPending&&!v.settings.closeAfterSelect&&v.refreshOptions(v.isFocused&&k!=="single"),v.settings.closeAfterSelect!=!1&&v.isFull()?v.close():v.isPending||v.positionDropdown(),v.trigger("item_add",T,g),v.isPending||v.updateOriginalInput({silent:i})}(!v.isPending||!b&&v.isFull())&&(v.inputState(),v.refreshState())}})}removeItem(s=null,i){const h=this;if(s=h.getItem(s),!s)return;var g,b;const v=s.dataset.value;g=No(s),s.remove(),s.classList.contains("active")&&(b=h.activeItems.indexOf(s),h.activeItems.splice(b,1),di(s,"active")),h.items.splice(g,1),h.lastQuery=null,!h.settings.persist&&h.userOptions.hasOwnProperty(v)&&h.removeOption(v,i),g<h.caretPos&&h.setCaret(h.caretPos-1),h.updateOriginalInput({silent:i}),h.refreshState(),h.positionDropdown(),h.trigger("item_remove",v,s)}createItem(s=null,i=()=>{}){arguments.length===3&&(i=arguments[2]),typeof i!="function"&&(i=()=>{});var h=this,g=h.caretPos,b;if(s=s||h.inputValue(),!h.canCreate(s))return i(),!1;h.lock();var v=!1,k=T=>{if(h.unlock(),!T||typeof T!="object")return i();var O=Xt(T[h.settings.valueField]);if(typeof O!="string")return i();h.setTextboxValue(),h.addOption(T,!0),h.setCaret(g),h.addItem(O),i(T),v=!0};return typeof h.settings.create=="function"?b=h.settings.create.call(this,s,k):b={[h.settings.labelField]:s,[h.settings.valueField]:s},v||k(b),!0}refreshItems(){var s=this;s.lastQuery=null,s.isSetup&&s.addItems(s.items),s.updateOriginalInput(),s.refreshState()}refreshState(){const s=this;s.refreshValidityState();const i=s.isFull(),h=s.isLocked;s.wrapper.classList.toggle("rtl",s.rtl);const g=s.wrapper.classList;g.toggle("focus",s.isFocused),g.toggle("disabled",s.isDisabled),g.toggle("readonly",s.isReadOnly),g.toggle("required",s.isRequired),g.toggle("invalid",!s.isValid),g.toggle("locked",h),g.toggle("full",i),g.toggle("input-active",s.isFocused&&!s.isInputHidden),g.toggle("dropdown-active",s.isOpen),g.toggle("has-options",_g(s.options)),g.toggle("has-items",s.items.length>0)}refreshValidityState(){var s=this;s.input.validity&&(s.isValid=s.input.validity.valid,s.isInvalid=!s.isValid)}isFull(){return this.settings.maxItems!==null&&this.items.length>=this.settings.maxItems}updateOriginalInput(s={}){const i=this;var h,g;const b=i.input.querySelector('option[value=""]');if(i.is_select_tag){let O=function(F,z,G){return F||(F=Zt('<option value="'+Or(z)+'">'+Or(G)+"</option>")),F!=b&&i.input.append(F),k.push(F),(F!=b||T>0)&&(F.selected=!0),F};var v=O;const k=[],T=i.input.querySelectorAll("option:checked").length;i.input.querySelectorAll("option:checked").forEach(F=>{F.selected=!1}),i.items.length==0&&i.settings.mode=="single"?O(b,"",""):i.items.forEach(F=>{if(h=i.options[F],g=h[i.settings.labelField]||"",k.includes(h.$option)){const z=i.input.querySelector(`option[value="${Fo(F)}"]:not(:checked)`);O(z,F,g)}else h.$option=O(h.$option,F,g)})}else i.input.value=i.getValue();i.isSetup&&(s.silent||i.trigger("change",i.getValue()))}open(){var s=this;s.isLocked||s.isOpen||s.settings.mode==="multi"&&s.isFull()||(s.isOpen=!0,Ge(s.focus_node,{"aria-expanded":"true"}),s.refreshState(),mn(s.dropdown,{visibility:"hidden",display:"block"}),s.positionDropdown(),mn(s.dropdown,{visibility:"visible",display:"block"}),s.focus(),s.trigger("dropdown_open",s.dropdown))}close(s=!0){var i=this,h=i.isOpen;s&&(i.setTextboxValue(),i.settings.mode==="single"&&i.items.length&&i.inputState()),i.isOpen=!1,Ge(i.focus_node,{"aria-expanded":"false"}),mn(i.dropdown,{display:"none"}),i.settings.hideSelected&&i.clearActiveOption(),i.refreshState(),h&&i.trigger("dropdown_close",i.dropdown)}positionDropdown(){if(this.settings.dropdownParent==="body"){var s=this.control,i=s.getBoundingClientRect(),h=s.offsetHeight+i.top+window.scrollY,g=i.left+window.scrollX;mn(this.dropdown,{width:i.width+"px",top:h+"px",left:g+"px"})}}clear(s){var i=this;if(i.items.length){var h=i.controlChildren();nt(h,g=>{i.removeItem(g,!0)}),i.inputState(),s||i.updateOriginalInput(),i.trigger("clear")}}insertAtCaret(s){const i=this,h=i.caretPos,g=i.control;g.insertBefore(s,g.children[h]||null),i.setCaret(h+1)}deleteSelection(s){var i,h,g,b,v=this;i=s&&s.keyCode===zo?-1:1,h=Eg(v.control_input);const k=[];if(v.activeItems.length)b=Ro(v.activeItems,i),g=No(b),i>0&&g++,nt(v.activeItems,T=>k.push(T));else if((v.isFocused||v.settings.mode==="single")&&v.items.length){const T=v.controlChildren();let O;i<0&&h.start===0&&h.length===0?O=T[v.caretPos-1]:i>0&&h.start===v.inputValue().length&&(O=T[v.caretPos]),O!==void 0&&k.push(O)}if(!v.shouldDelete(k,s))return!1;for($e(s,!0),typeof g<"u"&&v.setCaret(g);k.length;)v.removeItem(k.pop());return v.inputState(),v.positionDropdown(),v.refreshOptions(!1),!0}shouldDelete(s,i){const h=s.map(g=>g.dataset.value);return!(!h.length||typeof this.settings.onDelete=="function"&&this.settings.onDelete(h,i)===!1)}advanceSelection(s,i){var h,g,b=this;b.rtl&&(s*=-1),!b.inputValue().length&&(Si(xn,i)||Si("shiftKey",i)?(h=b.getLastActive(s),h?h.classList.contains("active")?g=b.getAdjacent(h,s,"item"):g=h:s>0?g=b.control_input.nextElementSibling:g=b.control_input.previousElementSibling,g&&(g.classList.contains("active")&&b.removeActiveItem(h),b.setActiveItemClass(g))):b.moveCaret(s))}moveCaret(s){}getLastActive(s){let i=this.control.querySelector(".last-active");if(i)return i;var h=this.control.querySelectorAll(".active");if(h)return Ro(h,s)}setCaret(s){this.caretPos=this.items.length}controlChildren(){return Array.from(this.control.querySelectorAll("[data-ts-item]"))}lock(){this.setLocked(!0)}unlock(){this.setLocked(!1)}setLocked(s=this.isReadOnly||this.isDisabled){this.isLocked=s,this.refreshState()}disable(){this.setDisabled(!0),this.close()}enable(){this.setDisabled(!1)}setDisabled(s){this.focus_node.tabIndex=s?-1:this.tabIndex,this.isDisabled=s,this.input.disabled=s,this.control_input.disabled=s,this.setLocked()}setReadOnly(s){this.isReadOnly=s,this.input.readOnly=s,this.control_input.readOnly=s,this.setLocked()}destroy(){var s=this,i=s.revertSettings;s.trigger("destroy"),s.off(),s.wrapper.remove(),s.dropdown.remove(),s.input.innerHTML=i.innerHTML,s.input.tabIndex=i.tabIndex,di(s.input,"tomselected","ts-hidden-accessible"),s._destroy(),delete s.input.tomselect}render(s,i){var h,g;const b=this;if(typeof this.settings.render[s]!="function"||(g=b.settings.render[s].call(this,i,Or),!g))return null;if(g=Zt(g),s==="option"||s==="option_create"?i[b.settings.disabledField]?Ge(g,{"aria-disabled":"true"}):Ge(g,{"data-selectable":""}):s==="optgroup"&&(h=i.group[b.settings.optgroupValueField],Ge(g,{"data-group":h}),i.group[b.settings.disabledField]&&Ge(g,{"data-disabled":""})),s==="option"||s==="item"){const v=Ln(i[b.settings.valueField]);Ge(g,{"data-value":v}),s==="item"?(Et(g,b.settings.itemClass),Ge(g,{"data-ts-item":""})):(Et(g,b.settings.optionClass),Ge(g,{role:"option",id:i.$id}),i.$div=g,b.options[v]=i)}return g}_render(s,i){const h=this.render(s,i);if(h==null)throw"HTMLElement expected";return h}clearCache(){nt(this.options,s=>{s.$div&&(s.$div.remove(),delete s.$div)})}uncacheValue(s){const i=this.getOption(s);i&&i.remove()}canCreate(s){return this.settings.create&&s.length>0&&this.settings.createFilter.call(this,s)}hook(s,i,h){var g=this,b=g[i];g[i]=function(){var v,k;return s==="after"&&(v=b.apply(g,arguments)),k=h.apply(g,arguments),s==="instead"?k:(s==="before"&&(v=b.apply(g,arguments)),v)}}}const Hg=(n,s,i,h)=>{n.addEventListener(s,i,h)};function Xg(){Hg(this.input,"change",()=>{this.sync()})}const Bg=n=>typeof n>"u"||n===null?null:Wg(n),Wg=n=>typeof n=="boolean"?n?"1":"0":n+"",Wo=(n,s=!1)=>{n&&(n.preventDefault(),s&&n.stopPropagation())},Gg=n=>{if(n.jquery)return n[0];if(n instanceof HTMLElement)return n;if(Vg(n)){var s=document.createElement("template");return s.innerHTML=n.trim(),s.content.firstChild}return document.querySelector(n)},Vg=n=>typeof n=="string"&&n.indexOf("<")>-1;function jg(n){var s=this,i=s.onOptionSelect;s.settings.hideSelected=!1;const h=Object.assign({className:"tomselect-checkbox",checkedClassNames:void 0,uncheckedClassNames:void 0},n);var g=function(k,T){T?(k.checked=!0,h.uncheckedClassNames&&k.classList.remove(...h.uncheckedClassNames),h.checkedClassNames&&k.classList.add(...h.checkedClassNames)):(k.checked=!1,h.checkedClassNames&&k.classList.remove(...h.checkedClassNames),h.uncheckedClassNames&&k.classList.add(...h.uncheckedClassNames))},b=function(k){setTimeout(()=>{var T=k.querySelector("input."+h.className);T instanceof HTMLInputElement&&g(T,k.classList.contains("selected"))},1)};s.hook("after","setupTemplates",()=>{var v=s.settings.render.option;s.settings.render.option=(k,T)=>{var O=Gg(v.call(s,k,T)),F=document.createElement("input");h.className&&F.classList.add(h.className),F.addEventListener("click",function(G){Wo(G)}),F.type="checkbox";const z=Bg(k[s.settings.valueField]);return g(F,!!(z&&s.items.indexOf(z)>-1)),O.prepend(F),O}}),s.on("item_remove",v=>{var k=s.getOption(v);k&&(k.classList.remove("selected"),b(k))}),s.on("item_add",v=>{var k=s.getOption(v);k&&b(k)}),s.hook("instead","onOptionSelect",(v,k)=>{if(k.classList.contains("selected")){k.classList.remove("selected"),s.removeItem(k.dataset.value),s.refreshOptions(),Wo(v,!0);return}i.call(s,v,k),b(k)})}const Ug=n=>{if(n.jquery)return n[0];if(n instanceof HTMLElement)return n;if($g(n)){var s=document.createElement("template");return s.innerHTML=n.trim(),s.content.firstChild}return document.querySelector(n)},$g=n=>typeof n=="string"&&n.indexOf("<")>-1;function qg(n){const s=this,i=Object.assign({className:"clear-button",title:"Clear All",html:h=>`<div class="${h.className}" title="${h.title}">&#10799;</div>`},n);s.on("initialize",()=>{var h=Ug(i.html(i));h.addEventListener("click",g=>{s.isLocked||(s.clear(),s.settings.mode==="single"&&s.settings.allowEmptyOption&&s.addItem(""),g.preventDefault(),g.stopPropagation())}),s.control.appendChild(h)})}const Zg=(n,s=!1)=>{n&&(n.preventDefault(),s&&n.stopPropagation())},Zi=(n,s,i,h)=>{n.addEventListener(s,i,h)},Kg=(n,s)=>{if(Array.isArray(n))n.forEach(s);else for(var i in n)n.hasOwnProperty(i)&&s(n[i],i)},Jg=n=>{if(n.jquery)return n[0];if(n instanceof HTMLElement)return n;if(Qg(n)){var s=document.createElement("template");return s.innerHTML=n.trim(),s.content.firstChild}return document.querySelector(n)},Qg=n=>typeof n=="string"&&n.indexOf("<")>-1,ep=(n,s)=>{Kg(s,(i,h)=>{i==null?n.removeAttribute(h):n.setAttribute(h,""+i)})},tp=(n,s)=>{var i;(i=n.parentNode)==null||i.insertBefore(s,n.nextSibling)},ip=(n,s)=>{var i;(i=n.parentNode)==null||i.insertBefore(s,n)},ap=(n,s)=>{do{var i;if(s=(i=s)==null?void 0:i.previousElementSibling,n==s)return!0}while(s&&s.previousElementSibling);return!1};function np(){var n=this;if(n.settings.mode!=="multi")return;var s=n.lock,i=n.unlock;let h=!0,g;n.hook("after","setupTemplates",()=>{var b=n.settings.render.item;n.settings.render.item=(v,k)=>{const T=Jg(b.call(n,v,k));ep(T,{draggable:"true"});const O=q=>{h||Zg(q),q.stopPropagation()},F=q=>{g=T,setTimeout(()=>{T.classList.add("ts-dragging")},0)},z=q=>{q.preventDefault(),T.classList.add("ts-drag-over"),ae(T,g)},G=()=>{T.classList.remove("ts-drag-over")},ae=(q,$)=>{$!==void 0&&(ap($,T)?tp(q,$):ip(q,$))},Y=()=>{var q;document.querySelectorAll(".ts-drag-over").forEach(ie=>ie.classList.remove("ts-drag-over")),(q=g)==null||q.classList.remove("ts-dragging"),g=void 0;var $=[];n.control.querySelectorAll("[data-value]").forEach(ie=>{if(ie.dataset.value){let Q=ie.dataset.value;Q&&$.push(Q)}}),n.setValue($)};return Zi(T,"mousedown",O),Zi(T,"dragstart",F),Zi(T,"dragenter",z),Zi(T,"dragover",z),Zi(T,"dragleave",G),Zi(T,"dragend",Y),T}}),n.hook("instead","lock",()=>(h=!1,s.call(n))),n.hook("instead","unlock",()=>(h=!0,i.call(n)))}const rp=(n,s=!1)=>{n&&(n.preventDefault(),s&&n.stopPropagation())},sp=n=>{if(n.jquery)return n[0];if(n instanceof HTMLElement)return n;if(op(n)){var s=document.createElement("template");return s.innerHTML=n.trim(),s.content.firstChild}return document.querySelector(n)},op=n=>typeof n=="string"&&n.indexOf("<")>-1;function lp(n){const s=this,i=Object.assign({title:"Untitled",headerClass:"dropdown-header",titleRowClass:"dropdown-header-title",labelClass:"dropdown-header-label",closeClass:"dropdown-header-close",html:h=>'<div class="'+h.headerClass+'"><div class="'+h.titleRowClass+'"><span class="'+h.labelClass+'">'+h.title+'</span><a class="'+h.closeClass+'">&times;</a></div></div>'},n);s.on("initialize",()=>{var h=sp(i.html(i)),g=h.querySelector("."+i.closeClass);g&&g.addEventListener("click",b=>{rp(b,!0),s.close()}),s.dropdown.insertBefore(h,s.dropdown.firstChild)})}const cp=(n,s)=>{if(Array.isArray(n))n.forEach(s);else for(var i in n)n.hasOwnProperty(i)&&s(n[i],i)},hp=(n,...s)=>{var i=dp(s);n=up(n),n.map(h=>{i.map(g=>{h.classList.remove(g)})})},dp=n=>{var s=[];return cp(n,i=>{typeof i=="string"&&(i=i.trim().split(/[\t\n\f\r\s]/)),Array.isArray(i)&&(s=s.concat(i))}),s.filter(Boolean)},up=n=>(Array.isArray(n)||(n=[n]),n),fp=(n,s)=>{if(!n)return-1;s=s||n.nodeName;for(var i=0;n=n.previousElementSibling;)n.matches(s)&&i++;return i};function gp(){var n=this;n.hook("instead","setCaret",s=>{n.settings.mode==="single"||!n.control.contains(n.control_input)?s=n.items.length:(s=Math.max(0,Math.min(n.items.length,s)),s!=n.caretPos&&!n.isPending&&n.controlChildren().forEach((i,h)=>{h<s?n.control_input.insertAdjacentElement("beforebegin",i):n.control.appendChild(i)})),n.caretPos=s}),n.hook("instead","moveCaret",s=>{if(!n.isFocused)return;const i=n.getLastActive(s);if(i){const h=fp(i);n.setCaret(s>0?h+1:h),n.setActiveItem(),hp(i,"last-active")}else n.setCaret(n.caretPos+s)})}const pp=27,mp=9,xp=(n,s=!1)=>{n&&(n.preventDefault(),s&&n.stopPropagation())},vp=(n,s,i,h)=>{n.addEventListener(s,i,h)},bp=(n,s)=>{if(Array.isArray(n))n.forEach(s);else for(var i in n)n.hasOwnProperty(i)&&s(n[i],i)},Go=n=>{if(n.jquery)return n[0];if(n instanceof HTMLElement)return n;if(yp(n)){var s=document.createElement("template");return s.innerHTML=n.trim(),s.content.firstChild}return document.querySelector(n)},yp=n=>typeof n=="string"&&n.indexOf("<")>-1,wp=(n,...s)=>{var i=Ap(s);n=Sp(n),n.map(h=>{i.map(g=>{h.classList.add(g)})})},Ap=n=>{var s=[];return bp(n,i=>{typeof i=="string"&&(i=i.trim().split(/[\t\n\f\r\s]/)),Array.isArray(i)&&(s=s.concat(i))}),s.filter(Boolean)},Sp=n=>(Array.isArray(n)||(n=[n]),n);function Cp(){const n=this;n.settings.shouldOpen=!0,n.hook("before","setup",()=>{n.focus_node=n.control,wp(n.control_input,"dropdown-input");const s=Go('<div class="dropdown-input-wrap">');s.append(n.control_input),n.dropdown.insertBefore(s,n.dropdown.firstChild);const i=Go('<input class="items-placeholder" tabindex="-1" />');i.placeholder=n.settings.placeholder||"",n.control.append(i)}),n.on("initialize",()=>{n.control_input.addEventListener("keydown",i=>{switch(i.keyCode){case pp:n.isOpen&&(xp(i,!0),n.close()),n.clearActiveItems();return;case mp:n.focus_node.tabIndex=-1;break}return n.onKeyDown.call(n,i)}),n.on("blur",()=>{n.focus_node.tabIndex=n.isDisabled?-1:n.tabIndex}),n.on("dropdown_open",()=>{n.control_input.focus()});const s=n.onBlur;n.hook("instead","onBlur",i=>{if(!(i&&i.relatedTarget==n.control_input))return s.call(n)}),vp(n.control_input,"blur",()=>n.onBlur()),n.hook("before","close",()=>{n.isOpen&&n.focus_node.focus({preventScroll:!0})})})}const vn=(n,s,i,h)=>{n.addEventListener(s,i,h)};function kp(){var n=this;n.on("initialize",()=>{var s=document.createElement("span"),i=n.control_input;s.style.cssText="position:absolute; top:-99999px; left:-99999px; width:auto; padding:0; white-space:pre; ",n.wrapper.appendChild(s);var h=["letterSpacing","fontSize","fontFamily","fontWeight","textTransform"];for(const b of h)s.style[b]=i.style[b];var g=()=>{s.textContent=i.value,i.style.width=s.clientWidth+"px"};g(),n.on("update item_add item_remove",g),vn(i,"input",g),vn(i,"keyup",g),vn(i,"blur",g),vn(i,"update",g)})}function Ep(){var n=this,s=n.deleteSelection;this.hook("instead","deleteSelection",i=>n.activeItems.length?s.call(n,i):!1)}function Mp(){this.hook("instead","setActiveItem",()=>{}),this.hook("instead","selectAll",()=>{})}const Vo=37,_p=39,Pp=(n,s,i)=>{for(;n&&n.matches;){if(n.matches(s))return n;n=n.parentNode}},Lp=(n,s)=>{if(!n)return-1;s=s||n.nodeName;for(var i=0;n=n.previousElementSibling;)n.matches(s)&&i++;return i};function Tp(){var n=this,s=n.onKeyDown;n.hook("instead","onKeyDown",i=>{var h,g,b,v;if(!n.isOpen||!(i.keyCode===Vo||i.keyCode===_p))return s.call(n,i);n.ignoreHover=!0,v=Pp(n.activeOption,"[data-group]"),h=Lp(n.activeOption,"[data-selectable]"),v&&(i.keyCode===Vo?v=v.previousSibling:v=v.nextSibling,v&&(b=v.querySelectorAll("[data-selectable]"),g=b[Math.min(b.length-1,h)],g&&n.setActiveOption(g)))})}const Dp=n=>(n+"").replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;"),jo=(n,s=!1)=>{n&&(n.preventDefault(),s&&n.stopPropagation())},Uo=(n,s,i,h)=>{n.addEventListener(s,i,h)},$o=n=>{if(n.jquery)return n[0];if(n instanceof HTMLElement)return n;if(Ip(n)){var s=document.createElement("template");return s.innerHTML=n.trim(),s.content.firstChild}return document.querySelector(n)},Ip=n=>typeof n=="string"&&n.indexOf("<")>-1;function Op(n){const s=Object.assign({label:"&times;",title:"Remove",className:"remove",append:!0},n);var i=this;if(s.append){var h='<a href="javascript:void(0)" class="'+s.className+'" tabindex="-1" title="'+Dp(s.title)+'">'+s.label+"</a>";i.hook("after","setupTemplates",()=>{var g=i.settings.render.item;i.settings.render.item=(b,v)=>{var k=$o(g.call(i,b,v)),T=$o(h);return k.appendChild(T),Uo(T,"mousedown",O=>{jo(O,!0)}),Uo(T,"click",O=>{i.isLocked||(jo(O,!0),!i.isLocked&&i.shouldDelete([k],O)&&(i.removeItem(k),i.refreshOptions(!1),i.inputState()))}),k}})}}function Fp(n){const s=this,i=Object.assign({text:h=>h[s.settings.labelField]},n);s.on("item_remove",function(h){if(s.isFocused&&s.control_input.value.trim()===""){var g=s.options[h];g&&s.setTextboxValue(i.text.call(s,g))}})}const Rp=(n,s)=>{if(Array.isArray(n))n.forEach(s);else for(var i in n)n.hasOwnProperty(i)&&s(n[i],i)},Np=(n,...s)=>{var i=zp(s);n=Yp(n),n.map(h=>{i.map(g=>{h.classList.add(g)})})},zp=n=>{var s=[];return Rp(n,i=>{typeof i=="string"&&(i=i.trim().split(/[\t\n\f\r\s]/)),Array.isArray(i)&&(s=s.concat(i))}),s.filter(Boolean)},Yp=n=>(Array.isArray(n)||(n=[n]),n);function Hp(){const n=this,s=n.canLoad,i=n.clearActiveOption,h=n.loadCallback;var g={},b,v=!1,k,T=[];if(n.settings.shouldLoadMore||(n.settings.shouldLoadMore=()=>{if(b.clientHeight/(b.scrollHeight-b.scrollTop)>.9)return!0;if(n.activeOption){var G=n.selectable(),ae=Array.from(G).indexOf(n.activeOption);if(ae>=G.length-2)return!0}return!1}),!n.settings.firstUrl)throw"virtual_scroll plugin requires a firstUrl() method";n.settings.sortField=[{field:"$order"},{field:"$score"}];const O=z=>typeof n.settings.maxOptions=="number"&&b.children.length>=n.settings.maxOptions?!1:!!(z in g&&g[z]),F=(z,G)=>n.items.indexOf(G)>=0||T.indexOf(G)>=0;n.setNextUrl=(z,G)=>{g[z]=G},n.getUrl=z=>{if(z in g){const G=g[z];return g[z]=!1,G}return n.clearPagination(),n.settings.firstUrl.call(n,z)},n.clearPagination=()=>{g={}},n.hook("instead","clearActiveOption",()=>{if(!v)return i.call(n)}),n.hook("instead","canLoad",z=>z in g?O(z):s.call(n,z)),n.hook("instead","loadCallback",(z,G)=>{if(!v)n.clearOptions(F);else if(k){const ae=z[0];ae!==void 0&&(k.dataset.value=ae[n.settings.valueField])}h.call(n,z,G),v=!1}),n.hook("after","refreshOptions",()=>{const z=n.lastValue;var G;O(z)?(G=n.render("loading_more",{query:z}),G&&(G.setAttribute("data-selectable",""),k=G)):z in g&&!b.querySelector(".no-results")&&(G=n.render("no_more_results",{query:z})),G&&(Np(G,n.settings.optionClass),b.append(G))}),n.on("initialize",()=>{T=Object.keys(n.options),b=n.dropdown_content,n.settings.render=Object.assign({},{loading_more:()=>'<div class="loading-more-results">Loading more results ... </div>',no_more_results:()=>'<div class="no-more-results">No more results</div>'},n.settings.render),b.addEventListener("scroll",()=>{n.settings.shouldLoadMore.call(n)&&O(n.lastValue)&&(v||(v=!0,n.load.call(n,n.lastValue)))})})}xt.define("change_listener",Xg);xt.define("checkbox_options",jg);xt.define("clear_button",qg);xt.define("drag_drop",np);xt.define("dropdown_header",lp);xt.define("caret_position",gp);xt.define("dropdown_input",Cp);xt.define("input_autogrow",kp);xt.define("no_backspace_delete",Ep);xt.define("no_active_items",Mp);xt.define("optgroup_columns",Tp);xt.define("remove_button",Op);xt.define("restore_on_backspace",Fp);xt.define("virtual_scroll",Hp);/**!
 * Sortable 1.15.6
 * @author	RubaXa   <trash@rubaxa.org>
 * @author	owenm    <owen23355@gmail.com>
 * @license MIT
 */function qo(n,s){var i=Object.keys(n);if(Object.getOwnPropertySymbols){var h=Object.getOwnPropertySymbols(n);s&&(h=h.filter(function(g){return Object.getOwnPropertyDescriptor(n,g).enumerable})),i.push.apply(i,h)}return i}function Qt(n){for(var s=1;s<arguments.length;s++){var i=arguments[s]!=null?arguments[s]:{};s%2?qo(Object(i),!0).forEach(function(h){Xp(n,h,i[h])}):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(i)):qo(Object(i)).forEach(function(h){Object.defineProperty(n,h,Object.getOwnPropertyDescriptor(i,h))})}return n}function Tn(n){"@babel/helpers - typeof";return typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?Tn=function(s){return typeof s}:Tn=function(s){return s&&typeof Symbol=="function"&&s.constructor===Symbol&&s!==Symbol.prototype?"symbol":typeof s},Tn(n)}function Xp(n,s,i){return s in n?Object.defineProperty(n,s,{value:i,enumerable:!0,configurable:!0,writable:!0}):n[s]=i,n}function oi(){return oi=Object.assign||function(n){for(var s=1;s<arguments.length;s++){var i=arguments[s];for(var h in i)Object.prototype.hasOwnProperty.call(i,h)&&(n[h]=i[h])}return n},oi.apply(this,arguments)}function Bp(n,s){if(n==null)return{};var i={},h=Object.keys(n),g,b;for(b=0;b<h.length;b++)g=h[b],!(s.indexOf(g)>=0)&&(i[g]=n[g]);return i}function Wp(n,s){if(n==null)return{};var i=Bp(n,s),h,g;if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(n);for(g=0;g<b.length;g++)h=b[g],!(s.indexOf(h)>=0)&&Object.prototype.propertyIsEnumerable.call(n,h)&&(i[h]=n[h])}return i}var Gp="1.15.6";function ri(n){if(typeof window<"u"&&window.navigator)return!!navigator.userAgent.match(n)}var li=ri(/(?:Trident.*rv[ :]?11\.|msie|iemobile|Windows Phone)/i),Za=ri(/Edge/i),Zo=ri(/firefox/i),Ia=ri(/safari/i)&&!ri(/chrome/i)&&!ri(/android/i),Qs=ri(/iP(ad|od|hone)/i),Zc=ri(/chrome/i)&&ri(/android/i),Kc={capture:!1,passive:!1};function Te(n,s,i){n.addEventListener(s,i,!li&&Kc)}function Pe(n,s,i){n.removeEventListener(s,i,!li&&Kc)}function Vn(n,s){if(s){if(s[0]===">"&&(s=s.substring(1)),n)try{if(n.matches)return n.matches(s);if(n.msMatchesSelector)return n.msMatchesSelector(s);if(n.webkitMatchesSelector)return n.webkitMatchesSelector(s)}catch{return!1}return!1}}function Jc(n){return n.host&&n!==document&&n.host.nodeType?n.host:n.parentNode}function Bt(n,s,i,h){if(n){i=i||document;do{if(s!=null&&(s[0]===">"?n.parentNode===i&&Vn(n,s):Vn(n,s))||h&&n===i)return n;if(n===i)break}while(n=Jc(n))}return null}var Ko=/\s+/g;function _t(n,s,i){if(n&&s)if(n.classList)n.classList[i?"add":"remove"](s);else{var h=(" "+n.className+" ").replace(Ko," ").replace(" "+s+" "," ");n.className=(h+(i?" "+s:"")).replace(Ko," ")}}function be(n,s,i){var h=n&&n.style;if(h){if(i===void 0)return document.defaultView&&document.defaultView.getComputedStyle?i=document.defaultView.getComputedStyle(n,""):n.currentStyle&&(i=n.currentStyle),s===void 0?i:i[s];!(s in h)&&s.indexOf("webkit")===-1&&(s="-webkit-"+s),h[s]=i+(typeof i=="string"?"":"px")}}function ta(n,s){var i="";if(typeof n=="string")i=n;else do{var h=be(n,"transform");h&&h!=="none"&&(i=h+" "+i)}while(!s&&(n=n.parentNode));var g=window.DOMMatrix||window.WebKitCSSMatrix||window.CSSMatrix||window.MSCSSMatrix;return g&&new g(i)}function Qc(n,s,i){if(n){var h=n.getElementsByTagName(s),g=0,b=h.length;if(i)for(;g<b;g++)i(h[g],g);return h}return[]}function Jt(){var n=document.scrollingElement;return n||document.documentElement}function Qe(n,s,i,h,g){if(!(!n.getBoundingClientRect&&n!==window)){var b,v,k,T,O,F,z;if(n!==window&&n.parentNode&&n!==Jt()?(b=n.getBoundingClientRect(),v=b.top,k=b.left,T=b.bottom,O=b.right,F=b.height,z=b.width):(v=0,k=0,T=window.innerHeight,O=window.innerWidth,F=window.innerHeight,z=window.innerWidth),(s||i)&&n!==window&&(g=g||n.parentNode,!li))do if(g&&g.getBoundingClientRect&&(be(g,"transform")!=="none"||i&&be(g,"position")!=="static")){var G=g.getBoundingClientRect();v-=G.top+parseInt(be(g,"border-top-width")),k-=G.left+parseInt(be(g,"border-left-width")),T=v+b.height,O=k+b.width;break}while(g=g.parentNode);if(h&&n!==window){var ae=ta(g||n),Y=ae&&ae.a,q=ae&&ae.d;ae&&(v/=q,k/=Y,z/=Y,F/=q,T=v+F,O=k+z)}return{top:v,left:k,bottom:T,right:O,width:z,height:F}}}function Jo(n,s,i){for(var h=gi(n,!0),g=Qe(n)[s];h;){var b=Qe(h)[i],v=void 0;if(v=g>=b,!v)return h;if(h===Jt())break;h=gi(h,!1)}return!1}function sa(n,s,i,h){for(var g=0,b=0,v=n.children;b<v.length;){if(v[b].style.display!=="none"&&v[b]!==ye.ghost&&(h||v[b]!==ye.dragged)&&Bt(v[b],i.draggable,n,!1)){if(g===s)return v[b];g++}b++}return null}function eo(n,s){for(var i=n.lastElementChild;i&&(i===ye.ghost||be(i,"display")==="none"||s&&!Vn(i,s));)i=i.previousElementSibling;return i||null}function Ft(n,s){var i=0;if(!n||!n.parentNode)return-1;for(;n=n.previousElementSibling;)n.nodeName.toUpperCase()!=="TEMPLATE"&&n!==ye.clone&&(!s||Vn(n,s))&&i++;return i}function Qo(n){var s=0,i=0,h=Jt();if(n)do{var g=ta(n),b=g.a,v=g.d;s+=n.scrollLeft*b,i+=n.scrollTop*v}while(n!==h&&(n=n.parentNode));return[s,i]}function Vp(n,s){for(var i in n)if(n.hasOwnProperty(i)){for(var h in s)if(s.hasOwnProperty(h)&&s[h]===n[i][h])return Number(i)}return-1}function gi(n,s){if(!n||!n.getBoundingClientRect)return Jt();var i=n,h=!1;do if(i.clientWidth<i.scrollWidth||i.clientHeight<i.scrollHeight){var g=be(i);if(i.clientWidth<i.scrollWidth&&(g.overflowX=="auto"||g.overflowX=="scroll")||i.clientHeight<i.scrollHeight&&(g.overflowY=="auto"||g.overflowY=="scroll")){if(!i.getBoundingClientRect||i===document.body)return Jt();if(h||s)return i;h=!0}}while(i=i.parentNode);return Jt()}function jp(n,s){if(n&&s)for(var i in s)s.hasOwnProperty(i)&&(n[i]=s[i]);return n}function zr(n,s){return Math.round(n.top)===Math.round(s.top)&&Math.round(n.left)===Math.round(s.left)&&Math.round(n.height)===Math.round(s.height)&&Math.round(n.width)===Math.round(s.width)}var Oa;function eh(n,s){return function(){if(!Oa){var i=arguments,h=this;i.length===1?n.call(h,i[0]):n.apply(h,i),Oa=setTimeout(function(){Oa=void 0},s)}}}function Up(){clearTimeout(Oa),Oa=void 0}function th(n,s,i){n.scrollLeft+=s,n.scrollTop+=i}function ih(n){var s=window.Polymer,i=window.jQuery||window.Zepto;return s&&s.dom?s.dom(n).cloneNode(!0):i?i(n).clone(!0)[0]:n.cloneNode(!0)}function ah(n,s,i){var h={};return Array.from(n.children).forEach(function(g){var b,v,k,T;if(!(!Bt(g,s.draggable,n,!1)||g.animated||g===i)){var O=Qe(g);h.left=Math.min((b=h.left)!==null&&b!==void 0?b:1/0,O.left),h.top=Math.min((v=h.top)!==null&&v!==void 0?v:1/0,O.top),h.right=Math.max((k=h.right)!==null&&k!==void 0?k:-1/0,O.right),h.bottom=Math.max((T=h.bottom)!==null&&T!==void 0?T:-1/0,O.bottom)}}),h.width=h.right-h.left,h.height=h.bottom-h.top,h.x=h.left,h.y=h.top,h}var At="Sortable"+new Date().getTime();function $p(){var n=[],s;return{captureAnimationState:function(){if(n=[],!!this.options.animation){var h=[].slice.call(this.el.children);h.forEach(function(g){if(!(be(g,"display")==="none"||g===ye.ghost)){n.push({target:g,rect:Qe(g)});var b=Qt({},n[n.length-1].rect);if(g.thisAnimationDuration){var v=ta(g,!0);v&&(b.top-=v.f,b.left-=v.e)}g.fromRect=b}})}},addAnimationState:function(h){n.push(h)},removeAnimationState:function(h){n.splice(Vp(n,{target:h}),1)},animateAll:function(h){var g=this;if(!this.options.animation){clearTimeout(s),typeof h=="function"&&h();return}var b=!1,v=0;n.forEach(function(k){var T=0,O=k.target,F=O.fromRect,z=Qe(O),G=O.prevFromRect,ae=O.prevToRect,Y=k.rect,q=ta(O,!0);q&&(z.top-=q.f,z.left-=q.e),O.toRect=z,O.thisAnimationDuration&&zr(G,z)&&!zr(F,z)&&(Y.top-z.top)/(Y.left-z.left)===(F.top-z.top)/(F.left-z.left)&&(T=Zp(Y,G,ae,g.options)),zr(z,F)||(O.prevFromRect=F,O.prevToRect=z,T||(T=g.options.animation),g.animate(O,Y,z,T)),T&&(b=!0,v=Math.max(v,T),clearTimeout(O.animationResetTimer),O.animationResetTimer=setTimeout(function(){O.animationTime=0,O.prevFromRect=null,O.fromRect=null,O.prevToRect=null,O.thisAnimationDuration=null},T),O.thisAnimationDuration=T)}),clearTimeout(s),b?s=setTimeout(function(){typeof h=="function"&&h()},v):typeof h=="function"&&h(),n=[]},animate:function(h,g,b,v){if(v){be(h,"transition",""),be(h,"transform","");var k=ta(this.el),T=k&&k.a,O=k&&k.d,F=(g.left-b.left)/(T||1),z=(g.top-b.top)/(O||1);h.animatingX=!!F,h.animatingY=!!z,be(h,"transform","translate3d("+F+"px,"+z+"px,0)"),this.forRepaintDummy=qp(h),be(h,"transition","transform "+v+"ms"+(this.options.easing?" "+this.options.easing:"")),be(h,"transform","translate3d(0,0,0)"),typeof h.animated=="number"&&clearTimeout(h.animated),h.animated=setTimeout(function(){be(h,"transition",""),be(h,"transform",""),h.animated=!1,h.animatingX=!1,h.animatingY=!1},v)}}}}function qp(n){return n.offsetWidth}function Zp(n,s,i,h){return Math.sqrt(Math.pow(s.top-n.top,2)+Math.pow(s.left-n.left,2))/Math.sqrt(Math.pow(s.top-i.top,2)+Math.pow(s.left-i.left,2))*h.animation}var Ki=[],Yr={initializeByDefault:!0},Ka={mount:function(s){for(var i in Yr)Yr.hasOwnProperty(i)&&!(i in s)&&(s[i]=Yr[i]);Ki.forEach(function(h){if(h.pluginName===s.pluginName)throw"Sortable: Cannot mount plugin ".concat(s.pluginName," more than once")}),Ki.push(s)},pluginEvent:function(s,i,h){var g=this;this.eventCanceled=!1,h.cancel=function(){g.eventCanceled=!0};var b=s+"Global";Ki.forEach(function(v){i[v.pluginName]&&(i[v.pluginName][b]&&i[v.pluginName][b](Qt({sortable:i},h)),i.options[v.pluginName]&&i[v.pluginName][s]&&i[v.pluginName][s](Qt({sortable:i},h)))})},initializePlugins:function(s,i,h,g){Ki.forEach(function(k){var T=k.pluginName;if(!(!s.options[T]&&!k.initializeByDefault)){var O=new k(s,i,s.options);O.sortable=s,O.options=s.options,s[T]=O,oi(h,O.defaults)}});for(var b in s.options)if(s.options.hasOwnProperty(b)){var v=this.modifyOption(s,b,s.options[b]);typeof v<"u"&&(s.options[b]=v)}},getEventProperties:function(s,i){var h={};return Ki.forEach(function(g){typeof g.eventProperties=="function"&&oi(h,g.eventProperties.call(i[g.pluginName],s))}),h},modifyOption:function(s,i,h){var g;return Ki.forEach(function(b){s[b.pluginName]&&b.optionListeners&&typeof b.optionListeners[i]=="function"&&(g=b.optionListeners[i].call(s[b.pluginName],h))}),g}};function Kp(n){var s=n.sortable,i=n.rootEl,h=n.name,g=n.targetEl,b=n.cloneEl,v=n.toEl,k=n.fromEl,T=n.oldIndex,O=n.newIndex,F=n.oldDraggableIndex,z=n.newDraggableIndex,G=n.originalEvent,ae=n.putSortable,Y=n.extraEventProperties;if(s=s||i&&i[At],!!s){var q,$=s.options,ie="on"+h.charAt(0).toUpperCase()+h.substr(1);window.CustomEvent&&!li&&!Za?q=new CustomEvent(h,{bubbles:!0,cancelable:!0}):(q=document.createEvent("Event"),q.initEvent(h,!0,!0)),q.to=v||i,q.from=k||i,q.item=g||i,q.clone=b,q.oldIndex=T,q.newIndex=O,q.oldDraggableIndex=F,q.newDraggableIndex=z,q.originalEvent=G,q.pullMode=ae?ae.lastPutMode:void 0;var Q=Qt(Qt({},Y),Ka.getEventProperties(h,s));for(var ne in Q)q[ne]=Q[ne];i&&i.dispatchEvent(q),$[ie]&&$[ie].call(s,q)}}var Jp=["evt"],yt=function(s,i){var h=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{},g=h.evt,b=Wp(h,Jp);Ka.pluginEvent.bind(ye)(s,i,Qt({dragEl:oe,parentEl:qe,ghostEl:Se,rootEl:Ve,nextEl:_i,lastDownEl:Dn,cloneEl:je,cloneHidden:fi,dragStarted:_a,putSortable:at,activeSortable:ye.active,originalEvent:g,oldIndex:ea,oldDraggableIndex:Fa,newIndex:Lt,newDraggableIndex:ui,hideGhostForTarget:oh,unhideGhostForTarget:lh,cloneNowHidden:function(){fi=!0},cloneNowShown:function(){fi=!1},dispatchSortableEvent:function(k){pt({sortable:i,name:k,originalEvent:g})}},b))};function pt(n){Kp(Qt({putSortable:at,cloneEl:je,targetEl:oe,rootEl:Ve,oldIndex:ea,oldDraggableIndex:Fa,newIndex:Lt,newDraggableIndex:ui},n))}var oe,qe,Se,Ve,_i,Dn,je,fi,ea,Lt,Fa,ui,bn,at,Qi=!1,jn=!1,Un=[],ki,Ht,Hr,Xr,el,tl,_a,Ji,Ra,Na=!1,yn=!1,In,lt,Br=[],As=!1,$n=[],dr=typeof document<"u",wn=Qs,il=Za||li?"cssFloat":"float",Qp=dr&&!Zc&&!Qs&&"draggable"in document.createElement("div"),nh=function(){if(dr){if(li)return!1;var n=document.createElement("x");return n.style.cssText="pointer-events:auto",n.style.pointerEvents==="auto"}}(),rh=function(s,i){var h=be(s),g=parseInt(h.width)-parseInt(h.paddingLeft)-parseInt(h.paddingRight)-parseInt(h.borderLeftWidth)-parseInt(h.borderRightWidth),b=sa(s,0,i),v=sa(s,1,i),k=b&&be(b),T=v&&be(v),O=k&&parseInt(k.marginLeft)+parseInt(k.marginRight)+Qe(b).width,F=T&&parseInt(T.marginLeft)+parseInt(T.marginRight)+Qe(v).width;if(h.display==="flex")return h.flexDirection==="column"||h.flexDirection==="column-reverse"?"vertical":"horizontal";if(h.display==="grid")return h.gridTemplateColumns.split(" ").length<=1?"vertical":"horizontal";if(b&&k.float&&k.float!=="none"){var z=k.float==="left"?"left":"right";return v&&(T.clear==="both"||T.clear===z)?"vertical":"horizontal"}return b&&(k.display==="block"||k.display==="flex"||k.display==="table"||k.display==="grid"||O>=g&&h[il]==="none"||v&&h[il]==="none"&&O+F>g)?"vertical":"horizontal"},em=function(s,i,h){var g=h?s.left:s.top,b=h?s.right:s.bottom,v=h?s.width:s.height,k=h?i.left:i.top,T=h?i.right:i.bottom,O=h?i.width:i.height;return g===k||b===T||g+v/2===k+O/2},tm=function(s,i){var h;return Un.some(function(g){var b=g[At].options.emptyInsertThreshold;if(!(!b||eo(g))){var v=Qe(g),k=s>=v.left-b&&s<=v.right+b,T=i>=v.top-b&&i<=v.bottom+b;if(k&&T)return h=g}}),h},sh=function(s){function i(b,v){return function(k,T,O,F){var z=k.options.group.name&&T.options.group.name&&k.options.group.name===T.options.group.name;if(b==null&&(v||z))return!0;if(b==null||b===!1)return!1;if(v&&b==="clone")return b;if(typeof b=="function")return i(b(k,T,O,F),v)(k,T,O,F);var G=(v?k:T).options.group.name;return b===!0||typeof b=="string"&&b===G||b.join&&b.indexOf(G)>-1}}var h={},g=s.group;(!g||Tn(g)!="object")&&(g={name:g}),h.name=g.name,h.checkPull=i(g.pull,!0),h.checkPut=i(g.put),h.revertClone=g.revertClone,s.group=h},oh=function(){!nh&&Se&&be(Se,"display","none")},lh=function(){!nh&&Se&&be(Se,"display","")};dr&&!Zc&&document.addEventListener("click",function(n){if(jn)return n.preventDefault(),n.stopPropagation&&n.stopPropagation(),n.stopImmediatePropagation&&n.stopImmediatePropagation(),jn=!1,!1},!0);var Ei=function(s){if(oe){s=s.touches?s.touches[0]:s;var i=tm(s.clientX,s.clientY);if(i){var h={};for(var g in s)s.hasOwnProperty(g)&&(h[g]=s[g]);h.target=h.rootEl=i,h.preventDefault=void 0,h.stopPropagation=void 0,i[At]._onDragOver(h)}}},im=function(s){oe&&oe.parentNode[At]._isOutsideThisEl(s.target)};function ye(n,s){if(!(n&&n.nodeType&&n.nodeType===1))throw"Sortable: `el` must be an HTMLElement, not ".concat({}.toString.call(n));this.el=n,this.options=s=oi({},s),n[At]=this;var i={group:null,sort:!0,disabled:!1,store:null,handle:null,draggable:/^[uo]l$/i.test(n.nodeName)?">li":">*",swapThreshold:1,invertSwap:!1,invertedSwapThreshold:null,removeCloneOnHide:!0,direction:function(){return rh(n,this.options)},ghostClass:"sortable-ghost",chosenClass:"sortable-chosen",dragClass:"sortable-drag",ignore:"a, img",filter:null,preventOnFilter:!0,animation:0,easing:null,setData:function(v,k){v.setData("Text",k.textContent)},dropBubble:!1,dragoverBubble:!1,dataIdAttr:"data-id",delay:0,delayOnTouchOnly:!1,touchStartThreshold:(Number.parseInt?Number:window).parseInt(window.devicePixelRatio,10)||1,forceFallback:!1,fallbackClass:"sortable-fallback",fallbackOnBody:!1,fallbackTolerance:0,fallbackOffset:{x:0,y:0},supportPointer:ye.supportPointer!==!1&&"PointerEvent"in window&&(!Ia||Qs),emptyInsertThreshold:5};Ka.initializePlugins(this,n,i);for(var h in i)!(h in s)&&(s[h]=i[h]);sh(s);for(var g in this)g.charAt(0)==="_"&&typeof this[g]=="function"&&(this[g]=this[g].bind(this));this.nativeDraggable=s.forceFallback?!1:Qp,this.nativeDraggable&&(this.options.touchStartThreshold=1),s.supportPointer?Te(n,"pointerdown",this._onTapStart):(Te(n,"mousedown",this._onTapStart),Te(n,"touchstart",this._onTapStart)),this.nativeDraggable&&(Te(n,"dragover",this),Te(n,"dragenter",this)),Un.push(this.el),s.store&&s.store.get&&this.sort(s.store.get(this)||[]),oi(this,$p())}ye.prototype={constructor:ye,_isOutsideThisEl:function(s){!this.el.contains(s)&&s!==this.el&&(Ji=null)},_getDirection:function(s,i){return typeof this.options.direction=="function"?this.options.direction.call(this,s,i,oe):this.options.direction},_onTapStart:function(s){if(s.cancelable){var i=this,h=this.el,g=this.options,b=g.preventOnFilter,v=s.type,k=s.touches&&s.touches[0]||s.pointerType&&s.pointerType==="touch"&&s,T=(k||s).target,O=s.target.shadowRoot&&(s.path&&s.path[0]||s.composedPath&&s.composedPath()[0])||T,F=g.filter;if(hm(h),!oe&&!(/mousedown|pointerdown/.test(v)&&s.button!==0||g.disabled)&&!O.isContentEditable&&!(!this.nativeDraggable&&Ia&&T&&T.tagName.toUpperCase()==="SELECT")&&(T=Bt(T,g.draggable,h,!1),!(T&&T.animated)&&Dn!==T)){if(ea=Ft(T),Fa=Ft(T,g.draggable),typeof F=="function"){if(F.call(this,s,T,this)){pt({sortable:i,rootEl:O,name:"filter",targetEl:T,toEl:h,fromEl:h}),yt("filter",i,{evt:s}),b&&s.preventDefault();return}}else if(F&&(F=F.split(",").some(function(z){if(z=Bt(O,z.trim(),h,!1),z)return pt({sortable:i,rootEl:z,name:"filter",targetEl:T,fromEl:h,toEl:h}),yt("filter",i,{evt:s}),!0}),F)){b&&s.preventDefault();return}g.handle&&!Bt(O,g.handle,h,!1)||this._prepareDragStart(s,k,T)}}},_prepareDragStart:function(s,i,h){var g=this,b=g.el,v=g.options,k=b.ownerDocument,T;if(h&&!oe&&h.parentNode===b){var O=Qe(h);if(Ve=b,oe=h,qe=oe.parentNode,_i=oe.nextSibling,Dn=h,bn=v.group,ye.dragged=oe,ki={target:oe,clientX:(i||s).clientX,clientY:(i||s).clientY},el=ki.clientX-O.left,tl=ki.clientY-O.top,this._lastX=(i||s).clientX,this._lastY=(i||s).clientY,oe.style["will-change"]="all",T=function(){if(yt("delayEnded",g,{evt:s}),ye.eventCanceled){g._onDrop();return}g._disableDelayedDragEvents(),!Zo&&g.nativeDraggable&&(oe.draggable=!0),g._triggerDragStart(s,i),pt({sortable:g,name:"choose",originalEvent:s}),_t(oe,v.chosenClass,!0)},v.ignore.split(",").forEach(function(F){Qc(oe,F.trim(),Wr)}),Te(k,"dragover",Ei),Te(k,"mousemove",Ei),Te(k,"touchmove",Ei),v.supportPointer?(Te(k,"pointerup",g._onDrop),!this.nativeDraggable&&Te(k,"pointercancel",g._onDrop)):(Te(k,"mouseup",g._onDrop),Te(k,"touchend",g._onDrop),Te(k,"touchcancel",g._onDrop)),Zo&&this.nativeDraggable&&(this.options.touchStartThreshold=4,oe.draggable=!0),yt("delayStart",this,{evt:s}),v.delay&&(!v.delayOnTouchOnly||i)&&(!this.nativeDraggable||!(Za||li))){if(ye.eventCanceled){this._onDrop();return}v.supportPointer?(Te(k,"pointerup",g._disableDelayedDrag),Te(k,"pointercancel",g._disableDelayedDrag)):(Te(k,"mouseup",g._disableDelayedDrag),Te(k,"touchend",g._disableDelayedDrag),Te(k,"touchcancel",g._disableDelayedDrag)),Te(k,"mousemove",g._delayedDragTouchMoveHandler),Te(k,"touchmove",g._delayedDragTouchMoveHandler),v.supportPointer&&Te(k,"pointermove",g._delayedDragTouchMoveHandler),g._dragStartTimer=setTimeout(T,v.delay)}else T()}},_delayedDragTouchMoveHandler:function(s){var i=s.touches?s.touches[0]:s;Math.max(Math.abs(i.clientX-this._lastX),Math.abs(i.clientY-this._lastY))>=Math.floor(this.options.touchStartThreshold/(this.nativeDraggable&&window.devicePixelRatio||1))&&this._disableDelayedDrag()},_disableDelayedDrag:function(){oe&&Wr(oe),clearTimeout(this._dragStartTimer),this._disableDelayedDragEvents()},_disableDelayedDragEvents:function(){var s=this.el.ownerDocument;Pe(s,"mouseup",this._disableDelayedDrag),Pe(s,"touchend",this._disableDelayedDrag),Pe(s,"touchcancel",this._disableDelayedDrag),Pe(s,"pointerup",this._disableDelayedDrag),Pe(s,"pointercancel",this._disableDelayedDrag),Pe(s,"mousemove",this._delayedDragTouchMoveHandler),Pe(s,"touchmove",this._delayedDragTouchMoveHandler),Pe(s,"pointermove",this._delayedDragTouchMoveHandler)},_triggerDragStart:function(s,i){i=i||s.pointerType=="touch"&&s,!this.nativeDraggable||i?this.options.supportPointer?Te(document,"pointermove",this._onTouchMove):i?Te(document,"touchmove",this._onTouchMove):Te(document,"mousemove",this._onTouchMove):(Te(oe,"dragend",this),Te(Ve,"dragstart",this._onDragStart));try{document.selection?On(function(){document.selection.empty()}):window.getSelection().removeAllRanges()}catch{}},_dragStarted:function(s,i){if(Qi=!1,Ve&&oe){yt("dragStarted",this,{evt:i}),this.nativeDraggable&&Te(document,"dragover",im);var h=this.options;!s&&_t(oe,h.dragClass,!1),_t(oe,h.ghostClass,!0),ye.active=this,s&&this._appendGhost(),pt({sortable:this,name:"start",originalEvent:i})}else this._nulling()},_emulateDragOver:function(){if(Ht){this._lastX=Ht.clientX,this._lastY=Ht.clientY,oh();for(var s=document.elementFromPoint(Ht.clientX,Ht.clientY),i=s;s&&s.shadowRoot&&(s=s.shadowRoot.elementFromPoint(Ht.clientX,Ht.clientY),s!==i);)i=s;if(oe.parentNode[At]._isOutsideThisEl(s),i)do{if(i[At]){var h=void 0;if(h=i[At]._onDragOver({clientX:Ht.clientX,clientY:Ht.clientY,target:s,rootEl:i}),h&&!this.options.dragoverBubble)break}s=i}while(i=Jc(i));lh()}},_onTouchMove:function(s){if(ki){var i=this.options,h=i.fallbackTolerance,g=i.fallbackOffset,b=s.touches?s.touches[0]:s,v=Se&&ta(Se,!0),k=Se&&v&&v.a,T=Se&&v&&v.d,O=wn&&lt&&Qo(lt),F=(b.clientX-ki.clientX+g.x)/(k||1)+(O?O[0]-Br[0]:0)/(k||1),z=(b.clientY-ki.clientY+g.y)/(T||1)+(O?O[1]-Br[1]:0)/(T||1);if(!ye.active&&!Qi){if(h&&Math.max(Math.abs(b.clientX-this._lastX),Math.abs(b.clientY-this._lastY))<h)return;this._onDragStart(s,!0)}if(Se){v?(v.e+=F-(Hr||0),v.f+=z-(Xr||0)):v={a:1,b:0,c:0,d:1,e:F,f:z};var G="matrix(".concat(v.a,",").concat(v.b,",").concat(v.c,",").concat(v.d,",").concat(v.e,",").concat(v.f,")");be(Se,"webkitTransform",G),be(Se,"mozTransform",G),be(Se,"msTransform",G),be(Se,"transform",G),Hr=F,Xr=z,Ht=b}s.cancelable&&s.preventDefault()}},_appendGhost:function(){if(!Se){var s=this.options.fallbackOnBody?document.body:Ve,i=Qe(oe,!0,wn,!0,s),h=this.options;if(wn){for(lt=s;be(lt,"position")==="static"&&be(lt,"transform")==="none"&&lt!==document;)lt=lt.parentNode;lt!==document.body&&lt!==document.documentElement?(lt===document&&(lt=Jt()),i.top+=lt.scrollTop,i.left+=lt.scrollLeft):lt=Jt(),Br=Qo(lt)}Se=oe.cloneNode(!0),_t(Se,h.ghostClass,!1),_t(Se,h.fallbackClass,!0),_t(Se,h.dragClass,!0),be(Se,"transition",""),be(Se,"transform",""),be(Se,"box-sizing","border-box"),be(Se,"margin",0),be(Se,"top",i.top),be(Se,"left",i.left),be(Se,"width",i.width),be(Se,"height",i.height),be(Se,"opacity","0.8"),be(Se,"position",wn?"absolute":"fixed"),be(Se,"zIndex","100000"),be(Se,"pointerEvents","none"),ye.ghost=Se,s.appendChild(Se),be(Se,"transform-origin",el/parseInt(Se.style.width)*100+"% "+tl/parseInt(Se.style.height)*100+"%")}},_onDragStart:function(s,i){var h=this,g=s.dataTransfer,b=h.options;if(yt("dragStart",this,{evt:s}),ye.eventCanceled){this._onDrop();return}yt("setupClone",this),ye.eventCanceled||(je=ih(oe),je.removeAttribute("id"),je.draggable=!1,je.style["will-change"]="",this._hideClone(),_t(je,this.options.chosenClass,!1),ye.clone=je),h.cloneId=On(function(){yt("clone",h),!ye.eventCanceled&&(h.options.removeCloneOnHide||Ve.insertBefore(je,oe),h._hideClone(),pt({sortable:h,name:"clone"}))}),!i&&_t(oe,b.dragClass,!0),i?(jn=!0,h._loopId=setInterval(h._emulateDragOver,50)):(Pe(document,"mouseup",h._onDrop),Pe(document,"touchend",h._onDrop),Pe(document,"touchcancel",h._onDrop),g&&(g.effectAllowed="move",b.setData&&b.setData.call(h,g,oe)),Te(document,"drop",h),be(oe,"transform","translateZ(0)")),Qi=!0,h._dragStartId=On(h._dragStarted.bind(h,i,s)),Te(document,"selectstart",h),_a=!0,window.getSelection().removeAllRanges(),Ia&&be(document.body,"user-select","none")},_onDragOver:function(s){var i=this.el,h=s.target,g,b,v,k=this.options,T=k.group,O=ye.active,F=bn===T,z=k.sort,G=at||O,ae,Y=this,q=!1;if(As)return;function $(rt,Hi){yt(rt,Y,Qt({evt:s,isOwner:F,axis:ae?"vertical":"horizontal",revert:v,dragRect:g,targetRect:b,canSort:z,fromSortable:G,target:h,completed:Q,onMove:function(jt,ti){return An(Ve,i,oe,g,jt,Qe(jt),s,ti)},changed:ne},Hi))}function ie(){$("dragOverAnimationCapture"),Y.captureAnimationState(),Y!==G&&G.captureAnimationState()}function Q(rt){return $("dragOverCompleted",{insertion:rt}),rt&&(F?O._hideClone():O._showClone(Y),Y!==G&&(_t(oe,at?at.options.ghostClass:O.options.ghostClass,!1),_t(oe,k.ghostClass,!0)),at!==Y&&Y!==ye.active?at=Y:Y===ye.active&&at&&(at=null),G===Y&&(Y._ignoreWhileAnimating=h),Y.animateAll(function(){$("dragOverAnimationComplete"),Y._ignoreWhileAnimating=null}),Y!==G&&(G.animateAll(),G._ignoreWhileAnimating=null)),(h===oe&&!oe.animated||h===i&&!h.animated)&&(Ji=null),!k.dragoverBubble&&!s.rootEl&&h!==document&&(oe.parentNode[At]._isOutsideThisEl(s.target),!rt&&Ei(s)),!k.dragoverBubble&&s.stopPropagation&&s.stopPropagation(),q=!0}function ne(){Lt=Ft(oe),ui=Ft(oe,k.draggable),pt({sortable:Y,name:"change",toEl:i,newIndex:Lt,newDraggableIndex:ui,originalEvent:s})}if(s.preventDefault!==void 0&&s.cancelable&&s.preventDefault(),h=Bt(h,k.draggable,i,!0),$("dragOver"),ye.eventCanceled)return q;if(oe.contains(s.target)||h.animated&&h.animatingX&&h.animatingY||Y._ignoreWhileAnimating===h)return Q(!1);if(jn=!1,O&&!k.disabled&&(F?z||(v=qe!==Ve):at===this||(this.lastPutMode=bn.checkPull(this,O,oe,s))&&T.checkPut(this,O,oe,s))){if(ae=this._getDirection(s,h)==="vertical",g=Qe(oe),$("dragOverValid"),ye.eventCanceled)return q;if(v)return qe=Ve,ie(),this._hideClone(),$("revert"),ye.eventCanceled||(_i?Ve.insertBefore(oe,_i):Ve.appendChild(oe)),Q(!0);var pe=eo(i,k.draggable);if(!pe||sm(s,ae,this)&&!pe.animated){if(pe===oe)return Q(!1);if(pe&&i===s.target&&(h=pe),h&&(b=Qe(h)),An(Ve,i,oe,g,h,b,s,!!h)!==!1)return ie(),pe&&pe.nextSibling?i.insertBefore(oe,pe.nextSibling):i.appendChild(oe),qe=i,ne(),Q(!0)}else if(pe&&rm(s,ae,this)){var X=sa(i,0,k,!0);if(X===oe)return Q(!1);if(h=X,b=Qe(h),An(Ve,i,oe,g,h,b,s,!1)!==!1)return ie(),i.insertBefore(oe,X),qe=i,ne(),Q(!0)}else if(h.parentNode===i){b=Qe(h);var we=0,ce,V=oe.parentNode!==i,se=!em(oe.animated&&oe.toRect||g,h.animated&&h.toRect||b,ae),Le=ae?"top":"left",ke=Jo(h,"top","top")||Jo(oe,"top","top"),De=ke?ke.scrollTop:void 0;Ji!==h&&(ce=b[Le],Na=!1,yn=!se&&k.invertSwap||V),we=om(s,h,b,ae,se?1:k.swapThreshold,k.invertedSwapThreshold==null?k.swapThreshold:k.invertedSwapThreshold,yn,Ji===h);var Ye;if(we!==0){var Ke=Ft(oe);do Ke-=we,Ye=qe.children[Ke];while(Ye&&(be(Ye,"display")==="none"||Ye===Se))}if(we===0||Ye===h)return Q(!1);Ji=h,Ra=we;var Tt=h.nextElementSibling,Dt=!1;Dt=we===1;var ei=An(Ve,i,oe,g,h,b,s,Dt);if(ei!==!1)return(ei===1||ei===-1)&&(Dt=ei===1),As=!0,setTimeout(nm,30),ie(),Dt&&!Tt?i.appendChild(oe):h.parentNode.insertBefore(oe,Dt?Tt:h),ke&&th(ke,0,De-ke.scrollTop),qe=oe.parentNode,ce!==void 0&&!yn&&(In=Math.abs(ce-Qe(h)[Le])),ne(),Q(!0)}if(i.contains(oe))return Q(!1)}return!1},_ignoreWhileAnimating:null,_offMoveEvents:function(){Pe(document,"mousemove",this._onTouchMove),Pe(document,"touchmove",this._onTouchMove),Pe(document,"pointermove",this._onTouchMove),Pe(document,"dragover",Ei),Pe(document,"mousemove",Ei),Pe(document,"touchmove",Ei)},_offUpEvents:function(){var s=this.el.ownerDocument;Pe(s,"mouseup",this._onDrop),Pe(s,"touchend",this._onDrop),Pe(s,"pointerup",this._onDrop),Pe(s,"pointercancel",this._onDrop),Pe(s,"touchcancel",this._onDrop),Pe(document,"selectstart",this)},_onDrop:function(s){var i=this.el,h=this.options;if(Lt=Ft(oe),ui=Ft(oe,h.draggable),yt("drop",this,{evt:s}),qe=oe&&oe.parentNode,Lt=Ft(oe),ui=Ft(oe,h.draggable),ye.eventCanceled){this._nulling();return}Qi=!1,yn=!1,Na=!1,clearInterval(this._loopId),clearTimeout(this._dragStartTimer),Ss(this.cloneId),Ss(this._dragStartId),this.nativeDraggable&&(Pe(document,"drop",this),Pe(i,"dragstart",this._onDragStart)),this._offMoveEvents(),this._offUpEvents(),Ia&&be(document.body,"user-select",""),be(oe,"transform",""),s&&(_a&&(s.cancelable&&s.preventDefault(),!h.dropBubble&&s.stopPropagation()),Se&&Se.parentNode&&Se.parentNode.removeChild(Se),(Ve===qe||at&&at.lastPutMode!=="clone")&&je&&je.parentNode&&je.parentNode.removeChild(je),oe&&(this.nativeDraggable&&Pe(oe,"dragend",this),Wr(oe),oe.style["will-change"]="",_a&&!Qi&&_t(oe,at?at.options.ghostClass:this.options.ghostClass,!1),_t(oe,this.options.chosenClass,!1),pt({sortable:this,name:"unchoose",toEl:qe,newIndex:null,newDraggableIndex:null,originalEvent:s}),Ve!==qe?(Lt>=0&&(pt({rootEl:qe,name:"add",toEl:qe,fromEl:Ve,originalEvent:s}),pt({sortable:this,name:"remove",toEl:qe,originalEvent:s}),pt({rootEl:qe,name:"sort",toEl:qe,fromEl:Ve,originalEvent:s}),pt({sortable:this,name:"sort",toEl:qe,originalEvent:s})),at&&at.save()):Lt!==ea&&Lt>=0&&(pt({sortable:this,name:"update",toEl:qe,originalEvent:s}),pt({sortable:this,name:"sort",toEl:qe,originalEvent:s})),ye.active&&((Lt==null||Lt===-1)&&(Lt=ea,ui=Fa),pt({sortable:this,name:"end",toEl:qe,originalEvent:s}),this.save()))),this._nulling()},_nulling:function(){yt("nulling",this),Ve=oe=qe=Se=_i=je=Dn=fi=ki=Ht=_a=Lt=ui=ea=Fa=Ji=Ra=at=bn=ye.dragged=ye.ghost=ye.clone=ye.active=null,$n.forEach(function(s){s.checked=!0}),$n.length=Hr=Xr=0},handleEvent:function(s){switch(s.type){case"drop":case"dragend":this._onDrop(s);break;case"dragenter":case"dragover":oe&&(this._onDragOver(s),am(s));break;case"selectstart":s.preventDefault();break}},toArray:function(){for(var s=[],i,h=this.el.children,g=0,b=h.length,v=this.options;g<b;g++)i=h[g],Bt(i,v.draggable,this.el,!1)&&s.push(i.getAttribute(v.dataIdAttr)||cm(i));return s},sort:function(s,i){var h={},g=this.el;this.toArray().forEach(function(b,v){var k=g.children[v];Bt(k,this.options.draggable,g,!1)&&(h[b]=k)},this),i&&this.captureAnimationState(),s.forEach(function(b){h[b]&&(g.removeChild(h[b]),g.appendChild(h[b]))}),i&&this.animateAll()},save:function(){var s=this.options.store;s&&s.set&&s.set(this)},closest:function(s,i){return Bt(s,i||this.options.draggable,this.el,!1)},option:function(s,i){var h=this.options;if(i===void 0)return h[s];var g=Ka.modifyOption(this,s,i);typeof g<"u"?h[s]=g:h[s]=i,s==="group"&&sh(h)},destroy:function(){yt("destroy",this);var s=this.el;s[At]=null,Pe(s,"mousedown",this._onTapStart),Pe(s,"touchstart",this._onTapStart),Pe(s,"pointerdown",this._onTapStart),this.nativeDraggable&&(Pe(s,"dragover",this),Pe(s,"dragenter",this)),Array.prototype.forEach.call(s.querySelectorAll("[draggable]"),function(i){i.removeAttribute("draggable")}),this._onDrop(),this._disableDelayedDragEvents(),Un.splice(Un.indexOf(this.el),1),this.el=s=null},_hideClone:function(){if(!fi){if(yt("hideClone",this),ye.eventCanceled)return;be(je,"display","none"),this.options.removeCloneOnHide&&je.parentNode&&je.parentNode.removeChild(je),fi=!0}},_showClone:function(s){if(s.lastPutMode!=="clone"){this._hideClone();return}if(fi){if(yt("showClone",this),ye.eventCanceled)return;oe.parentNode==Ve&&!this.options.group.revertClone?Ve.insertBefore(je,oe):_i?Ve.insertBefore(je,_i):Ve.appendChild(je),this.options.group.revertClone&&this.animate(oe,je),be(je,"display",""),fi=!1}}};function am(n){n.dataTransfer&&(n.dataTransfer.dropEffect="move"),n.cancelable&&n.preventDefault()}function An(n,s,i,h,g,b,v,k){var T,O=n[At],F=O.options.onMove,z;return window.CustomEvent&&!li&&!Za?T=new CustomEvent("move",{bubbles:!0,cancelable:!0}):(T=document.createEvent("Event"),T.initEvent("move",!0,!0)),T.to=s,T.from=n,T.dragged=i,T.draggedRect=h,T.related=g||s,T.relatedRect=b||Qe(s),T.willInsertAfter=k,T.originalEvent=v,n.dispatchEvent(T),F&&(z=F.call(O,T,v)),z}function Wr(n){n.draggable=!1}function nm(){As=!1}function rm(n,s,i){var h=Qe(sa(i.el,0,i.options,!0)),g=ah(i.el,i.options,Se),b=10;return s?n.clientX<g.left-b||n.clientY<h.top&&n.clientX<h.right:n.clientY<g.top-b||n.clientY<h.bottom&&n.clientX<h.left}function sm(n,s,i){var h=Qe(eo(i.el,i.options.draggable)),g=ah(i.el,i.options,Se),b=10;return s?n.clientX>g.right+b||n.clientY>h.bottom&&n.clientX>h.left:n.clientY>g.bottom+b||n.clientX>h.right&&n.clientY>h.top}function om(n,s,i,h,g,b,v,k){var T=h?n.clientY:n.clientX,O=h?i.height:i.width,F=h?i.top:i.left,z=h?i.bottom:i.right,G=!1;if(!v){if(k&&In<O*g){if(!Na&&(Ra===1?T>F+O*b/2:T<z-O*b/2)&&(Na=!0),Na)G=!0;else if(Ra===1?T<F+In:T>z-In)return-Ra}else if(T>F+O*(1-g)/2&&T<z-O*(1-g)/2)return lm(s)}return G=G||v,G&&(T<F+O*b/2||T>z-O*b/2)?T>F+O/2?1:-1:0}function lm(n){return Ft(oe)<Ft(n)?1:-1}function cm(n){for(var s=n.tagName+n.className+n.src+n.href+n.textContent,i=s.length,h=0;i--;)h+=s.charCodeAt(i);return h.toString(36)}function hm(n){$n.length=0;for(var s=n.getElementsByTagName("input"),i=s.length;i--;){var h=s[i];h.checked&&$n.push(h)}}function On(n){return setTimeout(n,0)}function Ss(n){return clearTimeout(n)}dr&&Te(document,"touchmove",function(n){(ye.active||Qi)&&n.cancelable&&n.preventDefault()});ye.utils={on:Te,off:Pe,css:be,find:Qc,is:function(s,i){return!!Bt(s,i,s,!1)},extend:jp,throttle:eh,closest:Bt,toggleClass:_t,clone:ih,index:Ft,nextTick:On,cancelNextTick:Ss,detectDirection:rh,getChild:sa,expando:At};ye.get=function(n){return n[At]};ye.mount=function(){for(var n=arguments.length,s=new Array(n),i=0;i<n;i++)s[i]=arguments[i];s[0].constructor===Array&&(s=s[0]),s.forEach(function(h){if(!h.prototype||!h.prototype.constructor)throw"Sortable: Mounted plugin must be a constructor function, not ".concat({}.toString.call(h));h.utils&&(ye.utils=Qt(Qt({},ye.utils),h.utils)),Ka.mount(h)})};ye.create=function(n,s){return new ye(n,s)};ye.version=Gp;var Je=[],Pa,Cs,ks=!1,Gr,Vr,qn,La;function dm(){function n(){this.defaults={scroll:!0,forceAutoScrollFallback:!1,scrollSensitivity:30,scrollSpeed:10,bubbleScroll:!0};for(var s in this)s.charAt(0)==="_"&&typeof this[s]=="function"&&(this[s]=this[s].bind(this))}return n.prototype={dragStarted:function(i){var h=i.originalEvent;this.sortable.nativeDraggable?Te(document,"dragover",this._handleAutoScroll):this.options.supportPointer?Te(document,"pointermove",this._handleFallbackAutoScroll):h.touches?Te(document,"touchmove",this._handleFallbackAutoScroll):Te(document,"mousemove",this._handleFallbackAutoScroll)},dragOverCompleted:function(i){var h=i.originalEvent;!this.options.dragOverBubble&&!h.rootEl&&this._handleAutoScroll(h)},drop:function(){this.sortable.nativeDraggable?Pe(document,"dragover",this._handleAutoScroll):(Pe(document,"pointermove",this._handleFallbackAutoScroll),Pe(document,"touchmove",this._handleFallbackAutoScroll),Pe(document,"mousemove",this._handleFallbackAutoScroll)),al(),Fn(),Up()},nulling:function(){qn=Cs=Pa=ks=La=Gr=Vr=null,Je.length=0},_handleFallbackAutoScroll:function(i){this._handleAutoScroll(i,!0)},_handleAutoScroll:function(i,h){var g=this,b=(i.touches?i.touches[0]:i).clientX,v=(i.touches?i.touches[0]:i).clientY,k=document.elementFromPoint(b,v);if(qn=i,h||this.options.forceAutoScrollFallback||Za||li||Ia){jr(i,this.options,k,h);var T=gi(k,!0);ks&&(!La||b!==Gr||v!==Vr)&&(La&&al(),La=setInterval(function(){var O=gi(document.elementFromPoint(b,v),!0);O!==T&&(T=O,Fn()),jr(i,g.options,O,h)},10),Gr=b,Vr=v)}else{if(!this.options.bubbleScroll||gi(k,!0)===Jt()){Fn();return}jr(i,this.options,gi(k,!1),!1)}}},oi(n,{pluginName:"scroll",initializeByDefault:!0})}function Fn(){Je.forEach(function(n){clearInterval(n.pid)}),Je=[]}function al(){clearInterval(La)}var jr=eh(function(n,s,i,h){if(s.scroll){var g=(n.touches?n.touches[0]:n).clientX,b=(n.touches?n.touches[0]:n).clientY,v=s.scrollSensitivity,k=s.scrollSpeed,T=Jt(),O=!1,F;Cs!==i&&(Cs=i,Fn(),Pa=s.scroll,F=s.scrollFn,Pa===!0&&(Pa=gi(i,!0)));var z=0,G=Pa;do{var ae=G,Y=Qe(ae),q=Y.top,$=Y.bottom,ie=Y.left,Q=Y.right,ne=Y.width,pe=Y.height,X=void 0,we=void 0,ce=ae.scrollWidth,V=ae.scrollHeight,se=be(ae),Le=ae.scrollLeft,ke=ae.scrollTop;ae===T?(X=ne<ce&&(se.overflowX==="auto"||se.overflowX==="scroll"||se.overflowX==="visible"),we=pe<V&&(se.overflowY==="auto"||se.overflowY==="scroll"||se.overflowY==="visible")):(X=ne<ce&&(se.overflowX==="auto"||se.overflowX==="scroll"),we=pe<V&&(se.overflowY==="auto"||se.overflowY==="scroll"));var De=X&&(Math.abs(Q-g)<=v&&Le+ne<ce)-(Math.abs(ie-g)<=v&&!!Le),Ye=we&&(Math.abs($-b)<=v&&ke+pe<V)-(Math.abs(q-b)<=v&&!!ke);if(!Je[z])for(var Ke=0;Ke<=z;Ke++)Je[Ke]||(Je[Ke]={});(Je[z].vx!=De||Je[z].vy!=Ye||Je[z].el!==ae)&&(Je[z].el=ae,Je[z].vx=De,Je[z].vy=Ye,clearInterval(Je[z].pid),(De!=0||Ye!=0)&&(O=!0,Je[z].pid=setInterval((function(){h&&this.layer===0&&ye.active._onTouchMove(qn);var Tt=Je[this.layer].vy?Je[this.layer].vy*k:0,Dt=Je[this.layer].vx?Je[this.layer].vx*k:0;typeof F=="function"&&F.call(ye.dragged.parentNode[At],Dt,Tt,n,qn,Je[this.layer].el)!=="continue"||th(Je[this.layer].el,Dt,Tt)}).bind({layer:z}),24))),z++}while(s.bubbleScroll&&G!==T&&(G=gi(G,!1)));ks=O}},30),ch=function(s){var i=s.originalEvent,h=s.putSortable,g=s.dragEl,b=s.activeSortable,v=s.dispatchSortableEvent,k=s.hideGhostForTarget,T=s.unhideGhostForTarget;if(i){var O=h||b;k();var F=i.changedTouches&&i.changedTouches.length?i.changedTouches[0]:i,z=document.elementFromPoint(F.clientX,F.clientY);T(),O&&!O.el.contains(z)&&(v("spill"),this.onSpill({dragEl:g,putSortable:h}))}};function to(){}to.prototype={startIndex:null,dragStart:function(s){var i=s.oldDraggableIndex;this.startIndex=i},onSpill:function(s){var i=s.dragEl,h=s.putSortable;this.sortable.captureAnimationState(),h&&h.captureAnimationState();var g=sa(this.sortable.el,this.startIndex,this.options);g?this.sortable.el.insertBefore(i,g):this.sortable.el.appendChild(i),this.sortable.animateAll(),h&&h.animateAll()},drop:ch};oi(to,{pluginName:"revertOnSpill"});function io(){}io.prototype={onSpill:function(s){var i=s.dragEl,h=s.putSortable,g=h||this.sortable;g.captureAnimationState(),i.parentNode&&i.parentNode.removeChild(i),g.animateAll()},drop:ch};oi(io,{pluginName:"removeOnSpill"});ye.mount(new dm);ye.mount(io,to);function um(n){return n&&n.__esModule&&Object.prototype.hasOwnProperty.call(n,"default")?n.default:n}var Es={exports:{}};/*!
 * ApexCharts v3.54.1
 * (c) 2018-2024 ApexCharts
 * Released under the MIT License.
 */(function(n,s){function i(_,e){(e==null||e>_.length)&&(e=_.length);for(var t=0,a=Array(e);t<e;t++)a[t]=_[t];return a}function h(_){if(_===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return _}function g(_,e){if(!(_ instanceof e))throw new TypeError("Cannot call a class as a function")}function b(_,e){for(var t=0;t<e.length;t++){var a=e[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(_,Q(a.key),a)}}function v(_,e,t){return e&&b(_.prototype,e),t&&b(_,t),Object.defineProperty(_,"prototype",{writable:!1}),_}function k(_,e){var t=typeof Symbol<"u"&&_[Symbol.iterator]||_["@@iterator"];if(!t){if(Array.isArray(_)||(t=pe(_))||e){t&&(_=t);var a=0,r=function(){};return{s:r,n:function(){return a>=_.length?{done:!0}:{done:!1,value:_[a++]}},e:function(d){throw d},f:r}}throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}var l,o=!0,c=!1;return{s:function(){t=t.call(_)},n:function(){var d=t.next();return o=d.done,d},e:function(d){c=!0,l=d},f:function(){try{o||t.return==null||t.return()}finally{if(c)throw l}}}}function T(_){var e=G();return function(){var t,a=F(_);if(e){var r=F(this).constructor;t=Reflect.construct(a,arguments,r)}else t=a.apply(this,arguments);return function(l,o){if(o&&(typeof o=="object"||typeof o=="function"))return o;if(o!==void 0)throw new TypeError("Derived constructors may only return object or undefined");return h(l)}(this,t)}}function O(_,e,t){return(e=Q(e))in _?Object.defineProperty(_,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):_[e]=t,_}function F(_){return F=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},F(_)}function z(_,e){if(typeof e!="function"&&e!==null)throw new TypeError("Super expression must either be null or a function");_.prototype=Object.create(e&&e.prototype,{constructor:{value:_,writable:!0,configurable:!0}}),Object.defineProperty(_,"prototype",{writable:!1}),e&&q(_,e)}function G(){try{var _=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}))}catch{}return(G=function(){return!!_})()}function ae(_,e){var t=Object.keys(_);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(_);e&&(a=a.filter(function(r){return Object.getOwnPropertyDescriptor(_,r).enumerable})),t.push.apply(t,a)}return t}function Y(_){for(var e=1;e<arguments.length;e++){var t=arguments[e]!=null?arguments[e]:{};e%2?ae(Object(t),!0).forEach(function(a){O(_,a,t[a])}):Object.getOwnPropertyDescriptors?Object.defineProperties(_,Object.getOwnPropertyDescriptors(t)):ae(Object(t)).forEach(function(a){Object.defineProperty(_,a,Object.getOwnPropertyDescriptor(t,a))})}return _}function q(_,e){return q=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,a){return t.__proto__=a,t},q(_,e)}function $(_,e){return function(t){if(Array.isArray(t))return t}(_)||function(t,a){var r=t==null?null:typeof Symbol<"u"&&t[Symbol.iterator]||t["@@iterator"];if(r!=null){var l,o,c,d,f=[],m=!0,p=!1;try{if(c=(r=r.call(t)).next,a===0){if(Object(r)!==r)return;m=!1}else for(;!(m=(l=c.call(r)).done)&&(f.push(l.value),f.length!==a);m=!0);}catch(x){p=!0,o=x}finally{try{if(!m&&r.return!=null&&(d=r.return(),Object(d)!==d))return}finally{if(p)throw o}}return f}}(_,e)||pe(_,e)||function(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}()}function ie(_){return function(e){if(Array.isArray(e))return i(e)}(_)||function(e){if(typeof Symbol<"u"&&e[Symbol.iterator]!=null||e["@@iterator"]!=null)return Array.from(e)}(_)||pe(_)||function(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}()}function Q(_){var e=function(t,a){if(typeof t!="object"||!t)return t;var r=t[Symbol.toPrimitive];if(r!==void 0){var l=r.call(t,a);if(typeof l!="object")return l;throw new TypeError("@@toPrimitive must return a primitive value.")}return(a==="string"?String:Number)(t)}(_,"string");return typeof e=="symbol"?e:e+""}function ne(_){return ne=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(e){return typeof e}:function(e){return e&&typeof Symbol=="function"&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},ne(_)}function pe(_,e){if(_){if(typeof _=="string")return i(_,e);var t={}.toString.call(_).slice(8,-1);return t==="Object"&&_.constructor&&(t=_.constructor.name),t==="Map"||t==="Set"?Array.from(_):t==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?i(_,e):void 0}}var X=function(){function _(){g(this,_)}return v(_,[{key:"shadeRGBColor",value:function(e,t){var a=t.split(","),r=e<0?0:255,l=e<0?-1*e:e,o=parseInt(a[0].slice(4),10),c=parseInt(a[1],10),d=parseInt(a[2],10);return"rgb("+(Math.round((r-o)*l)+o)+","+(Math.round((r-c)*l)+c)+","+(Math.round((r-d)*l)+d)+")"}},{key:"shadeHexColor",value:function(e,t){var a=parseInt(t.slice(1),16),r=e<0?0:255,l=e<0?-1*e:e,o=a>>16,c=a>>8&255,d=255&a;return"#"+(16777216+65536*(Math.round((r-o)*l)+o)+256*(Math.round((r-c)*l)+c)+(Math.round((r-d)*l)+d)).toString(16).slice(1)}},{key:"shadeColor",value:function(e,t){return _.isColorHex(t)?this.shadeHexColor(e,t):this.shadeRGBColor(e,t)}}],[{key:"bind",value:function(e,t){return function(){return e.apply(t,arguments)}}},{key:"isObject",value:function(e){return e&&ne(e)==="object"&&!Array.isArray(e)&&e!=null}},{key:"is",value:function(e,t){return Object.prototype.toString.call(t)==="[object "+e+"]"}},{key:"listToArray",value:function(e){var t,a=[];for(t=0;t<e.length;t++)a[t]=e[t];return a}},{key:"extend",value:function(e,t){var a=this;typeof Object.assign!="function"&&(Object.assign=function(l){if(l==null)throw new TypeError("Cannot convert undefined or null to object");for(var o=Object(l),c=1;c<arguments.length;c++){var d=arguments[c];if(d!=null)for(var f in d)d.hasOwnProperty(f)&&(o[f]=d[f])}return o});var r=Object.assign({},e);return this.isObject(e)&&this.isObject(t)&&Object.keys(t).forEach(function(l){a.isObject(t[l])&&l in e?r[l]=a.extend(e[l],t[l]):Object.assign(r,O({},l,t[l]))}),r}},{key:"extendArray",value:function(e,t){var a=[];return e.map(function(r){a.push(_.extend(t,r))}),e=a}},{key:"monthMod",value:function(e){return e%12}},{key:"clone",value:function(e){if(_.is("Array",e)){for(var t=[],a=0;a<e.length;a++)t[a]=this.clone(e[a]);return t}if(_.is("Null",e))return null;if(_.is("Date",e))return e;if(ne(e)==="object"){var r={};for(var l in e)e.hasOwnProperty(l)&&(r[l]=this.clone(e[l]));return r}return e}},{key:"log10",value:function(e){return Math.log(e)/Math.LN10}},{key:"roundToBase10",value:function(e){return Math.pow(10,Math.floor(Math.log10(e)))}},{key:"roundToBase",value:function(e,t){return Math.pow(t,Math.floor(Math.log(e)/Math.log(t)))}},{key:"parseNumber",value:function(e){return e===null?e:parseFloat(e)}},{key:"stripNumber",value:function(e){var t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:2;return Number.isInteger(e)?e:parseFloat(e.toPrecision(t))}},{key:"randomId",value:function(){return(Math.random()+1).toString(36).substring(4)}},{key:"noExponents",value:function(e){var t=String(e).split(/[eE]/);if(t.length===1)return t[0];var a="",r=e<0?"-":"",l=t[0].replace(".",""),o=Number(t[1])+1;if(o<0){for(a=r+"0.";o++;)a+="0";return a+l.replace(/^-/,"")}for(o-=l.length;o--;)a+="0";return l+a}},{key:"getDimensions",value:function(e){var t=getComputedStyle(e,null),a=e.clientHeight,r=e.clientWidth;return a-=parseFloat(t.paddingTop)+parseFloat(t.paddingBottom),[r-=parseFloat(t.paddingLeft)+parseFloat(t.paddingRight),a]}},{key:"getBoundingClientRect",value:function(e){var t=e.getBoundingClientRect();return{top:t.top,right:t.right,bottom:t.bottom,left:t.left,width:e.clientWidth,height:e.clientHeight,x:t.left,y:t.top}}},{key:"getLargestStringFromArr",value:function(e){return e.reduce(function(t,a){return Array.isArray(a)&&(a=a.reduce(function(r,l){return r.length>l.length?r:l})),t.length>a.length?t:a},0)}},{key:"hexToRgba",value:function(){var e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:"#999999",t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:.6;e.substring(0,1)!=="#"&&(e="#999999");var a=e.replace("#","");a=a.match(new RegExp("(.{"+a.length/3+"})","g"));for(var r=0;r<a.length;r++)a[r]=parseInt(a[r].length===1?a[r]+a[r]:a[r],16);return t!==void 0&&a.push(t),"rgba("+a.join(",")+")"}},{key:"getOpacityFromRGBA",value:function(e){return parseFloat(e.replace(/^.*,(.+)\)/,"$1"))}},{key:"rgb2hex",value:function(e){return(e=e.match(/^rgba?[\s+]?\([\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?/i))&&e.length===4?"#"+("0"+parseInt(e[1],10).toString(16)).slice(-2)+("0"+parseInt(e[2],10).toString(16)).slice(-2)+("0"+parseInt(e[3],10).toString(16)).slice(-2):""}},{key:"isColorHex",value:function(e){return/(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)|(^#[0-9A-F]{8}$)/i.test(e)}},{key:"getPolygonPos",value:function(e,t){for(var a=[],r=2*Math.PI/t,l=0;l<t;l++){var o={};o.x=e*Math.sin(l*r),o.y=-e*Math.cos(l*r),a.push(o)}return a}},{key:"polarToCartesian",value:function(e,t,a,r){var l=(r-90)*Math.PI/180;return{x:e+a*Math.cos(l),y:t+a*Math.sin(l)}}},{key:"escapeString",value:function(e){var t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:"x",a=e.toString().slice();return a=a.replace(/[` ~!@#$%^&*()|+\=?;:'",.<>{}[\]\\/]/gi,t)}},{key:"negToZero",value:function(e){return e<0?0:e}},{key:"moveIndexInArray",value:function(e,t,a){if(a>=e.length)for(var r=a-e.length+1;r--;)e.push(void 0);return e.splice(a,0,e.splice(t,1)[0]),e}},{key:"extractNumber",value:function(e){return parseFloat(e.replace(/[^\d.]*/g,""))}},{key:"findAncestor",value:function(e,t){for(;(e=e.parentElement)&&!e.classList.contains(t););return e}},{key:"setELstyles",value:function(e,t){for(var a in t)t.hasOwnProperty(a)&&(e.style.key=t[a])}},{key:"preciseAddition",value:function(e,t){var a=(String(e).split(".")[1]||"").length,r=(String(t).split(".")[1]||"").length,l=Math.pow(10,Math.max(a,r));return(Math.round(e*l)+Math.round(t*l))/l}},{key:"isNumber",value:function(e){return!isNaN(e)&&parseFloat(Number(e))===e&&!isNaN(parseInt(e,10))}},{key:"isFloat",value:function(e){return Number(e)===e&&e%1!=0}},{key:"isSafari",value:function(){return/^((?!chrome|android).)*safari/i.test(navigator.userAgent)}},{key:"isFirefox",value:function(){return navigator.userAgent.toLowerCase().indexOf("firefox")>-1}},{key:"isMsEdge",value:function(){var e=window.navigator.userAgent,t=e.indexOf("Edge/");return t>0&&parseInt(e.substring(t+5,e.indexOf(".",t)),10)}},{key:"getGCD",value:function(e,t){var a=arguments.length>2&&arguments[2]!==void 0?arguments[2]:7,r=Math.pow(10,a-Math.floor(Math.log10(Math.max(e,t))));for(e=Math.round(Math.abs(e)*r),t=Math.round(Math.abs(t)*r);t;){var l=t;t=e%t,e=l}return e/r}},{key:"getPrimeFactors",value:function(e){for(var t=[],a=2;e>=2;)e%a==0?(t.push(a),e/=a):a++;return t}},{key:"mod",value:function(e,t){var a=arguments.length>2&&arguments[2]!==void 0?arguments[2]:7,r=Math.pow(10,a-Math.floor(Math.log10(Math.max(e,t))));return(e=Math.round(Math.abs(e)*r))%(t=Math.round(Math.abs(t)*r))/r}}]),_}(),we=function(){function _(e){g(this,_),this.ctx=e,this.w=e.w,this.setEasingFunctions()}return v(_,[{key:"setEasingFunctions",value:function(){var e;if(!this.w.globals.easing){switch(this.w.config.chart.animations.easing){case"linear":e="-";break;case"easein":e="<";break;case"easeout":e=">";break;case"easeinout":default:e="<>";break;case"swing":e=function(t){var a=1.70158;return(t-=1)*t*((a+1)*t+a)+1};break;case"bounce":e=function(t){return t<1/2.75?7.5625*t*t:t<2/2.75?7.5625*(t-=1.5/2.75)*t+.75:t<2.5/2.75?7.5625*(t-=2.25/2.75)*t+.9375:7.5625*(t-=2.625/2.75)*t+.984375};break;case"elastic":e=function(t){return t===!!t?t:Math.pow(2,-10*t)*Math.sin((t-.075)*(2*Math.PI)/.3)+1}}this.w.globals.easing=e}}},{key:"animateLine",value:function(e,t,a,r){e.attr(t).animate(r).attr(a)}},{key:"animateMarker",value:function(e,t,a,r){e.attr({opacity:0}).animate(t,a).attr({opacity:1}).afterAll(function(){r()})}},{key:"animateRect",value:function(e,t,a,r,l){e.attr(t).animate(r).attr(a).afterAll(function(){return l()})}},{key:"animatePathsGradually",value:function(e){var t=e.el,a=e.realIndex,r=e.j,l=e.fill,o=e.pathFrom,c=e.pathTo,d=e.speed,f=e.delay,m=this.w,p=0;m.config.chart.animations.animateGradually.enabled&&(p=m.config.chart.animations.animateGradually.delay),m.config.chart.animations.dynamicAnimation.enabled&&m.globals.dataChanged&&m.config.chart.type!=="bar"&&(p=0),this.morphSVG(t,a,r,m.config.chart.type!=="line"||m.globals.comboCharts?l:"stroke",o,c,d,f*p)}},{key:"showDelayedElements",value:function(){this.w.globals.delayedElements.forEach(function(e){var t=e.el;t.classList.remove("apexcharts-element-hidden"),t.classList.add("apexcharts-hidden-element-shown")})}},{key:"animationCompleted",value:function(e){var t=this.w;t.globals.animationEnded||(t.globals.animationEnded=!0,this.showDelayedElements(),typeof t.config.chart.events.animationEnd=="function"&&t.config.chart.events.animationEnd(this.ctx,{el:e,w:t}))}},{key:"morphSVG",value:function(e,t,a,r,l,o,c,d){var f=this,m=this.w;l||(l=e.attr("pathFrom")),o||(o=e.attr("pathTo"));var p=function(x){return m.config.chart.type==="radar"&&(c=1),"M 0 ".concat(m.globals.gridHeight)};(!l||l.indexOf("undefined")>-1||l.indexOf("NaN")>-1)&&(l=p()),(!o||o.indexOf("undefined")>-1||o.indexOf("NaN")>-1)&&(o=p()),m.globals.shouldAnimate||(c=1),e.plot(l).animate(1,m.globals.easing,d).plot(l).animate(c,m.globals.easing,d).plot(o).afterAll(function(){X.isNumber(a)?a===m.globals.series[m.globals.maxValsInArrayIndex].length-2&&m.globals.shouldAnimate&&f.animationCompleted(e):r!=="none"&&m.globals.shouldAnimate&&(!m.globals.comboCharts&&t===m.globals.series.length-1||m.globals.comboCharts)&&f.animationCompleted(e),f.showDelayedElements()})}}]),_}(),ce=function(){function _(e){g(this,_),this.ctx=e,this.w=e.w}return v(_,[{key:"getDefaultFilter",value:function(e,t){var a=this.w;e.unfilter(!0),new window.SVG.Filter().size("120%","180%","-5%","-40%"),a.config.states.normal.filter!=="none"?this.applyFilter(e,t,a.config.states.normal.filter.type,a.config.states.normal.filter.value):a.config.chart.dropShadow.enabled&&this.dropShadow(e,a.config.chart.dropShadow,t)}},{key:"addNormalFilter",value:function(e,t){var a=this.w;a.config.chart.dropShadow.enabled&&!e.node.classList.contains("apexcharts-marker")&&this.dropShadow(e,a.config.chart.dropShadow,t)}},{key:"addLightenFilter",value:function(e,t,a){var r=this,l=this.w,o=a.intensity;e.unfilter(!0),new window.SVG.Filter,e.filter(function(c){var d=l.config.chart.dropShadow;(d.enabled?r.addShadow(c,t,d):c).componentTransfer({rgb:{type:"linear",slope:1.5,intercept:o}})}),e.filterer.node.setAttribute("filterUnits","userSpaceOnUse"),this._scaleFilterSize(e.filterer.node)}},{key:"addDarkenFilter",value:function(e,t,a){var r=this,l=this.w,o=a.intensity;e.unfilter(!0),new window.SVG.Filter,e.filter(function(c){var d=l.config.chart.dropShadow;(d.enabled?r.addShadow(c,t,d):c).componentTransfer({rgb:{type:"linear",slope:o}})}),e.filterer.node.setAttribute("filterUnits","userSpaceOnUse"),this._scaleFilterSize(e.filterer.node)}},{key:"applyFilter",value:function(e,t,a){var r=arguments.length>3&&arguments[3]!==void 0?arguments[3]:.5;switch(a){case"none":this.addNormalFilter(e,t);break;case"lighten":this.addLightenFilter(e,t,{intensity:r});break;case"darken":this.addDarkenFilter(e,t,{intensity:r})}}},{key:"addShadow",value:function(e,t,a){var r,l=this.w,o=a.blur,c=a.top,d=a.left,f=a.color,m=a.opacity;if(((r=l.config.chart.dropShadow.enabledOnSeries)===null||r===void 0?void 0:r.length)>0&&l.config.chart.dropShadow.enabledOnSeries.indexOf(t)===-1)return e;var p=e.flood(Array.isArray(f)?f[t]:f,m).composite(e.sourceAlpha,"in").offset(d,c).gaussianBlur(o).merge(e.source);return e.blend(e.source,p)}},{key:"dropShadow",value:function(e,t){var a,r,l=arguments.length>2&&arguments[2]!==void 0?arguments[2]:0,o=t.top,c=t.left,d=t.blur,f=t.color,m=t.opacity,p=t.noUserSpaceOnUse,x=this.w;return e.unfilter(!0),X.isMsEdge()&&x.config.chart.type==="radialBar"||((a=x.config.chart.dropShadow.enabledOnSeries)===null||a===void 0?void 0:a.length)>0&&((r=x.config.chart.dropShadow.enabledOnSeries)===null||r===void 0?void 0:r.indexOf(l))===-1||(f=Array.isArray(f)?f[l]:f,e.filter(function(w){var S=null;S=X.isSafari()||X.isFirefox()||X.isMsEdge()?w.flood(f,m).composite(w.sourceAlpha,"in").offset(c,o).gaussianBlur(d):w.flood(f,m).composite(w.sourceAlpha,"in").offset(c,o).gaussianBlur(d).merge(w.source),w.blend(w.source,S)}),p||e.filterer.node.setAttribute("filterUnits","userSpaceOnUse"),this._scaleFilterSize(e.filterer.node)),e}},{key:"setSelectionFilter",value:function(e,t,a){var r=this.w;if(r.globals.selectedDataPoints[t]!==void 0&&r.globals.selectedDataPoints[t].indexOf(a)>-1){e.node.setAttribute("selected",!0);var l=r.config.states.active.filter;l!=="none"&&this.applyFilter(e,t,l.type,l.value)}}},{key:"_scaleFilterSize",value:function(e){(function(t){for(var a in t)t.hasOwnProperty(a)&&e.setAttribute(a,t[a])})({width:"200%",height:"200%",x:"-50%",y:"-50%"})}}]),_}(),V=function(){function _(e){g(this,_),this.ctx=e,this.w=e.w}return v(_,[{key:"roundPathCorners",value:function(e,t){function a(I,H,B){var U=H.x-I.x,ee=H.y-I.y,K=Math.sqrt(U*U+ee*ee);return r(I,H,Math.min(1,B/K))}function r(I,H,B){return{x:I.x+(H.x-I.x)*B,y:I.y+(H.y-I.y)*B}}function l(I,H){I.length>2&&(I[I.length-2]=H.x,I[I.length-1]=H.y)}function o(I){return{x:parseFloat(I[I.length-2]),y:parseFloat(I[I.length-1])}}e.indexOf("NaN")>-1&&(e="");var c=e.split(/[,\s]/).reduce(function(I,H){var B=H.match("([a-zA-Z])(.+)");return B?(I.push(B[1]),I.push(B[2])):I.push(H),I},[]).reduce(function(I,H){return parseFloat(H)==H&&I.length?I[I.length-1].push(H):I.push([H]),I},[]),d=[];if(c.length>1){var f=o(c[0]),m=null;c[c.length-1][0]=="Z"&&c[0].length>2&&(m=["L",f.x,f.y],c[c.length-1]=m),d.push(c[0]);for(var p=1;p<c.length;p++){var x=d[d.length-1],w=c[p],S=w==m?c[1]:c[p+1];if(S&&x&&x.length>2&&w[0]=="L"&&S.length>2&&S[0]=="L"){var A,E,M=o(x),P=o(w),u=o(S);A=a(P,M,t),E=a(P,u,t),l(w,A),w.origPoint=P,d.push(w);var y=r(A,P,.5),C=r(P,E,.5),D=["C",y.x,y.y,C.x,C.y,E.x,E.y];D.origPoint=P,d.push(D)}else d.push(w)}if(m){var L=o(d[d.length-1]);d.push(["Z"]),l(d[0],L)}}else d=c;return d.reduce(function(I,H){return I+H.join(" ")+" "},"")}},{key:"drawLine",value:function(e,t,a,r){var l=arguments.length>4&&arguments[4]!==void 0?arguments[4]:"#a8a8a8",o=arguments.length>5&&arguments[5]!==void 0?arguments[5]:0,c=arguments.length>6&&arguments[6]!==void 0?arguments[6]:null,d=arguments.length>7&&arguments[7]!==void 0?arguments[7]:"butt";return this.w.globals.dom.Paper.line().attr({x1:e,y1:t,x2:a,y2:r,stroke:l,"stroke-dasharray":o,"stroke-width":c,"stroke-linecap":d})}},{key:"drawRect",value:function(){var e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:0,t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:0,a=arguments.length>2&&arguments[2]!==void 0?arguments[2]:0,r=arguments.length>3&&arguments[3]!==void 0?arguments[3]:0,l=arguments.length>4&&arguments[4]!==void 0?arguments[4]:0,o=arguments.length>5&&arguments[5]!==void 0?arguments[5]:"#fefefe",c=arguments.length>6&&arguments[6]!==void 0?arguments[6]:1,d=arguments.length>7&&arguments[7]!==void 0?arguments[7]:null,f=arguments.length>8&&arguments[8]!==void 0?arguments[8]:null,m=arguments.length>9&&arguments[9]!==void 0?arguments[9]:0,p=this.w.globals.dom.Paper.rect();return p.attr({x:e,y:t,width:a>0?a:0,height:r>0?r:0,rx:l,ry:l,opacity:c,"stroke-width":d!==null?d:0,stroke:f!==null?f:"none","stroke-dasharray":m}),p.node.setAttribute("fill",o),p}},{key:"drawPolygon",value:function(e){var t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:"#e1e1e1",a=arguments.length>2&&arguments[2]!==void 0?arguments[2]:1,r=arguments.length>3&&arguments[3]!==void 0?arguments[3]:"none";return this.w.globals.dom.Paper.polygon(e).attr({fill:r,stroke:t,"stroke-width":a})}},{key:"drawCircle",value:function(e){var t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null;e<0&&(e=0);var a=this.w.globals.dom.Paper.circle(2*e);return t!==null&&a.attr(t),a}},{key:"drawPath",value:function(e){var t=e.d,a=t===void 0?"":t,r=e.stroke,l=r===void 0?"#a8a8a8":r,o=e.strokeWidth,c=o===void 0?1:o,d=e.fill,f=e.fillOpacity,m=f===void 0?1:f,p=e.strokeOpacity,x=p===void 0?1:p,w=e.classes,S=e.strokeLinecap,A=S===void 0?null:S,E=e.strokeDashArray,M=E===void 0?0:E,P=this.w;return A===null&&(A=P.config.stroke.lineCap),(a.indexOf("undefined")>-1||a.indexOf("NaN")>-1)&&(a="M 0 ".concat(P.globals.gridHeight)),P.globals.dom.Paper.path(a).attr({fill:d,"fill-opacity":m,stroke:l,"stroke-opacity":x,"stroke-linecap":A,"stroke-width":c,"stroke-dasharray":M,class:w})}},{key:"group",value:function(){var e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:null,t=this.w.globals.dom.Paper.group();return e!==null&&t.attr(e),t}},{key:"move",value:function(e,t){var a=["M",e,t].join(" ");return a}},{key:"line",value:function(e,t){var a=arguments.length>2&&arguments[2]!==void 0?arguments[2]:null,r=null;return a===null?r=[" L",e,t].join(" "):a==="H"?r=[" H",e].join(" "):a==="V"&&(r=[" V",t].join(" ")),r}},{key:"curve",value:function(e,t,a,r,l,o){var c=["C",e,t,a,r,l,o].join(" ");return c}},{key:"quadraticCurve",value:function(e,t,a,r){return["Q",e,t,a,r].join(" ")}},{key:"arc",value:function(e,t,a,r,l,o,c){var d="A";arguments.length>7&&arguments[7]!==void 0&&arguments[7]&&(d="a");var f=[d,e,t,a,r,l,o,c].join(" ");return f}},{key:"renderPaths",value:function(e){var t,a=e.j,r=e.realIndex,l=e.pathFrom,o=e.pathTo,c=e.stroke,d=e.strokeWidth,f=e.strokeLinecap,m=e.fill,p=e.animationDelay,x=e.initialSpeed,w=e.dataChangeSpeed,S=e.className,A=e.chartType,E=e.shouldClipToGrid,M=E===void 0||E,P=e.bindEventsOnPaths,u=P===void 0||P,y=e.drawShadow,C=y===void 0||y,D=this.w,L=new ce(this.ctx),I=new we(this.ctx),H=this.w.config.chart.animations.enabled,B=H&&this.w.config.chart.animations.dynamicAnimation.enabled,U=!!(H&&!D.globals.resized||B&&D.globals.dataChanged&&D.globals.shouldAnimate);U?t=l:(t=o,D.globals.animationEnded=!0);var ee=D.config.stroke.dashArray,K=0;K=Array.isArray(ee)?ee[r]:D.config.stroke.dashArray;var te=this.drawPath({d:t,stroke:c,strokeWidth:d,fill:m,fillOpacity:1,classes:S,strokeLinecap:f,strokeDashArray:K});if(te.attr("index",r),M&&(A==="bar"&&!D.globals.isHorizontal||D.globals.comboCharts?te.attr({"clip-path":"url(#gridRectBarMask".concat(D.globals.cuid,")")}):te.attr({"clip-path":"url(#gridRectMask".concat(D.globals.cuid,")")})),D.config.states.normal.filter.type!=="none")L.getDefaultFilter(te,r);else if(D.config.chart.dropShadow.enabled&&C){var le=D.config.chart.dropShadow;L.dropShadow(te,le,r)}u&&(te.node.addEventListener("mouseenter",this.pathMouseEnter.bind(this,te)),te.node.addEventListener("mouseleave",this.pathMouseLeave.bind(this,te)),te.node.addEventListener("mousedown",this.pathMouseDown.bind(this,te))),te.attr({pathTo:o,pathFrom:l});var de={el:te,j:a,realIndex:r,pathFrom:l,pathTo:o,fill:m,strokeWidth:d,delay:p};return!H||D.globals.resized||D.globals.dataChanged?!D.globals.resized&&D.globals.dataChanged||I.showDelayedElements():I.animatePathsGradually(Y(Y({},de),{},{speed:x})),D.globals.dataChanged&&B&&U&&I.animatePathsGradually(Y(Y({},de),{},{speed:w})),te}},{key:"drawPattern",value:function(e,t,a){var r=arguments.length>3&&arguments[3]!==void 0?arguments[3]:"#a8a8a8",l=arguments.length>4&&arguments[4]!==void 0?arguments[4]:0;return this.w.globals.dom.Paper.pattern(t,a,function(o){e==="horizontalLines"?o.line(0,0,a,0).stroke({color:r,width:l+1}):e==="verticalLines"?o.line(0,0,0,t).stroke({color:r,width:l+1}):e==="slantedLines"?o.line(0,0,t,a).stroke({color:r,width:l}):e==="squares"?o.rect(t,a).fill("none").stroke({color:r,width:l}):e==="circles"&&o.circle(t).fill("none").stroke({color:r,width:l})})}},{key:"drawGradient",value:function(e,t,a,r,l){var o,c=arguments.length>5&&arguments[5]!==void 0?arguments[5]:null,d=arguments.length>6&&arguments[6]!==void 0?arguments[6]:null,f=arguments.length>7&&arguments[7]!==void 0?arguments[7]:null,m=arguments.length>8&&arguments[8]!==void 0?arguments[8]:0,p=this.w;t.length<9&&t.indexOf("#")===0&&(t=X.hexToRgba(t,r)),a.length<9&&a.indexOf("#")===0&&(a=X.hexToRgba(a,l));var x=0,w=1,S=1,A=null;d!==null&&(x=d[0]!==void 0?d[0]/100:0,w=d[1]!==void 0?d[1]/100:1,S=d[2]!==void 0?d[2]/100:1,A=d[3]!==void 0?d[3]/100:null);var E=!(p.config.chart.type!=="donut"&&p.config.chart.type!=="pie"&&p.config.chart.type!=="polarArea"&&p.config.chart.type!=="bubble");if(o=f===null||f.length===0?p.globals.dom.Paper.gradient(E?"radial":"linear",function(u){u.at(x,t,r),u.at(w,a,l),u.at(S,a,l),A!==null&&u.at(A,t,r)}):p.globals.dom.Paper.gradient(E?"radial":"linear",function(u){(Array.isArray(f[m])?f[m]:f).forEach(function(y){u.at(y.offset/100,y.color,y.opacity)})}),E){var M=p.globals.gridWidth/2,P=p.globals.gridHeight/2;p.config.chart.type!=="bubble"?o.attr({gradientUnits:"userSpaceOnUse",cx:M,cy:P,r:c}):o.attr({cx:.5,cy:.5,r:.8,fx:.2,fy:.2})}else e==="vertical"?o.from(0,0).to(0,1):e==="diagonal"?o.from(0,0).to(1,1):e==="horizontal"?o.from(0,1).to(1,1):e==="diagonal2"&&o.from(1,0).to(0,1);return o}},{key:"getTextBasedOnMaxWidth",value:function(e){var t=e.text,a=e.maxWidth,r=e.fontSize,l=e.fontFamily,o=this.getTextRects(t,r,l),c=o.width/t.length,d=Math.floor(a/c);return a<o.width?t.slice(0,d-3)+"...":t}},{key:"drawText",value:function(e){var t=this,a=e.x,r=e.y,l=e.text,o=e.textAnchor,c=e.fontSize,d=e.fontFamily,f=e.fontWeight,m=e.foreColor,p=e.opacity,x=e.maxWidth,w=e.cssClass,S=w===void 0?"":w,A=e.isPlainText,E=A===void 0||A,M=e.dominantBaseline,P=M===void 0?"auto":M,u=this.w;l===void 0&&(l="");var y=l;o||(o="start"),m&&m.length||(m=u.config.chart.foreColor),d=d||u.config.chart.fontFamily,f=f||"regular";var C,D={maxWidth:x,fontSize:c=c||"11px",fontFamily:d};return Array.isArray(l)?C=u.globals.dom.Paper.text(function(L){for(var I=0;I<l.length;I++)y=l[I],x&&(y=t.getTextBasedOnMaxWidth(Y({text:l[I]},D))),I===0?L.tspan(y):L.tspan(y).newLine()}):(x&&(y=this.getTextBasedOnMaxWidth(Y({text:l},D))),C=E?u.globals.dom.Paper.plain(l):u.globals.dom.Paper.text(function(L){return L.tspan(y)})),C.attr({x:a,y:r,"text-anchor":o,"dominant-baseline":P,"font-size":c,"font-family":d,"font-weight":f,fill:m,class:"apexcharts-text "+S}),C.node.style.fontFamily=d,C.node.style.opacity=p,C}},{key:"getMarkerPath",value:function(e,t,a,r){var l="";switch(a){case"cross":l="M ".concat(e-(r/=1.4)," ").concat(t-r," L ").concat(e+r," ").concat(t+r,"  M ").concat(e-r," ").concat(t+r," L ").concat(e+r," ").concat(t-r);break;case"plus":l="M ".concat(e-(r/=1.12)," ").concat(t," L ").concat(e+r," ").concat(t,"  M ").concat(e," ").concat(t-r," L ").concat(e," ").concat(t+r);break;case"star":case"sparkle":var o=5;r*=1.15,a==="sparkle"&&(r/=1.1,o=4);for(var c=Math.PI/o,d=0;d<=2*o;d++){var f=d*c,m=d%2==0?r:r/2;l+=(d===0?"M":"L")+(e+m*Math.sin(f))+","+(t-m*Math.cos(f))}l+="Z";break;case"triangle":l="M ".concat(e," ").concat(t-r,` 
             L `).concat(e+r," ").concat(t+r,` 
             L `).concat(e-r," ").concat(t+r,` 
             Z`);break;case"square":case"rect":l="M ".concat(e-(r/=1.125)," ").concat(t-r,` 
           L `).concat(e+r," ").concat(t-r,` 
           L `).concat(e+r," ").concat(t+r,` 
           L `).concat(e-r," ").concat(t+r,` 
           Z`);break;case"diamond":r*=1.05,l="M ".concat(e," ").concat(t-r,` 
             L `).concat(e+r," ").concat(t,` 
             L `).concat(e," ").concat(t+r,` 
             L `).concat(e-r," ").concat(t,` 
            Z`);break;case"line":l="M ".concat(e-(r/=1.1)," ").concat(t,` 
           L `).concat(e+r," ").concat(t);break;default:r*=2,l="M ".concat(e,", ").concat(t,` 
           m -`).concat(r/2,`, 0 
           a `).concat(r/2,",").concat(r/2," 0 1,0 ").concat(r,`,0 
           a `).concat(r/2,",").concat(r/2," 0 1,0 -").concat(r,",0")}return l}},{key:"drawMarkerShape",value:function(e,t,a,r,l){var o=this.drawPath({d:this.getMarkerPath(e,t,a,r,l),stroke:l.pointStrokeColor,strokeDashArray:l.pointStrokeDashArray,strokeWidth:l.pointStrokeWidth,fill:l.pointFillColor,fillOpacity:l.pointFillOpacity,strokeOpacity:l.pointStrokeOpacity});return o.attr({cx:e,cy:t,shape:l.shape,class:l.class?l.class:""}),o}},{key:"drawMarker",value:function(e,t,a){e=e||0;var r=a.pSize||0;return X.isNumber(t)||(r=0,t=0),this.drawMarkerShape(e,t,a==null?void 0:a.shape,r,Y(Y({},a),a.shape==="line"||a.shape==="plus"||a.shape==="cross"?{pointStrokeColor:a.pointFillColor,pointStrokeOpacity:a.pointFillOpacity}:{}))}},{key:"pathMouseEnter",value:function(e,t){var a=this.w,r=new ce(this.ctx),l=parseInt(e.node.getAttribute("index"),10),o=parseInt(e.node.getAttribute("j"),10);if(typeof a.config.chart.events.dataPointMouseEnter=="function"&&a.config.chart.events.dataPointMouseEnter(t,this.ctx,{seriesIndex:l,dataPointIndex:o,w:a}),this.ctx.events.fireEvent("dataPointMouseEnter",[t,this.ctx,{seriesIndex:l,dataPointIndex:o,w:a}]),(a.config.states.active.filter.type==="none"||e.node.getAttribute("selected")!=="true")&&a.config.states.hover.filter.type!=="none"&&!a.globals.isTouchDevice){var c=a.config.states.hover.filter;r.applyFilter(e,l,c.type,c.value)}}},{key:"pathMouseLeave",value:function(e,t){var a=this.w,r=new ce(this.ctx),l=parseInt(e.node.getAttribute("index"),10),o=parseInt(e.node.getAttribute("j"),10);typeof a.config.chart.events.dataPointMouseLeave=="function"&&a.config.chart.events.dataPointMouseLeave(t,this.ctx,{seriesIndex:l,dataPointIndex:o,w:a}),this.ctx.events.fireEvent("dataPointMouseLeave",[t,this.ctx,{seriesIndex:l,dataPointIndex:o,w:a}]),a.config.states.active.filter.type!=="none"&&e.node.getAttribute("selected")==="true"||a.config.states.hover.filter.type!=="none"&&r.getDefaultFilter(e,l)}},{key:"pathMouseDown",value:function(e,t){var a=this.w,r=new ce(this.ctx),l=parseInt(e.node.getAttribute("index"),10),o=parseInt(e.node.getAttribute("j"),10),c="false";if(e.node.getAttribute("selected")==="true"){if(e.node.setAttribute("selected","false"),a.globals.selectedDataPoints[l].indexOf(o)>-1){var d=a.globals.selectedDataPoints[l].indexOf(o);a.globals.selectedDataPoints[l].splice(d,1)}}else{if(!a.config.states.active.allowMultipleDataPointsSelection&&a.globals.selectedDataPoints.length>0){a.globals.selectedDataPoints=[];var f=a.globals.dom.Paper.select(".apexcharts-series path").members,m=a.globals.dom.Paper.select(".apexcharts-series circle, .apexcharts-series rect").members,p=function(S){Array.prototype.forEach.call(S,function(A){A.node.setAttribute("selected","false"),r.getDefaultFilter(A,l)})};p(f),p(m)}e.node.setAttribute("selected","true"),c="true",a.globals.selectedDataPoints[l]===void 0&&(a.globals.selectedDataPoints[l]=[]),a.globals.selectedDataPoints[l].push(o)}if(c==="true"){var x=a.config.states.active.filter;if(x!=="none")r.applyFilter(e,l,x.type,x.value);else if(a.config.states.hover.filter!=="none"&&!a.globals.isTouchDevice){var w=a.config.states.hover.filter;r.applyFilter(e,l,w.type,w.value)}}else a.config.states.active.filter.type!=="none"&&(a.config.states.hover.filter.type==="none"||a.globals.isTouchDevice?r.getDefaultFilter(e,l):(w=a.config.states.hover.filter,r.applyFilter(e,l,w.type,w.value)));typeof a.config.chart.events.dataPointSelection=="function"&&a.config.chart.events.dataPointSelection(t,this.ctx,{selectedDataPoints:a.globals.selectedDataPoints,seriesIndex:l,dataPointIndex:o,w:a}),t&&this.ctx.events.fireEvent("dataPointSelection",[t,this.ctx,{selectedDataPoints:a.globals.selectedDataPoints,seriesIndex:l,dataPointIndex:o,w:a}])}},{key:"rotateAroundCenter",value:function(e){var t={};return e&&typeof e.getBBox=="function"&&(t=e.getBBox()),{x:t.x+t.width/2,y:t.y+t.height/2}}},{key:"getTextRects",value:function(e,t,a,r){var l=!(arguments.length>4&&arguments[4]!==void 0)||arguments[4],o=this.w,c=this.drawText({x:-200,y:-200,text:e,textAnchor:"start",fontSize:t,fontFamily:a,foreColor:"#fff",opacity:0});r&&c.attr("transform",r),o.globals.dom.Paper.add(c);var d=c.bbox();return l||(d=c.node.getBoundingClientRect()),c.remove(),{width:d.width,height:d.height}}},{key:"placeTextWithEllipsis",value:function(e,t,a){if(typeof e.getComputedTextLength=="function"&&(e.textContent=t,t.length>0&&e.getComputedTextLength()>=a/1.1)){for(var r=t.length-3;r>0;r-=3)if(e.getSubStringLength(0,r)<=a/1.1)return void(e.textContent=t.substring(0,r)+"...");e.textContent="."}}}],[{key:"setAttrs",value:function(e,t){for(var a in t)t.hasOwnProperty(a)&&e.setAttribute(a,t[a])}}]),_}(),se=function(){function _(e){g(this,_),this.ctx=e,this.w=e.w}return v(_,[{key:"getStackedSeriesTotals",value:function(){var e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:[],t=this.w,a=[];if(t.globals.series.length===0)return a;for(var r=0;r<t.globals.series[t.globals.maxValsInArrayIndex].length;r++){for(var l=0,o=0;o<t.globals.series.length;o++)t.globals.series[o][r]!==void 0&&e.indexOf(o)===-1&&(l+=t.globals.series[o][r]);a.push(l)}return a}},{key:"getSeriesTotalByIndex",value:function(){var e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:null;return e===null?this.w.config.series.reduce(function(t,a){return t+a},0):this.w.globals.series[e].reduce(function(t,a){return t+a},0)}},{key:"getStackedSeriesTotalsByGroups",value:function(){var e=this,t=this.w,a=[];return t.globals.seriesGroups.forEach(function(r){var l=[];t.config.series.forEach(function(c,d){r.indexOf(t.globals.seriesNames[d])>-1&&l.push(d)});var o=t.globals.series.map(function(c,d){return l.indexOf(d)===-1?d:-1}).filter(function(c){return c!==-1});a.push(e.getStackedSeriesTotals(o))}),a}},{key:"setSeriesYAxisMappings",value:function(){var e=this.w.globals,t=this.w.config,a=[],r=[],l=[],o=e.series.length>t.yaxis.length||t.yaxis.some(function(p){return Array.isArray(p.seriesName)});t.series.forEach(function(p,x){l.push(x),r.push(null)}),t.yaxis.forEach(function(p,x){a[x]=[]});var c=[];t.yaxis.forEach(function(p,x){var w=!1;if(p.seriesName){var S=[];Array.isArray(p.seriesName)?S=p.seriesName:S.push(p.seriesName),S.forEach(function(A){t.series.forEach(function(E,M){if(E.name===A){var P=M;x===M||o?!o||l.indexOf(M)>-1?a[x].push([x,M]):console.warn("Series '"+E.name+"' referenced more than once in what looks like the new style. That is, when using either seriesName: [], or when there are more series than yaxes."):(a[M].push([M,x]),P=x),w=!0,(P=l.indexOf(P))!==-1&&l.splice(P,1)}})})}w||c.push(x)}),a=a.map(function(p,x){var w=[];return p.forEach(function(S){r[S[1]]=S[0],w.push(S[1])}),w});for(var d=t.yaxis.length-1,f=0;f<c.length&&(d=c[f],a[d]=[],l);f++){var m=l[0];l.shift(),a[d].push(m),r[m]=d}l.forEach(function(p){a[d].push(p),r[p]=d}),e.seriesYAxisMap=a.map(function(p){return p}),e.seriesYAxisReverseMap=r.map(function(p){return p}),e.seriesYAxisMap.forEach(function(p,x){p.forEach(function(w){t.series[w]&&t.series[w].group===void 0&&(t.series[w].group="apexcharts-axis-".concat(x.toString()))})})}},{key:"isSeriesNull",value:function(){var e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:null;return(e===null?this.w.config.series.filter(function(t){return t!==null}):this.w.config.series[e].data.filter(function(t){return t!==null})).length===0}},{key:"seriesHaveSameValues",value:function(e){return this.w.globals.series[e].every(function(t,a,r){return t===r[0]})}},{key:"getCategoryLabels",value:function(e){var t=this.w,a=e.slice();return t.config.xaxis.convertedCatToNumeric&&(a=e.map(function(r,l){return t.config.xaxis.labels.formatter(r-t.globals.minX+1)})),a}},{key:"getLargestSeries",value:function(){var e=this.w;e.globals.maxValsInArrayIndex=e.globals.series.map(function(t){return t.length}).indexOf(Math.max.apply(Math,e.globals.series.map(function(t){return t.length})))}},{key:"getLargestMarkerSize",value:function(){var e=this.w,t=0;return e.globals.markers.size.forEach(function(a){t=Math.max(t,a)}),e.config.markers.discrete&&e.config.markers.discrete.length&&e.config.markers.discrete.forEach(function(a){t=Math.max(t,a.size)}),t>0&&(e.config.markers.hover.size>0?t=e.config.markers.hover.size:t+=e.config.markers.hover.sizeOffset),e.globals.markers.largestSize=t,t}},{key:"getSeriesTotals",value:function(){var e=this.w;e.globals.seriesTotals=e.globals.series.map(function(t,a){var r=0;if(Array.isArray(t))for(var l=0;l<t.length;l++)r+=t[l];else r+=t;return r})}},{key:"getSeriesTotalsXRange",value:function(e,t){var a=this.w;return a.globals.series.map(function(r,l){for(var o=0,c=0;c<r.length;c++)a.globals.seriesX[l][c]>e&&a.globals.seriesX[l][c]<t&&(o+=r[c]);return o})}},{key:"getPercentSeries",value:function(){var e=this.w;e.globals.seriesPercent=e.globals.series.map(function(t,a){var r=[];if(Array.isArray(t))for(var l=0;l<t.length;l++){var o=e.globals.stackedSeriesTotals[l],c=0;o&&(c=100*t[l]/o),r.push(c)}else{var d=100*t/e.globals.seriesTotals.reduce(function(f,m){return f+m},0);r.push(d)}return r})}},{key:"getCalculatedRatios",value:function(){var e,t,a,r=this,l=this.w,o=l.globals,c=[],d=0,f=[],m=.1,p=0;if(o.yRange=[],o.isMultipleYAxis)for(var x=0;x<o.minYArr.length;x++)o.yRange.push(Math.abs(o.minYArr[x]-o.maxYArr[x])),f.push(0);else o.yRange.push(Math.abs(o.minY-o.maxY));o.xRange=Math.abs(o.maxX-o.minX),o.zRange=Math.abs(o.maxZ-o.minZ);for(var w=0;w<o.yRange.length;w++)c.push(o.yRange[w]/o.gridHeight);if(t=o.xRange/o.gridWidth,e=o.yRange/o.gridWidth,a=o.xRange/o.gridHeight,(d=o.zRange/o.gridHeight*16)||(d=1),o.minY!==Number.MIN_VALUE&&Math.abs(o.minY)!==0&&(o.hasNegs=!0),l.globals.seriesYAxisReverseMap.length>0){var S=function(E,M){var P=l.config.yaxis[l.globals.seriesYAxisReverseMap[M]],u=E<0?-1:1;return E=Math.abs(E),P.logarithmic&&(E=r.getBaseLog(P.logBase,E)),-u*E/c[M]};if(o.isMultipleYAxis){f=[];for(var A=0;A<c.length;A++)f.push(S(o.minYArr[A],A))}else(f=[]).push(S(o.minY,0)),o.minY!==Number.MIN_VALUE&&Math.abs(o.minY)!==0&&(m=-o.minY/e,p=o.minX/t)}else(f=[]).push(0),m=0,p=0;return{yRatio:c,invertedYRatio:e,zRatio:d,xRatio:t,invertedXRatio:a,baseLineInvertedY:m,baseLineY:f,baseLineX:p}}},{key:"getLogSeries",value:function(e){var t=this,a=this.w;return a.globals.seriesLog=e.map(function(r,l){var o=a.globals.seriesYAxisReverseMap[l];return a.config.yaxis[o]&&a.config.yaxis[o].logarithmic?r.map(function(c){return c===null?null:t.getLogVal(a.config.yaxis[o].logBase,c,l)}):r}),a.globals.invalidLogScale?e:a.globals.seriesLog}},{key:"getBaseLog",value:function(e,t){return Math.log(t)/Math.log(e)}},{key:"getLogVal",value:function(e,t,a){if(t<=0)return 0;var r=this.w,l=r.globals.minYArr[a]===0?-1:this.getBaseLog(e,r.globals.minYArr[a]),o=(r.globals.maxYArr[a]===0?0:this.getBaseLog(e,r.globals.maxYArr[a]))-l;return t<1?t/o:(this.getBaseLog(e,t)-l)/o}},{key:"getLogYRatios",value:function(e){var t=this,a=this.w,r=this.w.globals;return r.yLogRatio=e.slice(),r.logYRange=r.yRange.map(function(l,o){var c=a.globals.seriesYAxisReverseMap[o];if(a.config.yaxis[c]&&t.w.config.yaxis[c].logarithmic){var d,f=-Number.MAX_VALUE,m=Number.MIN_VALUE;return r.seriesLog.forEach(function(p,x){p.forEach(function(w){a.config.yaxis[x]&&a.config.yaxis[x].logarithmic&&(f=Math.max(w,f),m=Math.min(w,m))})}),d=Math.pow(r.yRange[o],Math.abs(m-f)/r.yRange[o]),r.yLogRatio[o]=d/r.gridHeight,d}}),r.invalidLogScale?e.slice():r.yLogRatio}},{key:"drawSeriesByGroup",value:function(e,t,a,r){var l=this.w,o=[];return e.series.length>0&&t.forEach(function(c){var d=[],f=[];e.i.forEach(function(m,p){l.config.series[m].group===c&&(d.push(e.series[p]),f.push(m))}),d.length>0&&o.push(r.draw(d,a,f))}),o}}],[{key:"checkComboSeries",value:function(e,t){var a=!1,r=0,l=0;return t===void 0&&(t="line"),e.length&&e[0].type!==void 0&&e.forEach(function(o){o.type!=="bar"&&o.type!=="column"&&o.type!=="candlestick"&&o.type!=="boxPlot"||r++,o.type!==void 0&&o.type!==t&&l++}),l>0&&(a=!0),{comboBarCount:r,comboCharts:a}}},{key:"extendArrayProps",value:function(e,t,a){var r,l,o,c,d,f;return(r=t)!==null&&r!==void 0&&r.yaxis&&(t=e.extendYAxis(t,a)),(l=t)!==null&&l!==void 0&&l.annotations&&(t.annotations.yaxis&&(t=e.extendYAxisAnnotations(t)),(o=t)!==null&&o!==void 0&&(c=o.annotations)!==null&&c!==void 0&&c.xaxis&&(t=e.extendXAxisAnnotations(t)),(d=t)!==null&&d!==void 0&&(f=d.annotations)!==null&&f!==void 0&&f.points&&(t=e.extendPointAnnotations(t))),t}}]),_}(),Le=function(){function _(e){g(this,_),this.w=e.w,this.annoCtx=e}return v(_,[{key:"setOrientations",value:function(e){var t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null,a=this.w;if(e.label.orientation==="vertical"){var r=t!==null?t:0,l=a.globals.dom.baseEl.querySelector(".apexcharts-xaxis-annotations .apexcharts-xaxis-annotation-label[rel='".concat(r,"']"));if(l!==null){var o=l.getBoundingClientRect();l.setAttribute("x",parseFloat(l.getAttribute("x"))-o.height+4);var c=e.label.position==="top"?o.width:-o.width;l.setAttribute("y",parseFloat(l.getAttribute("y"))+c);var d=this.annoCtx.graphics.rotateAroundCenter(l),f=d.x,m=d.y;l.setAttribute("transform","rotate(-90 ".concat(f," ").concat(m,")"))}}}},{key:"addBackgroundToAnno",value:function(e,t){var a=this.w;if(!e||!t.label.text||!String(t.label.text).trim())return null;var r=a.globals.dom.baseEl.querySelector(".apexcharts-grid").getBoundingClientRect(),l=e.getBoundingClientRect(),o=t.label.style.padding,c=o.left,d=o.right,f=o.top,m=o.bottom;if(t.label.orientation==="vertical"){var p=[c,d,f,m];f=p[0],m=p[1],c=p[2],d=p[3]}var x=l.left-r.left-c,w=l.top-r.top-f,S=this.annoCtx.graphics.drawRect(x-a.globals.barPadForNumericAxis,w,l.width+c+d,l.height+f+m,t.label.borderRadius,t.label.style.background,1,t.label.borderWidth,t.label.borderColor,0);return t.id&&S.node.classList.add(t.id),S}},{key:"annotationsBackground",value:function(){var e=this,t=this.w,a=function(r,l,o){var c=t.globals.dom.baseEl.querySelector(".apexcharts-".concat(o,"-annotations .apexcharts-").concat(o,"-annotation-label[rel='").concat(l,"']"));if(c){var d=c.parentNode,f=e.addBackgroundToAnno(c,r);f&&(d.insertBefore(f.node,c),r.label.mouseEnter&&f.node.addEventListener("mouseenter",r.label.mouseEnter.bind(e,r)),r.label.mouseLeave&&f.node.addEventListener("mouseleave",r.label.mouseLeave.bind(e,r)),r.label.click&&f.node.addEventListener("click",r.label.click.bind(e,r)))}};t.config.annotations.xaxis.forEach(function(r,l){return a(r,l,"xaxis")}),t.config.annotations.yaxis.forEach(function(r,l){return a(r,l,"yaxis")}),t.config.annotations.points.forEach(function(r,l){return a(r,l,"point")})}},{key:"getY1Y2",value:function(e,t){var a,r=this.w,l=e==="y1"?t.y:t.y2,o=!1;if(this.annoCtx.invertAxis){var c=r.config.xaxis.convertedCatToNumeric?r.globals.categoryLabels:r.globals.labels,d=c.indexOf(l),f=r.globals.dom.baseEl.querySelector(".apexcharts-yaxis-texts-g text:nth-child(".concat(d+1,")"));a=f?parseFloat(f.getAttribute("y")):(r.globals.gridHeight/c.length-1)*(d+1)-r.globals.barHeight,t.seriesIndex!==void 0&&r.globals.barHeight&&(a-=r.globals.barHeight/2*(r.globals.series.length-1)-r.globals.barHeight*t.seriesIndex)}else{var m,p=r.globals.seriesYAxisMap[t.yAxisIndex][0],x=r.config.yaxis[t.yAxisIndex].logarithmic?new se(this.annoCtx.ctx).getLogVal(r.config.yaxis[t.yAxisIndex].logBase,l,p)/r.globals.yLogRatio[p]:(l-r.globals.minYArr[p])/(r.globals.yRange[p]/r.globals.gridHeight);a=r.globals.gridHeight-Math.min(Math.max(x,0),r.globals.gridHeight),o=x>r.globals.gridHeight||x<0,!t.marker||t.y!==void 0&&t.y!==null||(a=0),(m=r.config.yaxis[t.yAxisIndex])!==null&&m!==void 0&&m.reversed&&(a=x)}return typeof l=="string"&&l.includes("px")&&(a=parseFloat(l)),{yP:a,clipped:o}}},{key:"getX1X2",value:function(e,t){var a=this.w,r=e==="x1"?t.x:t.x2,l=this.annoCtx.invertAxis?a.globals.minY:a.globals.minX,o=this.annoCtx.invertAxis?a.globals.maxY:a.globals.maxX,c=this.annoCtx.invertAxis?a.globals.yRange[0]:a.globals.xRange,d=!1,f=this.annoCtx.inversedReversedAxis?(o-r)/(c/a.globals.gridWidth):(r-l)/(c/a.globals.gridWidth);return a.config.xaxis.type!=="category"&&!a.config.xaxis.convertedCatToNumeric||this.annoCtx.invertAxis||a.globals.dataFormatXNumeric||a.config.chart.sparkline.enabled||(f=this.getStringX(r)),typeof r=="string"&&r.includes("px")&&(f=parseFloat(r)),r==null&&t.marker&&(f=a.globals.gridWidth),t.seriesIndex!==void 0&&a.globals.barWidth&&!this.annoCtx.invertAxis&&(f-=a.globals.barWidth/2*(a.globals.series.length-1)-a.globals.barWidth*t.seriesIndex),f>a.globals.gridWidth?(f=a.globals.gridWidth,d=!0):f<0&&(f=0,d=!0),{x:f,clipped:d}}},{key:"getStringX",value:function(e){var t=this.w,a=e;t.config.xaxis.convertedCatToNumeric&&t.globals.categoryLabels.length&&(e=t.globals.categoryLabels.indexOf(e)+1);var r=t.globals.labels.map(function(o){return Array.isArray(o)?o.join(" "):o}).indexOf(e),l=t.globals.dom.baseEl.querySelector(".apexcharts-xaxis-texts-g text:nth-child(".concat(r+1,")"));return l&&(a=parseFloat(l.getAttribute("x"))),a}}]),_}(),ke=function(){function _(e){g(this,_),this.w=e.w,this.annoCtx=e,this.invertAxis=this.annoCtx.invertAxis,this.helpers=new Le(this.annoCtx)}return v(_,[{key:"addXaxisAnnotation",value:function(e,t,a){var r,l=this.w,o=this.helpers.getX1X2("x1",e),c=o.x,d=o.clipped,f=!0,m=e.label.text,p=e.strokeDashArray;if(X.isNumber(c)){if(e.x2===null||e.x2===void 0){if(!d){var x=this.annoCtx.graphics.drawLine(c+e.offsetX,0+e.offsetY,c+e.offsetX,l.globals.gridHeight+e.offsetY,e.borderColor,p,e.borderWidth);t.appendChild(x.node),e.id&&x.node.classList.add(e.id)}}else{var w=this.helpers.getX1X2("x2",e);if(r=w.x,f=w.clipped,!d||!f){if(r<c){var S=c;c=r,r=S}var A=this.annoCtx.graphics.drawRect(c+e.offsetX,0+e.offsetY,r-c,l.globals.gridHeight+e.offsetY,0,e.fillColor,e.opacity,1,e.borderColor,p);A.node.classList.add("apexcharts-annotation-rect"),A.attr("clip-path","url(#gridRectMask".concat(l.globals.cuid,")")),t.appendChild(A.node),e.id&&A.node.classList.add(e.id)}}if(!d||!f){var E=this.annoCtx.graphics.getTextRects(m,parseFloat(e.label.style.fontSize)),M=e.label.position==="top"?4:e.label.position==="center"?l.globals.gridHeight/2+(e.label.orientation==="vertical"?E.width/2:0):l.globals.gridHeight,P=this.annoCtx.graphics.drawText({x:c+e.label.offsetX,y:M+e.label.offsetY-(e.label.orientation==="vertical"?e.label.position==="top"?E.width/2-12:-E.width/2:0),text:m,textAnchor:e.label.textAnchor,fontSize:e.label.style.fontSize,fontFamily:e.label.style.fontFamily,fontWeight:e.label.style.fontWeight,foreColor:e.label.style.color,cssClass:"apexcharts-xaxis-annotation-label ".concat(e.label.style.cssClass," ").concat(e.id?e.id:"")});P.attr({rel:a}),t.appendChild(P.node),this.annoCtx.helpers.setOrientations(e,a)}}}},{key:"drawXAxisAnnotations",value:function(){var e=this,t=this.w,a=this.annoCtx.graphics.group({class:"apexcharts-xaxis-annotations"});return t.config.annotations.xaxis.map(function(r,l){e.addXaxisAnnotation(r,a.node,l)}),a}}]),_}(),De=function(){function _(e){g(this,_),this.ctx=e,this.w=e.w,this.months31=[1,3,5,7,8,10,12],this.months30=[2,4,6,9,11],this.daysCntOfYear=[0,31,59,90,120,151,181,212,243,273,304,334]}return v(_,[{key:"isValidDate",value:function(e){return typeof e!="number"&&!isNaN(this.parseDate(e))}},{key:"getTimeStamp",value:function(e){return Date.parse(e)?this.w.config.xaxis.labels.datetimeUTC?new Date(new Date(e).toISOString().substr(0,25)).getTime():new Date(e).getTime():e}},{key:"getDate",value:function(e){return this.w.config.xaxis.labels.datetimeUTC?new Date(new Date(e).toUTCString()):new Date(e)}},{key:"parseDate",value:function(e){var t=Date.parse(e);if(!isNaN(t))return this.getTimeStamp(e);var a=Date.parse(e.replace(/-/g,"/").replace(/[a-z]+/gi," "));return a=this.getTimeStamp(a)}},{key:"parseDateWithTimezone",value:function(e){return Date.parse(e.replace(/-/g,"/").replace(/[a-z]+/gi," "))}},{key:"formatDate",value:function(e,t){var a=this.w.globals.locale,r=this.w.config.xaxis.labels.datetimeUTC,l=["\0"].concat(ie(a.months)),o=[""].concat(ie(a.shortMonths)),c=[""].concat(ie(a.days)),d=[""].concat(ie(a.shortDays));function f(I,H){var B=I+"";for(H=H||2;B.length<H;)B="0"+B;return B}var m=r?e.getUTCFullYear():e.getFullYear();t=(t=(t=t.replace(/(^|[^\\])yyyy+/g,"$1"+m)).replace(/(^|[^\\])yy/g,"$1"+m.toString().substr(2,2))).replace(/(^|[^\\])y/g,"$1"+m);var p=(r?e.getUTCMonth():e.getMonth())+1;t=(t=(t=(t=t.replace(/(^|[^\\])MMMM+/g,"$1"+l[0])).replace(/(^|[^\\])MMM/g,"$1"+o[0])).replace(/(^|[^\\])MM/g,"$1"+f(p))).replace(/(^|[^\\])M/g,"$1"+p);var x=r?e.getUTCDate():e.getDate();t=(t=(t=(t=t.replace(/(^|[^\\])dddd+/g,"$1"+c[0])).replace(/(^|[^\\])ddd/g,"$1"+d[0])).replace(/(^|[^\\])dd/g,"$1"+f(x))).replace(/(^|[^\\])d/g,"$1"+x);var w=r?e.getUTCHours():e.getHours(),S=w>12?w-12:w===0?12:w;t=(t=(t=(t=t.replace(/(^|[^\\])HH+/g,"$1"+f(w))).replace(/(^|[^\\])H/g,"$1"+w)).replace(/(^|[^\\])hh+/g,"$1"+f(S))).replace(/(^|[^\\])h/g,"$1"+S);var A=r?e.getUTCMinutes():e.getMinutes();t=(t=t.replace(/(^|[^\\])mm+/g,"$1"+f(A))).replace(/(^|[^\\])m/g,"$1"+A);var E=r?e.getUTCSeconds():e.getSeconds();t=(t=t.replace(/(^|[^\\])ss+/g,"$1"+f(E))).replace(/(^|[^\\])s/g,"$1"+E);var M=r?e.getUTCMilliseconds():e.getMilliseconds();t=t.replace(/(^|[^\\])fff+/g,"$1"+f(M,3)),M=Math.round(M/10),t=t.replace(/(^|[^\\])ff/g,"$1"+f(M)),M=Math.round(M/10);var P=w<12?"AM":"PM";t=(t=(t=t.replace(/(^|[^\\])f/g,"$1"+M)).replace(/(^|[^\\])TT+/g,"$1"+P)).replace(/(^|[^\\])T/g,"$1"+P.charAt(0));var u=P.toLowerCase();t=(t=t.replace(/(^|[^\\])tt+/g,"$1"+u)).replace(/(^|[^\\])t/g,"$1"+u.charAt(0));var y=-e.getTimezoneOffset(),C=r||!y?"Z":y>0?"+":"-";if(!r){var D=(y=Math.abs(y))%60;C+=f(Math.floor(y/60))+":"+f(D)}t=t.replace(/(^|[^\\])K/g,"$1"+C);var L=(r?e.getUTCDay():e.getDay())+1;return t=(t=(t=(t=(t=t.replace(new RegExp(c[0],"g"),c[L])).replace(new RegExp(d[0],"g"),d[L])).replace(new RegExp(l[0],"g"),l[p])).replace(new RegExp(o[0],"g"),o[p])).replace(/\\(.)/g,"$1")}},{key:"getTimeUnitsfromTimestamp",value:function(e,t,a){var r=this.w;r.config.xaxis.min!==void 0&&(e=r.config.xaxis.min),r.config.xaxis.max!==void 0&&(t=r.config.xaxis.max);var l=this.getDate(e),o=this.getDate(t),c=this.formatDate(l,"yyyy MM dd HH mm ss fff").split(" "),d=this.formatDate(o,"yyyy MM dd HH mm ss fff").split(" ");return{minMillisecond:parseInt(c[6],10),maxMillisecond:parseInt(d[6],10),minSecond:parseInt(c[5],10),maxSecond:parseInt(d[5],10),minMinute:parseInt(c[4],10),maxMinute:parseInt(d[4],10),minHour:parseInt(c[3],10),maxHour:parseInt(d[3],10),minDate:parseInt(c[2],10),maxDate:parseInt(d[2],10),minMonth:parseInt(c[1],10)-1,maxMonth:parseInt(d[1],10)-1,minYear:parseInt(c[0],10),maxYear:parseInt(d[0],10)}}},{key:"isLeapYear",value:function(e){return e%4==0&&e%100!=0||e%400==0}},{key:"calculcateLastDaysOfMonth",value:function(e,t,a){return this.determineDaysOfMonths(e,t)-a}},{key:"determineDaysOfYear",value:function(e){var t=365;return this.isLeapYear(e)&&(t=366),t}},{key:"determineRemainingDaysOfYear",value:function(e,t,a){var r=this.daysCntOfYear[t]+a;return t>1&&this.isLeapYear()&&r++,r}},{key:"determineDaysOfMonths",value:function(e,t){var a=30;switch(e=X.monthMod(e),!0){case this.months30.indexOf(e)>-1:e===2&&(a=this.isLeapYear(t)?29:28);break;case this.months31.indexOf(e)>-1:default:a=31}return a}}]),_}(),Ye=function(){function _(e){g(this,_),this.ctx=e,this.w=e.w,this.tooltipKeyFormat="dd MMM"}return v(_,[{key:"xLabelFormat",value:function(e,t,a,r){var l=this.w;if(l.config.xaxis.type==="datetime"&&l.config.xaxis.labels.formatter===void 0&&l.config.tooltip.x.formatter===void 0){var o=new De(this.ctx);return o.formatDate(o.getDate(t),l.config.tooltip.x.format)}return e(t,a,r)}},{key:"defaultGeneralFormatter",value:function(e){return Array.isArray(e)?e.map(function(t){return t}):e}},{key:"defaultYFormatter",value:function(e,t,a){var r=this.w;if(X.isNumber(e))if(r.globals.yValueDecimal!==0)e=e.toFixed(t.decimalsInFloat!==void 0?t.decimalsInFloat:r.globals.yValueDecimal);else{var l=e.toFixed(0);e=e==l?l:e.toFixed(1)}return e}},{key:"setLabelFormatters",value:function(){var e=this,t=this.w;return t.globals.xaxisTooltipFormatter=function(a){return e.defaultGeneralFormatter(a)},t.globals.ttKeyFormatter=function(a){return e.defaultGeneralFormatter(a)},t.globals.ttZFormatter=function(a){return a},t.globals.legendFormatter=function(a){return e.defaultGeneralFormatter(a)},t.config.xaxis.labels.formatter!==void 0?t.globals.xLabelFormatter=t.config.xaxis.labels.formatter:t.globals.xLabelFormatter=function(a){if(X.isNumber(a)){if(!t.config.xaxis.convertedCatToNumeric&&t.config.xaxis.type==="numeric"){if(X.isNumber(t.config.xaxis.decimalsInFloat))return a.toFixed(t.config.xaxis.decimalsInFloat);var r=t.globals.maxX-t.globals.minX;return r>0&&r<100?a.toFixed(1):a.toFixed(0)}return t.globals.isBarHorizontal&&t.globals.maxY-t.globals.minYArr<4?a.toFixed(1):a.toFixed(0)}return a},typeof t.config.tooltip.x.formatter=="function"?t.globals.ttKeyFormatter=t.config.tooltip.x.formatter:t.globals.ttKeyFormatter=t.globals.xLabelFormatter,typeof t.config.xaxis.tooltip.formatter=="function"&&(t.globals.xaxisTooltipFormatter=t.config.xaxis.tooltip.formatter),(Array.isArray(t.config.tooltip.y)||t.config.tooltip.y.formatter!==void 0)&&(t.globals.ttVal=t.config.tooltip.y),t.config.tooltip.z.formatter!==void 0&&(t.globals.ttZFormatter=t.config.tooltip.z.formatter),t.config.legend.formatter!==void 0&&(t.globals.legendFormatter=t.config.legend.formatter),t.config.yaxis.forEach(function(a,r){a.labels.formatter!==void 0?t.globals.yLabelFormatters[r]=a.labels.formatter:t.globals.yLabelFormatters[r]=function(l){return t.globals.xyCharts?Array.isArray(l)?l.map(function(o){return e.defaultYFormatter(o,a,r)}):e.defaultYFormatter(l,a,r):l}}),t.globals}},{key:"heatmapLabelFormatters",value:function(){var e=this.w;if(e.config.chart.type==="heatmap"){e.globals.yAxisScale[0].result=e.globals.seriesNames.slice();var t=e.globals.seriesNames.reduce(function(a,r){return a.length>r.length?a:r},0);e.globals.yAxisScale[0].niceMax=t,e.globals.yAxisScale[0].niceMin=t}}}]),_}(),Ke=function(){function _(e){g(this,_),this.ctx=e,this.w=e.w}return v(_,[{key:"getLabel",value:function(e,t,a,r){var l=arguments.length>4&&arguments[4]!==void 0?arguments[4]:[],o=arguments.length>5&&arguments[5]!==void 0?arguments[5]:"12px",c=!(arguments.length>6&&arguments[6]!==void 0)||arguments[6],d=this.w,f=e[r]===void 0?"":e[r],m=f,p=d.globals.xLabelFormatter,x=d.config.xaxis.labels.formatter,w=!1,S=new Ye(this.ctx),A=f;c&&(m=S.xLabelFormat(p,f,A,{i:r,dateFormatter:new De(this.ctx).formatDate,w:d}),x!==void 0&&(m=x(f,e[r],{i:r,dateFormatter:new De(this.ctx).formatDate,w:d})));var E,M;t.length>0?(E=t[r].unit,M=null,t.forEach(function(C){C.unit==="month"?M="year":C.unit==="day"?M="month":C.unit==="hour"?M="day":C.unit==="minute"&&(M="hour")}),w=M===E,a=t[r].position,m=t[r].value):d.config.xaxis.type==="datetime"&&x===void 0&&(m=""),m===void 0&&(m=""),m=Array.isArray(m)?m:m.toString();var P=new V(this.ctx),u={};u=d.globals.rotateXLabels&&c?P.getTextRects(m,parseInt(o,10),null,"rotate(".concat(d.config.xaxis.labels.rotate," 0 0)"),!1):P.getTextRects(m,parseInt(o,10));var y=!d.config.xaxis.labels.showDuplicates&&this.ctx.timeScale;return!Array.isArray(m)&&(String(m)==="NaN"||l.indexOf(m)>=0&&y)&&(m=""),{x:a,text:m,textRect:u,isBold:w}}},{key:"checkLabelBasedOnTickamount",value:function(e,t,a){var r=this.w,l=r.config.xaxis.tickAmount;return l==="dataPoints"&&(l=Math.round(r.globals.gridWidth/120)),l>a||e%Math.round(a/(l+1))==0||(t.text=""),t}},{key:"checkForOverflowingLabels",value:function(e,t,a,r,l){var o=this.w;if(e===0&&o.globals.skipFirstTimelinelabel&&(t.text=""),e===a-1&&o.globals.skipLastTimelinelabel&&(t.text=""),o.config.xaxis.labels.hideOverlappingLabels&&r.length>0){var c=l[l.length-1];t.x<c.textRect.width/(o.globals.rotateXLabels?Math.abs(o.config.xaxis.labels.rotate)/12:1.01)+c.x&&(t.text="")}return t}},{key:"checkForReversedLabels",value:function(e,t){var a=this.w;return a.config.yaxis[e]&&a.config.yaxis[e].reversed&&t.reverse(),t}},{key:"yAxisAllSeriesCollapsed",value:function(e){var t=this.w.globals;return!t.seriesYAxisMap[e].some(function(a){return t.collapsedSeriesIndices.indexOf(a)===-1})}},{key:"translateYAxisIndex",value:function(e){var t=this.w,a=t.globals,r=t.config.yaxis;return a.series.length>r.length||r.some(function(l){return Array.isArray(l.seriesName)})?e:a.seriesYAxisReverseMap[e]}},{key:"isYAxisHidden",value:function(e){var t=this.w,a=t.config.yaxis[e];if(!a.show||this.yAxisAllSeriesCollapsed(e))return!0;if(!a.showForNullSeries){var r=t.globals.seriesYAxisMap[e],l=new se(this.ctx);return r.every(function(o){return l.isSeriesNull(o)})}return!1}},{key:"getYAxisForeColor",value:function(e,t){var a=this.w;return Array.isArray(e)&&a.globals.yAxisScale[t]&&this.ctx.theme.pushExtraColors(e,a.globals.yAxisScale[t].result.length,!1),e}},{key:"drawYAxisTicks",value:function(e,t,a,r,l,o,c){var d=this.w,f=new V(this.ctx),m=d.globals.translateY+d.config.yaxis[l].labels.offsetY;if(d.globals.isBarHorizontal?m=0:d.config.chart.type==="heatmap"&&(m+=o/2),r.show&&t>0){d.config.yaxis[l].opposite===!0&&(e+=r.width);for(var p=t;p>=0;p--){var x=f.drawLine(e+a.offsetX-r.width+r.offsetX,m+r.offsetY,e+a.offsetX+r.offsetX,m+r.offsetY,r.color);c.add(x),m+=o}}}}]),_}(),Tt=function(){function _(e){g(this,_),this.w=e.w,this.annoCtx=e,this.helpers=new Le(this.annoCtx),this.axesUtils=new Ke(this.annoCtx)}return v(_,[{key:"addYaxisAnnotation",value:function(e,t,a){var r,l=this.w,o=e.strokeDashArray,c=this.helpers.getY1Y2("y1",e),d=c.yP,f=c.clipped,m=!0,p=!1,x=e.label.text;if(e.y2===null||e.y2===void 0){if(!f){p=!0;var w=this.annoCtx.graphics.drawLine(0+e.offsetX,d+e.offsetY,this._getYAxisAnnotationWidth(e),d+e.offsetY,e.borderColor,o,e.borderWidth);t.appendChild(w.node),e.id&&w.node.classList.add(e.id)}}else{if(r=(c=this.helpers.getY1Y2("y2",e)).yP,m=c.clipped,r>d){var S=d;d=r,r=S}if(!f||!m){p=!0;var A=this.annoCtx.graphics.drawRect(0+e.offsetX,r+e.offsetY,this._getYAxisAnnotationWidth(e),d-r,0,e.fillColor,e.opacity,1,e.borderColor,o);A.node.classList.add("apexcharts-annotation-rect"),A.attr("clip-path","url(#gridRectMask".concat(l.globals.cuid,")")),t.appendChild(A.node),e.id&&A.node.classList.add(e.id)}}if(p){var E=e.label.position==="right"?l.globals.gridWidth:e.label.position==="center"?l.globals.gridWidth/2:0,M=this.annoCtx.graphics.drawText({x:E+e.label.offsetX,y:(r??d)+e.label.offsetY-3,text:x,textAnchor:e.label.textAnchor,fontSize:e.label.style.fontSize,fontFamily:e.label.style.fontFamily,fontWeight:e.label.style.fontWeight,foreColor:e.label.style.color,cssClass:"apexcharts-yaxis-annotation-label ".concat(e.label.style.cssClass," ").concat(e.id?e.id:"")});M.attr({rel:a}),t.appendChild(M.node)}}},{key:"_getYAxisAnnotationWidth",value:function(e){var t=this.w;return t.globals.gridWidth,(e.width.indexOf("%")>-1?t.globals.gridWidth*parseInt(e.width,10)/100:parseInt(e.width,10))+e.offsetX}},{key:"drawYAxisAnnotations",value:function(){var e=this,t=this.w,a=this.annoCtx.graphics.group({class:"apexcharts-yaxis-annotations"});return t.config.annotations.yaxis.forEach(function(r,l){r.yAxisIndex=e.axesUtils.translateYAxisIndex(r.yAxisIndex),e.axesUtils.isYAxisHidden(r.yAxisIndex)&&e.axesUtils.yAxisAllSeriesCollapsed(r.yAxisIndex)||e.addYaxisAnnotation(r,a.node,l)}),a}}]),_}(),Dt=function(){function _(e){g(this,_),this.w=e.w,this.annoCtx=e,this.helpers=new Le(this.annoCtx)}return v(_,[{key:"addPointAnnotation",value:function(e,t,a){if(!(this.w.globals.collapsedSeriesIndices.indexOf(e.seriesIndex)>-1)){var r=this.helpers.getX1X2("x1",e),l=r.x,o=r.clipped,c=(r=this.helpers.getY1Y2("y1",e)).yP,d=r.clipped;if(X.isNumber(l)&&!d&&!o){var f={pSize:e.marker.size,pointStrokeWidth:e.marker.strokeWidth,pointFillColor:e.marker.fillColor,pointStrokeColor:e.marker.strokeColor,shape:e.marker.shape,pRadius:e.marker.radius,class:"apexcharts-point-annotation-marker ".concat(e.marker.cssClass," ").concat(e.id?e.id:"")},m=this.annoCtx.graphics.drawMarker(l+e.marker.offsetX,c+e.marker.offsetY,f);t.appendChild(m.node);var p=e.label.text?e.label.text:"",x=this.annoCtx.graphics.drawText({x:l+e.label.offsetX,y:c+e.label.offsetY-e.marker.size-parseFloat(e.label.style.fontSize)/1.6,text:p,textAnchor:e.label.textAnchor,fontSize:e.label.style.fontSize,fontFamily:e.label.style.fontFamily,fontWeight:e.label.style.fontWeight,foreColor:e.label.style.color,cssClass:"apexcharts-point-annotation-label ".concat(e.label.style.cssClass," ").concat(e.id?e.id:"")});if(x.attr({rel:a}),t.appendChild(x.node),e.customSVG.SVG){var w=this.annoCtx.graphics.group({class:"apexcharts-point-annotations-custom-svg "+e.customSVG.cssClass});w.attr({transform:"translate(".concat(l+e.customSVG.offsetX,", ").concat(c+e.customSVG.offsetY,")")}),w.node.innerHTML=e.customSVG.SVG,t.appendChild(w.node)}if(e.image.path){var S=e.image.width?e.image.width:20,A=e.image.height?e.image.height:20;m=this.annoCtx.addImage({x:l+e.image.offsetX-S/2,y:c+e.image.offsetY-A/2,width:S,height:A,path:e.image.path,appendTo:".apexcharts-point-annotations"})}e.mouseEnter&&m.node.addEventListener("mouseenter",e.mouseEnter.bind(this,e)),e.mouseLeave&&m.node.addEventListener("mouseleave",e.mouseLeave.bind(this,e)),e.click&&m.node.addEventListener("click",e.click.bind(this,e))}}}},{key:"drawPointAnnotations",value:function(){var e=this,t=this.w,a=this.annoCtx.graphics.group({class:"apexcharts-point-annotations"});return t.config.annotations.points.map(function(r,l){e.addPointAnnotation(r,a.node,l)}),a}}]),_}(),ei={name:"en",options:{months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],toolbar:{exportToSVG:"Download SVG",exportToPNG:"Download PNG",exportToCSV:"Download CSV",menu:"Menu",selection:"Selection",selectionZoom:"Selection Zoom",zoomIn:"Zoom In",zoomOut:"Zoom Out",pan:"Panning",reset:"Reset Zoom"}}},rt=function(){function _(){g(this,_),this.yAxis={show:!0,showAlways:!1,showForNullSeries:!0,seriesName:void 0,opposite:!1,reversed:!1,logarithmic:!1,logBase:10,tickAmount:void 0,stepSize:void 0,forceNiceScale:!1,max:void 0,min:void 0,floating:!1,decimalsInFloat:void 0,labels:{show:!0,showDuplicates:!1,minWidth:0,maxWidth:160,offsetX:0,offsetY:0,align:void 0,rotate:0,padding:20,style:{colors:[],fontSize:"11px",fontWeight:400,fontFamily:void 0,cssClass:""},formatter:void 0},axisBorder:{show:!1,color:"#e0e0e0",width:1,offsetX:0,offsetY:0},axisTicks:{show:!1,color:"#e0e0e0",width:6,offsetX:0,offsetY:0},title:{text:void 0,rotate:-90,offsetY:0,offsetX:0,style:{color:void 0,fontSize:"11px",fontWeight:900,fontFamily:void 0,cssClass:""}},tooltip:{enabled:!1,offsetX:0},crosshairs:{show:!0,position:"front",stroke:{color:"#b6b6b6",width:1,dashArray:0}}},this.pointAnnotation={id:void 0,x:0,y:null,yAxisIndex:0,seriesIndex:void 0,mouseEnter:void 0,mouseLeave:void 0,click:void 0,marker:{size:4,fillColor:"#fff",strokeWidth:2,strokeColor:"#333",shape:"circle",offsetX:0,offsetY:0,cssClass:""},label:{borderColor:"#c2c2c2",borderWidth:1,borderRadius:2,text:void 0,textAnchor:"middle",offsetX:0,offsetY:0,mouseEnter:void 0,mouseLeave:void 0,click:void 0,style:{background:"#fff",color:void 0,fontSize:"11px",fontFamily:void 0,fontWeight:400,cssClass:"",padding:{left:5,right:5,top:2,bottom:2}}},customSVG:{SVG:void 0,cssClass:void 0,offsetX:0,offsetY:0},image:{path:void 0,width:20,height:20,offsetX:0,offsetY:0}},this.yAxisAnnotation={id:void 0,y:0,y2:null,strokeDashArray:1,fillColor:"#c2c2c2",borderColor:"#c2c2c2",borderWidth:1,opacity:.3,offsetX:0,offsetY:0,width:"100%",yAxisIndex:0,label:{borderColor:"#c2c2c2",borderWidth:1,borderRadius:2,text:void 0,textAnchor:"end",position:"right",offsetX:0,offsetY:-3,mouseEnter:void 0,mouseLeave:void 0,click:void 0,style:{background:"#fff",color:void 0,fontSize:"11px",fontFamily:void 0,fontWeight:400,cssClass:"",padding:{left:5,right:5,top:2,bottom:2}}}},this.xAxisAnnotation={id:void 0,x:0,x2:null,strokeDashArray:1,fillColor:"#c2c2c2",borderColor:"#c2c2c2",borderWidth:1,opacity:.3,offsetX:0,offsetY:0,label:{borderColor:"#c2c2c2",borderWidth:1,borderRadius:2,text:void 0,textAnchor:"middle",orientation:"vertical",position:"top",offsetX:0,offsetY:0,mouseEnter:void 0,mouseLeave:void 0,click:void 0,style:{background:"#fff",color:void 0,fontSize:"11px",fontFamily:void 0,fontWeight:400,cssClass:"",padding:{left:5,right:5,top:2,bottom:2}}}},this.text={x:0,y:0,text:"",textAnchor:"start",foreColor:void 0,fontSize:"13px",fontFamily:void 0,fontWeight:400,appendTo:".apexcharts-annotations",backgroundColor:"transparent",borderColor:"#c2c2c2",borderRadius:0,borderWidth:0,paddingLeft:4,paddingRight:4,paddingTop:2,paddingBottom:2}}return v(_,[{key:"init",value:function(){return{annotations:{yaxis:[this.yAxisAnnotation],xaxis:[this.xAxisAnnotation],points:[this.pointAnnotation],texts:[],images:[],shapes:[]},chart:{animations:{enabled:!0,easing:"easeinout",speed:800,animateGradually:{delay:150,enabled:!0},dynamicAnimation:{enabled:!0,speed:350}},background:"",locales:[ei],defaultLocale:"en",dropShadow:{enabled:!1,enabledOnSeries:void 0,top:2,left:2,blur:4,color:"#000",opacity:.35},events:{animationEnd:void 0,beforeMount:void 0,mounted:void 0,updated:void 0,click:void 0,mouseMove:void 0,mouseLeave:void 0,xAxisLabelClick:void 0,legendClick:void 0,markerClick:void 0,selection:void 0,dataPointSelection:void 0,dataPointMouseEnter:void 0,dataPointMouseLeave:void 0,beforeZoom:void 0,beforeResetZoom:void 0,zoomed:void 0,scrolled:void 0,brushScrolled:void 0},foreColor:"#373d3f",fontFamily:"Helvetica, Arial, sans-serif",height:"auto",parentHeightOffset:15,redrawOnParentResize:!0,redrawOnWindowResize:!0,id:void 0,group:void 0,nonce:void 0,offsetX:0,offsetY:0,selection:{enabled:!1,type:"x",fill:{color:"#24292e",opacity:.1},stroke:{width:1,color:"#24292e",opacity:.4,dashArray:3},xaxis:{min:void 0,max:void 0},yaxis:{min:void 0,max:void 0}},sparkline:{enabled:!1},brush:{enabled:!1,autoScaleYaxis:!0,target:void 0,targets:void 0},stacked:!1,stackOnlyBar:!0,stackType:"normal",toolbar:{show:!0,offsetX:0,offsetY:0,tools:{download:!0,selection:!0,zoom:!0,zoomin:!0,zoomout:!0,pan:!0,reset:!0,customIcons:[]},export:{csv:{filename:void 0,columnDelimiter:",",headerCategory:"category",headerValue:"value",categoryFormatter:void 0,valueFormatter:void 0},png:{filename:void 0},svg:{filename:void 0},scale:void 0,width:void 0},autoSelected:"zoom"},type:"line",width:"100%",zoom:{enabled:!0,type:"x",autoScaleYaxis:!1,allowMouseWheelZoom:!0,zoomedArea:{fill:{color:"#90CAF9",opacity:.4},stroke:{color:"#0D47A1",opacity:.4,width:1}}}},plotOptions:{line:{isSlopeChart:!1},area:{fillTo:"origin"},bar:{horizontal:!1,columnWidth:"70%",barHeight:"70%",distributed:!1,borderRadius:0,borderRadiusApplication:"around",borderRadiusWhenStacked:"last",rangeBarOverlap:!0,rangeBarGroupRows:!1,hideZeroBarsWhenGrouped:!1,isDumbbell:!1,dumbbellColors:void 0,isFunnel:!1,isFunnel3d:!0,colors:{ranges:[],backgroundBarColors:[],backgroundBarOpacity:1,backgroundBarRadius:0},dataLabels:{position:"top",maxItems:100,hideOverflowingLabels:!0,orientation:"horizontal",total:{enabled:!1,formatter:void 0,offsetX:0,offsetY:0,style:{color:"#373d3f",fontSize:"12px",fontFamily:void 0,fontWeight:600}}}},bubble:{zScaling:!0,minBubbleRadius:void 0,maxBubbleRadius:void 0},candlestick:{colors:{upward:"#00B746",downward:"#EF403C"},wick:{useFillColor:!0}},boxPlot:{colors:{upper:"#00E396",lower:"#008FFB"}},heatmap:{radius:2,enableShades:!0,shadeIntensity:.5,reverseNegativeShade:!1,distributed:!1,useFillColorAsStroke:!1,colorScale:{inverse:!1,ranges:[],min:void 0,max:void 0}},treemap:{enableShades:!0,shadeIntensity:.5,distributed:!1,reverseNegativeShade:!1,useFillColorAsStroke:!1,borderRadius:4,dataLabels:{format:"scale"},colorScale:{inverse:!1,ranges:[],min:void 0,max:void 0}},radialBar:{inverseOrder:!1,startAngle:0,endAngle:360,offsetX:0,offsetY:0,hollow:{margin:5,size:"50%",background:"transparent",image:void 0,imageWidth:150,imageHeight:150,imageOffsetX:0,imageOffsetY:0,imageClipped:!0,position:"front",dropShadow:{enabled:!1,top:0,left:0,blur:3,color:"#000",opacity:.5}},track:{show:!0,startAngle:void 0,endAngle:void 0,background:"#f2f2f2",strokeWidth:"97%",opacity:1,margin:5,dropShadow:{enabled:!1,top:0,left:0,blur:3,color:"#000",opacity:.5}},dataLabels:{show:!0,name:{show:!0,fontSize:"16px",fontFamily:void 0,fontWeight:600,color:void 0,offsetY:0,formatter:function(e){return e}},value:{show:!0,fontSize:"14px",fontFamily:void 0,fontWeight:400,color:void 0,offsetY:16,formatter:function(e){return e+"%"}},total:{show:!1,label:"Total",fontSize:"16px",fontWeight:600,fontFamily:void 0,color:void 0,formatter:function(e){return e.globals.seriesTotals.reduce(function(t,a){return t+a},0)/e.globals.series.length+"%"}}},barLabels:{enabled:!1,offsetX:0,offsetY:0,useSeriesColors:!0,fontFamily:void 0,fontWeight:600,fontSize:"16px",formatter:function(e){return e},onClick:void 0}},pie:{customScale:1,offsetX:0,offsetY:0,startAngle:0,endAngle:360,expandOnClick:!0,dataLabels:{offset:0,minAngleToShowLabel:10},donut:{size:"65%",background:"transparent",labels:{show:!1,name:{show:!0,fontSize:"16px",fontFamily:void 0,fontWeight:600,color:void 0,offsetY:-10,formatter:function(e){return e}},value:{show:!0,fontSize:"20px",fontFamily:void 0,fontWeight:400,color:void 0,offsetY:10,formatter:function(e){return e}},total:{show:!1,showAlways:!1,label:"Total",fontSize:"16px",fontWeight:400,fontFamily:void 0,color:void 0,formatter:function(e){return e.globals.seriesTotals.reduce(function(t,a){return t+a},0)}}}}},polarArea:{rings:{strokeWidth:1,strokeColor:"#e8e8e8"},spokes:{strokeWidth:1,connectorColors:"#e8e8e8"}},radar:{size:void 0,offsetX:0,offsetY:0,polygons:{strokeWidth:1,strokeColors:"#e8e8e8",connectorColors:"#e8e8e8",fill:{colors:void 0}}}},colors:void 0,dataLabels:{enabled:!0,enabledOnSeries:void 0,formatter:function(e){return e!==null?e:""},textAnchor:"middle",distributed:!1,offsetX:0,offsetY:0,style:{fontSize:"12px",fontFamily:void 0,fontWeight:600,colors:void 0},background:{enabled:!0,foreColor:"#fff",borderRadius:2,padding:4,opacity:.9,borderWidth:1,borderColor:"#fff",dropShadow:{enabled:!1,top:1,left:1,blur:1,color:"#000",opacity:.45}},dropShadow:{enabled:!1,top:1,left:1,blur:1,color:"#000",opacity:.45}},fill:{type:"solid",colors:void 0,opacity:.85,gradient:{shade:"dark",type:"horizontal",shadeIntensity:.5,gradientToColors:void 0,inverseColors:!0,opacityFrom:1,opacityTo:1,stops:[0,50,100],colorStops:[]},image:{src:[],width:void 0,height:void 0},pattern:{style:"squares",width:6,height:6,strokeWidth:2}},forecastDataPoints:{count:0,fillOpacity:.5,strokeWidth:void 0,dashArray:4},grid:{show:!0,borderColor:"#e0e0e0",strokeDashArray:0,position:"back",xaxis:{lines:{show:!1}},yaxis:{lines:{show:!0}},row:{colors:void 0,opacity:.5},column:{colors:void 0,opacity:.5},padding:{top:0,right:10,bottom:0,left:12}},labels:[],legend:{show:!0,showForSingleSeries:!1,showForNullSeries:!0,showForZeroSeries:!0,floating:!1,position:"bottom",horizontalAlign:"center",inverseOrder:!1,fontSize:"12px",fontFamily:void 0,fontWeight:400,width:void 0,height:void 0,formatter:void 0,tooltipHoverFormatter:void 0,offsetX:-20,offsetY:4,customLegendItems:[],labels:{colors:void 0,useSeriesColors:!1},markers:{size:7,fillColors:void 0,strokeWidth:1,shape:void 0,offsetX:0,offsetY:0,customHTML:void 0,onClick:void 0},itemMargin:{horizontal:5,vertical:4},onItemClick:{toggleDataSeries:!0},onItemHover:{highlightDataSeries:!0}},markers:{discrete:[],size:0,colors:void 0,strokeColors:"#fff",strokeWidth:2,strokeOpacity:.9,strokeDashArray:0,fillOpacity:1,shape:"circle",offsetX:0,offsetY:0,showNullDataPoints:!0,onClick:void 0,onDblClick:void 0,hover:{size:void 0,sizeOffset:3}},noData:{text:void 0,align:"center",verticalAlign:"middle",offsetX:0,offsetY:0,style:{color:void 0,fontSize:"14px",fontFamily:void 0}},responsive:[],series:void 0,states:{normal:{filter:{type:"none",value:0}},hover:{filter:{type:"lighten",value:.1}},active:{allowMultipleDataPointsSelection:!1,filter:{type:"darken",value:.5}}},title:{text:void 0,align:"left",margin:5,offsetX:0,offsetY:0,floating:!1,style:{fontSize:"14px",fontWeight:900,fontFamily:void 0,color:void 0}},subtitle:{text:void 0,align:"left",margin:5,offsetX:0,offsetY:30,floating:!1,style:{fontSize:"12px",fontWeight:400,fontFamily:void 0,color:void 0}},stroke:{show:!0,curve:"smooth",lineCap:"butt",width:2,colors:void 0,dashArray:0,fill:{type:"solid",colors:void 0,opacity:.85,gradient:{shade:"dark",type:"horizontal",shadeIntensity:.5,gradientToColors:void 0,inverseColors:!0,opacityFrom:1,opacityTo:1,stops:[0,50,100],colorStops:[]}}},tooltip:{enabled:!0,enabledOnSeries:void 0,shared:!0,hideEmptySeries:!1,followCursor:!1,intersect:!1,inverseOrder:!1,custom:void 0,fillSeriesColor:!1,theme:"light",cssClass:"",style:{fontSize:"12px",fontFamily:void 0},onDatasetHover:{highlightDataSeries:!1},x:{show:!0,format:"dd MMM",formatter:void 0},y:{formatter:void 0,title:{formatter:function(e){return e?e+": ":""}}},z:{formatter:void 0,title:"Size: "},marker:{show:!0,fillColors:void 0},items:{display:"flex"},fixed:{enabled:!1,position:"topRight",offsetX:0,offsetY:0}},xaxis:{type:"category",categories:[],convertedCatToNumeric:!1,offsetX:0,offsetY:0,overwriteCategories:void 0,labels:{show:!0,rotate:-45,rotateAlways:!1,hideOverlappingLabels:!0,trim:!1,minHeight:void 0,maxHeight:120,showDuplicates:!0,style:{colors:[],fontSize:"12px",fontWeight:400,fontFamily:void 0,cssClass:""},offsetX:0,offsetY:0,format:void 0,formatter:void 0,datetimeUTC:!0,datetimeFormatter:{year:"yyyy",month:"MMM 'yy",day:"dd MMM",hour:"HH:mm",minute:"HH:mm:ss",second:"HH:mm:ss"}},group:{groups:[],style:{colors:[],fontSize:"12px",fontWeight:400,fontFamily:void 0,cssClass:""}},axisBorder:{show:!0,color:"#e0e0e0",width:"100%",height:1,offsetX:0,offsetY:0},axisTicks:{show:!0,color:"#e0e0e0",height:6,offsetX:0,offsetY:0},stepSize:void 0,tickAmount:void 0,tickPlacement:"on",min:void 0,max:void 0,range:void 0,floating:!1,decimalsInFloat:void 0,position:"bottom",title:{text:void 0,offsetX:0,offsetY:0,style:{color:void 0,fontSize:"12px",fontWeight:900,fontFamily:void 0,cssClass:""}},crosshairs:{show:!0,width:1,position:"back",opacity:.9,stroke:{color:"#b6b6b6",width:1,dashArray:3},fill:{type:"solid",color:"#B1B9C4",gradient:{colorFrom:"#D8E3F0",colorTo:"#BED1E6",stops:[0,100],opacityFrom:.4,opacityTo:.5}},dropShadow:{enabled:!1,left:0,top:0,blur:1,opacity:.4}},tooltip:{enabled:!0,offsetY:0,formatter:void 0,style:{fontSize:"12px",fontFamily:void 0}}},yaxis:this.yAxis,theme:{mode:"",palette:"palette1",monochrome:{enabled:!1,color:"#008FFB",shadeTo:"light",shadeIntensity:.65}}}}}]),_}(),Hi=function(){function _(e){g(this,_),this.ctx=e,this.w=e.w,this.graphics=new V(this.ctx),this.w.globals.isBarHorizontal&&(this.invertAxis=!0),this.helpers=new Le(this),this.xAxisAnnotations=new ke(this),this.yAxisAnnotations=new Tt(this),this.pointsAnnotations=new Dt(this),this.w.globals.isBarHorizontal&&this.w.config.yaxis[0].reversed&&(this.inversedReversedAxis=!0),this.xDivision=this.w.globals.gridWidth/this.w.globals.dataPoints}return v(_,[{key:"drawAxesAnnotations",value:function(){var e=this.w;if(e.globals.axisCharts&&e.globals.dataPoints){for(var t=this.yAxisAnnotations.drawYAxisAnnotations(),a=this.xAxisAnnotations.drawXAxisAnnotations(),r=this.pointsAnnotations.drawPointAnnotations(),l=e.config.chart.animations.enabled,o=[t,a,r],c=[a.node,t.node,r.node],d=0;d<3;d++)e.globals.dom.elGraphical.add(o[d]),!l||e.globals.resized||e.globals.dataChanged||e.config.chart.type!=="scatter"&&e.config.chart.type!=="bubble"&&e.globals.dataPoints>1&&c[d].classList.add("apexcharts-element-hidden"),e.globals.delayedElements.push({el:c[d],index:0});this.helpers.annotationsBackground()}}},{key:"drawImageAnnos",value:function(){var e=this;this.w.config.annotations.images.map(function(t,a){e.addImage(t,a)})}},{key:"drawTextAnnos",value:function(){var e=this;this.w.config.annotations.texts.map(function(t,a){e.addText(t,a)})}},{key:"addXaxisAnnotation",value:function(e,t,a){this.xAxisAnnotations.addXaxisAnnotation(e,t,a)}},{key:"addYaxisAnnotation",value:function(e,t,a){this.yAxisAnnotations.addYaxisAnnotation(e,t,a)}},{key:"addPointAnnotation",value:function(e,t,a){this.pointsAnnotations.addPointAnnotation(e,t,a)}},{key:"addText",value:function(e,t){var a=e.x,r=e.y,l=e.text,o=e.textAnchor,c=e.foreColor,d=e.fontSize,f=e.fontFamily,m=e.fontWeight,p=e.cssClass,x=e.backgroundColor,w=e.borderWidth,S=e.strokeDashArray,A=e.borderRadius,E=e.borderColor,M=e.appendTo,P=M===void 0?".apexcharts-svg":M,u=e.paddingLeft,y=u===void 0?4:u,C=e.paddingRight,D=C===void 0?4:C,L=e.paddingBottom,I=L===void 0?2:L,H=e.paddingTop,B=H===void 0?2:H,U=this.w,ee=this.graphics.drawText({x:a,y:r,text:l,textAnchor:o||"start",fontSize:d||"12px",fontWeight:m||"regular",fontFamily:f||U.config.chart.fontFamily,foreColor:c||U.config.chart.foreColor,cssClass:p}),K=U.globals.dom.baseEl.querySelector(P);K&&K.appendChild(ee.node);var te=ee.bbox();if(l){var le=this.graphics.drawRect(te.x-y,te.y-B,te.width+y+D,te.height+I+B,A,x||"transparent",1,w,E,S);K.insertBefore(le.node,ee.node)}}},{key:"addImage",value:function(e,t){var a=this.w,r=e.path,l=e.x,o=l===void 0?0:l,c=e.y,d=c===void 0?0:c,f=e.width,m=f===void 0?20:f,p=e.height,x=p===void 0?20:p,w=e.appendTo,S=w===void 0?".apexcharts-svg":w,A=a.globals.dom.Paper.image(r);A.size(m,x).move(o,d);var E=a.globals.dom.baseEl.querySelector(S);return E&&E.appendChild(A.node),A}},{key:"addXaxisAnnotationExternal",value:function(e,t,a){return this.addAnnotationExternal({params:e,pushToMemory:t,context:a,type:"xaxis",contextMethod:a.addXaxisAnnotation}),a}},{key:"addYaxisAnnotationExternal",value:function(e,t,a){return this.addAnnotationExternal({params:e,pushToMemory:t,context:a,type:"yaxis",contextMethod:a.addYaxisAnnotation}),a}},{key:"addPointAnnotationExternal",value:function(e,t,a){return this.invertAxis===void 0&&(this.invertAxis=a.w.globals.isBarHorizontal),this.addAnnotationExternal({params:e,pushToMemory:t,context:a,type:"point",contextMethod:a.addPointAnnotation}),a}},{key:"addAnnotationExternal",value:function(e){var t=e.params,a=e.pushToMemory,r=e.context,l=e.type,o=e.contextMethod,c=r,d=c.w,f=d.globals.dom.baseEl.querySelector(".apexcharts-".concat(l,"-annotations")),m=f.childNodes.length+1,p=new rt,x=Object.assign({},l==="xaxis"?p.xAxisAnnotation:l==="yaxis"?p.yAxisAnnotation:p.pointAnnotation),w=X.extend(x,t);switch(l){case"xaxis":this.addXaxisAnnotation(w,f,m);break;case"yaxis":this.addYaxisAnnotation(w,f,m);break;case"point":this.addPointAnnotation(w,f,m)}var S=d.globals.dom.baseEl.querySelector(".apexcharts-".concat(l,"-annotations .apexcharts-").concat(l,"-annotation-label[rel='").concat(m,"']")),A=this.helpers.addBackgroundToAnno(S,w);return A&&f.insertBefore(A.node,S),a&&d.globals.memory.methodsToExec.push({context:c,id:w.id?w.id:X.randomId(),method:o,label:"addAnnotation",params:t}),r}},{key:"clearAnnotations",value:function(e){for(var t=e.w,a=t.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxis-annotations, .apexcharts-xaxis-annotations, .apexcharts-point-annotations"),r=t.globals.memory.methodsToExec.length-1;r>=0;r--)t.globals.memory.methodsToExec[r].label!=="addText"&&t.globals.memory.methodsToExec[r].label!=="addAnnotation"||t.globals.memory.methodsToExec.splice(r,1);a=X.listToArray(a),Array.prototype.forEach.call(a,function(l){for(;l.firstChild;)l.removeChild(l.firstChild)})}},{key:"removeAnnotation",value:function(e,t){var a=e.w,r=a.globals.dom.baseEl.querySelectorAll(".".concat(t));r&&(a.globals.memory.methodsToExec.map(function(l,o){l.id===t&&a.globals.memory.methodsToExec.splice(o,1)}),Array.prototype.forEach.call(r,function(l){l.parentElement.removeChild(l)}))}}]),_}(),Xi=function(_){var e,t=_.isTimeline,a=_.ctx,r=_.seriesIndex,l=_.dataPointIndex,o=_.y1,c=_.y2,d=_.w,f=d.globals.seriesRangeStart[r][l],m=d.globals.seriesRangeEnd[r][l],p=d.globals.labels[l],x=d.config.series[r].name?d.config.series[r].name:"",w=d.globals.ttKeyFormatter,S=d.config.tooltip.y.title.formatter,A={w:d,seriesIndex:r,dataPointIndex:l,start:f,end:m};typeof S=="function"&&(x=S(x,A)),(e=d.config.series[r].data[l])!==null&&e!==void 0&&e.x&&(p=d.config.series[r].data[l].x),t||d.config.xaxis.type==="datetime"&&(p=new Ye(a).xLabelFormat(d.globals.ttKeyFormatter,p,p,{i:void 0,dateFormatter:new De(a).formatDate,w:d})),typeof w=="function"&&(p=w(p,A)),Number.isFinite(o)&&Number.isFinite(c)&&(f=o,m=c);var E="",M="",P=d.globals.colors[r];if(d.config.tooltip.x.formatter===void 0)if(d.config.xaxis.type==="datetime"){var u=new De(a);E=u.formatDate(u.getDate(f),d.config.tooltip.x.format),M=u.formatDate(u.getDate(m),d.config.tooltip.x.format)}else E=f,M=m;else E=d.config.tooltip.x.formatter(f),M=d.config.tooltip.x.formatter(m);return{start:f,end:m,startVal:E,endVal:M,ylabel:p,color:P,seriesName:x}},jt=function(_){var e=_.color,t=_.seriesName,a=_.ylabel,r=_.start,l=_.end,o=_.seriesIndex,c=_.dataPointIndex,d=_.ctx.tooltip.tooltipLabels.getFormatters(o);r=d.yLbFormatter(r),l=d.yLbFormatter(l);var f=d.yLbFormatter(_.w.globals.series[o][c]),m=`<span class="value start-value">
  `.concat(r,`
  </span> <span class="separator">-</span> <span class="value end-value">
  `).concat(l,`
  </span>`);return'<div class="apexcharts-tooltip-rangebar"><div> <span class="series-name" style="color: '+e+'">'+(t||"")+'</span></div><div> <span class="category">'+a+": </span> "+(_.w.globals.comboCharts?_.w.config.series[o].type==="rangeArea"||_.w.config.series[o].type==="rangeBar"?m:"<span>".concat(f,"</span>"):m)+" </div></div>"},ti=function(){function _(e){g(this,_),this.opts=e}return v(_,[{key:"hideYAxis",value:function(){this.opts.yaxis[0].show=!1,this.opts.yaxis[0].title.text="",this.opts.yaxis[0].axisBorder.show=!1,this.opts.yaxis[0].axisTicks.show=!1,this.opts.yaxis[0].floating=!0}},{key:"line",value:function(){return{chart:{animations:{easing:"swing"}},dataLabels:{enabled:!1},stroke:{width:5,curve:"straight"},markers:{size:0,hover:{sizeOffset:6}},xaxis:{crosshairs:{width:1}}}}},{key:"sparkline",value:function(e){return this.hideYAxis(),X.extend(e,{grid:{show:!1,padding:{left:0,right:0,top:0,bottom:0}},legend:{show:!1},xaxis:{labels:{show:!1},tooltip:{enabled:!1},axisBorder:{show:!1},axisTicks:{show:!1}},chart:{toolbar:{show:!1},zoom:{enabled:!1}},dataLabels:{enabled:!1}})}},{key:"slope",value:function(){return this.hideYAxis(),{chart:{toolbar:{show:!1},zoom:{enabled:!1}},dataLabels:{enabled:!0,formatter:function(e,t){var a=t.w.config.series[t.seriesIndex].name;return e!==null?a+": "+e:""},background:{enabled:!1},offsetX:-5},grid:{xaxis:{lines:{show:!0}},yaxis:{lines:{show:!1}}},xaxis:{position:"top",labels:{style:{fontSize:14,fontWeight:900}},tooltip:{enabled:!1},crosshairs:{show:!1}},markers:{size:8,hover:{sizeOffset:1}},legend:{show:!1},tooltip:{shared:!1,intersect:!0,followCursor:!0},stroke:{width:5,curve:"straight"}}}},{key:"bar",value:function(){return{chart:{stacked:!1,animations:{easing:"swing"}},plotOptions:{bar:{dataLabels:{position:"center"}}},dataLabels:{style:{colors:["#fff"]},background:{enabled:!1}},stroke:{width:0,lineCap:"round"},fill:{opacity:.85},legend:{markers:{shape:"square"}},tooltip:{shared:!1,intersect:!0},xaxis:{tooltip:{enabled:!1},tickPlacement:"between",crosshairs:{width:"barWidth",position:"back",fill:{type:"gradient"},dropShadow:{enabled:!1},stroke:{width:0}}}}}},{key:"funnel",value:function(){return this.hideYAxis(),Y(Y({},this.bar()),{},{chart:{animations:{easing:"linear",speed:800,animateGradually:{enabled:!1}}},plotOptions:{bar:{horizontal:!0,borderRadiusApplication:"around",borderRadius:0,dataLabels:{position:"center"}}},grid:{show:!1,padding:{left:0,right:0}},xaxis:{labels:{show:!1},tooltip:{enabled:!1},axisBorder:{show:!1},axisTicks:{show:!1}}})}},{key:"candlestick",value:function(){var e=this;return{stroke:{width:1,colors:["#333"]},fill:{opacity:1},dataLabels:{enabled:!1},tooltip:{shared:!0,custom:function(t){var a=t.seriesIndex,r=t.dataPointIndex,l=t.w;return e._getBoxTooltip(l,a,r,["Open","High","","Low","Close"],"candlestick")}},states:{active:{filter:{type:"none"}}},xaxis:{crosshairs:{width:1}}}}},{key:"boxPlot",value:function(){var e=this;return{chart:{animations:{dynamicAnimation:{enabled:!1}}},stroke:{width:1,colors:["#24292e"]},dataLabels:{enabled:!1},tooltip:{shared:!0,custom:function(t){var a=t.seriesIndex,r=t.dataPointIndex,l=t.w;return e._getBoxTooltip(l,a,r,["Minimum","Q1","Median","Q3","Maximum"],"boxPlot")}},markers:{size:7,strokeWidth:1,strokeColors:"#111"},xaxis:{crosshairs:{width:1}}}}},{key:"rangeBar",value:function(){return{chart:{animations:{animateGradually:!1}},stroke:{width:0,lineCap:"square"},plotOptions:{bar:{borderRadius:0,dataLabels:{position:"center"}}},dataLabels:{enabled:!1,formatter:function(e,t){t.ctx;var a=t.seriesIndex,r=t.dataPointIndex,l=t.w,o=function(){var c=l.globals.seriesRangeStart[a][r];return l.globals.seriesRangeEnd[a][r]-c};return l.globals.comboCharts?l.config.series[a].type==="rangeBar"||l.config.series[a].type==="rangeArea"?o():e:o()},background:{enabled:!1},style:{colors:["#fff"]}},markers:{size:10},tooltip:{shared:!1,followCursor:!0,custom:function(e){return e.w.config.plotOptions&&e.w.config.plotOptions.bar&&e.w.config.plotOptions.bar.horizontal?function(t){var a=Xi(Y(Y({},t),{},{isTimeline:!0})),r=a.color,l=a.seriesName,o=a.ylabel,c=a.startVal,d=a.endVal;return jt(Y(Y({},t),{},{color:r,seriesName:l,ylabel:o,start:c,end:d}))}(e):function(t){var a=Xi(t),r=a.color,l=a.seriesName,o=a.ylabel,c=a.start,d=a.end;return jt(Y(Y({},t),{},{color:r,seriesName:l,ylabel:o,start:c,end:d}))}(e)}},xaxis:{tickPlacement:"between",tooltip:{enabled:!1},crosshairs:{stroke:{width:0}}}}}},{key:"dumbbell",value:function(e){var t,a;return(t=e.plotOptions.bar)!==null&&t!==void 0&&t.barHeight||(e.plotOptions.bar.barHeight=2),(a=e.plotOptions.bar)!==null&&a!==void 0&&a.columnWidth||(e.plotOptions.bar.columnWidth=2),e}},{key:"area",value:function(){return{stroke:{width:4,fill:{type:"solid",gradient:{inverseColors:!1,shade:"light",type:"vertical",opacityFrom:.65,opacityTo:.5,stops:[0,100,100]}}},fill:{type:"gradient",gradient:{inverseColors:!1,shade:"light",type:"vertical",opacityFrom:.65,opacityTo:.5,stops:[0,100,100]}},markers:{size:0,hover:{sizeOffset:6}},tooltip:{followCursor:!1}}}},{key:"rangeArea",value:function(){return{stroke:{curve:"straight",width:0},fill:{type:"solid",opacity:.6},markers:{size:0},states:{hover:{filter:{type:"none"}},active:{filter:{type:"none"}}},tooltip:{intersect:!1,shared:!0,followCursor:!0,custom:function(e){return function(t){var a=Xi(t),r=a.color,l=a.seriesName,o=a.ylabel,c=a.start,d=a.end;return jt(Y(Y({},t),{},{color:r,seriesName:l,ylabel:o,start:c,end:d}))}(e)}}}}},{key:"brush",value:function(e){return X.extend(e,{chart:{toolbar:{autoSelected:"selection",show:!1},zoom:{enabled:!1}},dataLabels:{enabled:!1},stroke:{width:1},tooltip:{enabled:!1},xaxis:{tooltip:{enabled:!1}}})}},{key:"stacked100",value:function(e){e.dataLabels=e.dataLabels||{},e.dataLabels.formatter=e.dataLabels.formatter||void 0;var t=e.dataLabels.formatter;return e.yaxis.forEach(function(a,r){e.yaxis[r].min=0,e.yaxis[r].max=100}),e.chart.type==="bar"&&(e.dataLabels.formatter=t||function(a){return typeof a=="number"&&a?a.toFixed(0)+"%":a}),e}},{key:"stackedBars",value:function(){var e=this.bar();return Y(Y({},e),{},{plotOptions:Y(Y({},e.plotOptions),{},{bar:Y(Y({},e.plotOptions.bar),{},{borderRadiusApplication:"end",borderRadiusWhenStacked:"last"})})})}},{key:"convertCatToNumeric",value:function(e){return e.xaxis.convertedCatToNumeric=!0,e}},{key:"convertCatToNumericXaxis",value:function(e,t,a){e.xaxis.type="numeric",e.xaxis.labels=e.xaxis.labels||{},e.xaxis.labels.formatter=e.xaxis.labels.formatter||function(o){return X.isNumber(o)?Math.floor(o):o};var r=e.xaxis.labels.formatter,l=e.xaxis.categories&&e.xaxis.categories.length?e.xaxis.categories:e.labels;return a&&a.length&&(l=a.map(function(o){return Array.isArray(o)?o:String(o)})),l&&l.length&&(e.xaxis.labels.formatter=function(o){return X.isNumber(o)?r(l[Math.floor(o)-1]):r(o)}),e.xaxis.categories=[],e.labels=[],e.xaxis.tickAmount=e.xaxis.tickAmount||"dataPoints",e}},{key:"bubble",value:function(){return{dataLabels:{style:{colors:["#fff"]}},tooltip:{shared:!1,intersect:!0},xaxis:{crosshairs:{width:0}},fill:{type:"solid",gradient:{shade:"light",inverse:!0,shadeIntensity:.55,opacityFrom:.4,opacityTo:.8}}}}},{key:"scatter",value:function(){return{dataLabels:{enabled:!1},tooltip:{shared:!1,intersect:!0},markers:{size:6,strokeWidth:1,hover:{sizeOffset:2}}}}},{key:"heatmap",value:function(){return{chart:{stacked:!1},fill:{opacity:1},dataLabels:{style:{colors:["#fff"]}},stroke:{colors:["#fff"]},tooltip:{followCursor:!0,marker:{show:!1},x:{show:!1}},legend:{position:"top",markers:{shape:"square"}},grid:{padding:{right:20}}}}},{key:"treemap",value:function(){return{chart:{zoom:{enabled:!1}},dataLabels:{style:{fontSize:14,fontWeight:600,colors:["#fff"]}},stroke:{show:!0,width:2,colors:["#fff"]},legend:{show:!1},fill:{opacity:1,gradient:{stops:[0,100]}},tooltip:{followCursor:!0,x:{show:!1}},grid:{padding:{left:0,right:0}},xaxis:{crosshairs:{show:!1},tooltip:{enabled:!1}}}}},{key:"pie",value:function(){return{chart:{toolbar:{show:!1}},plotOptions:{pie:{donut:{labels:{show:!1}}}},dataLabels:{formatter:function(e){return e.toFixed(1)+"%"},style:{colors:["#fff"]},background:{enabled:!1},dropShadow:{enabled:!0}},stroke:{colors:["#fff"]},fill:{opacity:1,gradient:{shade:"light",stops:[0,100]}},tooltip:{theme:"dark",fillSeriesColor:!0},legend:{position:"right"},grid:{padding:{left:0,right:0,top:0,bottom:0}}}}},{key:"donut",value:function(){return{chart:{toolbar:{show:!1}},dataLabels:{formatter:function(e){return e.toFixed(1)+"%"},style:{colors:["#fff"]},background:{enabled:!1},dropShadow:{enabled:!0}},stroke:{colors:["#fff"]},fill:{opacity:1,gradient:{shade:"light",shadeIntensity:.35,stops:[80,100],opacityFrom:1,opacityTo:1}},tooltip:{theme:"dark",fillSeriesColor:!0},legend:{position:"right"},grid:{padding:{left:0,right:0,top:0,bottom:0}}}}},{key:"polarArea",value:function(){return{chart:{toolbar:{show:!1}},dataLabels:{formatter:function(e){return e.toFixed(1)+"%"},enabled:!1},stroke:{show:!0,width:2},fill:{opacity:.7},tooltip:{theme:"dark",fillSeriesColor:!0},legend:{position:"right"},grid:{padding:{left:0,right:0,top:0,bottom:0}}}}},{key:"radar",value:function(){return this.opts.yaxis[0].labels.offsetY=this.opts.yaxis[0].labels.offsetY?this.opts.yaxis[0].labels.offsetY:6,{dataLabels:{enabled:!1,style:{fontSize:"11px"}},stroke:{width:2},markers:{size:5,strokeWidth:1,strokeOpacity:1},fill:{opacity:.2},tooltip:{shared:!1,intersect:!0,followCursor:!0},grid:{show:!1,padding:{left:0,right:0,top:0,bottom:0}},xaxis:{labels:{formatter:function(e){return e},style:{colors:["#a8a8a8"],fontSize:"11px"}},tooltip:{enabled:!1},crosshairs:{show:!1}}}}},{key:"radialBar",value:function(){return{chart:{animations:{dynamicAnimation:{enabled:!0,speed:800}},toolbar:{show:!1}},fill:{gradient:{shade:"dark",shadeIntensity:.4,inverseColors:!1,type:"diagonal2",opacityFrom:1,opacityTo:1,stops:[70,98,100]}},legend:{show:!1,position:"right"},tooltip:{enabled:!1,fillSeriesColor:!0},grid:{padding:{left:0,right:0,top:0,bottom:0}}}}},{key:"_getBoxTooltip",value:function(e,t,a,r,l){var o=e.globals.seriesCandleO[t][a],c=e.globals.seriesCandleH[t][a],d=e.globals.seriesCandleM[t][a],f=e.globals.seriesCandleL[t][a],m=e.globals.seriesCandleC[t][a];return e.config.series[t].type&&e.config.series[t].type!==l?`<div class="apexcharts-custom-tooltip">
          `.concat(e.config.series[t].name?e.config.series[t].name:"series-"+(t+1),": <strong>").concat(e.globals.series[t][a],`</strong>
        </div>`):'<div class="apexcharts-tooltip-box apexcharts-tooltip-'.concat(e.config.chart.type,'">')+"<div>".concat(r[0],': <span class="value">')+o+"</span></div>"+"<div>".concat(r[1],': <span class="value">')+c+"</span></div>"+(d?"<div>".concat(r[2],': <span class="value">')+d+"</span></div>":"")+"<div>".concat(r[3],': <span class="value">')+f+"</span></div>"+"<div>".concat(r[4],': <span class="value">')+m+"</span></div></div>"}}]),_}(),vi=function(){function _(e){g(this,_),this.opts=e}return v(_,[{key:"init",value:function(e){var t=e.responsiveOverride,a=this.opts,r=new rt,l=new ti(a);this.chartType=a.chart.type,a=this.extendYAxis(a),a=this.extendAnnotations(a);var o=r.init(),c={};if(a&&ne(a)==="object"){var d,f,m,p,x,w,S,A,E,M,P={};P=["line","area","bar","candlestick","boxPlot","rangeBar","rangeArea","bubble","scatter","heatmap","treemap","pie","polarArea","donut","radar","radialBar"].indexOf(a.chart.type)!==-1?l[a.chart.type]():l.line(),(d=a.plotOptions)!==null&&d!==void 0&&(f=d.bar)!==null&&f!==void 0&&f.isFunnel&&(P=l.funnel()),a.chart.stacked&&a.chart.type==="bar"&&(P=l.stackedBars()),(m=a.chart.brush)!==null&&m!==void 0&&m.enabled&&(P=l.brush(P)),(p=a.plotOptions)!==null&&p!==void 0&&(x=p.line)!==null&&x!==void 0&&x.isSlopeChart&&(P=l.slope()),a.chart.stacked&&a.chart.stackType==="100%"&&(a=l.stacked100(a)),(w=a.plotOptions)!==null&&w!==void 0&&(S=w.bar)!==null&&S!==void 0&&S.isDumbbell&&(a=l.dumbbell(a)),this.checkForDarkTheme(window.Apex),this.checkForDarkTheme(a),a.xaxis=a.xaxis||window.Apex.xaxis||{},t||(a.xaxis.convertedCatToNumeric=!1),((A=(a=this.checkForCatToNumericXAxis(this.chartType,P,a)).chart.sparkline)!==null&&A!==void 0&&A.enabled||(E=window.Apex.chart)!==null&&E!==void 0&&(M=E.sparkline)!==null&&M!==void 0&&M.enabled)&&(P=l.sparkline(P)),c=X.extend(o,P)}var u=X.extend(c,window.Apex);return o=X.extend(u,a),o=this.handleUserInputErrors(o)}},{key:"checkForCatToNumericXAxis",value:function(e,t,a){var r,l,o=new ti(a),c=(e==="bar"||e==="boxPlot")&&((r=a.plotOptions)===null||r===void 0||(l=r.bar)===null||l===void 0?void 0:l.horizontal),d=e==="pie"||e==="polarArea"||e==="donut"||e==="radar"||e==="radialBar"||e==="heatmap",f=a.xaxis.type!=="datetime"&&a.xaxis.type!=="numeric",m=a.xaxis.tickPlacement?a.xaxis.tickPlacement:t.xaxis&&t.xaxis.tickPlacement;return c||d||!f||m==="between"||(a=o.convertCatToNumeric(a)),a}},{key:"extendYAxis",value:function(e,t){var a=new rt;(e.yaxis===void 0||!e.yaxis||Array.isArray(e.yaxis)&&e.yaxis.length===0)&&(e.yaxis={}),e.yaxis.constructor!==Array&&window.Apex.yaxis&&window.Apex.yaxis.constructor!==Array&&(e.yaxis=X.extend(e.yaxis,window.Apex.yaxis)),e.yaxis.constructor!==Array?e.yaxis=[X.extend(a.yAxis,e.yaxis)]:e.yaxis=X.extendArray(e.yaxis,a.yAxis);var r=!1;e.yaxis.forEach(function(o){o.logarithmic&&(r=!0)});var l=e.series;return t&&!l&&(l=t.config.series),r&&l.length!==e.yaxis.length&&l.length&&(e.yaxis=l.map(function(o,c){if(o.name||(l[c].name="series-".concat(c+1)),e.yaxis[c])return e.yaxis[c].seriesName=l[c].name,e.yaxis[c];var d=X.extend(a.yAxis,e.yaxis[0]);return d.show=!1,d})),r&&l.length>1&&l.length!==e.yaxis.length&&console.warn("A multi-series logarithmic chart should have equal number of series and y-axes"),e}},{key:"extendAnnotations",value:function(e){return e.annotations===void 0&&(e.annotations={},e.annotations.yaxis=[],e.annotations.xaxis=[],e.annotations.points=[]),e=this.extendYAxisAnnotations(e),e=this.extendXAxisAnnotations(e),e=this.extendPointAnnotations(e)}},{key:"extendYAxisAnnotations",value:function(e){var t=new rt;return e.annotations.yaxis=X.extendArray(e.annotations.yaxis!==void 0?e.annotations.yaxis:[],t.yAxisAnnotation),e}},{key:"extendXAxisAnnotations",value:function(e){var t=new rt;return e.annotations.xaxis=X.extendArray(e.annotations.xaxis!==void 0?e.annotations.xaxis:[],t.xAxisAnnotation),e}},{key:"extendPointAnnotations",value:function(e){var t=new rt;return e.annotations.points=X.extendArray(e.annotations.points!==void 0?e.annotations.points:[],t.pointAnnotation),e}},{key:"checkForDarkTheme",value:function(e){e.theme&&e.theme.mode==="dark"&&(e.tooltip||(e.tooltip={}),e.tooltip.theme!=="light"&&(e.tooltip.theme="dark"),e.chart.foreColor||(e.chart.foreColor="#f6f7f8"),e.theme.palette||(e.theme.palette="palette4"))}},{key:"handleUserInputErrors",value:function(e){var t=e;if(t.tooltip.shared&&t.tooltip.intersect)throw new Error("tooltip.shared cannot be enabled when tooltip.intersect is true. Turn off any other option by setting it to false.");if(t.chart.type==="bar"&&t.plotOptions.bar.horizontal){if(t.yaxis.length>1)throw new Error("Multiple Y Axis for bars are not supported. Switch to column chart by setting plotOptions.bar.horizontal=false");t.yaxis[0].reversed&&(t.yaxis[0].opposite=!0),t.xaxis.tooltip.enabled=!1,t.yaxis[0].tooltip.enabled=!1,t.chart.zoom.enabled=!1}return t.chart.type!=="bar"&&t.chart.type!=="rangeBar"||t.tooltip.shared&&t.xaxis.crosshairs.width==="barWidth"&&t.series.length>1&&(t.xaxis.crosshairs.width="tickWidth"),t.chart.type!=="candlestick"&&t.chart.type!=="boxPlot"||t.yaxis[0].reversed&&(console.warn("Reversed y-axis in ".concat(t.chart.type," chart is not supported.")),t.yaxis[0].reversed=!1),t}}]),_}(),Ja=function(){function _(){g(this,_)}return v(_,[{key:"initGlobalVars",value:function(e){e.series=[],e.seriesCandleO=[],e.seriesCandleH=[],e.seriesCandleM=[],e.seriesCandleL=[],e.seriesCandleC=[],e.seriesRangeStart=[],e.seriesRangeEnd=[],e.seriesRange=[],e.seriesPercent=[],e.seriesGoals=[],e.seriesX=[],e.seriesZ=[],e.seriesNames=[],e.seriesTotals=[],e.seriesLog=[],e.seriesColors=[],e.stackedSeriesTotals=[],e.seriesXvalues=[],e.seriesYvalues=[],e.labels=[],e.hasXaxisGroups=!1,e.groups=[],e.barGroups=[],e.lineGroups=[],e.areaGroups=[],e.hasSeriesGroups=!1,e.seriesGroups=[],e.categoryLabels=[],e.timescaleLabels=[],e.noLabelsProvided=!1,e.resizeTimer=null,e.selectionResizeTimer=null,e.lastWheelExecution=0,e.delayedElements=[],e.pointsArray=[],e.dataLabelsRects=[],e.isXNumeric=!1,e.skipLastTimelinelabel=!1,e.skipFirstTimelinelabel=!1,e.isDataXYZ=!1,e.isMultiLineX=!1,e.isMultipleYAxis=!1,e.maxY=-Number.MAX_VALUE,e.minY=Number.MIN_VALUE,e.minYArr=[],e.maxYArr=[],e.maxX=-Number.MAX_VALUE,e.minX=Number.MAX_VALUE,e.initialMaxX=-Number.MAX_VALUE,e.initialMinX=Number.MAX_VALUE,e.maxDate=0,e.minDate=Number.MAX_VALUE,e.minZ=Number.MAX_VALUE,e.maxZ=-Number.MAX_VALUE,e.minXDiff=Number.MAX_VALUE,e.yAxisScale=[],e.xAxisScale=null,e.xAxisTicksPositions=[],e.yLabelsCoords=[],e.yTitleCoords=[],e.barPadForNumericAxis=0,e.padHorizontal=0,e.xRange=0,e.yRange=[],e.zRange=0,e.dataPoints=0,e.xTickAmount=0,e.multiAxisTickAmount=0}},{key:"globalVars",value:function(e){return{chartID:null,cuid:null,events:{beforeMount:[],mounted:[],updated:[],clicked:[],selection:[],dataPointSelection:[],zoomed:[],scrolled:[]},colors:[],clientX:null,clientY:null,fill:{colors:[]},stroke:{colors:[]},dataLabels:{style:{colors:[]}},radarPolygons:{fill:{colors:[]}},markers:{colors:[],size:e.markers.size,largestSize:0},animationEnded:!1,isTouchDevice:"ontouchstart"in window||navigator.msMaxTouchPoints,isDirty:!1,isExecCalled:!1,initialConfig:null,initialSeries:[],lastXAxis:[],lastYAxis:[],columnSeries:null,labels:[],timescaleLabels:[],noLabelsProvided:!1,allSeriesCollapsed:!1,collapsedSeries:[],collapsedSeriesIndices:[],ancillaryCollapsedSeries:[],ancillaryCollapsedSeriesIndices:[],risingSeries:[],dataFormatXNumeric:!1,capturedSeriesIndex:-1,capturedDataPointIndex:-1,selectedDataPoints:[],invalidLogScale:!1,ignoreYAxisIndexes:[],maxValsInArrayIndex:0,radialSize:0,selection:void 0,zoomEnabled:e.chart.toolbar.autoSelected==="zoom"&&e.chart.toolbar.tools.zoom&&e.chart.zoom.enabled,panEnabled:e.chart.toolbar.autoSelected==="pan"&&e.chart.toolbar.tools.pan,selectionEnabled:e.chart.toolbar.autoSelected==="selection"&&e.chart.toolbar.tools.selection,yaxis:null,mousedown:!1,lastClientPosition:{},visibleXRange:void 0,yValueDecimal:0,total:0,SVGNS:"http://www.w3.org/2000/svg",svgWidth:0,svgHeight:0,noData:!1,locale:{},dom:{},memory:{methodsToExec:[]},shouldAnimate:!0,skipLastTimelinelabel:!1,skipFirstTimelinelabel:!1,delayedElements:[],axisCharts:!0,isDataXYZ:!1,isSlopeChart:e.plotOptions.line.isSlopeChart,resized:!1,resizeTimer:null,comboCharts:!1,dataChanged:!1,previousPaths:[],allSeriesHasEqualX:!0,pointsArray:[],dataLabelsRects:[],lastDrawnDataLabelsIndexes:[],hasNullValues:!1,easing:null,zoomed:!1,gridWidth:0,gridHeight:0,rotateXLabels:!1,defaultLabels:!1,xLabelFormatter:void 0,yLabelFormatters:[],xaxisTooltipFormatter:void 0,ttKeyFormatter:void 0,ttVal:void 0,ttZFormatter:void 0,LINE_HEIGHT_RATIO:1.618,xAxisLabelsHeight:0,xAxisGroupLabelsHeight:0,xAxisLabelsWidth:0,yAxisLabelsWidth:0,scaleX:1,scaleY:1,translateX:0,translateY:0,translateYAxisX:[],yAxisWidths:[],translateXAxisY:0,translateXAxisX:0,tooltip:null,niceScaleAllowedMagMsd:[[1,1,2,5,5,5,10,10,10,10,10],[1,1,2,5,5,5,10,10,10,10,10]],niceScaleDefaultTicks:[1,2,4,4,6,6,6,6,6,6,6,6,6,6,6,6,6,6,12,12,12,12,12,12,12,12,12,24],seriesYAxisMap:[],seriesYAxisReverseMap:[]}}},{key:"init",value:function(e){var t=this.globalVars(e);return this.initGlobalVars(t),t.initialConfig=X.extend({},e),t.initialSeries=X.clone(e.series),t.lastXAxis=X.clone(t.initialConfig.xaxis),t.lastYAxis=X.clone(t.initialConfig.yaxis),t}}]),_}(),bi=function(){function _(e){g(this,_),this.opts=e}return v(_,[{key:"init",value:function(){var e=new vi(this.opts).init({responsiveOverride:!1});return{config:e,globals:new Ja().init(e)}}}]),_}(),dt=function(){function _(e){g(this,_),this.ctx=e,this.w=e.w,this.opts=null,this.seriesIndex=0,this.patternIDs=[]}return v(_,[{key:"clippedImgArea",value:function(e){var t=this.w,a=t.config,r=parseInt(t.globals.gridWidth,10),l=parseInt(t.globals.gridHeight,10),o=r>l?r:l,c=e.image,d=0,f=0;e.width===void 0&&e.height===void 0?a.fill.image.width!==void 0&&a.fill.image.height!==void 0?(d=a.fill.image.width+1,f=a.fill.image.height):(d=o+1,f=o):(d=e.width,f=e.height);var m=document.createElementNS(t.globals.SVGNS,"pattern");V.setAttrs(m,{id:e.patternID,patternUnits:e.patternUnits?e.patternUnits:"userSpaceOnUse",width:d+"px",height:f+"px"});var p=document.createElementNS(t.globals.SVGNS,"image");m.appendChild(p),p.setAttributeNS(window.SVG.xlink,"href",c),V.setAttrs(p,{x:0,y:0,preserveAspectRatio:"none",width:d+"px",height:f+"px"}),p.style.opacity=e.opacity,t.globals.dom.elDefs.node.appendChild(m)}},{key:"getSeriesIndex",value:function(e){var t=this.w,a=t.config.chart.type;return(a==="bar"||a==="rangeBar")&&t.config.plotOptions.bar.distributed||a==="heatmap"||a==="treemap"?this.seriesIndex=e.seriesNumber:this.seriesIndex=e.seriesNumber%t.globals.series.length,this.seriesIndex}},{key:"fillPath",value:function(e){var t=this.w;this.opts=e;var a,r,l,o=this.w.config;this.seriesIndex=this.getSeriesIndex(e);var c=this.getFillColors()[this.seriesIndex];t.globals.seriesColors[this.seriesIndex]!==void 0&&(c=t.globals.seriesColors[this.seriesIndex]),typeof c=="function"&&(c=c({seriesIndex:this.seriesIndex,dataPointIndex:e.dataPointIndex,value:e.value,w:t}));var d=e.fillType?e.fillType:this.getFillType(this.seriesIndex),f=Array.isArray(o.fill.opacity)?o.fill.opacity[this.seriesIndex]:o.fill.opacity;e.color&&(c=e.color),c||(c="#fff",console.warn("undefined color - ApexCharts"));var m=c;if(c.indexOf("rgb")===-1?c.length<9&&(m=X.hexToRgba(c,f)):c.indexOf("rgba")>-1&&(f=X.getOpacityFromRGBA(c)),e.opacity&&(f=e.opacity),d==="pattern"&&(r=this.handlePatternFill({fillConfig:e.fillConfig,patternFill:r,fillColor:c,fillOpacity:f,defaultColor:m})),d==="gradient"&&(l=this.handleGradientFill({fillConfig:e.fillConfig,fillColor:c,fillOpacity:f,i:this.seriesIndex})),d==="image"){var p=o.fill.image.src,x=e.patternID?e.patternID:"",w="pattern".concat(t.globals.cuid).concat(e.seriesNumber+1).concat(x);this.patternIDs.indexOf(w)===-1&&(this.clippedImgArea({opacity:f,image:Array.isArray(p)?e.seriesNumber<p.length?p[e.seriesNumber]:p[0]:p,width:e.width?e.width:void 0,height:e.height?e.height:void 0,patternUnits:e.patternUnits,patternID:w}),this.patternIDs.push(w)),a="url(#".concat(w,")")}else a=d==="gradient"?l:d==="pattern"?r:m;return e.solid&&(a=m),a}},{key:"getFillType",value:function(e){var t=this.w;return Array.isArray(t.config.fill.type)?t.config.fill.type[e]:t.config.fill.type}},{key:"getFillColors",value:function(){var e=this.w,t=e.config,a=this.opts,r=[];return e.globals.comboCharts?e.config.series[this.seriesIndex].type==="line"?Array.isArray(e.globals.stroke.colors)?r=e.globals.stroke.colors:r.push(e.globals.stroke.colors):Array.isArray(e.globals.fill.colors)?r=e.globals.fill.colors:r.push(e.globals.fill.colors):t.chart.type==="line"?Array.isArray(e.globals.stroke.colors)?r=e.globals.stroke.colors:r.push(e.globals.stroke.colors):Array.isArray(e.globals.fill.colors)?r=e.globals.fill.colors:r.push(e.globals.fill.colors),a.fillColors!==void 0&&(r=[],Array.isArray(a.fillColors)?r=a.fillColors.slice():r.push(a.fillColors)),r}},{key:"handlePatternFill",value:function(e){var t=e.fillConfig,a=e.patternFill,r=e.fillColor,l=e.fillOpacity,o=e.defaultColor,c=this.w.config.fill;t&&(c=t);var d=this.opts,f=new V(this.ctx),m=Array.isArray(c.pattern.strokeWidth)?c.pattern.strokeWidth[this.seriesIndex]:c.pattern.strokeWidth,p=r;return Array.isArray(c.pattern.style)?a=c.pattern.style[d.seriesNumber]!==void 0?f.drawPattern(c.pattern.style[d.seriesNumber],c.pattern.width,c.pattern.height,p,m,l):o:a=f.drawPattern(c.pattern.style,c.pattern.width,c.pattern.height,p,m,l),a}},{key:"handleGradientFill",value:function(e){var t=e.fillColor,a=e.fillOpacity,r=e.fillConfig,l=e.i,o=this.w.config.fill;r&&(o=Y(Y({},o),r));var c,d=this.opts,f=new V(this.ctx),m=new X,p=o.gradient.type,x=t,w=o.gradient.opacityFrom===void 0?a:Array.isArray(o.gradient.opacityFrom)?o.gradient.opacityFrom[l]:o.gradient.opacityFrom;x.indexOf("rgba")>-1&&(w=X.getOpacityFromRGBA(x));var S=o.gradient.opacityTo===void 0?a:Array.isArray(o.gradient.opacityTo)?o.gradient.opacityTo[l]:o.gradient.opacityTo;if(o.gradient.gradientToColors===void 0||o.gradient.gradientToColors.length===0)c=o.gradient.shade==="dark"?m.shadeColor(-1*parseFloat(o.gradient.shadeIntensity),t.indexOf("rgb")>-1?X.rgb2hex(t):t):m.shadeColor(parseFloat(o.gradient.shadeIntensity),t.indexOf("rgb")>-1?X.rgb2hex(t):t);else if(o.gradient.gradientToColors[d.seriesNumber]){var A=o.gradient.gradientToColors[d.seriesNumber];c=A,A.indexOf("rgba")>-1&&(S=X.getOpacityFromRGBA(A))}else c=t;if(o.gradient.gradientFrom&&(x=o.gradient.gradientFrom),o.gradient.gradientTo&&(c=o.gradient.gradientTo),o.gradient.inverseColors){var E=x;x=c,c=E}return x.indexOf("rgb")>-1&&(x=X.rgb2hex(x)),c.indexOf("rgb")>-1&&(c=X.rgb2hex(c)),f.drawGradient(p,x,c,w,S,d.size,o.gradient.stops,o.gradient.colorStops,l)}}]),_}(),Nt=function(){function _(e,t){g(this,_),this.ctx=e,this.w=e.w}return v(_,[{key:"setGlobalMarkerSize",value:function(){var e=this.w;if(e.globals.markers.size=Array.isArray(e.config.markers.size)?e.config.markers.size:[e.config.markers.size],e.globals.markers.size.length>0){if(e.globals.markers.size.length<e.globals.series.length+1)for(var t=0;t<=e.globals.series.length;t++)e.globals.markers.size[t]===void 0&&e.globals.markers.size.push(e.globals.markers.size[0])}else e.globals.markers.size=e.config.series.map(function(a){return e.config.markers.size})}},{key:"plotChartMarkers",value:function(e,t,a,r){var l,o=arguments.length>4&&arguments[4]!==void 0&&arguments[4],c=this.w,d=t,f=e,m=null,p=new V(this.ctx),x=c.config.markers.discrete&&c.config.markers.discrete.length;if((c.globals.markers.size[t]>0||o||x)&&(m=p.group({class:o||x?"":"apexcharts-series-markers"})).attr("clip-path","url(#gridRectMarkerMask".concat(c.globals.cuid,")")),Array.isArray(f.x))for(var w=0;w<f.x.length;w++){var S=a;a===1&&w===0&&(S=0),a===1&&w===1&&(S=1);var A="apexcharts-marker";if(c.config.chart.type!=="line"&&c.config.chart.type!=="area"||c.globals.comboCharts||c.config.tooltip.intersect||(A+=" no-pointer-events"),(Array.isArray(c.config.markers.size)?c.globals.markers.size[t]>0:c.config.markers.size>0)||o||x){X.isNumber(f.y[w])?A+=" w".concat(X.randomId()):A="apexcharts-nullpoint";var E=this.getMarkerConfig({cssClass:A,seriesIndex:t,dataPointIndex:S});c.config.series[d].data[S]&&(c.config.series[d].data[S].fillColor&&(E.pointFillColor=c.config.series[d].data[S].fillColor),c.config.series[d].data[S].strokeColor&&(E.pointStrokeColor=c.config.series[d].data[S].strokeColor)),r!==void 0&&(E.pSize=r),(f.x[w]<-c.globals.markers.largestSize||f.x[w]>c.globals.gridWidth+c.globals.markers.largestSize||f.y[w]<-c.globals.markers.largestSize||f.y[w]>c.globals.gridHeight+c.globals.markers.largestSize)&&(E.pSize=0),(l=p.drawMarker(f.x[w],f.y[w],E)).attr("rel",S),l.attr("j",S),l.attr("index",t),l.node.setAttribute("default-marker-size",E.pSize),new ce(this.ctx).setSelectionFilter(l,t,S),this.addEvents(l),m&&m.add(l)}else c.globals.pointsArray[t]===void 0&&(c.globals.pointsArray[t]=[]),c.globals.pointsArray[t].push([f.x[w],f.y[w]])}return m}},{key:"getMarkerConfig",value:function(e){var t=e.cssClass,a=e.seriesIndex,r=e.dataPointIndex,l=r===void 0?null:r,o=e.radius,c=o===void 0?null:o,d=e.size,f=d===void 0?null:d,m=e.strokeWidth,p=m===void 0?null:m,x=this.w,w=this.getMarkerStyle(a),S=f===null?x.globals.markers.size[a]:f,A=x.config.markers;return l!==null&&A.discrete.length&&A.discrete.map(function(E){E.seriesIndex===a&&E.dataPointIndex===l&&(w.pointStrokeColor=E.strokeColor,w.pointFillColor=E.fillColor,S=E.size,w.pointShape=E.shape)}),{pSize:c===null?S:c,pRadius:c!==null?c:A.radius,pointStrokeWidth:p!==null?p:Array.isArray(A.strokeWidth)?A.strokeWidth[a]:A.strokeWidth,pointStrokeColor:w.pointStrokeColor,pointFillColor:w.pointFillColor,shape:w.pointShape||(Array.isArray(A.shape)?A.shape[a]:A.shape),class:t,pointStrokeOpacity:Array.isArray(A.strokeOpacity)?A.strokeOpacity[a]:A.strokeOpacity,pointStrokeDashArray:Array.isArray(A.strokeDashArray)?A.strokeDashArray[a]:A.strokeDashArray,pointFillOpacity:Array.isArray(A.fillOpacity)?A.fillOpacity[a]:A.fillOpacity,seriesIndex:a}}},{key:"addEvents",value:function(e){var t=this.w,a=new V(this.ctx);e.node.addEventListener("mouseenter",a.pathMouseEnter.bind(this.ctx,e)),e.node.addEventListener("mouseleave",a.pathMouseLeave.bind(this.ctx,e)),e.node.addEventListener("mousedown",a.pathMouseDown.bind(this.ctx,e)),e.node.addEventListener("click",t.config.markers.onClick),e.node.addEventListener("dblclick",t.config.markers.onDblClick),e.node.addEventListener("touchstart",a.pathMouseDown.bind(this.ctx,e),{passive:!0})}},{key:"getMarkerStyle",value:function(e){var t=this.w,a=t.globals.markers.colors,r=t.config.markers.strokeColor||t.config.markers.strokeColors;return{pointStrokeColor:Array.isArray(r)?r[e]:r,pointFillColor:Array.isArray(a)?a[e]:a}}}]),_}(),Ut=function(){function _(e){g(this,_),this.ctx=e,this.w=e.w,this.initialAnim=this.w.config.chart.animations.enabled}return v(_,[{key:"draw",value:function(e,t,a){var r=this.w,l=new V(this.ctx),o=a.realIndex,c=a.pointsPos,d=a.zRatio,f=a.elParent,m=l.group({class:"apexcharts-series-markers apexcharts-series-".concat(r.config.chart.type)});if(m.attr("clip-path","url(#gridRectMarkerMask".concat(r.globals.cuid,")")),Array.isArray(c.x))for(var p=0;p<c.x.length;p++){var x=t+1,w=!0;t===0&&p===0&&(x=0),t===0&&p===1&&(x=1);var S=r.globals.markers.size[o];if(d!==1/0){var A=r.config.plotOptions.bubble;S=r.globals.seriesZ[o][x],A.zScaling&&(S/=d),A.minBubbleRadius&&S<A.minBubbleRadius&&(S=A.minBubbleRadius),A.maxBubbleRadius&&S>A.maxBubbleRadius&&(S=A.maxBubbleRadius)}var E=c.x[p],M=c.y[p];if(S=S||0,M!==null&&r.globals.series[o][x]!==void 0||(w=!1),w){var P=this.drawPoint(E,M,S,o,x,t);m.add(P)}f.add(m)}}},{key:"drawPoint",value:function(e,t,a,r,l,o){var c=this.w,d=r,f=new we(this.ctx),m=new ce(this.ctx),p=new dt(this.ctx),x=new Nt(this.ctx),w=new V(this.ctx),S=x.getMarkerConfig({cssClass:"apexcharts-marker",seriesIndex:d,dataPointIndex:l,radius:c.config.chart.type==="bubble"||c.globals.comboCharts&&c.config.series[r]&&c.config.series[r].type==="bubble"?a:null}),A=p.fillPath({seriesNumber:r,dataPointIndex:l,color:S.pointFillColor,patternUnits:"objectBoundingBox",value:c.globals.series[r][o]}),E=w.drawMarker(e,t,S);if(c.config.series[d].data[l]&&c.config.series[d].data[l].fillColor&&(A=c.config.series[d].data[l].fillColor),E.attr({fill:A}),c.config.chart.dropShadow.enabled){var M=c.config.chart.dropShadow;m.dropShadow(E,M,r)}if(!this.initialAnim||c.globals.dataChanged||c.globals.resized)c.globals.animationEnded=!0;else{var P=c.config.chart.animations.speed;f.animateMarker(E,P,c.globals.easing,function(){window.setTimeout(function(){f.animationCompleted(E)},100)})}return E.attr({rel:l,j:l,index:r,"default-marker-size":S.pSize}),m.setSelectionFilter(E,r,l),x.addEvents(E),E.node.classList.add("apexcharts-marker"),E}},{key:"centerTextInBubble",value:function(e){var t=this.w;return{y:e+=parseInt(t.config.dataLabels.style.fontSize,10)/4}}}]),_}(),zt=function(){function _(e){g(this,_),this.ctx=e,this.w=e.w}return v(_,[{key:"dataLabelsCorrection",value:function(e,t,a,r,l,o,c){var d=this.w,f=!1,m=new V(this.ctx).getTextRects(a,c),p=m.width,x=m.height;t<0&&(t=0),t>d.globals.gridHeight+x&&(t=d.globals.gridHeight+x/2),d.globals.dataLabelsRects[r]===void 0&&(d.globals.dataLabelsRects[r]=[]),d.globals.dataLabelsRects[r].push({x:e,y:t,width:p,height:x});var w=d.globals.dataLabelsRects[r].length-2,S=d.globals.lastDrawnDataLabelsIndexes[r]!==void 0?d.globals.lastDrawnDataLabelsIndexes[r][d.globals.lastDrawnDataLabelsIndexes[r].length-1]:0;if(d.globals.dataLabelsRects[r][w]!==void 0){var A=d.globals.dataLabelsRects[r][S];(e>A.x+A.width||t>A.y+A.height||t+x<A.y||e+p<A.x)&&(f=!0)}return(l===0||o)&&(f=!0),{x:e,y:t,textRects:m,drawnextLabel:f}}},{key:"drawDataLabel",value:function(e){var t=this,a=e.type,r=e.pos,l=e.i,o=e.j,c=e.isRangeStart,d=e.strokeWidth,f=d===void 0?2:d,m=this.w,p=new V(this.ctx),x=m.config.dataLabels,w=0,S=0,A=o,E=null;if(m.globals.collapsedSeriesIndices.indexOf(l)!==-1||!x.enabled||!Array.isArray(r.x))return E;E=p.group({class:"apexcharts-data-labels"});for(var M=0;M<r.x.length;M++)if(w=r.x[M]+x.offsetX,S=r.y[M]+x.offsetY+f,!isNaN(w)){o===1&&M===0&&(A=0),o===1&&M===1&&(A=1);var P=m.globals.series[l][A];a==="rangeArea"&&(P=c?m.globals.seriesRangeStart[l][A]:m.globals.seriesRangeEnd[l][A]);var u="",y=function(D){return m.config.dataLabels.formatter(D,{ctx:t.ctx,seriesIndex:l,dataPointIndex:A,w:m})};m.config.chart.type==="bubble"?(u=y(P=m.globals.seriesZ[l][A]),S=r.y[M],S=new Ut(this.ctx).centerTextInBubble(S,l,A).y):P!==void 0&&(u=y(P));var C=m.config.dataLabels.textAnchor;m.globals.isSlopeChart&&(C=A===0?"end":A===m.config.series[l].data.length-1?"start":"middle"),this.plotDataLabelsText({x:w,y:S,text:u,i:l,j:A,parent:E,offsetCorrection:!0,dataLabelsConfig:m.config.dataLabels,textAnchor:C})}return E}},{key:"plotDataLabelsText",value:function(e){var t=this.w,a=new V(this.ctx),r=e.x,l=e.y,o=e.i,c=e.j,d=e.text,f=e.textAnchor,m=e.fontSize,p=e.parent,x=e.dataLabelsConfig,w=e.color,S=e.alwaysDrawDataLabel,A=e.offsetCorrection,E=e.className,M=null;if(Array.isArray(t.config.dataLabels.enabledOnSeries)&&t.config.dataLabels.enabledOnSeries.indexOf(o)<0)return M;var P={x:r,y:l,drawnextLabel:!0,textRects:null};A&&(P=this.dataLabelsCorrection(r,l,d,o,c,S,parseInt(x.style.fontSize,10))),t.globals.zoomed||(r=P.x,l=P.y),P.textRects&&(r<-20-P.textRects.width||r>t.globals.gridWidth+P.textRects.width+30)&&(d="");var u=t.globals.dataLabels.style.colors[o];((t.config.chart.type==="bar"||t.config.chart.type==="rangeBar")&&t.config.plotOptions.bar.distributed||t.config.dataLabels.distributed)&&(u=t.globals.dataLabels.style.colors[c]),typeof u=="function"&&(u=u({series:t.globals.series,seriesIndex:o,dataPointIndex:c,w:t})),w&&(u=w);var y=x.offsetX,C=x.offsetY;if(t.config.chart.type!=="bar"&&t.config.chart.type!=="rangeBar"||(y=0,C=0),t.globals.isSlopeChart&&(c!==0&&(y=-2*x.offsetX+5),c!==0&&c!==t.config.series[o].data.length-1&&(y=0)),P.drawnextLabel){if((M=a.drawText({width:100,height:parseInt(x.style.fontSize,10),x:r+y,y:l+C,foreColor:u,textAnchor:f||x.textAnchor,text:d,fontSize:m||x.style.fontSize,fontFamily:x.style.fontFamily,fontWeight:x.style.fontWeight||"normal"})).attr({class:E||"apexcharts-datalabel",cx:r,cy:l}),x.dropShadow.enabled){var D=x.dropShadow;new ce(this.ctx).dropShadow(M,D)}p.add(M),t.globals.lastDrawnDataLabelsIndexes[o]===void 0&&(t.globals.lastDrawnDataLabelsIndexes[o]=[]),t.globals.lastDrawnDataLabelsIndexes[o].push(c)}return M}},{key:"addBackgroundToDataLabel",value:function(e,t){var a=this.w,r=a.config.dataLabels.background,l=r.padding,o=r.padding/2,c=t.width,d=t.height,f=new V(this.ctx).drawRect(t.x-l,t.y-o/2,c+2*l,d+o,r.borderRadius,a.config.chart.background!=="transparent"&&a.config.chart.background?a.config.chart.background:"#fff",r.opacity,r.borderWidth,r.borderColor);return r.dropShadow.enabled&&new ce(this.ctx).dropShadow(f,r.dropShadow),f}},{key:"dataLabelsBackground",value:function(){var e=this.w;if(e.config.chart.type!=="bubble")for(var t=e.globals.dom.baseEl.querySelectorAll(".apexcharts-datalabels text"),a=0;a<t.length;a++){var r=t[a],l=r.getBBox(),o=null;if(l.width&&l.height&&(o=this.addBackgroundToDataLabel(r,l)),o){r.parentNode.insertBefore(o.node,r);var c=r.getAttribute("fill");e.config.chart.animations.enabled&&!e.globals.resized&&!e.globals.dataChanged?o.animate().attr({fill:c}):o.attr({fill:c}),r.setAttribute("fill",e.config.dataLabels.background.foreColor)}}}},{key:"bringForward",value:function(){for(var e=this.w,t=e.globals.dom.baseEl.querySelectorAll(".apexcharts-datalabels"),a=e.globals.dom.baseEl.querySelector(".apexcharts-plot-series:last-child"),r=0;r<t.length;r++)a&&a.insertBefore(t[r],a.nextSibling)}}]),_}(),vt=function(){function _(e){g(this,_),this.ctx=e,this.w=e.w,this.legendInactiveClass="legend-mouseover-inactive"}return v(_,[{key:"getAllSeriesEls",value:function(){return this.w.globals.dom.baseEl.getElementsByClassName("apexcharts-series")}},{key:"getSeriesByName",value:function(e){return this.w.globals.dom.baseEl.querySelector(".apexcharts-inner .apexcharts-series[seriesName='".concat(X.escapeString(e),"']"))}},{key:"isSeriesHidden",value:function(e){var t=this.getSeriesByName(e),a=parseInt(t.getAttribute("data:realIndex"),10);return{isHidden:t.classList.contains("apexcharts-series-collapsed"),realIndex:a}}},{key:"addCollapsedClassToSeries",value:function(e,t){var a=this.w;function r(l){for(var o=0;o<l.length;o++)l[o].index===t&&e.node.classList.add("apexcharts-series-collapsed")}r(a.globals.collapsedSeries),r(a.globals.ancillaryCollapsedSeries)}},{key:"toggleSeries",value:function(e){var t=this.isSeriesHidden(e);return this.ctx.legend.legendHelpers.toggleDataSeries(t.realIndex,t.isHidden),t.isHidden}},{key:"showSeries",value:function(e){var t=this.isSeriesHidden(e);t.isHidden&&this.ctx.legend.legendHelpers.toggleDataSeries(t.realIndex,!0)}},{key:"hideSeries",value:function(e){var t=this.isSeriesHidden(e);t.isHidden||this.ctx.legend.legendHelpers.toggleDataSeries(t.realIndex,!1)}},{key:"resetSeries",value:function(){var e=!(arguments.length>0&&arguments[0]!==void 0)||arguments[0],t=!(arguments.length>1&&arguments[1]!==void 0)||arguments[1],a=!(arguments.length>2&&arguments[2]!==void 0)||arguments[2],r=this.w,l=X.clone(r.globals.initialSeries);r.globals.previousPaths=[],a?(r.globals.collapsedSeries=[],r.globals.ancillaryCollapsedSeries=[],r.globals.collapsedSeriesIndices=[],r.globals.ancillaryCollapsedSeriesIndices=[]):l=this.emptyCollapsedSeries(l),r.config.series=l,e&&(t&&(r.globals.zoomed=!1,this.ctx.updateHelpers.revertDefaultAxisMinMax()),this.ctx.updateHelpers._updateSeries(l,r.config.chart.animations.dynamicAnimation.enabled))}},{key:"emptyCollapsedSeries",value:function(e){for(var t=this.w,a=0;a<e.length;a++)t.globals.collapsedSeriesIndices.indexOf(a)>-1&&(e[a].data=[]);return e}},{key:"highlightSeries",value:function(e){var t=this.w,a=this.getSeriesByName(e),r=parseInt(a==null?void 0:a.getAttribute("data:realIndex"),10),l=t.globals.dom.baseEl.querySelectorAll(".apexcharts-series, .apexcharts-datalabels, .apexcharts-yaxis"),o=null,c=null,d=null;if(t.globals.axisCharts||t.config.chart.type==="radialBar")if(t.globals.axisCharts){o=t.globals.dom.baseEl.querySelector(".apexcharts-series[data\\:realIndex='".concat(r,"']")),c=t.globals.dom.baseEl.querySelector(".apexcharts-datalabels[data\\:realIndex='".concat(r,"']"));var f=t.globals.seriesYAxisReverseMap[r];d=t.globals.dom.baseEl.querySelector(".apexcharts-yaxis[rel='".concat(f,"']"))}else o=t.globals.dom.baseEl.querySelector(".apexcharts-series[rel='".concat(r+1,"']"));else o=t.globals.dom.baseEl.querySelector(".apexcharts-series[rel='".concat(r+1,"'] path"));for(var m=0;m<l.length;m++)l[m].classList.add(this.legendInactiveClass);if(o)t.globals.axisCharts||o.parentNode.classList.remove(this.legendInactiveClass),o.classList.remove(this.legendInactiveClass),c!==null&&c.classList.remove(this.legendInactiveClass),d!==null&&d.classList.remove(this.legendInactiveClass);else for(var p=0;p<l.length;p++)l[p].classList.remove(this.legendInactiveClass)}},{key:"toggleSeriesOnHover",value:function(e,t){var a=this.w;t||(t=e.target);var r=a.globals.dom.baseEl.querySelectorAll(".apexcharts-series, .apexcharts-datalabels, .apexcharts-yaxis");if(e.type==="mousemove"){var l=parseInt(t.getAttribute("rel"),10)-1;this.highlightSeries(a.globals.seriesNames[l])}else if(e.type==="mouseout")for(var o=0;o<r.length;o++)r[o].classList.remove(this.legendInactiveClass)}},{key:"highlightRangeInSeries",value:function(e,t){var a=this,r=this.w,l=r.globals.dom.baseEl.getElementsByClassName("apexcharts-heatmap-rect"),o=function(f){for(var m=0;m<l.length;m++)l[m].classList[f](a.legendInactiveClass)};if(e.type==="mousemove"){var c=parseInt(t.getAttribute("rel"),10)-1;o("add");var d=r.config.plotOptions.heatmap.colorScale.ranges;(function(f,m){for(var p=0;p<l.length;p++){var x=Number(l[p].getAttribute("val"));x>=f.from&&(x<f.to||f.to===m&&x===m)&&l[p].classList.remove(a.legendInactiveClass)}})(d[c],d.reduce(function(f,m){return Math.max(f,m.to)},0))}else e.type==="mouseout"&&o("remove")}},{key:"getActiveConfigSeriesIndex",value:function(){var e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:"asc",t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:[],a=this.w,r=0;if(a.config.series.length>1){for(var l=a.config.series.map(function(c,d){return c.data&&c.data.length>0&&a.globals.collapsedSeriesIndices.indexOf(d)===-1&&(!a.globals.comboCharts||t.length===0||t.length&&t.indexOf(a.config.series[d].type)>-1)?d:-1}),o=e==="asc"?0:l.length-1;e==="asc"?o<l.length:o>=0;e==="asc"?o++:o--)if(l[o]!==-1){r=l[o];break}}return r}},{key:"getBarSeriesIndices",value:function(){return this.w.globals.comboCharts?this.w.config.series.map(function(e,t){return e.type==="bar"||e.type==="column"?t:-1}).filter(function(e){return e!==-1}):this.w.config.series.map(function(e,t){return t})}},{key:"getPreviousPaths",value:function(){var e=this.w;function t(o,c,d){for(var f=o[c].childNodes,m={type:d,paths:[],realIndex:o[c].getAttribute("data:realIndex")},p=0;p<f.length;p++)if(f[p].hasAttribute("pathTo")){var x=f[p].getAttribute("pathTo");m.paths.push({d:x})}e.globals.previousPaths.push(m)}e.globals.previousPaths=[],["line","area","bar","rangebar","rangeArea","candlestick","radar"].forEach(function(o){for(var c,d=(c=o,e.globals.dom.baseEl.querySelectorAll(".apexcharts-".concat(c,"-series .apexcharts-series"))),f=0;f<d.length;f++)t(d,f,o)}),this.handlePrevBubbleScatterPaths("bubble"),this.handlePrevBubbleScatterPaths("scatter");var a=e.globals.dom.baseEl.querySelectorAll(".apexcharts-".concat(e.config.chart.type," .apexcharts-series"));if(a.length>0)for(var r=function(o){for(var c=e.globals.dom.baseEl.querySelectorAll(".apexcharts-".concat(e.config.chart.type," .apexcharts-series[data\\:realIndex='").concat(o,"'] rect")),d=[],f=function(p){var x=function(S){return c[p].getAttribute(S)},w={x:parseFloat(x("x")),y:parseFloat(x("y")),width:parseFloat(x("width")),height:parseFloat(x("height"))};d.push({rect:w,color:c[p].getAttribute("color")})},m=0;m<c.length;m++)f(m);e.globals.previousPaths.push(d)},l=0;l<a.length;l++)r(l);e.globals.axisCharts||(e.globals.previousPaths=e.globals.series)}},{key:"handlePrevBubbleScatterPaths",value:function(e){var t=this.w,a=t.globals.dom.baseEl.querySelectorAll(".apexcharts-".concat(e,"-series .apexcharts-series"));if(a.length>0)for(var r=0;r<a.length;r++){for(var l=t.globals.dom.baseEl.querySelectorAll(".apexcharts-".concat(e,"-series .apexcharts-series[data\\:realIndex='").concat(r,"'] circle")),o=[],c=0;c<l.length;c++)o.push({x:l[c].getAttribute("cx"),y:l[c].getAttribute("cy"),r:l[c].getAttribute("r")});t.globals.previousPaths.push(o)}}},{key:"clearPreviousPaths",value:function(){var e=this.w;e.globals.previousPaths=[],e.globals.allSeriesCollapsed=!1}},{key:"handleNoData",value:function(){var e=this.w,t=e.config.noData,a=new V(this.ctx),r=e.globals.svgWidth/2,l=e.globals.svgHeight/2,o="middle";if(e.globals.noData=!0,e.globals.animationEnded=!0,t.align==="left"?(r=10,o="start"):t.align==="right"&&(r=e.globals.svgWidth-10,o="end"),t.verticalAlign==="top"?l=50:t.verticalAlign==="bottom"&&(l=e.globals.svgHeight-50),r+=t.offsetX,l=l+parseInt(t.style.fontSize,10)+2+t.offsetY,t.text!==void 0&&t.text!==""){var c=a.drawText({x:r,y:l,text:t.text,textAnchor:o,fontSize:t.style.fontSize,fontFamily:t.style.fontFamily,foreColor:t.style.color,opacity:1,class:"apexcharts-text-nodata"});e.globals.dom.Paper.add(c)}}},{key:"setNullSeriesToZeroValues",value:function(e){for(var t=this.w,a=0;a<e.length;a++)if(e[a].length===0)for(var r=0;r<e[t.globals.maxValsInArrayIndex].length;r++)e[a].push(0);return e}},{key:"hasAllSeriesEqualX",value:function(){for(var e=!0,t=this.w,a=this.filteredSeriesX(),r=0;r<a.length-1;r++)if(a[r][0]!==a[r+1][0]){e=!1;break}return t.globals.allSeriesHasEqualX=e,e}},{key:"filteredSeriesX",value:function(){var e=this.w.globals.seriesX.map(function(t){return t.length>0?t:[]});return e}}]),_}(),Bi=function(){function _(e){g(this,_),this.ctx=e,this.w=e.w,this.twoDSeries=[],this.threeDSeries=[],this.twoDSeriesX=[],this.seriesGoals=[],this.coreUtils=new se(this.ctx)}return v(_,[{key:"isMultiFormat",value:function(){return this.isFormatXY()||this.isFormat2DArray()}},{key:"isFormatXY",value:function(){var e=this.w.config.series.slice(),t=new vt(this.ctx);if(this.activeSeriesIndex=t.getActiveConfigSeriesIndex(),e[this.activeSeriesIndex].data!==void 0&&e[this.activeSeriesIndex].data.length>0&&e[this.activeSeriesIndex].data[0]!==null&&e[this.activeSeriesIndex].data[0].x!==void 0&&e[this.activeSeriesIndex].data[0]!==null)return!0}},{key:"isFormat2DArray",value:function(){var e=this.w.config.series.slice(),t=new vt(this.ctx);if(this.activeSeriesIndex=t.getActiveConfigSeriesIndex(),e[this.activeSeriesIndex].data!==void 0&&e[this.activeSeriesIndex].data.length>0&&e[this.activeSeriesIndex].data[0]!==void 0&&e[this.activeSeriesIndex].data[0]!==null&&e[this.activeSeriesIndex].data[0].constructor===Array)return!0}},{key:"handleFormat2DArray",value:function(e,t){for(var a=this.w.config,r=this.w.globals,l=a.chart.type==="boxPlot"||a.series[t].type==="boxPlot",o=0;o<e[t].data.length;o++)if(e[t].data[o][1]!==void 0&&(Array.isArray(e[t].data[o][1])&&e[t].data[o][1].length===4&&!l?this.twoDSeries.push(X.parseNumber(e[t].data[o][1][3])):e[t].data[o].length>=5?this.twoDSeries.push(X.parseNumber(e[t].data[o][4])):this.twoDSeries.push(X.parseNumber(e[t].data[o][1])),r.dataFormatXNumeric=!0),a.xaxis.type==="datetime"){var c=new Date(e[t].data[o][0]);c=new Date(c).getTime(),this.twoDSeriesX.push(c)}else this.twoDSeriesX.push(e[t].data[o][0]);for(var d=0;d<e[t].data.length;d++)e[t].data[d][2]!==void 0&&(this.threeDSeries.push(e[t].data[d][2]),r.isDataXYZ=!0)}},{key:"handleFormatXY",value:function(e,t){var a=this.w.config,r=this.w.globals,l=new De(this.ctx),o=t;r.collapsedSeriesIndices.indexOf(t)>-1&&(o=this.activeSeriesIndex);for(var c=0;c<e[t].data.length;c++)e[t].data[c].y!==void 0&&(Array.isArray(e[t].data[c].y)?this.twoDSeries.push(X.parseNumber(e[t].data[c].y[e[t].data[c].y.length-1])):this.twoDSeries.push(X.parseNumber(e[t].data[c].y))),e[t].data[c].goals!==void 0&&Array.isArray(e[t].data[c].goals)?(this.seriesGoals[t]===void 0&&(this.seriesGoals[t]=[]),this.seriesGoals[t].push(e[t].data[c].goals)):(this.seriesGoals[t]===void 0&&(this.seriesGoals[t]=[]),this.seriesGoals[t].push(null));for(var d=0;d<e[o].data.length;d++){var f=typeof e[o].data[d].x=="string",m=Array.isArray(e[o].data[d].x),p=!m&&!!l.isValidDate(e[o].data[d].x);if(f||p)if(f||a.xaxis.convertedCatToNumeric){var x=r.isBarHorizontal&&r.isRangeData;a.xaxis.type!=="datetime"||x?(this.fallbackToCategory=!0,this.twoDSeriesX.push(e[o].data[d].x),isNaN(e[o].data[d].x)||this.w.config.xaxis.type==="category"||typeof e[o].data[d].x=="string"||(r.isXNumeric=!0)):this.twoDSeriesX.push(l.parseDate(e[o].data[d].x))}else a.xaxis.type==="datetime"?this.twoDSeriesX.push(l.parseDate(e[o].data[d].x.toString())):(r.dataFormatXNumeric=!0,r.isXNumeric=!0,this.twoDSeriesX.push(parseFloat(e[o].data[d].x)));else m?(this.fallbackToCategory=!0,this.twoDSeriesX.push(e[o].data[d].x)):(r.isXNumeric=!0,r.dataFormatXNumeric=!0,this.twoDSeriesX.push(e[o].data[d].x))}if(e[t].data[0]&&e[t].data[0].z!==void 0){for(var w=0;w<e[t].data.length;w++)this.threeDSeries.push(e[t].data[w].z);r.isDataXYZ=!0}}},{key:"handleRangeData",value:function(e,t){var a=this.w.globals,r={};return this.isFormat2DArray()?r=this.handleRangeDataFormat("array",e,t):this.isFormatXY()&&(r=this.handleRangeDataFormat("xy",e,t)),a.seriesRangeStart.push(r.start===void 0?[]:r.start),a.seriesRangeEnd.push(r.end===void 0?[]:r.end),a.seriesRange.push(r.rangeUniques),a.seriesRange.forEach(function(l,o){l&&l.forEach(function(c,d){c.y.forEach(function(f,m){for(var p=0;p<c.y.length;p++)if(m!==p){var x=f.y1,w=f.y2,S=c.y[p].y1;x<=c.y[p].y2&&S<=w&&(c.overlaps.indexOf(f.rangeName)<0&&c.overlaps.push(f.rangeName),c.overlaps.indexOf(c.y[p].rangeName)<0&&c.overlaps.push(c.y[p].rangeName))}})})}),r}},{key:"handleCandleStickBoxData",value:function(e,t){var a=this.w.globals,r={};return this.isFormat2DArray()?r=this.handleCandleStickBoxDataFormat("array",e,t):this.isFormatXY()&&(r=this.handleCandleStickBoxDataFormat("xy",e,t)),a.seriesCandleO[t]=r.o,a.seriesCandleH[t]=r.h,a.seriesCandleM[t]=r.m,a.seriesCandleL[t]=r.l,a.seriesCandleC[t]=r.c,r}},{key:"handleRangeDataFormat",value:function(e,t,a){var r=[],l=[],o=t[a].data.filter(function(m,p,x){return p===x.findIndex(function(w){return w.x===m.x})}).map(function(m,p){return{x:m.x,overlaps:[],y:[]}});if(e==="array")for(var c=0;c<t[a].data.length;c++)Array.isArray(t[a].data[c])?(r.push(t[a].data[c][1][0]),l.push(t[a].data[c][1][1])):(r.push(t[a].data[c]),l.push(t[a].data[c]));else if(e==="xy")for(var d=function(m){var p=Array.isArray(t[a].data[m].y),x=X.randomId(),w=t[a].data[m].x,S={y1:p?t[a].data[m].y[0]:t[a].data[m].y,y2:p?t[a].data[m].y[1]:t[a].data[m].y,rangeName:x};t[a].data[m].rangeName=x;var A=o.findIndex(function(E){return E.x===w});o[A].y.push(S),r.push(S.y1),l.push(S.y2)},f=0;f<t[a].data.length;f++)d(f);return{start:r,end:l,rangeUniques:o}}},{key:"handleCandleStickBoxDataFormat",value:function(e,t,a){var r=this.w,l=r.config.chart.type==="boxPlot"||r.config.series[a].type==="boxPlot",o=[],c=[],d=[],f=[],m=[];if(e==="array")if(l&&t[a].data[0].length===6||!l&&t[a].data[0].length===5)for(var p=0;p<t[a].data.length;p++)o.push(t[a].data[p][1]),c.push(t[a].data[p][2]),l?(d.push(t[a].data[p][3]),f.push(t[a].data[p][4]),m.push(t[a].data[p][5])):(f.push(t[a].data[p][3]),m.push(t[a].data[p][4]));else for(var x=0;x<t[a].data.length;x++)Array.isArray(t[a].data[x][1])&&(o.push(t[a].data[x][1][0]),c.push(t[a].data[x][1][1]),l?(d.push(t[a].data[x][1][2]),f.push(t[a].data[x][1][3]),m.push(t[a].data[x][1][4])):(f.push(t[a].data[x][1][2]),m.push(t[a].data[x][1][3])));else if(e==="xy")for(var w=0;w<t[a].data.length;w++)Array.isArray(t[a].data[w].y)&&(o.push(t[a].data[w].y[0]),c.push(t[a].data[w].y[1]),l?(d.push(t[a].data[w].y[2]),f.push(t[a].data[w].y[3]),m.push(t[a].data[w].y[4])):(f.push(t[a].data[w].y[2]),m.push(t[a].data[w].y[3])));return{o,h:c,m:d,l:f,c:m}}},{key:"parseDataAxisCharts",value:function(e){var t=this,a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:this.ctx,r=this.w.config,l=this.w.globals,o=new De(a),c=r.labels.length>0?r.labels.slice():r.xaxis.categories.slice();l.isRangeBar=r.chart.type==="rangeBar"&&l.isBarHorizontal,l.hasXaxisGroups=r.xaxis.type==="category"&&r.xaxis.group.groups.length>0,l.hasXaxisGroups&&(l.groups=r.xaxis.group.groups),e.forEach(function(w,S){w.name!==void 0?l.seriesNames.push(w.name):l.seriesNames.push("series-"+parseInt(S+1,10))}),this.coreUtils.setSeriesYAxisMappings();var d=[],f=ie(new Set(r.series.map(function(w){return w.group})));r.series.forEach(function(w,S){var A=f.indexOf(w.group);d[A]||(d[A]=[]),d[A].push(l.seriesNames[S])}),l.seriesGroups=d;for(var m=function(){for(var w=0;w<c.length;w++)if(typeof c[w]=="string"){if(!o.isValidDate(c[w]))throw new Error("You have provided invalid Date format. Please provide a valid JavaScript Date");t.twoDSeriesX.push(o.parseDate(c[w]))}else t.twoDSeriesX.push(c[w])},p=0;p<e.length;p++){if(this.twoDSeries=[],this.twoDSeriesX=[],this.threeDSeries=[],e[p].data===void 0)return void console.error("It is a possibility that you may have not included 'data' property in series.");if(r.chart.type!=="rangeBar"&&r.chart.type!=="rangeArea"&&e[p].type!=="rangeBar"&&e[p].type!=="rangeArea"||(l.isRangeData=!0,r.chart.type!=="rangeBar"&&r.chart.type!=="rangeArea"||this.handleRangeData(e,p)),this.isMultiFormat())this.isFormat2DArray()?this.handleFormat2DArray(e,p):this.isFormatXY()&&this.handleFormatXY(e,p),r.chart.type!=="candlestick"&&e[p].type!=="candlestick"&&r.chart.type!=="boxPlot"&&e[p].type!=="boxPlot"||this.handleCandleStickBoxData(e,p),l.series.push(this.twoDSeries),l.labels.push(this.twoDSeriesX),l.seriesX.push(this.twoDSeriesX),l.seriesGoals=this.seriesGoals,p!==this.activeSeriesIndex||this.fallbackToCategory||(l.isXNumeric=!0);else{r.xaxis.type==="datetime"?(l.isXNumeric=!0,m(),l.seriesX.push(this.twoDSeriesX)):r.xaxis.type==="numeric"&&(l.isXNumeric=!0,c.length>0&&(this.twoDSeriesX=c,l.seriesX.push(this.twoDSeriesX))),l.labels.push(this.twoDSeriesX);var x=e[p].data.map(function(w){return X.parseNumber(w)});l.series.push(x)}l.seriesZ.push(this.threeDSeries),e[p].color!==void 0?l.seriesColors.push(e[p].color):l.seriesColors.push(void 0)}return this.w}},{key:"parseDataNonAxisCharts",value:function(e){var t=this.w.globals,a=this.w.config;t.series=e.slice(),t.seriesNames=a.labels.slice();for(var r=0;r<t.series.length;r++)t.seriesNames[r]===void 0&&t.seriesNames.push("series-"+(r+1));return this.w}},{key:"handleExternalLabelsData",value:function(e){var t=this.w.config,a=this.w.globals;t.xaxis.categories.length>0?a.labels=t.xaxis.categories:t.labels.length>0?a.labels=t.labels.slice():this.fallbackToCategory?(a.labels=a.labels[0],a.seriesRange.length&&(a.seriesRange.map(function(r){r.forEach(function(l){a.labels.indexOf(l.x)<0&&l.x&&a.labels.push(l.x)})}),a.labels=Array.from(new Set(a.labels.map(JSON.stringify)),JSON.parse)),t.xaxis.convertedCatToNumeric&&(new ti(t).convertCatToNumericXaxis(t,this.ctx,a.seriesX[0]),this._generateExternalLabels(e))):this._generateExternalLabels(e)}},{key:"_generateExternalLabels",value:function(e){var t=this.w.globals,a=this.w.config,r=[];if(t.axisCharts){if(t.series.length>0)if(this.isFormatXY())for(var l=a.series.map(function(p,x){return p.data.filter(function(w,S,A){return A.findIndex(function(E){return E.x===w.x})===S})}),o=l.reduce(function(p,x,w,S){return S[p].length>x.length?p:w},0),c=0;c<l[o].length;c++)r.push(c+1);else for(var d=0;d<t.series[t.maxValsInArrayIndex].length;d++)r.push(d+1);t.seriesX=[];for(var f=0;f<e.length;f++)t.seriesX.push(r);this.w.globals.isBarHorizontal||(t.isXNumeric=!0)}if(r.length===0){r=t.axisCharts?[]:t.series.map(function(p,x){return x+1});for(var m=0;m<e.length;m++)t.seriesX.push(r)}t.labels=r,a.xaxis.convertedCatToNumeric&&(t.categoryLabels=r.map(function(p){return a.xaxis.labels.formatter(p)})),t.noLabelsProvided=!0}},{key:"parseData",value:function(e){var t=this.w,a=t.config,r=t.globals;if(this.excludeCollapsedSeriesInYAxis(),this.fallbackToCategory=!1,this.ctx.core.resetGlobals(),this.ctx.core.isMultipleY(),r.axisCharts?(this.parseDataAxisCharts(e),this.coreUtils.getLargestSeries()):this.parseDataNonAxisCharts(e),a.chart.stacked){var l=new vt(this.ctx);r.series=l.setNullSeriesToZeroValues(r.series)}this.coreUtils.getSeriesTotals(),r.axisCharts&&(r.stackedSeriesTotals=this.coreUtils.getStackedSeriesTotals(),r.stackedSeriesTotalsByGroups=this.coreUtils.getStackedSeriesTotalsByGroups()),this.coreUtils.getPercentSeries(),r.dataFormatXNumeric||r.isXNumeric&&(a.xaxis.type!=="numeric"||a.labels.length!==0||a.xaxis.categories.length!==0)||this.handleExternalLabelsData(e);for(var o=this.coreUtils.getCategoryLabels(r.labels),c=0;c<o.length;c++)if(Array.isArray(o[c])){r.isMultiLineX=!0;break}}},{key:"excludeCollapsedSeriesInYAxis",value:function(){var e=this.w,t=[];e.globals.seriesYAxisMap.forEach(function(a,r){var l=0;a.forEach(function(o){e.globals.collapsedSeriesIndices.indexOf(o)!==-1&&l++}),l>0&&l==a.length&&t.push(r)}),e.globals.ignoreYAxisIndexes=t.map(function(a){return a})}}]),_}(),ii=function(){function _(e){g(this,_),this.ctx=e,this.w=e.w}return v(_,[{key:"scaleSvgNode",value:function(e,t){var a=parseFloat(e.getAttributeNS(null,"width")),r=parseFloat(e.getAttributeNS(null,"height"));e.setAttributeNS(null,"width",a*t),e.setAttributeNS(null,"height",r*t),e.setAttributeNS(null,"viewBox","0 0 "+a+" "+r)}},{key:"getSvgString",value:function(){var e=this;return new Promise(function(t){var a=e.w,r=a.config.chart.toolbar.export.width,l=a.config.chart.toolbar.export.scale||r/a.globals.svgWidth;l||(l=1);var o=e.w.globals.dom.Paper.svg(),c=e.w.globals.dom.Paper.node.cloneNode(!0);l!==1&&e.scaleSvgNode(c,l),e.convertImagesToBase64(c).then(function(){o=new XMLSerializer().serializeToString(c),t(o.replace(/&nbsp;/g,"&#160;"))})})}},{key:"convertImagesToBase64",value:function(e){var t=this,a=e.getElementsByTagName("image"),r=Array.from(a).map(function(l){var o=l.getAttributeNS("http://www.w3.org/1999/xlink","href");return o&&!o.startsWith("data:")?t.getBase64FromUrl(o).then(function(c){l.setAttributeNS("http://www.w3.org/1999/xlink","href",c)}).catch(function(c){console.error("Error converting image to base64:",c)}):Promise.resolve()});return Promise.all(r)}},{key:"getBase64FromUrl",value:function(e){return new Promise(function(t,a){var r=new Image;r.crossOrigin="Anonymous",r.onload=function(){var l=document.createElement("canvas");l.width=r.width,l.height=r.height,l.getContext("2d").drawImage(r,0,0),t(l.toDataURL())},r.onerror=a,r.src=e})}},{key:"cleanup",value:function(){var e=this.w,t=e.globals.dom.baseEl.getElementsByClassName("apexcharts-xcrosshairs"),a=e.globals.dom.baseEl.getElementsByClassName("apexcharts-ycrosshairs"),r=e.globals.dom.baseEl.querySelectorAll(".apexcharts-zoom-rect, .apexcharts-selection-rect");Array.prototype.forEach.call(r,function(l){l.setAttribute("width",0)}),t&&t[0]&&(t[0].setAttribute("x",-500),t[0].setAttribute("x1",-500),t[0].setAttribute("x2",-500)),a&&a[0]&&(a[0].setAttribute("y",-100),a[0].setAttribute("y1",-100),a[0].setAttribute("y2",-100))}},{key:"svgUrl",value:function(){var e=this;return new Promise(function(t){e.cleanup(),e.getSvgString().then(function(a){var r=new Blob([a],{type:"image/svg+xml;charset=utf-8"});t(URL.createObjectURL(r))})})}},{key:"dataURI",value:function(e){var t=this;return new Promise(function(a){var r=t.w,l=e?e.scale||e.width/r.globals.svgWidth:1;t.cleanup();var o=document.createElement("canvas");o.width=r.globals.svgWidth*l,o.height=parseInt(r.globals.dom.elWrap.style.height,10)*l;var c=r.config.chart.background!=="transparent"&&r.config.chart.background?r.config.chart.background:"#fff",d=o.getContext("2d");d.fillStyle=c,d.fillRect(0,0,o.width*l,o.height*l),t.getSvgString().then(function(f){var m="data:image/svg+xml,"+encodeURIComponent(f),p=new Image;p.crossOrigin="anonymous",p.onload=function(){if(d.drawImage(p,0,0),o.msToBlob){var x=o.msToBlob();a({blob:x})}else{var w=o.toDataURL("image/png");a({imgURI:w})}},p.src=m})})}},{key:"exportToSVG",value:function(){var e=this;this.svgUrl().then(function(t){e.triggerDownload(t,e.w.config.chart.toolbar.export.svg.filename,".svg")})}},{key:"exportToPng",value:function(){var e=this,t=this.w.config.chart.toolbar.export.scale,a=this.w.config.chart.toolbar.export.width,r=t?{scale:t}:a?{width:a}:void 0;this.dataURI(r).then(function(l){var o=l.imgURI,c=l.blob;c?navigator.msSaveOrOpenBlob(c,e.w.globals.chartID+".png"):e.triggerDownload(o,e.w.config.chart.toolbar.export.png.filename,".png")})}},{key:"exportToCSV",value:function(e){var t=this,a=e.series,r=e.fileName,l=e.columnDelimiter,o=l===void 0?",":l,c=e.lineDelimiter,d=c===void 0?`
`:c,f=this.w;a||(a=f.config.series);var m,p,x=[],w=[],S="",A=f.globals.series.map(function(L,I){return f.globals.collapsedSeriesIndices.indexOf(I)===-1?L:[]}),E=function(L){return typeof f.config.chart.toolbar.export.csv.categoryFormatter=="function"?f.config.chart.toolbar.export.csv.categoryFormatter(L):f.config.xaxis.type==="datetime"&&String(L).length>=10?new Date(L).toDateString():X.isNumber(L)?L:L.split(o).join("")},M=function(L){return typeof f.config.chart.toolbar.export.csv.valueFormatter=="function"?f.config.chart.toolbar.export.csv.valueFormatter(L):L},P=Math.max.apply(Math,ie(a.map(function(L){return L.data?L.data.length:0}))),u=new Bi(this.ctx),y=new Ke(this.ctx),C=function(L){var I="";if(f.globals.axisCharts){if(f.config.xaxis.type==="category"||f.config.xaxis.convertedCatToNumeric)if(f.globals.isBarHorizontal){var H=f.globals.yLabelFormatters[0],B=new vt(t.ctx).getActiveConfigSeriesIndex();I=H(f.globals.labels[L],{seriesIndex:B,dataPointIndex:L,w:f})}else I=y.getLabel(f.globals.labels,f.globals.timescaleLabels,0,L).text;f.config.xaxis.type==="datetime"&&(f.config.xaxis.categories.length?I=f.config.xaxis.categories[L]:f.config.labels.length&&(I=f.config.labels[L]))}else I=f.config.labels[L];return I===null?"nullvalue":(Array.isArray(I)&&(I=I.join(" ")),X.isNumber(I)?I:I.split(o).join(""))},D=function(L,I){if(x.length&&I===0&&w.push(x.join(o)),L.data){L.data=L.data.length&&L.data||ie(Array(P)).map(function(){return""});for(var H=0;H<L.data.length;H++){x=[];var B=C(H);if(B!=="nullvalue"){if(B||(u.isFormatXY()?B=a[I].data[H].x:u.isFormat2DArray()&&(B=a[I].data[H]?a[I].data[H][0]:"")),I===0){x.push(E(B));for(var U=0;U<f.globals.series.length;U++){var ee,K=u.isFormatXY()?(ee=a[U].data[H])===null||ee===void 0?void 0:ee.y:A[U][H];x.push(M(K))}}(f.config.chart.type==="candlestick"||L.type&&L.type==="candlestick")&&(x.pop(),x.push(f.globals.seriesCandleO[I][H]),x.push(f.globals.seriesCandleH[I][H]),x.push(f.globals.seriesCandleL[I][H]),x.push(f.globals.seriesCandleC[I][H])),(f.config.chart.type==="boxPlot"||L.type&&L.type==="boxPlot")&&(x.pop(),x.push(f.globals.seriesCandleO[I][H]),x.push(f.globals.seriesCandleH[I][H]),x.push(f.globals.seriesCandleM[I][H]),x.push(f.globals.seriesCandleL[I][H]),x.push(f.globals.seriesCandleC[I][H])),f.config.chart.type==="rangeBar"&&(x.pop(),x.push(f.globals.seriesRangeStart[I][H]),x.push(f.globals.seriesRangeEnd[I][H])),x.length&&w.push(x.join(o))}}}};x.push(f.config.chart.toolbar.export.csv.headerCategory),f.config.chart.type==="boxPlot"?(x.push("minimum"),x.push("q1"),x.push("median"),x.push("q3"),x.push("maximum")):f.config.chart.type==="candlestick"?(x.push("open"),x.push("high"),x.push("low"),x.push("close")):f.config.chart.type==="rangeBar"?(x.push("minimum"),x.push("maximum")):a.map(function(L,I){var H=(L.name?L.name:"series-".concat(I))+"";f.globals.axisCharts&&x.push(H.split(o).join("")?H.split(o).join(""):"series-".concat(I))}),f.globals.axisCharts||(x.push(f.config.chart.toolbar.export.csv.headerValue),w.push(x.join(o))),f.globals.allSeriesHasEqualX||!f.globals.axisCharts||f.config.xaxis.categories.length||f.config.labels.length?a.map(function(L,I){f.globals.axisCharts?D(L,I):((x=[]).push(E(f.globals.labels[I])),x.push(M(A[I])),w.push(x.join(o)))}):(m=new Set,p={},a.forEach(function(L,I){L==null||L.data.forEach(function(H){var B,U;if(u.isFormatXY())B=H.x,U=H.y;else{if(!u.isFormat2DArray())return;B=H[0],U=H[1]}p[B]||(p[B]=Array(a.length).fill("")),p[B][I]=M(U),m.add(B)})}),x.length&&w.push(x.join(o)),Array.from(m).sort().forEach(function(L){w.push([E(L),p[L].join(o)])})),S+=w.join(d),this.triggerDownload("data:text/csv; charset=utf-8,"+encodeURIComponent("\uFEFF"+S),r||f.config.chart.toolbar.export.csv.filename,".csv")}},{key:"triggerDownload",value:function(e,t,a){var r=document.createElement("a");r.href=e,r.download=(t||this.w.globals.chartID)+a,document.body.appendChild(r),r.click(),document.body.removeChild(r)}}]),_}(),yi=function(){function _(e,t){g(this,_),this.ctx=e,this.elgrid=t,this.w=e.w;var a=this.w;this.axesUtils=new Ke(e),this.xaxisLabels=a.globals.labels.slice(),a.globals.timescaleLabels.length>0&&!a.globals.isBarHorizontal&&(this.xaxisLabels=a.globals.timescaleLabels.slice()),a.config.xaxis.overwriteCategories&&(this.xaxisLabels=a.config.xaxis.overwriteCategories),this.drawnLabels=[],this.drawnLabelsRects=[],a.config.xaxis.position==="top"?this.offY=0:this.offY=a.globals.gridHeight,this.offY=this.offY+a.config.xaxis.axisBorder.offsetY,this.isCategoryBarHorizontal=a.config.chart.type==="bar"&&a.config.plotOptions.bar.horizontal,this.xaxisFontSize=a.config.xaxis.labels.style.fontSize,this.xaxisFontFamily=a.config.xaxis.labels.style.fontFamily,this.xaxisForeColors=a.config.xaxis.labels.style.colors,this.xaxisBorderWidth=a.config.xaxis.axisBorder.width,this.isCategoryBarHorizontal&&(this.xaxisBorderWidth=a.config.yaxis[0].axisBorder.width.toString()),this.xaxisBorderWidth.indexOf("%")>-1?this.xaxisBorderWidth=a.globals.gridWidth*parseInt(this.xaxisBorderWidth,10)/100:this.xaxisBorderWidth=parseInt(this.xaxisBorderWidth,10),this.xaxisBorderHeight=a.config.xaxis.axisBorder.height,this.yaxis=a.config.yaxis[0]}return v(_,[{key:"drawXaxis",value:function(){var e=this.w,t=new V(this.ctx),a=t.group({class:"apexcharts-xaxis",transform:"translate(".concat(e.config.xaxis.offsetX,", ").concat(e.config.xaxis.offsetY,")")}),r=t.group({class:"apexcharts-xaxis-texts-g",transform:"translate(".concat(e.globals.translateXAxisX,", ").concat(e.globals.translateXAxisY,")")});a.add(r);for(var l=[],o=0;o<this.xaxisLabels.length;o++)l.push(this.xaxisLabels[o]);if(this.drawXAxisLabelAndGroup(!0,t,r,l,e.globals.isXNumeric,function(S,A){return A}),e.globals.hasXaxisGroups){var c=e.globals.groups;l=[];for(var d=0;d<c.length;d++)l.push(c[d].title);var f={};e.config.xaxis.group.style&&(f.xaxisFontSize=e.config.xaxis.group.style.fontSize,f.xaxisFontFamily=e.config.xaxis.group.style.fontFamily,f.xaxisForeColors=e.config.xaxis.group.style.colors,f.fontWeight=e.config.xaxis.group.style.fontWeight,f.cssClass=e.config.xaxis.group.style.cssClass),this.drawXAxisLabelAndGroup(!1,t,r,l,!1,function(S,A){return c[S].cols*A},f)}if(e.config.xaxis.title.text!==void 0){var m=t.group({class:"apexcharts-xaxis-title"}),p=t.drawText({x:e.globals.gridWidth/2+e.config.xaxis.title.offsetX,y:this.offY+parseFloat(this.xaxisFontSize)+(e.config.xaxis.position==="bottom"?e.globals.xAxisLabelsHeight:-e.globals.xAxisLabelsHeight-10)+e.config.xaxis.title.offsetY,text:e.config.xaxis.title.text,textAnchor:"middle",fontSize:e.config.xaxis.title.style.fontSize,fontFamily:e.config.xaxis.title.style.fontFamily,fontWeight:e.config.xaxis.title.style.fontWeight,foreColor:e.config.xaxis.title.style.color,cssClass:"apexcharts-xaxis-title-text "+e.config.xaxis.title.style.cssClass});m.add(p),a.add(m)}if(e.config.xaxis.axisBorder.show){var x=e.globals.barPadForNumericAxis,w=t.drawLine(e.globals.padHorizontal+e.config.xaxis.axisBorder.offsetX-x,this.offY,this.xaxisBorderWidth+x,this.offY,e.config.xaxis.axisBorder.color,0,this.xaxisBorderHeight);this.elgrid&&this.elgrid.elGridBorders&&e.config.grid.show?this.elgrid.elGridBorders.add(w):a.add(w)}return a}},{key:"drawXAxisLabelAndGroup",value:function(e,t,a,r,l,o){var c,d=this,f=arguments.length>6&&arguments[6]!==void 0?arguments[6]:{},m=[],p=[],x=this.w,w=f.xaxisFontSize||this.xaxisFontSize,S=f.xaxisFontFamily||this.xaxisFontFamily,A=f.xaxisForeColors||this.xaxisForeColors,E=f.fontWeight||x.config.xaxis.labels.style.fontWeight,M=f.cssClass||x.config.xaxis.labels.style.cssClass,P=x.globals.padHorizontal,u=r.length,y=x.config.xaxis.type==="category"?x.globals.dataPoints:u;if(y===0&&u>y&&(y=u),l){var C=y>1?y-1:y;c=x.globals.gridWidth/Math.min(C,u-1),P=P+o(0,c)/2+x.config.xaxis.labels.offsetX}else c=x.globals.gridWidth/y,P=P+o(0,c)+x.config.xaxis.labels.offsetX;for(var D=function(I){var H=P-o(I,c)/2+x.config.xaxis.labels.offsetX;I===0&&u===1&&c/2===P&&y===1&&(H=x.globals.gridWidth/2);var B=d.axesUtils.getLabel(r,x.globals.timescaleLabels,H,I,m,w,e),U=28;if(x.globals.rotateXLabels&&e&&(U=22),x.config.xaxis.title.text&&x.config.xaxis.position==="top"&&(U+=parseFloat(x.config.xaxis.title.style.fontSize)+2),e||(U=U+parseFloat(w)+(x.globals.xAxisLabelsHeight-x.globals.xAxisGroupLabelsHeight)+(x.globals.rotateXLabels?10:0)),B=x.config.xaxis.tickAmount!==void 0&&x.config.xaxis.tickAmount!=="dataPoints"&&x.config.xaxis.type!=="datetime"?d.axesUtils.checkLabelBasedOnTickamount(I,B,u):d.axesUtils.checkForOverflowingLabels(I,B,u,m,p),x.config.xaxis.labels.show){var ee=t.drawText({x:B.x,y:d.offY+x.config.xaxis.labels.offsetY+U-(x.config.xaxis.position==="top"?x.globals.xAxisHeight+x.config.xaxis.axisTicks.height-2:0),text:B.text,textAnchor:"middle",fontWeight:B.isBold?600:E,fontSize:w,fontFamily:S,foreColor:Array.isArray(A)?e&&x.config.xaxis.convertedCatToNumeric?A[x.globals.minX+I-1]:A[I]:A,isPlainText:!1,cssClass:(e?"apexcharts-xaxis-label ":"apexcharts-xaxis-group-label ")+M});if(a.add(ee),ee.on("click",function(te){if(typeof x.config.chart.events.xAxisLabelClick=="function"){var le=Object.assign({},x,{labelIndex:I});x.config.chart.events.xAxisLabelClick(te,d.ctx,le)}}),e){var K=document.createElementNS(x.globals.SVGNS,"title");K.textContent=Array.isArray(B.text)?B.text.join(" "):B.text,ee.node.appendChild(K),B.text!==""&&(m.push(B.text),p.push(B))}}I<u-1&&(P+=o(I+1,c))},L=0;L<=u-1;L++)D(L)}},{key:"drawXaxisInversed",value:function(e){var t,a,r=this,l=this.w,o=new V(this.ctx),c=l.config.yaxis[0].opposite?l.globals.translateYAxisX[e]:0,d=o.group({class:"apexcharts-yaxis apexcharts-xaxis-inversed",rel:e}),f=o.group({class:"apexcharts-yaxis-texts-g apexcharts-xaxis-inversed-texts-g",transform:"translate("+c+", 0)"});d.add(f);var m=[];if(l.config.yaxis[e].show)for(var p=0;p<this.xaxisLabels.length;p++)m.push(this.xaxisLabels[p]);t=l.globals.gridHeight/m.length,a=-t/2.2;var x=l.globals.yLabelFormatters[0],w=l.config.yaxis[0].labels;if(w.show)for(var S=function(C){var D=m[C]===void 0?"":m[C];D=x(D,{seriesIndex:e,dataPointIndex:C,w:l});var L=r.axesUtils.getYAxisForeColor(w.style.colors,e),I=0;Array.isArray(D)&&(I=D.length/2*parseInt(w.style.fontSize,10));var H=w.offsetX-15,B="end";r.yaxis.opposite&&(B="start"),l.config.yaxis[0].labels.align==="left"?(H=w.offsetX,B="start"):l.config.yaxis[0].labels.align==="center"?(H=w.offsetX,B="middle"):l.config.yaxis[0].labels.align==="right"&&(B="end");var U=o.drawText({x:H,y:a+t+w.offsetY-I,text:D,textAnchor:B,foreColor:Array.isArray(L)?L[C]:L,fontSize:w.style.fontSize,fontFamily:w.style.fontFamily,fontWeight:w.style.fontWeight,isPlainText:!1,cssClass:"apexcharts-yaxis-label "+w.style.cssClass,maxWidth:w.maxWidth});f.add(U),U.on("click",function(te){if(typeof l.config.chart.events.xAxisLabelClick=="function"){var le=Object.assign({},l,{labelIndex:C});l.config.chart.events.xAxisLabelClick(te,r.ctx,le)}});var ee=document.createElementNS(l.globals.SVGNS,"title");if(ee.textContent=Array.isArray(D)?D.join(" "):D,U.node.appendChild(ee),l.config.yaxis[e].labels.rotate!==0){var K=o.rotateAroundCenter(U.node);U.node.setAttribute("transform","rotate(".concat(l.config.yaxis[e].labels.rotate," 0 ").concat(K.y,")"))}a+=t},A=0;A<=m.length-1;A++)S(A);if(l.config.yaxis[0].title.text!==void 0){var E=o.group({class:"apexcharts-yaxis-title apexcharts-xaxis-title-inversed",transform:"translate("+c+", 0)"}),M=o.drawText({x:l.config.yaxis[0].title.offsetX,y:l.globals.gridHeight/2+l.config.yaxis[0].title.offsetY,text:l.config.yaxis[0].title.text,textAnchor:"middle",foreColor:l.config.yaxis[0].title.style.color,fontSize:l.config.yaxis[0].title.style.fontSize,fontWeight:l.config.yaxis[0].title.style.fontWeight,fontFamily:l.config.yaxis[0].title.style.fontFamily,cssClass:"apexcharts-yaxis-title-text "+l.config.yaxis[0].title.style.cssClass});E.add(M),d.add(E)}var P=0;this.isCategoryBarHorizontal&&l.config.yaxis[0].opposite&&(P=l.globals.gridWidth);var u=l.config.xaxis.axisBorder;if(u.show){var y=o.drawLine(l.globals.padHorizontal+u.offsetX+P,1+u.offsetY,l.globals.padHorizontal+u.offsetX+P,l.globals.gridHeight+u.offsetY,u.color,0);this.elgrid&&this.elgrid.elGridBorders&&l.config.grid.show?this.elgrid.elGridBorders.add(y):d.add(y)}return l.config.yaxis[0].axisTicks.show&&this.axesUtils.drawYAxisTicks(P,m.length,l.config.yaxis[0].axisBorder,l.config.yaxis[0].axisTicks,0,t,d),d}},{key:"drawXaxisTicks",value:function(e,t,a){var r=this.w,l=e;if(!(e<0||e-2>r.globals.gridWidth)){var o=this.offY+r.config.xaxis.axisTicks.offsetY;if(t=t+o+r.config.xaxis.axisTicks.height,r.config.xaxis.position==="top"&&(t=o-r.config.xaxis.axisTicks.height),r.config.xaxis.axisTicks.show){var c=new V(this.ctx).drawLine(e+r.config.xaxis.axisTicks.offsetX,o+r.config.xaxis.offsetY,l+r.config.xaxis.axisTicks.offsetX,t+r.config.xaxis.offsetY,r.config.xaxis.axisTicks.color);a.add(c),c.node.classList.add("apexcharts-xaxis-tick")}}}},{key:"getXAxisTicksPositions",value:function(){var e=this.w,t=[],a=this.xaxisLabels.length,r=e.globals.padHorizontal;if(e.globals.timescaleLabels.length>0)for(var l=0;l<a;l++)r=this.xaxisLabels[l].position,t.push(r);else for(var o=a,c=0;c<o;c++){var d=o;e.globals.isXNumeric&&e.config.chart.type!=="bar"&&(d-=1),r+=e.globals.gridWidth/d,t.push(r)}return t}},{key:"xAxisLabelCorrections",value:function(){var e=this.w,t=new V(this.ctx),a=e.globals.dom.baseEl.querySelector(".apexcharts-xaxis-texts-g"),r=e.globals.dom.baseEl.querySelectorAll(".apexcharts-xaxis-texts-g text:not(.apexcharts-xaxis-group-label)"),l=e.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxis-inversed text"),o=e.globals.dom.baseEl.querySelectorAll(".apexcharts-xaxis-inversed-texts-g text tspan");if(e.globals.rotateXLabels||e.config.xaxis.labels.rotateAlways)for(var c=0;c<r.length;c++){var d=t.rotateAroundCenter(r[c]);d.y=d.y-1,d.x=d.x+1,r[c].setAttribute("transform","rotate(".concat(e.config.xaxis.labels.rotate," ").concat(d.x," ").concat(d.y,")")),r[c].setAttribute("text-anchor","end"),a.setAttribute("transform","translate(0, ".concat(-10,")"));var f=r[c].childNodes;e.config.xaxis.labels.trim&&Array.prototype.forEach.call(f,function(w){t.placeTextWithEllipsis(w,w.textContent,e.globals.xAxisLabelsHeight-(e.config.legend.position==="bottom"?20:10))})}else(function(){for(var w=e.globals.gridWidth/(e.globals.labels.length+1),S=0;S<r.length;S++){var A=r[S].childNodes;e.config.xaxis.labels.trim&&e.config.xaxis.type!=="datetime"&&Array.prototype.forEach.call(A,function(E){t.placeTextWithEllipsis(E,E.textContent,w)})}})();if(l.length>0){var m=l[l.length-1].getBBox(),p=l[0].getBBox();m.x<-20&&l[l.length-1].parentNode.removeChild(l[l.length-1]),p.x+p.width>e.globals.gridWidth&&!e.globals.isBarHorizontal&&l[0].parentNode.removeChild(l[0]);for(var x=0;x<o.length;x++)t.placeTextWithEllipsis(o[x],o[x].textContent,e.config.yaxis[0].labels.maxWidth-(e.config.yaxis[0].title.text?2*parseFloat(e.config.yaxis[0].title.style.fontSize):0)-15)}}}]),_}(),Qa=function(){function _(e){g(this,_),this.ctx=e,this.w=e.w;var t=this.w;this.xaxisLabels=t.globals.labels.slice(),this.axesUtils=new Ke(e),this.isRangeBar=t.globals.seriesRange.length&&t.globals.isBarHorizontal,t.globals.timescaleLabels.length>0&&(this.xaxisLabels=t.globals.timescaleLabels.slice())}return v(_,[{key:"drawGridArea",value:function(){var e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:null,t=this.w,a=new V(this.ctx);e||(e=a.group({class:"apexcharts-grid"}));var r=a.drawLine(t.globals.padHorizontal,1,t.globals.padHorizontal,t.globals.gridHeight,"transparent"),l=a.drawLine(t.globals.padHorizontal,t.globals.gridHeight,t.globals.gridWidth,t.globals.gridHeight,"transparent");return e.add(l),e.add(r),e}},{key:"drawGrid",value:function(){if(this.w.globals.axisCharts){var e=this.renderGrid();return this.drawGridArea(e.el),e}return null}},{key:"createGridMask",value:function(){var e=this.w,t=e.globals,a=new V(this.ctx),r=Array.isArray(e.config.stroke.width)?Math.max.apply(Math,ie(e.config.stroke.width)):e.config.stroke.width,l=function(m){var p=document.createElementNS(t.SVGNS,"clipPath");return p.setAttribute("id",m),p};t.dom.elGridRectMask=l("gridRectMask".concat(t.cuid)),t.dom.elGridRectBarMask=l("gridRectBarMask".concat(t.cuid)),t.dom.elGridRectMarkerMask=l("gridRectMarkerMask".concat(t.cuid)),t.dom.elForecastMask=l("forecastMask".concat(t.cuid)),t.dom.elNonForecastMask=l("nonForecastMask".concat(t.cuid));var o=0,c=0;(["bar","rangeBar","candlestick","boxPlot"].includes(e.config.chart.type)||e.globals.comboBarCount>0)&&e.globals.isXNumeric&&!e.globals.isBarHorizontal&&(o=Math.max(e.config.grid.padding.left,t.barPadForNumericAxis),c=Math.max(e.config.grid.padding.right,t.barPadForNumericAxis)),t.dom.elGridRect=a.drawRect(0,0,t.gridWidth,t.gridHeight,0,"#fff"),t.dom.elGridRectBar=a.drawRect(-r/2-o-2,-r/2-2,t.gridWidth+r+c+o+4,t.gridHeight+r+4,0,"#fff");var d=e.globals.markers.largestSize;t.dom.elGridRectMarker=a.drawRect(-d,-d,t.gridWidth+2*d,t.gridHeight+2*d,0,"#fff"),t.dom.elGridRectMask.appendChild(t.dom.elGridRect.node),t.dom.elGridRectBarMask.appendChild(t.dom.elGridRectBar.node),t.dom.elGridRectMarkerMask.appendChild(t.dom.elGridRectMarker.node);var f=t.dom.baseEl.querySelector("defs");f.appendChild(t.dom.elGridRectMask),f.appendChild(t.dom.elGridRectBarMask),f.appendChild(t.dom.elGridRectMarkerMask),f.appendChild(t.dom.elForecastMask),f.appendChild(t.dom.elNonForecastMask)}},{key:"_drawGridLines",value:function(e){var t=e.i,a=e.x1,r=e.y1,l=e.x2,o=e.y2,c=e.xCount,d=e.parent,f=this.w;if(!(t===0&&f.globals.skipFirstTimelinelabel||t===c-1&&f.globals.skipLastTimelinelabel&&!f.config.xaxis.labels.formatter||f.config.chart.type==="radar")){f.config.grid.xaxis.lines.show&&this._drawGridLine({i:t,x1:a,y1:r,x2:l,y2:o,xCount:c,parent:d});var m=0;if(f.globals.hasXaxisGroups&&f.config.xaxis.tickPlacement==="between"){var p=f.globals.groups;if(p){for(var x=0,w=0;x<t&&w<p.length;w++)x+=p[w].cols;x===t&&(m=.6*f.globals.xAxisLabelsHeight)}}new yi(this.ctx).drawXaxisTicks(a,m,f.globals.dom.elGraphical)}}},{key:"_drawGridLine",value:function(e){var t=e.i,a=e.x1,r=e.y1,l=e.x2,o=e.y2,c=e.xCount,d=e.parent,f=this.w,m=d.node.classList.contains("apexcharts-gridlines-horizontal"),p=f.globals.barPadForNumericAxis,x=r===0&&o===0||a===0&&l===0||r===f.globals.gridHeight&&o===f.globals.gridHeight||f.globals.isBarHorizontal&&(t===0||t===c-1),w=new V(this).drawLine(a-(m?p:0),r,l+(m?p:0),o,f.config.grid.borderColor,f.config.grid.strokeDashArray);w.node.classList.add("apexcharts-gridline"),x&&f.config.grid.show?this.elGridBorders.add(w):d.add(w)}},{key:"_drawGridBandRect",value:function(e){var t=e.c,a=e.x1,r=e.y1,l=e.x2,o=e.y2,c=e.type,d=this.w,f=new V(this.ctx),m=d.globals.barPadForNumericAxis,p=d.config.grid[c].colors[t],x=f.drawRect(a-(c==="row"?m:0),r,l+(c==="row"?2*m:0),o,0,p,d.config.grid[c].opacity);this.elg.add(x),x.attr("clip-path","url(#gridRectMask".concat(d.globals.cuid,")")),x.node.classList.add("apexcharts-grid-".concat(c))}},{key:"_drawXYLines",value:function(e){var t=this,a=e.xCount,r=e.tickAmount,l=this.w;if(l.config.grid.xaxis.lines.show||l.config.xaxis.axisTicks.show){var o,c=l.globals.padHorizontal,d=l.globals.gridHeight;l.globals.timescaleLabels.length?function(S){for(var A=S.xC,E=S.x1,M=S.y1,P=S.x2,u=S.y2,y=0;y<A;y++)E=t.xaxisLabels[y].position,P=t.xaxisLabels[y].position,t._drawGridLines({i:y,x1:E,y1:M,x2:P,y2:u,xCount:a,parent:t.elgridLinesV})}({xC:a,x1:c,y1:0,x2:o,y2:d}):(l.globals.isXNumeric&&(a=l.globals.xAxisScale.result.length),function(S){for(var A=S.xC,E=S.x1,M=S.y1,P=S.x2,u=S.y2,y=0;y<A+(l.globals.isXNumeric?0:1);y++)y===0&&A===1&&l.globals.dataPoints===1&&(P=E=l.globals.gridWidth/2),t._drawGridLines({i:y,x1:E,y1:M,x2:P,y2:u,xCount:a,parent:t.elgridLinesV}),P=E+=l.globals.gridWidth/(l.globals.isXNumeric?A-1:A)}({xC:a,x1:c,y1:0,x2:o,y2:d}))}if(l.config.grid.yaxis.lines.show){var f=0,m=0,p=l.globals.gridWidth,x=r+1;this.isRangeBar&&(x=l.globals.labels.length);for(var w=0;w<x+(this.isRangeBar?1:0);w++)this._drawGridLine({i:w,xCount:x+(this.isRangeBar?1:0),x1:0,y1:f,x2:p,y2:m,parent:this.elgridLinesH}),m=f+=l.globals.gridHeight/(this.isRangeBar?x:r)}}},{key:"_drawInvertedXYLines",value:function(e){var t=e.xCount,a=this.w;if(a.config.grid.xaxis.lines.show||a.config.xaxis.axisTicks.show)for(var r,l=a.globals.padHorizontal,o=a.globals.gridHeight,c=0;c<t+1;c++)a.config.grid.xaxis.lines.show&&this._drawGridLine({i:c,xCount:t+1,x1:l,y1:0,x2:r,y2:o,parent:this.elgridLinesV}),new yi(this.ctx).drawXaxisTicks(l,0,a.globals.dom.elGraphical),r=l+=a.globals.gridWidth/t;if(a.config.grid.yaxis.lines.show)for(var d=0,f=0,m=a.globals.gridWidth,p=0;p<a.globals.dataPoints+1;p++)this._drawGridLine({i:p,xCount:a.globals.dataPoints+1,x1:0,y1:d,x2:m,y2:f,parent:this.elgridLinesH}),f=d+=a.globals.gridHeight/a.globals.dataPoints}},{key:"renderGrid",value:function(){var e=this.w,t=e.globals,a=new V(this.ctx);this.elg=a.group({class:"apexcharts-grid"}),this.elgridLinesH=a.group({class:"apexcharts-gridlines-horizontal"}),this.elgridLinesV=a.group({class:"apexcharts-gridlines-vertical"}),this.elGridBorders=a.group({class:"apexcharts-grid-borders"}),this.elg.add(this.elgridLinesH),this.elg.add(this.elgridLinesV),e.config.grid.show||(this.elgridLinesV.hide(),this.elgridLinesH.hide(),this.elGridBorders.hide());for(var r=0;r<t.seriesYAxisMap.length&&t.ignoreYAxisIndexes.includes(r);)r++;r===t.seriesYAxisMap.length&&(r=0);var l,o=t.yAxisScale[r].result.length-1;if(!t.isBarHorizontal||this.isRangeBar){var c,d,f;l=this.xaxisLabels.length,this.isRangeBar&&(o=t.labels.length,e.config.xaxis.tickAmount&&e.config.xaxis.labels.formatter&&(l=e.config.xaxis.tickAmount),((c=t.yAxisScale)===null||c===void 0||(d=c[r])===null||d===void 0||(f=d.result)===null||f===void 0?void 0:f.length)>0&&e.config.xaxis.type!=="datetime"&&(l=t.yAxisScale[r].result.length-1)),this._drawXYLines({xCount:l,tickAmount:o})}else l=o,o=t.xTickAmount,this._drawInvertedXYLines({xCount:l,tickAmount:o});return this.drawGridBands(l,o),{el:this.elg,elGridBorders:this.elGridBorders,xAxisTickWidth:t.gridWidth/l}}},{key:"drawGridBands",value:function(e,t){var a,r,l=this,o=this.w;if(((a=o.config.grid.row.colors)===null||a===void 0?void 0:a.length)>0&&function(S,A,E,M,P,u){for(var y=0,C=0;y<A;y++,C++)C>=o.config.grid[S].colors.length&&(C=0),l._drawGridBandRect({c:C,x1:E,y1:M,x2:P,y2:u,type:S}),M+=o.globals.gridHeight/t}("row",t,0,0,o.globals.gridWidth,o.globals.gridHeight/t),((r=o.config.grid.column.colors)===null||r===void 0?void 0:r.length)>0){var c=o.globals.isBarHorizontal||o.config.xaxis.tickPlacement!=="on"||o.config.xaxis.type!=="category"&&!o.config.xaxis.convertedCatToNumeric?e:e-1;o.globals.isXNumeric&&(c=o.globals.xAxisScale.result.length-1);for(var d=o.globals.padHorizontal,f=o.globals.padHorizontal+o.globals.gridWidth/c,m=o.globals.gridHeight,p=0,x=0;p<e;p++,x++){var w;x>=o.config.grid.column.colors.length&&(x=0),o.config.xaxis.type==="datetime"&&(d=this.xaxisLabels[p].position,f=(((w=this.xaxisLabels[p+1])===null||w===void 0?void 0:w.position)||o.globals.gridWidth)-this.xaxisLabels[p].position),this._drawGridBandRect({c:x,x1:d,y1:0,x2:f,y2:m,type:"column"}),d+=o.globals.gridWidth/c}}}}]),_}(),ga=function(){function _(e){g(this,_),this.ctx=e,this.w=e.w,this.coreUtils=new se(this.ctx)}return v(_,[{key:"niceScale",value:function(e,t){var a,r,l,o,c=arguments.length>2&&arguments[2]!==void 0?arguments[2]:0,d=1e-11,f=this.w,m=f.globals;m.isBarHorizontal?(a=f.config.xaxis,r=Math.max((m.svgWidth-100)/25,2)):(a=f.config.yaxis[c],r=Math.max((m.svgHeight-100)/15,2)),X.isNumber(r)||(r=10),l=a.min!==void 0&&a.min!==null,o=a.max!==void 0&&a.min!==null;var p=a.stepSize!==void 0&&a.stepSize!==null,x=a.tickAmount!==void 0&&a.tickAmount!==null,w=x?a.tickAmount:m.niceScaleDefaultTicks[Math.min(Math.round(r/2),m.niceScaleDefaultTicks.length-1)];if(m.isMultipleYAxis&&!x&&m.multiAxisTickAmount>0&&(w=m.multiAxisTickAmount,x=!0),w=w==="dataPoints"?m.dataPoints-1:Math.abs(Math.round(w)),(e===Number.MIN_VALUE&&t===0||!X.isNumber(e)&&!X.isNumber(t)||e===Number.MIN_VALUE&&t===-Number.MAX_VALUE)&&(e=X.isNumber(a.min)?a.min:0,t=X.isNumber(a.max)?a.max:e+w,m.allSeriesCollapsed=!1),e>t){console.warn("axis.min cannot be greater than axis.max: swapping min and max");var S=t;t=e,e=S}else e===t&&(e=e===0?0:e-1,t=t===0?2:t+1);var A=[];w<1&&(w=1);var E=w,M=Math.abs(t-e);!l&&e>0&&e/M<.15&&(e=0,l=!0),!o&&t<0&&-t/M<.15&&(t=0,o=!0);var P=(M=Math.abs(t-e))/E,u=P,y=Math.floor(Math.log10(u)),C=Math.pow(10,y),D=Math.ceil(u/C);if(P=u=(D=m.niceScaleAllowedMagMsd[m.yValueDecimal===0?0:1][D])*C,m.isBarHorizontal&&a.stepSize&&a.type!=="datetime"?(P=a.stepSize,p=!0):p&&(P=a.stepSize),p&&a.forceNiceScale){var L=Math.floor(Math.log10(P));P*=Math.pow(10,y-L)}if(l&&o){var I=M/E;if(x)if(p)if(X.mod(M,P)!=0){var H=X.getGCD(P,I);P=I/H<10?H:I}else X.mod(P,I)==0?P=I:(I=P,x=!1);else P=I;else if(p)X.mod(M,P)==0?I=P:P=I;else if(X.mod(M,P)==0)I=P;else{I=M/(E=Math.ceil(M/P));var B=X.getGCD(M,P);M/B<r&&(I=B),P=I}E=Math.round(M/P)}else{if(l||o){if(o)if(x)e=t-P*E;else{var U=e;e=P*Math.floor(e/P),Math.abs(t-e)/X.getGCD(M,P)>r&&(e=t-P*w,e+=P*Math.floor((U-e)/P))}else if(l)if(x)t=e+P*E;else{var ee=t;t=P*Math.ceil(t/P),Math.abs(t-e)/X.getGCD(M,P)>r&&(t=e+P*w,t+=P*Math.ceil((ee-t)/P))}}else if(m.isMultipleYAxis&&x){var K=P*Math.floor(e/P),te=K+P*E;te<t&&(P*=2),te=t,t=(e=K)+P*E,M=Math.abs(t-e),e>0&&e<Math.abs(te-t)&&(e=0,t=P*E),t<0&&-t<Math.abs(K-e)&&(t=0,e=-P*E)}else e=P*Math.floor(e/P),t=P*Math.ceil(t/P);M=Math.abs(t-e),P=X.getGCD(M,P),E=Math.round(M/P)}if(x||l||o||(E=Math.ceil((M-d)/(P+d)))>16&&X.getPrimeFactors(E).length<2&&E++,!x&&a.forceNiceScale&&m.yValueDecimal===0&&E>M&&(E=M,P=Math.round(M/E)),E>r&&(!x&&!p||a.forceNiceScale)){var le=X.getPrimeFactors(E),de=le.length-1,fe=E;e:for(var me=0;me<de;me++)for(var Ae=0;Ae<=de-me;Ae++){for(var xe=Math.min(Ae+me,de),_e=fe,Be=1,We=Ae;We<=xe;We++)Be*=le[We];if((_e/=Be)<r){fe=_e;break e}}P=fe===E?M:M/fe,E=Math.round(M/P)}m.isMultipleYAxis&&m.multiAxisTickAmount==0&&m.ignoreYAxisIndexes.indexOf(c)<0&&(m.multiAxisTickAmount=E);var ze=e-P,kt=P*d;do ze+=P,A.push(X.stripNumber(ze,7));while(t-ze>kt);return{result:A,niceMin:A[0],niceMax:A[A.length-1]}}},{key:"linearScale",value:function(e,t){var a=arguments.length>2&&arguments[2]!==void 0?arguments[2]:10,r=arguments.length>3&&arguments[3]!==void 0?arguments[3]:0,l=arguments.length>4&&arguments[4]!==void 0?arguments[4]:void 0,o=Math.abs(t-e),c=[];if(e===t)return{result:c=[e],niceMin:c[0],niceMax:c[c.length-1]};(a=this._adjustTicksForSmallRange(a,r,o))==="dataPoints"&&(a=this.w.globals.dataPoints-1),l||(l=o/a),l=Math.round(10*(l+Number.EPSILON))/10,a===Number.MAX_VALUE&&(a=5,l=1);for(var d=e;a>=0;)c.push(d),d=X.preciseAddition(d,l),a-=1;return{result:c,niceMin:c[0],niceMax:c[c.length-1]}}},{key:"logarithmicScaleNice",value:function(e,t,a){t<=0&&(t=Math.max(e,a)),e<=0&&(e=Math.min(t,a));for(var r=[],l=Math.ceil(Math.log(t)/Math.log(a)+1),o=Math.floor(Math.log(e)/Math.log(a));o<l;o++)r.push(Math.pow(a,o));return{result:r,niceMin:r[0],niceMax:r[r.length-1]}}},{key:"logarithmicScale",value:function(e,t,a){t<=0&&(t=Math.max(e,a)),e<=0&&(e=Math.min(t,a));for(var r=[],l=Math.log(t)/Math.log(a),o=Math.log(e)/Math.log(a),c=l-o,d=Math.round(c),f=c/d,m=0,p=o;m<d;m++,p+=f)r.push(Math.pow(a,p));return r.push(Math.pow(a,l)),{result:r,niceMin:e,niceMax:t}}},{key:"_adjustTicksForSmallRange",value:function(e,t,a){var r=e;if(t!==void 0&&this.w.config.yaxis[t].labels.formatter&&this.w.config.yaxis[t].tickAmount===void 0){var l=Number(this.w.config.yaxis[t].labels.formatter(1));X.isNumber(l)&&this.w.globals.yValueDecimal===0&&(r=Math.ceil(a))}return r<e?r:e}},{key:"setYScaleForIndex",value:function(e,t,a){var r=this.w.globals,l=this.w.config,o=r.isBarHorizontal?l.xaxis:l.yaxis[e];r.yAxisScale[e]===void 0&&(r.yAxisScale[e]=[]);var c=Math.abs(a-t);o.logarithmic&&c<=5&&(r.invalidLogScale=!0),o.logarithmic&&c>5?(r.allSeriesCollapsed=!1,r.yAxisScale[e]=o.forceNiceScale?this.logarithmicScaleNice(t,a,o.logBase):this.logarithmicScale(t,a,o.logBase)):a!==-Number.MAX_VALUE&&X.isNumber(a)&&t!==Number.MAX_VALUE&&X.isNumber(t)?(r.allSeriesCollapsed=!1,r.yAxisScale[e]=this.niceScale(t,a,e)):r.yAxisScale[e]=this.niceScale(Number.MIN_VALUE,0,e)}},{key:"setXScale",value:function(e,t){var a=this.w,r=a.globals,l=Math.abs(t-e);if(t!==-Number.MAX_VALUE&&X.isNumber(t)){var o=r.xTickAmount+1;l<10&&l>1&&(o=l),r.xAxisScale=this.linearScale(e,t,o,0,a.config.xaxis.stepSize)}else r.xAxisScale=this.linearScale(0,10,10);return r.xAxisScale}},{key:"scaleMultipleYAxes",value:function(){var e=this,t=this.w.config,a=this.w.globals;this.coreUtils.setSeriesYAxisMappings();var r=a.seriesYAxisMap,l=a.minYArr,o=a.maxYArr;a.allSeriesCollapsed=!0,a.barGroups=[],r.forEach(function(c,d){var f=[];c.forEach(function(m){var p=t.series[m].group;f.indexOf(p)<0&&f.push(p)}),c.length>0?function(){var m,p,x=Number.MAX_VALUE,w=-Number.MAX_VALUE,S=x,A=w;if(t.chart.stacked)(function(){var P=new Array(a.dataPoints).fill(0),u=[],y=[],C=[];f.forEach(function(){u.push(P.map(function(){return Number.MIN_VALUE})),y.push(P.map(function(){return Number.MIN_VALUE})),C.push(P.map(function(){return Number.MIN_VALUE}))});for(var D=function(I){!m&&t.series[c[I]].type&&(m=t.series[c[I]].type);var H=c[I];p=t.series[H].group?t.series[H].group:"axis-".concat(d),!(a.collapsedSeriesIndices.indexOf(H)<0&&a.ancillaryCollapsedSeriesIndices.indexOf(H)<0)||(a.allSeriesCollapsed=!1,f.forEach(function(B,U){if(t.series[H].group===B)for(var ee=0;ee<a.series[H].length;ee++){var K=a.series[H][ee];K>=0?y[U][ee]+=K:C[U][ee]+=K,u[U][ee]+=K,S=Math.min(S,K),A=Math.max(A,K)}})),m!=="bar"&&m!=="column"||a.barGroups.push(p)},L=0;L<c.length;L++)D(L);m||(m=t.chart.type),m==="bar"||m==="column"?f.forEach(function(I,H){x=Math.min(x,Math.min.apply(null,C[H])),w=Math.max(w,Math.max.apply(null,y[H]))}):(f.forEach(function(I,H){S=Math.min(S,Math.min.apply(null,u[H])),A=Math.max(A,Math.max.apply(null,u[H]))}),x=S,w=A),x===Number.MIN_VALUE&&w===Number.MIN_VALUE&&(w=-Number.MAX_VALUE)})();else for(var E=0;E<c.length;E++){var M=c[E];x=Math.min(x,l[M]),w=Math.max(w,o[M]),!(a.collapsedSeriesIndices.indexOf(M)<0&&a.ancillaryCollapsedSeriesIndices.indexOf(M)<0)||(a.allSeriesCollapsed=!1)}t.yaxis[d].min!==void 0&&(x=typeof t.yaxis[d].min=="function"?t.yaxis[d].min(x):t.yaxis[d].min),t.yaxis[d].max!==void 0&&(w=typeof t.yaxis[d].max=="function"?t.yaxis[d].max(w):t.yaxis[d].max),a.barGroups=a.barGroups.filter(function(P,u,y){return y.indexOf(P)===u}),e.setYScaleForIndex(d,x,w),c.forEach(function(P){l[P]=a.yAxisScale[d].niceMin,o[P]=a.yAxisScale[d].niceMax})}():e.setYScaleForIndex(d,0,-Number.MAX_VALUE)})}}]),_}(),pa=function(){function _(e){g(this,_),this.ctx=e,this.w=e.w,this.scales=new ga(e)}return v(_,[{key:"init",value:function(){this.setYRange(),this.setXRange(),this.setZRange()}},{key:"getMinYMaxY",value:function(e){var t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:Number.MAX_VALUE,a=arguments.length>2&&arguments[2]!==void 0?arguments[2]:-Number.MAX_VALUE,r=arguments.length>3&&arguments[3]!==void 0?arguments[3]:null,l=this.w.config,o=this.w.globals,c=-Number.MAX_VALUE,d=Number.MIN_VALUE;r===null&&(r=e+1);var f=o.series,m=f,p=f;l.chart.type==="candlestick"?(m=o.seriesCandleL,p=o.seriesCandleH):l.chart.type==="boxPlot"?(m=o.seriesCandleO,p=o.seriesCandleC):o.isRangeData&&(m=o.seriesRangeStart,p=o.seriesRangeEnd);var x=!1;if(o.seriesX.length>=r){var w,S=(w=o.brushSource)===null||w===void 0?void 0:w.w.config.chart.brush;(l.chart.zoom.enabled&&l.chart.zoom.autoScaleYaxis||S!=null&&S.enabled&&S!=null&&S.autoScaleYaxis)&&(x=!0)}for(var A=e;A<r;A++){o.dataPoints=Math.max(o.dataPoints,f[A].length);var E=l.series[A].type;o.categoryLabels.length&&(o.dataPoints=o.categoryLabels.filter(function(C){return C!==void 0}).length),o.labels.length&&l.xaxis.type!=="datetime"&&o.series.reduce(function(C,D){return C+D.length},0)!==0&&(o.dataPoints=Math.max(o.dataPoints,o.labels.length));var M=0,P=f[A].length-1;if(x){if(l.xaxis.min)for(;M<P&&o.seriesX[A][M]<l.xaxis.min;M++);if(l.xaxis.max)for(;P>M&&o.seriesX[A][P]>l.xaxis.max;P--);}for(var u=M;u<=P&&u<o.series[A].length;u++){var y=f[A][u];if(y!==null&&X.isNumber(y)){switch(p[A][u]!==void 0&&(c=Math.max(c,p[A][u]),t=Math.min(t,p[A][u])),m[A][u]!==void 0&&(t=Math.min(t,m[A][u]),a=Math.max(a,m[A][u])),E){case"candlestick":o.seriesCandleC[A][u]!==void 0&&(c=Math.max(c,o.seriesCandleH[A][u]),t=Math.min(t,o.seriesCandleL[A][u]));break;case"boxPlot":o.seriesCandleC[A][u]!==void 0&&(c=Math.max(c,o.seriesCandleC[A][u]),t=Math.min(t,o.seriesCandleO[A][u]))}E&&E!=="candlestick"&&E!=="boxPlot"&&E!=="rangeArea"&&E!=="rangeBar"&&(c=Math.max(c,o.series[A][u]),t=Math.min(t,o.series[A][u])),a=c,o.seriesGoals[A]&&o.seriesGoals[A][u]&&Array.isArray(o.seriesGoals[A][u])&&o.seriesGoals[A][u].forEach(function(C){d!==Number.MIN_VALUE&&(d=Math.min(d,C.value),t=d),c=Math.max(c,C.value),a=c}),X.isFloat(y)&&(y=X.noExponents(y),o.yValueDecimal=Math.max(o.yValueDecimal,y.toString().split(".")[1].length)),d>m[A][u]&&m[A][u]<0&&(d=m[A][u])}else o.hasNullValues=!0}E!=="bar"&&E!=="column"||(d<0&&c<0&&(c=0,a=Math.max(a,0)),d===Number.MIN_VALUE&&(d=0,t=Math.min(t,0)))}return l.chart.type==="rangeBar"&&o.seriesRangeStart.length&&o.isBarHorizontal&&(d=t),l.chart.type==="bar"&&(d<0&&c<0&&(c=0),d===Number.MIN_VALUE&&(d=0)),{minY:d,maxY:c,lowestY:t,highestY:a}}},{key:"setYRange",value:function(){var e=this.w.globals,t=this.w.config;e.maxY=-Number.MAX_VALUE,e.minY=Number.MIN_VALUE;var a,r=Number.MAX_VALUE;if(e.isMultipleYAxis){r=Number.MAX_VALUE;for(var l=0;l<e.series.length;l++)a=this.getMinYMaxY(l),e.minYArr[l]=a.lowestY,e.maxYArr[l]=a.highestY,r=Math.min(r,a.lowestY)}return a=this.getMinYMaxY(0,r,null,e.series.length),t.chart.type==="bar"?(e.minY=a.minY,e.maxY=a.maxY):(e.minY=a.lowestY,e.maxY=a.highestY),r=a.lowestY,t.chart.stacked&&this._setStackedMinMax(),t.chart.type==="line"||t.chart.type==="area"||t.chart.type==="scatter"||t.chart.type==="candlestick"||t.chart.type==="boxPlot"||t.chart.type==="rangeBar"&&!e.isBarHorizontal?e.minY===Number.MIN_VALUE&&r!==-Number.MAX_VALUE&&r!==e.maxY&&(e.minY=r):e.minY=e.minY!==Number.MIN_VALUE?Math.min(a.minY,e.minY):a.minY,t.yaxis.forEach(function(o,c){o.max!==void 0&&(typeof o.max=="number"?e.maxYArr[c]=o.max:typeof o.max=="function"&&(e.maxYArr[c]=o.max(e.isMultipleYAxis?e.maxYArr[c]:e.maxY)),e.maxY=e.maxYArr[c]),o.min!==void 0&&(typeof o.min=="number"?e.minYArr[c]=o.min:typeof o.min=="function"&&(e.minYArr[c]=o.min(e.isMultipleYAxis?e.minYArr[c]===Number.MIN_VALUE?0:e.minYArr[c]:e.minY)),e.minY=e.minYArr[c])}),e.isBarHorizontal&&["min","max"].forEach(function(o){t.xaxis[o]!==void 0&&typeof t.xaxis[o]=="number"&&(o==="min"?e.minY=t.xaxis[o]:e.maxY=t.xaxis[o])}),e.isMultipleYAxis?(this.scales.scaleMultipleYAxes(),e.minY=r):(this.scales.setYScaleForIndex(0,e.minY,e.maxY),e.minY=e.yAxisScale[0].niceMin,e.maxY=e.yAxisScale[0].niceMax,e.minYArr[0]=e.minY,e.maxYArr[0]=e.maxY),e.barGroups=[],e.lineGroups=[],e.areaGroups=[],t.series.forEach(function(o){switch(o.type||t.chart.type){case"bar":case"column":e.barGroups.push(o.group);break;case"line":e.lineGroups.push(o.group);break;case"area":e.areaGroups.push(o.group)}}),e.barGroups=e.barGroups.filter(function(o,c,d){return d.indexOf(o)===c}),e.lineGroups=e.lineGroups.filter(function(o,c,d){return d.indexOf(o)===c}),e.areaGroups=e.areaGroups.filter(function(o,c,d){return d.indexOf(o)===c}),{minY:e.minY,maxY:e.maxY,minYArr:e.minYArr,maxYArr:e.maxYArr,yAxisScale:e.yAxisScale}}},{key:"setXRange",value:function(){var e=this.w.globals,t=this.w.config,a=t.xaxis.type==="numeric"||t.xaxis.type==="datetime"||t.xaxis.type==="category"&&!e.noLabelsProvided||e.noLabelsProvided||e.isXNumeric;if(e.isXNumeric&&function(){for(var d=0;d<e.series.length;d++)if(e.labels[d])for(var f=0;f<e.labels[d].length;f++)e.labels[d][f]!==null&&X.isNumber(e.labels[d][f])&&(e.maxX=Math.max(e.maxX,e.labels[d][f]),e.initialMaxX=Math.max(e.maxX,e.labels[d][f]),e.minX=Math.min(e.minX,e.labels[d][f]),e.initialMinX=Math.min(e.minX,e.labels[d][f]))}(),e.noLabelsProvided&&t.xaxis.categories.length===0&&(e.maxX=e.labels[e.labels.length-1],e.initialMaxX=e.labels[e.labels.length-1],e.minX=1,e.initialMinX=1),e.isXNumeric||e.noLabelsProvided||e.dataFormatXNumeric){var r=10;if(t.xaxis.tickAmount===void 0)r=Math.round(e.svgWidth/150),t.xaxis.type==="numeric"&&e.dataPoints<30&&(r=e.dataPoints-1),r>e.dataPoints&&e.dataPoints!==0&&(r=e.dataPoints-1);else if(t.xaxis.tickAmount==="dataPoints"){if(e.series.length>1&&(r=e.series[e.maxValsInArrayIndex].length-1),e.isXNumeric){var l=e.maxX-e.minX;l<30&&(r=l-1)}}else r=t.xaxis.tickAmount;if(e.xTickAmount=r,t.xaxis.max!==void 0&&typeof t.xaxis.max=="number"&&(e.maxX=t.xaxis.max),t.xaxis.min!==void 0&&typeof t.xaxis.min=="number"&&(e.minX=t.xaxis.min),t.xaxis.range!==void 0&&(e.minX=e.maxX-t.xaxis.range),e.minX!==Number.MAX_VALUE&&e.maxX!==-Number.MAX_VALUE)if(t.xaxis.convertedCatToNumeric&&!e.dataFormatXNumeric){for(var o=[],c=e.minX-1;c<e.maxX;c++)o.push(c+1);e.xAxisScale={result:o,niceMin:o[0],niceMax:o[o.length-1]}}else e.xAxisScale=this.scales.setXScale(e.minX,e.maxX);else e.xAxisScale=this.scales.linearScale(0,r,r,0,t.xaxis.stepSize),e.noLabelsProvided&&e.labels.length>0&&(e.xAxisScale=this.scales.linearScale(1,e.labels.length,r-1,0,t.xaxis.stepSize),e.seriesX=e.labels.slice());a&&(e.labels=e.xAxisScale.result.slice())}return e.isBarHorizontal&&e.labels.length&&(e.xTickAmount=e.labels.length),this._handleSingleDataPoint(),this._getMinXDiff(),{minX:e.minX,maxX:e.maxX}}},{key:"setZRange",value:function(){var e=this.w.globals;if(e.isDataXYZ){for(var t=0;t<e.series.length;t++)if(e.seriesZ[t]!==void 0)for(var a=0;a<e.seriesZ[t].length;a++)e.seriesZ[t][a]!==null&&X.isNumber(e.seriesZ[t][a])&&(e.maxZ=Math.max(e.maxZ,e.seriesZ[t][a]),e.minZ=Math.min(e.minZ,e.seriesZ[t][a]))}}},{key:"_handleSingleDataPoint",value:function(){var e=this.w.globals,t=this.w.config;if(e.minX===e.maxX){var a=new De(this.ctx);if(t.xaxis.type==="datetime"){var r=a.getDate(e.minX);t.xaxis.labels.datetimeUTC?r.setUTCDate(r.getUTCDate()-2):r.setDate(r.getDate()-2),e.minX=new Date(r).getTime();var l=a.getDate(e.maxX);t.xaxis.labels.datetimeUTC?l.setUTCDate(l.getUTCDate()+2):l.setDate(l.getDate()+2),e.maxX=new Date(l).getTime()}else(t.xaxis.type==="numeric"||t.xaxis.type==="category"&&!e.noLabelsProvided)&&(e.minX=e.minX-2,e.initialMinX=e.minX,e.maxX=e.maxX+2,e.initialMaxX=e.maxX)}}},{key:"_getMinXDiff",value:function(){var e=this.w.globals;e.isXNumeric&&e.seriesX.forEach(function(t,a){t.length===1&&t.push(e.seriesX[e.maxValsInArrayIndex][e.seriesX[e.maxValsInArrayIndex].length-1]);var r=t.slice();r.sort(function(l,o){return l-o}),r.forEach(function(l,o){if(o>0){var c=l-r[o-1];c>0&&(e.minXDiff=Math.min(c,e.minXDiff))}}),e.dataPoints!==1&&e.minXDiff!==Number.MAX_VALUE||(e.minXDiff=.5)})}},{key:"_setStackedMinMax",value:function(){var e=this,t=this.w.globals;if(t.series.length){var a=t.seriesGroups;a.length||(a=[this.w.globals.seriesNames.map(function(o){return o})]);var r={},l={};a.forEach(function(o){r[o]=[],l[o]=[],e.w.config.series.map(function(c,d){return o.indexOf(t.seriesNames[d])>-1?d:null}).filter(function(c){return c!==null}).forEach(function(c){for(var d=0;d<t.series[t.maxValsInArrayIndex].length;d++){var f,m,p,x;r[o][d]===void 0&&(r[o][d]=0,l[o][d]=0),(e.w.config.chart.stacked&&!t.comboCharts||e.w.config.chart.stacked&&t.comboCharts&&(!e.w.config.chart.stackOnlyBar||((f=e.w.config.series)===null||f===void 0||(m=f[c])===null||m===void 0?void 0:m.type)==="bar"||((p=e.w.config.series)===null||p===void 0||(x=p[c])===null||x===void 0?void 0:x.type)==="column"))&&t.series[c][d]!==null&&X.isNumber(t.series[c][d])&&(t.series[c][d]>0?r[o][d]+=parseFloat(t.series[c][d])+1e-4:l[o][d]+=parseFloat(t.series[c][d]))}})}),Object.entries(r).forEach(function(o){var c=$(o,1)[0];r[c].forEach(function(d,f){t.maxY=Math.max(t.maxY,r[c][f]),t.minY=Math.min(t.minY,l[c][f])})})}}}]),_}(),Wi=function(){function _(e,t){g(this,_),this.ctx=e,this.elgrid=t,this.w=e.w;var a=this.w;this.xaxisFontSize=a.config.xaxis.labels.style.fontSize,this.axisFontFamily=a.config.xaxis.labels.style.fontFamily,this.xaxisForeColors=a.config.xaxis.labels.style.colors,this.isCategoryBarHorizontal=a.config.chart.type==="bar"&&a.config.plotOptions.bar.horizontal,this.xAxisoffX=a.config.xaxis.position==="bottom"?a.globals.gridHeight:0,this.drawnLabels=[],this.axesUtils=new Ke(e)}return v(_,[{key:"drawYaxis",value:function(e){var t=this.w,a=new V(this.ctx),r=t.config.yaxis[e].labels.style,l=r.fontSize,o=r.fontFamily,c=r.fontWeight,d=a.group({class:"apexcharts-yaxis",rel:e,transform:"translate(".concat(t.globals.translateYAxisX[e],", 0)")});if(this.axesUtils.isYAxisHidden(e))return d;var f=a.group({class:"apexcharts-yaxis-texts-g"});d.add(f);var m=t.globals.yAxisScale[e].result.length-1,p=t.globals.gridHeight/m,x=t.globals.yLabelFormatters[e],w=this.axesUtils.checkForReversedLabels(e,t.globals.yAxisScale[e].result.slice());if(t.config.yaxis[e].labels.show){var S=t.globals.translateY+t.config.yaxis[e].labels.offsetY;t.globals.isBarHorizontal?S=0:t.config.chart.type==="heatmap"&&(S-=p/2),S+=parseInt(l,10)/3;for(var A=m;A>=0;A--){var E=x(w[A],A,t),M=t.config.yaxis[e].labels.padding;t.config.yaxis[e].opposite&&t.config.yaxis.length!==0&&(M*=-1);var P=this.getTextAnchor(t.config.yaxis[e].labels.align,t.config.yaxis[e].opposite),u=this.axesUtils.getYAxisForeColor(r.colors,e),y=Array.isArray(u)?u[A]:u,C=X.listToArray(t.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxis[rel='".concat(e,"'] .apexcharts-yaxis-label tspan"))).map(function(L){return L.textContent}),D=a.drawText({x:M,y:S,text:C.includes(E)&&!t.config.yaxis[e].labels.showDuplicates?"":E,textAnchor:P,fontSize:l,fontFamily:o,fontWeight:c,maxWidth:t.config.yaxis[e].labels.maxWidth,foreColor:y,isPlainText:!1,cssClass:"apexcharts-yaxis-label ".concat(r.cssClass)});f.add(D),this.addTooltip(D,E),t.config.yaxis[e].labels.rotate!==0&&this.rotateLabel(a,D,firstLabel,t.config.yaxis[e].labels.rotate),S+=p}}return this.addYAxisTitle(a,d,e),this.addAxisBorder(a,d,e,m,p),d}},{key:"getTextAnchor",value:function(e,t){return e==="left"?"start":e==="center"?"middle":e==="right"?"end":t?"start":"end"}},{key:"addTooltip",value:function(e,t){var a=document.createElementNS(this.w.globals.SVGNS,"title");a.textContent=Array.isArray(t)?t.join(" "):t,e.node.appendChild(a)}},{key:"rotateLabel",value:function(e,t,a,r){var l=e.rotateAroundCenter(a.node),o=e.rotateAroundCenter(t.node);t.node.setAttribute("transform","rotate(".concat(r," ").concat(l.x," ").concat(o.y,")"))}},{key:"addYAxisTitle",value:function(e,t,a){var r=this.w;if(r.config.yaxis[a].title.text!==void 0){var l=e.group({class:"apexcharts-yaxis-title"}),o=r.config.yaxis[a].opposite?r.globals.translateYAxisX[a]:0,c=e.drawText({x:o,y:r.globals.gridHeight/2+r.globals.translateY+r.config.yaxis[a].title.offsetY,text:r.config.yaxis[a].title.text,textAnchor:"end",foreColor:r.config.yaxis[a].title.style.color,fontSize:r.config.yaxis[a].title.style.fontSize,fontWeight:r.config.yaxis[a].title.style.fontWeight,fontFamily:r.config.yaxis[a].title.style.fontFamily,cssClass:"apexcharts-yaxis-title-text ".concat(r.config.yaxis[a].title.style.cssClass)});l.add(c),t.add(l)}}},{key:"addAxisBorder",value:function(e,t,a,r,l){var o=this.w,c=o.config.yaxis[a].axisBorder,d=31+c.offsetX;if(o.config.yaxis[a].opposite&&(d=-31-c.offsetX),c.show){var f=e.drawLine(d,o.globals.translateY+c.offsetY-2,d,o.globals.gridHeight+o.globals.translateY+c.offsetY+2,c.color,0,c.width);t.add(f)}o.config.yaxis[a].axisTicks.show&&this.axesUtils.drawYAxisTicks(d,r,c,o.config.yaxis[a].axisTicks,a,l,t)}},{key:"drawYaxisInversed",value:function(e){var t=this.w,a=new V(this.ctx),r=a.group({class:"apexcharts-xaxis apexcharts-yaxis-inversed"}),l=a.group({class:"apexcharts-xaxis-texts-g",transform:"translate(".concat(t.globals.translateXAxisX,", ").concat(t.globals.translateXAxisY,")")});r.add(l);var o=t.globals.yAxisScale[e].result.length-1,c=t.globals.gridWidth/o+.1,d=c+t.config.xaxis.labels.offsetX,f=t.globals.xLabelFormatter,m=this.axesUtils.checkForReversedLabels(e,t.globals.yAxisScale[e].result.slice()),p=t.globals.timescaleLabels;if(p.length>0&&(this.xaxisLabels=p.slice(),o=(m=p.slice()).length),t.config.xaxis.labels.show)for(var x=p.length?0:o;p.length?x<p.length:x>=0;p.length?x++:x--){var w=f(m[x],x,t),S=t.globals.gridWidth+t.globals.padHorizontal-(d-c+t.config.xaxis.labels.offsetX);if(p.length){var A=this.axesUtils.getLabel(m,p,S,x,this.drawnLabels,this.xaxisFontSize);S=A.x,w=A.text,this.drawnLabels.push(A.text),x===0&&t.globals.skipFirstTimelinelabel&&(w=""),x===m.length-1&&t.globals.skipLastTimelinelabel&&(w="")}var E=a.drawText({x:S,y:this.xAxisoffX+t.config.xaxis.labels.offsetY+30-(t.config.xaxis.position==="top"?t.globals.xAxisHeight+t.config.xaxis.axisTicks.height-2:0),text:w,textAnchor:"middle",foreColor:Array.isArray(this.xaxisForeColors)?this.xaxisForeColors[e]:this.xaxisForeColors,fontSize:this.xaxisFontSize,fontFamily:this.xaxisFontFamily,fontWeight:t.config.xaxis.labels.style.fontWeight,isPlainText:!1,cssClass:"apexcharts-xaxis-label ".concat(t.config.xaxis.labels.style.cssClass)});l.add(E),E.tspan(w),this.addTooltip(E,w),d+=c}return this.inversedYAxisTitleText(r),this.inversedYAxisBorder(r),r}},{key:"inversedYAxisBorder",value:function(e){var t=this.w,a=new V(this.ctx),r=t.config.xaxis.axisBorder;if(r.show){var l=0;t.config.chart.type==="bar"&&t.globals.isXNumeric&&(l-=15);var o=a.drawLine(t.globals.padHorizontal+l+r.offsetX,this.xAxisoffX,t.globals.gridWidth,this.xAxisoffX,r.color,0,r.height);this.elgrid&&this.elgrid.elGridBorders&&t.config.grid.show?this.elgrid.elGridBorders.add(o):e.add(o)}}},{key:"inversedYAxisTitleText",value:function(e){var t=this.w,a=new V(this.ctx);if(t.config.xaxis.title.text!==void 0){var r=a.group({class:"apexcharts-xaxis-title apexcharts-yaxis-title-inversed"}),l=a.drawText({x:t.globals.gridWidth/2+t.config.xaxis.title.offsetX,y:this.xAxisoffX+parseFloat(this.xaxisFontSize)+parseFloat(t.config.xaxis.title.style.fontSize)+t.config.xaxis.title.offsetY+20,text:t.config.xaxis.title.text,textAnchor:"middle",fontSize:t.config.xaxis.title.style.fontSize,fontFamily:t.config.xaxis.title.style.fontFamily,fontWeight:t.config.xaxis.title.style.fontWeight,foreColor:t.config.xaxis.title.style.color,cssClass:"apexcharts-xaxis-title-text ".concat(t.config.xaxis.title.style.cssClass)});r.add(l),e.add(r)}}},{key:"yAxisTitleRotate",value:function(e,t){var a=this.w,r=new V(this.ctx),l=a.globals.dom.baseEl.querySelector(".apexcharts-yaxis[rel='".concat(e,"'] .apexcharts-yaxis-texts-g")),o=l?l.getBoundingClientRect():{width:0,height:0},c=a.globals.dom.baseEl.querySelector(".apexcharts-yaxis[rel='".concat(e,"'] .apexcharts-yaxis-title text")),d=c?c.getBoundingClientRect():{width:0,height:0};if(c){var f=this.xPaddingForYAxisTitle(e,o,d,t);c.setAttribute("x",f.xPos-(t?10:0));var m=r.rotateAroundCenter(c);c.setAttribute("transform","rotate(".concat(t?-1*a.config.yaxis[e].title.rotate:a.config.yaxis[e].title.rotate," ").concat(m.x," ").concat(m.y,")"))}}},{key:"xPaddingForYAxisTitle",value:function(e,t,a,r){var l=this.w,o=0,c=10;return l.config.yaxis[e].title.text===void 0||e<0?{xPos:o,padd:0}:(r?o=t.width+l.config.yaxis[e].title.offsetX+a.width/2+c/2:(o=-1*t.width+l.config.yaxis[e].title.offsetX+c/2+a.width/2,l.globals.isBarHorizontal&&(c=25,o=-1*t.width-l.config.yaxis[e].title.offsetX-c)),{xPos:o,padd:c})}},{key:"setYAxisXPosition",value:function(e,t){var a=this.w,r=0,l=0,o=18,c=1;a.config.yaxis.length>1&&(this.multipleYs=!0),a.config.yaxis.forEach(function(d,f){var m=a.globals.ignoreYAxisIndexes.includes(f)||!d.show||d.floating||e[f].width===0,p=e[f].width+t[f].width;d.opposite?a.globals.isBarHorizontal?(l=a.globals.gridWidth+a.globals.translateX-1,a.globals.translateYAxisX[f]=l-d.labels.offsetX):(l=a.globals.gridWidth+a.globals.translateX+c,m||(c+=p+20),a.globals.translateYAxisX[f]=l-d.labels.offsetX+20):(r=a.globals.translateX-o,m||(o+=p+20),a.globals.translateYAxisX[f]=r+d.labels.offsetX)})}},{key:"setYAxisTextAlignments",value:function(){var e=this.w;X.listToArray(e.globals.dom.baseEl.getElementsByClassName("apexcharts-yaxis")).forEach(function(t,a){var r=e.config.yaxis[a];if(r&&!r.floating&&r.labels.align!==void 0){var l=e.globals.dom.baseEl.querySelector(".apexcharts-yaxis[rel='".concat(a,"'] .apexcharts-yaxis-texts-g")),o=X.listToArray(e.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxis[rel='".concat(a,"'] .apexcharts-yaxis-label"))),c=l.getBoundingClientRect();o.forEach(function(d){d.setAttribute("text-anchor",r.labels.align)}),r.labels.align!=="left"||r.opposite?r.labels.align==="center"?l.setAttribute("transform","translate(".concat(c.width/2*(r.opposite?1:-1),", 0)")):r.labels.align==="right"&&r.opposite&&l.setAttribute("transform","translate(".concat(c.width,", 0)")):l.setAttribute("transform","translate(-".concat(c.width,", 0)"))}})}}]),_}(),en=function(){function _(e){g(this,_),this.ctx=e,this.w=e.w,this.documentEvent=X.bind(this.documentEvent,this)}return v(_,[{key:"addEventListener",value:function(e,t){var a=this.w;a.globals.events.hasOwnProperty(e)?a.globals.events[e].push(t):a.globals.events[e]=[t]}},{key:"removeEventListener",value:function(e,t){var a=this.w;if(a.globals.events.hasOwnProperty(e)){var r=a.globals.events[e].indexOf(t);r!==-1&&a.globals.events[e].splice(r,1)}}},{key:"fireEvent",value:function(e,t){var a=this.w;if(a.globals.events.hasOwnProperty(e)){t&&t.length||(t=[]);for(var r=a.globals.events[e],l=r.length,o=0;o<l;o++)r[o].apply(null,t)}}},{key:"setupEventHandlers",value:function(){var e=this,t=this.w,a=this.ctx,r=t.globals.dom.baseEl.querySelector(t.globals.chartClass);this.ctx.eventList.forEach(function(l){r.addEventListener(l,function(o){var c=Object.assign({},t,{seriesIndex:t.globals.axisCharts?t.globals.capturedSeriesIndex:0,dataPointIndex:t.globals.capturedDataPointIndex});o.type==="mousemove"||o.type==="touchmove"?typeof t.config.chart.events.mouseMove=="function"&&t.config.chart.events.mouseMove(o,a,c):o.type==="mouseleave"||o.type==="touchleave"?typeof t.config.chart.events.mouseLeave=="function"&&t.config.chart.events.mouseLeave(o,a,c):(o.type==="mouseup"&&o.which===1||o.type==="touchend")&&(typeof t.config.chart.events.click=="function"&&t.config.chart.events.click(o,a,c),a.ctx.events.fireEvent("click",[o,a,c]))},{capture:!1,passive:!0})}),this.ctx.eventList.forEach(function(l){t.globals.dom.baseEl.addEventListener(l,e.documentEvent,{passive:!0})}),this.ctx.core.setupBrushHandler()}},{key:"documentEvent",value:function(e){var t=this.w,a=e.target.className;if(e.type==="click"){var r=t.globals.dom.baseEl.querySelector(".apexcharts-menu");r&&r.classList.contains("apexcharts-menu-open")&&a!=="apexcharts-menu-icon"&&r.classList.remove("apexcharts-menu-open")}t.globals.clientX=e.type==="touchmove"?e.touches[0].clientX:e.clientX,t.globals.clientY=e.type==="touchmove"?e.touches[0].clientY:e.clientY}}]),_}(),Gi=function(){function _(e){g(this,_),this.ctx=e,this.w=e.w}return v(_,[{key:"setCurrentLocaleValues",value:function(e){var t=this.w.config.chart.locales;window.Apex.chart&&window.Apex.chart.locales&&window.Apex.chart.locales.length>0&&(t=this.w.config.chart.locales.concat(window.Apex.chart.locales));var a=t.filter(function(l){return l.name===e})[0];if(!a)throw new Error("Wrong locale name provided. Please make sure you set the correct locale name in options");var r=X.extend(ei,a);this.w.globals.locale=r.options}}]),_}(),ur=function(){function _(e){g(this,_),this.ctx=e,this.w=e.w}return v(_,[{key:"drawAxis",value:function(e,t){var a,r,l=this,o=this.w.globals,c=this.w.config,d=new yi(this.ctx,t),f=new Wi(this.ctx,t);o.axisCharts&&e!=="radar"&&(o.isBarHorizontal?(r=f.drawYaxisInversed(0),a=d.drawXaxisInversed(0),o.dom.elGraphical.add(a),o.dom.elGraphical.add(r)):(a=d.drawXaxis(),o.dom.elGraphical.add(a),c.yaxis.map(function(m,p){if(o.ignoreYAxisIndexes.indexOf(p)===-1&&(r=f.drawYaxis(p),o.dom.Paper.add(r),l.w.config.grid.position==="back")){var x=o.dom.Paper.children()[1];x.remove(),o.dom.Paper.add(x)}})))}}]),_}(),ma=function(){function _(e){g(this,_),this.ctx=e,this.w=e.w}return v(_,[{key:"drawXCrosshairs",value:function(){var e=this.w,t=new V(this.ctx),a=new ce(this.ctx),r=e.config.xaxis.crosshairs.fill.gradient,l=e.config.xaxis.crosshairs.dropShadow,o=e.config.xaxis.crosshairs.fill.type,c=r.colorFrom,d=r.colorTo,f=r.opacityFrom,m=r.opacityTo,p=r.stops,x=l.enabled,w=l.left,S=l.top,A=l.blur,E=l.color,M=l.opacity,P=e.config.xaxis.crosshairs.fill.color;if(e.config.xaxis.crosshairs.show){o==="gradient"&&(P=t.drawGradient("vertical",c,d,f,m,null,p,null));var u=t.drawRect();e.config.xaxis.crosshairs.width===1&&(u=t.drawLine());var y=e.globals.gridHeight;(!X.isNumber(y)||y<0)&&(y=0);var C=e.config.xaxis.crosshairs.width;(!X.isNumber(C)||C<0)&&(C=0),u.attr({class:"apexcharts-xcrosshairs",x:0,y:0,y2:y,width:C,height:y,fill:P,filter:"none","fill-opacity":e.config.xaxis.crosshairs.opacity,stroke:e.config.xaxis.crosshairs.stroke.color,"stroke-width":e.config.xaxis.crosshairs.stroke.width,"stroke-dasharray":e.config.xaxis.crosshairs.stroke.dashArray}),x&&(u=a.dropShadow(u,{left:w,top:S,blur:A,color:E,opacity:M})),e.globals.dom.elGraphical.add(u)}}},{key:"drawYCrosshairs",value:function(){var e=this.w,t=new V(this.ctx),a=e.config.yaxis[0].crosshairs,r=e.globals.barPadForNumericAxis;if(e.config.yaxis[0].crosshairs.show){var l=t.drawLine(-r,0,e.globals.gridWidth+r,0,a.stroke.color,a.stroke.dashArray,a.stroke.width);l.attr({class:"apexcharts-ycrosshairs"}),e.globals.dom.elGraphical.add(l)}var o=t.drawLine(-r,0,e.globals.gridWidth+r,0,a.stroke.color,0,0);o.attr({class:"apexcharts-ycrosshairs-hidden"}),e.globals.dom.elGraphical.add(o)}}]),_}(),tn=function(){function _(e){g(this,_),this.ctx=e,this.w=e.w}return v(_,[{key:"checkResponsiveConfig",value:function(e){var t=this,a=this.w,r=a.config;if(r.responsive.length!==0){var l=r.responsive.slice();l.sort(function(f,m){return f.breakpoint>m.breakpoint?1:m.breakpoint>f.breakpoint?-1:0}).reverse();var o=new vi({}),c=function(){var f=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{},m=l[0].breakpoint,p=window.innerWidth>0?window.innerWidth:screen.width;if(p>m){var x=X.clone(a.globals.initialConfig);x.series=X.clone(a.config.series);var w=se.extendArrayProps(o,x,a);f=X.extend(w,f),f=X.extend(a.config,f),t.overrideResponsiveOptions(f)}else for(var S=0;S<l.length;S++)p<l[S].breakpoint&&(f=se.extendArrayProps(o,l[S].options,a),f=X.extend(a.config,f),t.overrideResponsiveOptions(f))};if(e){var d=se.extendArrayProps(o,e,a);d=X.extend(a.config,d),c(d=X.extend(d,e))}else c({})}}},{key:"overrideResponsiveOptions",value:function(e){var t=new vi(e).init({responsiveOverride:!0});this.w.config=t}}]),_}(),xa=function(){function _(e){g(this,_),this.ctx=e,this.w=e.w,this.colors=[],this.isColorFn=!1,this.isHeatmapDistributed=this.checkHeatmapDistributed(),this.isBarDistributed=this.checkBarDistributed()}return v(_,[{key:"checkHeatmapDistributed",value:function(){var e=this.w.config,t=e.chart,a=e.plotOptions;return t.type==="treemap"&&a.treemap&&a.treemap.distributed||t.type==="heatmap"&&a.heatmap&&a.heatmap.distributed}},{key:"checkBarDistributed",value:function(){var e=this.w.config,t=e.chart,a=e.plotOptions;return a.bar&&a.bar.distributed&&(t.type==="bar"||t.type==="rangeBar")}},{key:"init",value:function(){this.setDefaultColors()}},{key:"setDefaultColors",value:function(){var e=this.w,t=new X;e.globals.dom.elWrap.classList.add("apexcharts-theme-".concat(e.config.theme.mode));var a=ie(e.config.colors||e.config.fill.colors||[]);e.globals.colors=this.getColors(a),this.applySeriesColors(e.globals.seriesColors,e.globals.colors),e.config.theme.monochrome.enabled&&(e.globals.colors=this.getMonochromeColors(e.config.theme.monochrome,e.globals.series,t));var r=e.globals.colors.slice();this.pushExtraColors(e.globals.colors),this.applyColorTypes(["fill","stroke"],r),this.applyDataLabelsColors(r),this.applyRadarPolygonsColors(),this.applyMarkersColors(r)}},{key:"getColors",value:function(e){var t=this,a=this.w;return e&&e.length!==0?Array.isArray(e)&&e.length>0&&typeof e[0]=="function"?(this.isColorFn=!0,a.config.series.map(function(r,l){var o=e[l]||e[0];return typeof o=="function"?o({value:a.globals.axisCharts?a.globals.series[l][0]||0:a.globals.series[l],seriesIndex:l,dataPointIndex:l,w:t.w}):o})):e:this.predefined()}},{key:"applySeriesColors",value:function(e,t){e.forEach(function(a,r){a&&(t[r]=a)})}},{key:"getMonochromeColors",value:function(e,t,a){var r=e.color,l=e.shadeIntensity,o=e.shadeTo,c=this.isBarDistributed||this.isHeatmapDistributed?t[0].length*t.length:t.length,d=1/(c/l),f=0;return Array.from({length:c},function(){var m=o==="dark"?a.shadeColor(-1*f,r):a.shadeColor(f,r);return f+=d,m})}},{key:"applyColorTypes",value:function(e,t){var a=this,r=this.w;e.forEach(function(l){r.globals[l].colors=r.config[l].colors===void 0?a.isColorFn?r.config.colors:t:r.config[l].colors.slice(),a.pushExtraColors(r.globals[l].colors)})}},{key:"applyDataLabelsColors",value:function(e){var t=this.w;t.globals.dataLabels.style.colors=t.config.dataLabels.style.colors===void 0?e:t.config.dataLabels.style.colors.slice(),this.pushExtraColors(t.globals.dataLabels.style.colors,50)}},{key:"applyRadarPolygonsColors",value:function(){var e=this.w;e.globals.radarPolygons.fill.colors=e.config.plotOptions.radar.polygons.fill.colors===void 0?[e.config.theme.mode==="dark"?"#424242":"none"]:e.config.plotOptions.radar.polygons.fill.colors.slice(),this.pushExtraColors(e.globals.radarPolygons.fill.colors,20)}},{key:"applyMarkersColors",value:function(e){var t=this.w;t.globals.markers.colors=t.config.markers.colors===void 0?e:t.config.markers.colors.slice(),this.pushExtraColors(t.globals.markers.colors)}},{key:"pushExtraColors",value:function(e,t){var a=arguments.length>2&&arguments[2]!==void 0?arguments[2]:null,r=this.w,l=t||r.globals.series.length;if(a===null&&(a=this.isBarDistributed||this.isHeatmapDistributed||r.config.chart.type==="heatmap"&&r.config.plotOptions.heatmap&&r.config.plotOptions.heatmap.colorScale.inverse),a&&r.globals.series.length&&(l=r.globals.series[r.globals.maxValsInArrayIndex].length*r.globals.series.length),e.length<l)for(var o=l-e.length,c=0;c<o;c++)e.push(e[c])}},{key:"updateThemeOptions",value:function(e){e.chart=e.chart||{},e.tooltip=e.tooltip||{};var t=e.theme.mode,a=t==="dark"?"palette4":t==="light"?"palette1":e.theme.palette||"palette1",r=t==="dark"?"#f6f7f8":t==="light"?"#373d3f":e.chart.foreColor||"#373d3f";return e.tooltip.theme=t||"light",e.chart.foreColor=r,e.theme.palette=a,e}},{key:"predefined",value:function(){var e={palette1:["#008FFB","#00E396","#FEB019","#FF4560","#775DD0"],palette2:["#3f51b5","#03a9f4","#4caf50","#f9ce1d","#FF9800"],palette3:["#33b2df","#546E7A","#d4526e","#13d8aa","#A5978B"],palette4:["#4ecdc4","#c7f464","#81D4FA","#fd6a6a","#546E7A"],palette5:["#2b908f","#f9a3a4","#90ee7e","#fa4443","#69d2e7"],palette6:["#449DD1","#F86624","#EA3546","#662E9B","#C5D86D"],palette7:["#D7263D","#1B998B","#2E294E","#F46036","#E2C044"],palette8:["#662E9B","#F86624","#F9C80E","#EA3546","#43BCCD"],palette9:["#5C4742","#A5978B","#8D5B4C","#5A2A27","#C4BBAF"],palette10:["#A300D6","#7D02EB","#5653FE","#2983FF","#00B1F2"],default:["#008FFB","#00E396","#FEB019","#FF4560","#775DD0"]};return e[this.w.config.theme.palette]||e.default}}]),_}(),an=function(){function _(e){g(this,_),this.ctx=e,this.w=e.w}return v(_,[{key:"draw",value:function(){this.drawTitleSubtitle("title"),this.drawTitleSubtitle("subtitle")}},{key:"drawTitleSubtitle",value:function(e){var t=this.w,a=e==="title"?t.config.title:t.config.subtitle,r=t.globals.svgWidth/2,l=a.offsetY,o="middle";if(a.align==="left"?(r=10,o="start"):a.align==="right"&&(r=t.globals.svgWidth-10,o="end"),r+=a.offsetX,l=l+parseInt(a.style.fontSize,10)+a.margin/2,a.text!==void 0){var c=new V(this.ctx).drawText({x:r,y:l,text:a.text,textAnchor:o,fontSize:a.style.fontSize,fontFamily:a.style.fontFamily,fontWeight:a.style.fontWeight,foreColor:a.style.color,opacity:1});c.node.setAttribute("class","apexcharts-".concat(e,"-text")),t.globals.dom.Paper.add(c)}}}]),_}(),Vi=function(){function _(e){g(this,_),this.w=e.w,this.dCtx=e}return v(_,[{key:"getTitleSubtitleCoords",value:function(e){var t=this.w,a=0,r=0,l=e==="title"?t.config.title.floating:t.config.subtitle.floating,o=t.globals.dom.baseEl.querySelector(".apexcharts-".concat(e,"-text"));if(o!==null&&!l){var c=o.getBoundingClientRect();a=c.width,r=t.globals.axisCharts?c.height+5:c.height}return{width:a,height:r}}},{key:"getLegendsRect",value:function(){var e=this.w,t=e.globals.dom.elLegendWrap;e.config.legend.height||e.config.legend.position!=="top"&&e.config.legend.position!=="bottom"||(t.style.maxHeight=e.globals.svgHeight/2+"px");var a=Object.assign({},X.getBoundingClientRect(t));return t!==null&&!e.config.legend.floating&&e.config.legend.show?this.dCtx.lgRect={x:a.x,y:a.y,height:a.height,width:a.height===0?0:a.width}:this.dCtx.lgRect={x:0,y:0,height:0,width:0},e.config.legend.position!=="left"&&e.config.legend.position!=="right"||1.5*this.dCtx.lgRect.width>e.globals.svgWidth&&(this.dCtx.lgRect.width=e.globals.svgWidth/1.5),this.dCtx.lgRect}},{key:"getDatalabelsRect",value:function(){var e=this,t=this.w,a=[];t.config.series.forEach(function(d,f){d.data.forEach(function(m,p){var x;x=t.globals.series[f][p],r=t.config.dataLabels.formatter(x,{ctx:e.dCtx.ctx,seriesIndex:f,dataPointIndex:p,w:t}),a.push(r)})});var r=X.getLargestStringFromArr(a),l=new V(this.dCtx.ctx),o=t.config.dataLabels.style,c=l.getTextRects(r,parseInt(o.fontSize),o.fontFamily);return{width:1.05*c.width,height:c.height}}},{key:"getLargestStringFromMultiArr",value:function(e,t){var a=e;if(this.w.globals.isMultiLineX){var r=t.map(function(o,c){return Array.isArray(o)?o.length:1}),l=Math.max.apply(Math,ie(r));a=t[r.indexOf(l)]}return a}}]),_}(),fr=function(){function _(e){g(this,_),this.w=e.w,this.dCtx=e}return v(_,[{key:"getxAxisLabelsCoords",value:function(){var e,t=this.w,a=t.globals.labels.slice();if(t.config.xaxis.convertedCatToNumeric&&a.length===0&&(a=t.globals.categoryLabels),t.globals.timescaleLabels.length>0){var r=this.getxAxisTimeScaleLabelsCoords();e={width:r.width,height:r.height},t.globals.rotateXLabels=!1}else{this.dCtx.lgWidthForSideLegends=t.config.legend.position!=="left"&&t.config.legend.position!=="right"||t.config.legend.floating?0:this.dCtx.lgRect.width;var l=t.globals.xLabelFormatter,o=X.getLargestStringFromArr(a),c=this.dCtx.dimHelpers.getLargestStringFromMultiArr(o,a);t.globals.isBarHorizontal&&(c=o=t.globals.yAxisScale[0].result.reduce(function(S,A){return S.length>A.length?S:A},0));var d=new Ye(this.dCtx.ctx),f=o;o=d.xLabelFormat(l,o,f,{i:void 0,dateFormatter:new De(this.dCtx.ctx).formatDate,w:t}),c=d.xLabelFormat(l,c,f,{i:void 0,dateFormatter:new De(this.dCtx.ctx).formatDate,w:t}),(t.config.xaxis.convertedCatToNumeric&&o===void 0||String(o).trim()==="")&&(c=o="1");var m=new V(this.dCtx.ctx),p=m.getTextRects(o,t.config.xaxis.labels.style.fontSize),x=p;if(o!==c&&(x=m.getTextRects(c,t.config.xaxis.labels.style.fontSize)),(e={width:p.width>=x.width?p.width:x.width,height:p.height>=x.height?p.height:x.height}).width*a.length>t.globals.svgWidth-this.dCtx.lgWidthForSideLegends-this.dCtx.yAxisWidth-this.dCtx.gridPad.left-this.dCtx.gridPad.right&&t.config.xaxis.labels.rotate!==0||t.config.xaxis.labels.rotateAlways){if(!t.globals.isBarHorizontal){t.globals.rotateXLabels=!0;var w=function(S){return m.getTextRects(S,t.config.xaxis.labels.style.fontSize,t.config.xaxis.labels.style.fontFamily,"rotate(".concat(t.config.xaxis.labels.rotate," 0 0)"),!1)};p=w(o),o!==c&&(x=w(c)),e.height=(p.height>x.height?p.height:x.height)/1.5,e.width=p.width>x.width?p.width:x.width}}else t.globals.rotateXLabels=!1}return t.config.xaxis.labels.show||(e={width:0,height:0}),{width:e.width,height:e.height}}},{key:"getxAxisGroupLabelsCoords",value:function(){var e,t=this.w;if(!t.globals.hasXaxisGroups)return{width:0,height:0};var a,r=((e=t.config.xaxis.group.style)===null||e===void 0?void 0:e.fontSize)||t.config.xaxis.labels.style.fontSize,l=t.globals.groups.map(function(p){return p.title}),o=X.getLargestStringFromArr(l),c=this.dCtx.dimHelpers.getLargestStringFromMultiArr(o,l),d=new V(this.dCtx.ctx),f=d.getTextRects(o,r),m=f;return o!==c&&(m=d.getTextRects(c,r)),a={width:f.width>=m.width?f.width:m.width,height:f.height>=m.height?f.height:m.height},t.config.xaxis.labels.show||(a={width:0,height:0}),{width:a.width,height:a.height}}},{key:"getxAxisTitleCoords",value:function(){var e=this.w,t=0,a=0;if(e.config.xaxis.title.text!==void 0){var r=new V(this.dCtx.ctx).getTextRects(e.config.xaxis.title.text,e.config.xaxis.title.style.fontSize);t=r.width,a=r.height}return{width:t,height:a}}},{key:"getxAxisTimeScaleLabelsCoords",value:function(){var e,t=this.w;this.dCtx.timescaleLabels=t.globals.timescaleLabels.slice();var a=this.dCtx.timescaleLabels.map(function(l){return l.value}),r=a.reduce(function(l,o){return l===void 0?(console.error("You have possibly supplied invalid Date format. Please supply a valid JavaScript Date"),0):l.length>o.length?l:o},0);return 1.05*(e=new V(this.dCtx.ctx).getTextRects(r,t.config.xaxis.labels.style.fontSize)).width*a.length>t.globals.gridWidth&&t.config.xaxis.labels.rotate!==0&&(t.globals.overlappingXLabels=!0),e}},{key:"additionalPaddingXLabels",value:function(e){var t=this,a=this.w,r=a.globals,l=a.config,o=l.xaxis.type,c=e.width;r.skipLastTimelinelabel=!1,r.skipFirstTimelinelabel=!1;var d=a.config.yaxis[0].opposite&&a.globals.isBarHorizontal,f=function(m,p){l.yaxis.length>1&&function(x){return r.collapsedSeriesIndices.indexOf(x)!==-1}(p)||function(x){if(t.dCtx.timescaleLabels&&t.dCtx.timescaleLabels.length){var w=t.dCtx.timescaleLabels[0],S=t.dCtx.timescaleLabels[t.dCtx.timescaleLabels.length-1].position+c/1.75-t.dCtx.yAxisWidthRight,A=w.position-c/1.75+t.dCtx.yAxisWidthLeft,E=a.config.legend.position==="right"&&t.dCtx.lgRect.width>0?t.dCtx.lgRect.width:0;S>r.svgWidth-r.translateX-E&&(r.skipLastTimelinelabel=!0),A<-(x.show&&!x.floating||l.chart.type!=="bar"&&l.chart.type!=="candlestick"&&l.chart.type!=="rangeBar"&&l.chart.type!=="boxPlot"?10:c/1.75)&&(r.skipFirstTimelinelabel=!0)}else o==="datetime"?t.dCtx.gridPad.right<c&&!r.rotateXLabels&&(r.skipLastTimelinelabel=!0):o!=="datetime"&&t.dCtx.gridPad.right<c/2-t.dCtx.yAxisWidthRight&&!r.rotateXLabels&&!a.config.xaxis.labels.trim&&(t.dCtx.xPadRight=c/2+1)}(m)};l.yaxis.forEach(function(m,p){d?(t.dCtx.gridPad.left<c&&(t.dCtx.xPadLeft=c/2+1),t.dCtx.xPadRight=c/2+1):f(m,p)})}}]),_}(),nn=function(){function _(e){g(this,_),this.w=e.w,this.dCtx=e}return v(_,[{key:"getyAxisLabelsCoords",value:function(){var e=this,t=this.w,a=[],r=10,l=new Ke(this.dCtx.ctx);return t.config.yaxis.map(function(o,c){var d={seriesIndex:c,dataPointIndex:-1,w:t},f=t.globals.yAxisScale[c],m=0;if(!l.isYAxisHidden(c)&&o.labels.show&&o.labels.minWidth!==void 0&&(m=o.labels.minWidth),!l.isYAxisHidden(c)&&o.labels.show&&f.result.length){var p=t.globals.yLabelFormatters[c],x=f.niceMin===Number.MIN_VALUE?0:f.niceMin,w=f.result.reduce(function(y,C){var D,L;return((D=String(p(y,d)))===null||D===void 0?void 0:D.length)>((L=String(p(C,d)))===null||L===void 0?void 0:L.length)?y:C},x),S=w=p(w,d);if(w!==void 0&&w.length!==0||(w=f.niceMax),t.globals.isBarHorizontal){r=0;var A=t.globals.labels.slice();w=X.getLargestStringFromArr(A),w=p(w,{seriesIndex:c,dataPointIndex:-1,w:t}),S=e.dCtx.dimHelpers.getLargestStringFromMultiArr(w,A)}var E=new V(e.dCtx.ctx),M="rotate(".concat(o.labels.rotate," 0 0)"),P=E.getTextRects(w,o.labels.style.fontSize,o.labels.style.fontFamily,M,!1),u=P;w!==S&&(u=E.getTextRects(S,o.labels.style.fontSize,o.labels.style.fontFamily,M,!1)),a.push({width:(m>u.width||m>P.width?m:u.width>P.width?u.width:P.width)+r,height:u.height>P.height?u.height:P.height})}else a.push({width:0,height:0})}),a}},{key:"getyAxisTitleCoords",value:function(){var e=this,t=this.w,a=[];return t.config.yaxis.map(function(r,l){if(r.show&&r.title.text!==void 0){var o=new V(e.dCtx.ctx),c="rotate(".concat(r.title.rotate," 0 0)"),d=o.getTextRects(r.title.text,r.title.style.fontSize,r.title.style.fontFamily,c,!1);a.push({width:d.width,height:d.height})}else a.push({width:0,height:0})}),a}},{key:"getTotalYAxisWidth",value:function(){var e=this.w,t=0,a=0,r=0,l=e.globals.yAxisScale.length>1?10:0,o=new Ke(this.dCtx.ctx),c=function(d,f){var m=e.config.yaxis[f].floating,p=0;d.width>0&&!m?(p=d.width+l,function(x){return e.globals.ignoreYAxisIndexes.indexOf(x)>-1}(f)&&(p=p-d.width-l)):p=m||o.isYAxisHidden(f)?0:5,e.config.yaxis[f].opposite?r+=p:a+=p,t+=p};return e.globals.yLabelsCoords.map(function(d,f){c(d,f)}),e.globals.yTitleCoords.map(function(d,f){c(d,f)}),e.globals.isBarHorizontal&&!e.config.yaxis[0].floating&&(t=e.globals.yLabelsCoords[0].width+e.globals.yTitleCoords[0].width+15),this.dCtx.yAxisWidthLeft=a,this.dCtx.yAxisWidthRight=r,t}}]),_}(),gr=function(){function _(e){g(this,_),this.w=e.w,this.dCtx=e}return v(_,[{key:"gridPadForColumnsInNumericAxis",value:function(e){var t=this.w,a=t.config,r=t.globals;if(r.noData||r.collapsedSeries.length+r.ancillaryCollapsedSeries.length===a.series.length)return 0;var l=function(w){return["bar","rangeBar","candlestick","boxPlot"].includes(w)},o=a.chart.type,c=0,d=l(o)?a.series.length:1;r.comboBarCount>0&&(d=r.comboBarCount),r.collapsedSeries.forEach(function(w){l(w.type)&&(d-=1)}),a.chart.stacked&&(d=1);var f=l(o)||r.comboBarCount>0,m=Math.abs(r.initialMaxX-r.initialMinX);if(f&&r.isXNumeric&&!r.isBarHorizontal&&d>0&&m!==0){m<=3&&(m=r.dataPoints);var p=m/e,x=r.minXDiff&&r.minXDiff/p>0?r.minXDiff/p:0;x>e/2&&(x/=2),(c=x*parseInt(a.plotOptions.bar.columnWidth,10)/100)<1&&(c=1),r.barPadForNumericAxis=c}return c}},{key:"gridPadFortitleSubtitle",value:function(){var e=this,t=this.w,a=t.globals,r=this.dCtx.isSparkline||!a.axisCharts?0:10;["title","subtitle"].forEach(function(c){t.config[c].text!==void 0?r+=t.config[c].margin:r+=e.dCtx.isSparkline||!a.axisCharts?0:5}),!t.config.legend.show||t.config.legend.position!=="bottom"||t.config.legend.floating||a.axisCharts||(r+=10);var l=this.dCtx.dimHelpers.getTitleSubtitleCoords("title"),o=this.dCtx.dimHelpers.getTitleSubtitleCoords("subtitle");a.gridHeight-=l.height+o.height+r,a.translateY+=l.height+o.height+r}},{key:"setGridXPosForDualYAxis",value:function(e,t){var a=this.w,r=new Ke(this.dCtx.ctx);a.config.yaxis.forEach(function(l,o){a.globals.ignoreYAxisIndexes.indexOf(o)!==-1||l.floating||r.isYAxisHidden(o)||(l.opposite&&(a.globals.translateX-=t[o].width+e[o].width+parseInt(l.labels.style.fontSize,10)/1.2+12),a.globals.translateX<2&&(a.globals.translateX=2))})}}]),_}(),wi=function(){function _(e){g(this,_),this.ctx=e,this.w=e.w,this.lgRect={},this.yAxisWidth=0,this.yAxisWidthLeft=0,this.yAxisWidthRight=0,this.xAxisHeight=0,this.isSparkline=this.w.config.chart.sparkline.enabled,this.dimHelpers=new Vi(this),this.dimYAxis=new nn(this),this.dimXAxis=new fr(this),this.dimGrid=new gr(this),this.lgWidthForSideLegends=0,this.gridPad=this.w.config.grid.padding,this.xPadRight=0,this.xPadLeft=0}return v(_,[{key:"plotCoords",value:function(){var e=this,t=this.w,a=t.globals;this.lgRect=this.dimHelpers.getLegendsRect(),this.datalabelsCoords={width:0,height:0};var r=Array.isArray(t.config.stroke.width)?Math.max.apply(Math,ie(t.config.stroke.width)):t.config.stroke.width;this.isSparkline&&((t.config.markers.discrete.length>0||t.config.markers.size>0)&&Object.entries(this.gridPad).forEach(function(o){var c=$(o,2),d=c[0],f=c[1];e.gridPad[d]=Math.max(f,e.w.globals.markers.largestSize/1.5)}),this.gridPad.top=Math.max(r/2,this.gridPad.top),this.gridPad.bottom=Math.max(r/2,this.gridPad.bottom)),a.axisCharts?this.setDimensionsForAxisCharts():this.setDimensionsForNonAxisCharts(),this.dimGrid.gridPadFortitleSubtitle(),a.gridHeight=a.gridHeight-this.gridPad.top-this.gridPad.bottom,a.gridWidth=a.gridWidth-this.gridPad.left-this.gridPad.right-this.xPadRight-this.xPadLeft;var l=this.dimGrid.gridPadForColumnsInNumericAxis(a.gridWidth);a.gridWidth=a.gridWidth-2*l,a.translateX=a.translateX+this.gridPad.left+this.xPadLeft+(l>0?l:0),a.translateY=a.translateY+this.gridPad.top}},{key:"setDimensionsForAxisCharts",value:function(){var e=this,t=this.w,a=t.globals,r=this.dimYAxis.getyAxisLabelsCoords(),l=this.dimYAxis.getyAxisTitleCoords();a.isSlopeChart&&(this.datalabelsCoords=this.dimHelpers.getDatalabelsRect()),t.globals.yLabelsCoords=[],t.globals.yTitleCoords=[],t.config.yaxis.map(function(w,S){t.globals.yLabelsCoords.push({width:r[S].width,index:S}),t.globals.yTitleCoords.push({width:l[S].width,index:S})}),this.yAxisWidth=this.dimYAxis.getTotalYAxisWidth();var o=this.dimXAxis.getxAxisLabelsCoords(),c=this.dimXAxis.getxAxisGroupLabelsCoords(),d=this.dimXAxis.getxAxisTitleCoords();this.conditionalChecksForAxisCoords(o,d,c),a.translateXAxisY=t.globals.rotateXLabels?this.xAxisHeight/8:-4,a.translateXAxisX=t.globals.rotateXLabels&&t.globals.isXNumeric&&t.config.xaxis.labels.rotate<=-45?-this.xAxisWidth/4:0,t.globals.isBarHorizontal&&(a.rotateXLabels=!1,a.translateXAxisY=parseInt(t.config.xaxis.labels.style.fontSize,10)/1.5*-1),a.translateXAxisY=a.translateXAxisY+t.config.xaxis.labels.offsetY,a.translateXAxisX=a.translateXAxisX+t.config.xaxis.labels.offsetX;var f=this.yAxisWidth,m=this.xAxisHeight;a.xAxisLabelsHeight=this.xAxisHeight-d.height,a.xAxisGroupLabelsHeight=a.xAxisLabelsHeight-o.height,a.xAxisLabelsWidth=this.xAxisWidth,a.xAxisHeight=this.xAxisHeight;var p=10;(t.config.chart.type==="radar"||this.isSparkline)&&(f=0,m=0),this.isSparkline&&(this.lgRect={height:0,width:0}),(this.isSparkline||t.config.chart.type==="treemap")&&(f=0,m=0,p=0),this.isSparkline||t.config.chart.type==="treemap"||this.dimXAxis.additionalPaddingXLabels(o);var x=function(){a.translateX=f+e.datalabelsCoords.width,a.gridHeight=a.svgHeight-e.lgRect.height-m-(e.isSparkline||t.config.chart.type==="treemap"?0:t.globals.rotateXLabels?10:15),a.gridWidth=a.svgWidth-f-2*e.datalabelsCoords.width};switch(t.config.xaxis.position==="top"&&(p=a.xAxisHeight-t.config.xaxis.axisTicks.height-5),t.config.legend.position){case"bottom":a.translateY=p,x();break;case"top":a.translateY=this.lgRect.height+p,x();break;case"left":a.translateY=p,a.translateX=this.lgRect.width+f+this.datalabelsCoords.width,a.gridHeight=a.svgHeight-m-12,a.gridWidth=a.svgWidth-this.lgRect.width-f-2*this.datalabelsCoords.width;break;case"right":a.translateY=p,a.translateX=f+this.datalabelsCoords.width,a.gridHeight=a.svgHeight-m-12,a.gridWidth=a.svgWidth-this.lgRect.width-f-2*this.datalabelsCoords.width-5;break;default:throw new Error("Legend position not supported")}this.dimGrid.setGridXPosForDualYAxis(l,r),new Wi(this.ctx).setYAxisXPosition(r,l)}},{key:"setDimensionsForNonAxisCharts",value:function(){var e=this.w,t=e.globals,a=e.config,r=0;e.config.legend.show&&!e.config.legend.floating&&(r=20);var l=a.chart.type==="pie"||a.chart.type==="polarArea"||a.chart.type==="donut"?"pie":"radialBar",o=a.plotOptions[l].offsetY,c=a.plotOptions[l].offsetX;if(!a.legend.show||a.legend.floating){t.gridHeight=t.svgHeight;var d=t.dom.elWrap.getBoundingClientRect().width;return t.gridWidth=Math.min(d,t.gridHeight),t.translateY=o,void(t.translateX=c+(t.svgWidth-t.gridWidth)/2)}switch(a.legend.position){case"bottom":t.gridHeight=t.svgHeight-this.lgRect.height,t.gridWidth=t.svgWidth,t.translateY=o-10,t.translateX=c+(t.svgWidth-t.gridWidth)/2;break;case"top":t.gridHeight=t.svgHeight-this.lgRect.height,t.gridWidth=t.svgWidth,t.translateY=this.lgRect.height+o+10,t.translateX=c+(t.svgWidth-t.gridWidth)/2;break;case"left":t.gridWidth=t.svgWidth-this.lgRect.width-r,t.gridHeight=a.chart.height!=="auto"?t.svgHeight:t.gridWidth,t.translateY=o,t.translateX=c+this.lgRect.width+r;break;case"right":t.gridWidth=t.svgWidth-this.lgRect.width-r-5,t.gridHeight=a.chart.height!=="auto"?t.svgHeight:t.gridWidth,t.translateY=o,t.translateX=c+10;break;default:throw new Error("Legend position not supported")}}},{key:"conditionalChecksForAxisCoords",value:function(e,t,a){var r=this.w,l=r.globals.hasXaxisGroups?2:1,o=a.height+e.height+t.height,c=r.globals.isMultiLineX?1.2:r.globals.LINE_HEIGHT_RATIO,d=r.globals.rotateXLabels?22:10,f=r.globals.rotateXLabels&&r.config.legend.position==="bottom"?10:0;this.xAxisHeight=o*c+l*d+f,this.xAxisWidth=e.width,this.xAxisHeight-t.height>r.config.xaxis.labels.maxHeight&&(this.xAxisHeight=r.config.xaxis.labels.maxHeight),r.config.xaxis.labels.minHeight&&this.xAxisHeight<r.config.xaxis.labels.minHeight&&(this.xAxisHeight=r.config.xaxis.labels.minHeight),r.config.xaxis.floating&&(this.xAxisHeight=0);var m=0,p=0;r.config.yaxis.forEach(function(x){m+=x.labels.minWidth,p+=x.labels.maxWidth}),this.yAxisWidth<m&&(this.yAxisWidth=m),this.yAxisWidth>p&&(this.yAxisWidth=p)}}]),_}(),pr=function(){function _(e){g(this,_),this.w=e.w,this.lgCtx=e}return v(_,[{key:"getLegendStyles",value:function(){var e,t,a,r=document.createElement("style");r.setAttribute("type","text/css");var l=((e=this.lgCtx.ctx)===null||e===void 0||(t=e.opts)===null||t===void 0||(a=t.chart)===null||a===void 0?void 0:a.nonce)||this.w.config.chart.nonce;l&&r.setAttribute("nonce",l);var o=document.createTextNode(`
      .apexcharts-flip-y {
        transform: scaleY(-1) translateY(-100%);
        transform-origin: top;
        transform-box: fill-box;
      }
      .apexcharts-flip-x {
        transform: scaleX(-1);
        transform-origin: center;
        transform-box: fill-box;
      }
      .apexcharts-legend {
        display: flex;
        overflow: auto;
        padding: 0 10px;
      }
      .apexcharts-legend.apx-legend-position-bottom, .apexcharts-legend.apx-legend-position-top {
        flex-wrap: wrap
      }
      .apexcharts-legend.apx-legend-position-right, .apexcharts-legend.apx-legend-position-left {
        flex-direction: column;
        bottom: 0;
      }
      .apexcharts-legend.apx-legend-position-bottom.apexcharts-align-left, .apexcharts-legend.apx-legend-position-top.apexcharts-align-left, .apexcharts-legend.apx-legend-position-right, .apexcharts-legend.apx-legend-position-left {
        justify-content: flex-start;
      }
      .apexcharts-legend.apx-legend-position-bottom.apexcharts-align-center, .apexcharts-legend.apx-legend-position-top.apexcharts-align-center {
        justify-content: center;
      }
      .apexcharts-legend.apx-legend-position-bottom.apexcharts-align-right, .apexcharts-legend.apx-legend-position-top.apexcharts-align-right {
        justify-content: flex-end;
      }
      .apexcharts-legend-series {
        cursor: pointer;
        line-height: normal;
        display: flex;
        align-items: center;
      }
      .apexcharts-legend-text {
        position: relative;
        font-size: 14px;
      }
      .apexcharts-legend-text *, .apexcharts-legend-marker * {
        pointer-events: none;
      }
      .apexcharts-legend-marker {
        position: relative;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        margin-right: 1px;
      }

      .apexcharts-legend-series.apexcharts-no-click {
        cursor: auto;
      }
      .apexcharts-legend .apexcharts-hidden-zero-series, .apexcharts-legend .apexcharts-hidden-null-series {
        display: none !important;
      }
      .apexcharts-inactive-legend {
        opacity: 0.45;
      }`);return r.appendChild(o),r}},{key:"getLegendDimensions",value:function(){var e=this.w.globals.dom.baseEl.querySelector(".apexcharts-legend").getBoundingClientRect(),t=e.width;return{clwh:e.height,clww:t}}},{key:"appendToForeignObject",value:function(){this.w.globals.dom.elLegendForeign.appendChild(this.getLegendStyles())}},{key:"toggleDataSeries",value:function(e,t){var a=this,r=this.w;if(r.globals.axisCharts||r.config.chart.type==="radialBar"){r.globals.resized=!0;var l=null,o=null;r.globals.risingSeries=[],r.globals.axisCharts?(l=r.globals.dom.baseEl.querySelector(".apexcharts-series[data\\:realIndex='".concat(e,"']")),o=parseInt(l.getAttribute("data:realIndex"),10)):(l=r.globals.dom.baseEl.querySelector(".apexcharts-series[rel='".concat(e+1,"']")),o=parseInt(l.getAttribute("rel"),10)-1),t?[{cs:r.globals.collapsedSeries,csi:r.globals.collapsedSeriesIndices},{cs:r.globals.ancillaryCollapsedSeries,csi:r.globals.ancillaryCollapsedSeriesIndices}].forEach(function(m){a.riseCollapsedSeries(m.cs,m.csi,o)}):this.hideSeries({seriesEl:l,realIndex:o})}else{var c=r.globals.dom.Paper.select(" .apexcharts-series[rel='".concat(e+1,"'] path")),d=r.config.chart.type;if(d==="pie"||d==="polarArea"||d==="donut"){var f=r.config.plotOptions.pie.donut.labels;new V(this.lgCtx.ctx).pathMouseDown(c.members[0],null),this.lgCtx.ctx.pie.printDataLabelsInner(c.members[0].node,f)}c.fire("click")}}},{key:"getSeriesAfterCollapsing",value:function(e){var t=e.realIndex,a=this.w,r=a.globals,l=X.clone(a.config.series);if(r.axisCharts){var o=a.config.yaxis[r.seriesYAxisReverseMap[t]],c={index:t,data:l[t].data.slice(),type:l[t].type||a.config.chart.type};if(o&&o.show&&o.showAlways)r.ancillaryCollapsedSeriesIndices.indexOf(t)<0&&(r.ancillaryCollapsedSeries.push(c),r.ancillaryCollapsedSeriesIndices.push(t));else if(r.collapsedSeriesIndices.indexOf(t)<0){r.collapsedSeries.push(c),r.collapsedSeriesIndices.push(t);var d=r.risingSeries.indexOf(t);r.risingSeries.splice(d,1)}}else r.collapsedSeries.push({index:t,data:l[t]}),r.collapsedSeriesIndices.push(t);return r.allSeriesCollapsed=r.collapsedSeries.length+r.ancillaryCollapsedSeries.length===a.config.series.length,this._getSeriesBasedOnCollapsedState(l)}},{key:"hideSeries",value:function(e){for(var t=e.seriesEl,a=e.realIndex,r=this.w,l=this.getSeriesAfterCollapsing({realIndex:a}),o=t.childNodes,c=0;c<o.length;c++)o[c].classList.contains("apexcharts-series-markers-wrap")&&(o[c].classList.contains("apexcharts-hide")?o[c].classList.remove("apexcharts-hide"):o[c].classList.add("apexcharts-hide"));this.lgCtx.ctx.updateHelpers._updateSeries(l,r.config.chart.animations.dynamicAnimation.enabled)}},{key:"riseCollapsedSeries",value:function(e,t,a){var r=this.w,l=X.clone(r.config.series);if(e.length>0){for(var o=0;o<e.length;o++)e[o].index===a&&(r.globals.axisCharts?l[a].data=e[o].data.slice():l[a]=e[o].data,l[a].hidden=!1,e.splice(o,1),t.splice(o,1),r.globals.risingSeries.push(a));l=this._getSeriesBasedOnCollapsedState(l),this.lgCtx.ctx.updateHelpers._updateSeries(l,r.config.chart.animations.dynamicAnimation.enabled)}}},{key:"_getSeriesBasedOnCollapsedState",value:function(e){var t=this.w,a=0;return t.globals.axisCharts?e.forEach(function(r,l){t.globals.collapsedSeriesIndices.indexOf(l)<0&&t.globals.ancillaryCollapsedSeriesIndices.indexOf(l)<0||(e[l].data=[],a++)}):e.forEach(function(r,l){!t.globals.collapsedSeriesIndices.indexOf(l)<0&&(e[l]=0,a++)}),t.globals.allSeriesCollapsed=a===e.length,e}}]),_}(),rn=function(){function _(e){g(this,_),this.ctx=e,this.w=e.w,this.onLegendClick=this.onLegendClick.bind(this),this.onLegendHovered=this.onLegendHovered.bind(this),this.isBarsDistributed=this.w.config.chart.type==="bar"&&this.w.config.plotOptions.bar.distributed&&this.w.config.series.length===1,this.legendHelpers=new pr(this)}return v(_,[{key:"init",value:function(){var e=this.w,t=e.globals,a=e.config,r=a.legend.showForSingleSeries&&t.series.length===1||this.isBarsDistributed||t.series.length>1;if(this.legendHelpers.appendToForeignObject(),(r||!t.axisCharts)&&a.legend.show){for(;t.dom.elLegendWrap.firstChild;)t.dom.elLegendWrap.removeChild(t.dom.elLegendWrap.firstChild);this.drawLegends(),a.legend.position==="bottom"||a.legend.position==="top"?this.legendAlignHorizontal():a.legend.position!=="right"&&a.legend.position!=="left"||this.legendAlignVertical()}}},{key:"createLegendMarker",value:function(e){var t=e.i,a=e.fillcolor,r=this.w,l=document.createElement("span");l.classList.add("apexcharts-legend-marker");var o=r.config.legend.markers.shape||r.config.markers.shape,c=o;Array.isArray(o)&&(c=o[t]);var d=Array.isArray(r.config.legend.markers.size)?parseFloat(r.config.legend.markers.size[t]):parseFloat(r.config.legend.markers.size),f=Array.isArray(r.config.legend.markers.offsetX)?parseFloat(r.config.legend.markers.offsetX[t]):parseFloat(r.config.legend.markers.offsetX),m=Array.isArray(r.config.legend.markers.offsetY)?parseFloat(r.config.legend.markers.offsetY[t]):parseFloat(r.config.legend.markers.offsetY),p=Array.isArray(r.config.legend.markers.strokeWidth)?parseFloat(r.config.legend.markers.strokeWidth[t]):parseFloat(r.config.legend.markers.strokeWidth),x=l.style;if(x.height=2*(d+p)+"px",x.width=2*(d+p)+"px",x.left=f+"px",x.top=m+"px",r.config.legend.markers.customHTML)x.background="transparent",x.color=a[t],Array.isArray(r.config.legend.markers.customHTML)?r.config.legend.markers.customHTML[t]&&(l.innerHTML=r.config.legend.markers.customHTML[t]()):l.innerHTML=r.config.legend.markers.customHTML();else{var w=new Nt(this.ctx).getMarkerConfig({cssClass:"apexcharts-legend-marker apexcharts-marker apexcharts-marker-".concat(c),seriesIndex:t,strokeWidth:p,size:d}),S=SVG(l).size("100%","100%"),A=new V(this.ctx).drawMarker(0,0,Y(Y({},w),{},{pointFillColor:Array.isArray(a)?a[t]:w.pointFillColor,shape:c}));SVG.select(".apexcharts-legend-marker.apexcharts-marker").members.forEach(function(E){E.node.classList.contains("apexcharts-marker-triangle")?E.node.style.transform="translate(50%, 45%)":E.node.style.transform="translate(50%, 50%)"}),S.add(A)}return l}},{key:"drawLegends",value:function(){var e=this,t=this.w,a=t.config.legend.fontFamily,r=t.globals.seriesNames,l=t.config.legend.markers.fillColors?t.config.legend.markers.fillColors.slice():t.globals.colors.slice();if(t.config.chart.type==="heatmap"){var o=t.config.plotOptions.heatmap.colorScale.ranges;r=o.map(function(C){return C.name?C.name:C.from+" - "+C.to}),l=o.map(function(C){return C.color})}else this.isBarsDistributed&&(r=t.globals.labels.slice());t.config.legend.customLegendItems.length&&(r=t.config.legend.customLegendItems);for(var c=t.globals.legendFormatter,d=t.config.legend.inverseOrder,f=d?r.length-1:0;d?f>=0:f<=r.length-1;d?f--:f++){var m,p=c(r[f],{seriesIndex:f,w:t}),x=!1,w=!1;if(t.globals.collapsedSeries.length>0)for(var S=0;S<t.globals.collapsedSeries.length;S++)t.globals.collapsedSeries[S].index===f&&(x=!0);if(t.globals.ancillaryCollapsedSeriesIndices.length>0)for(var A=0;A<t.globals.ancillaryCollapsedSeriesIndices.length;A++)t.globals.ancillaryCollapsedSeriesIndices[A]===f&&(w=!0);var E=this.createLegendMarker({i:f,fillcolor:l});V.setAttrs(E,{rel:f+1,"data:collapsed":x||w}),(x||w)&&E.classList.add("apexcharts-inactive-legend");var M=document.createElement("div"),P=document.createElement("span");P.classList.add("apexcharts-legend-text"),P.innerHTML=Array.isArray(p)?p.join(" "):p;var u=t.config.legend.labels.useSeriesColors?t.globals.colors[f]:Array.isArray(t.config.legend.labels.colors)?(m=t.config.legend.labels.colors)===null||m===void 0?void 0:m[f]:t.config.legend.labels.colors;u||(u=t.config.chart.foreColor),P.style.color=u,P.style.fontSize=parseFloat(t.config.legend.fontSize)+"px",P.style.fontWeight=t.config.legend.fontWeight,P.style.fontFamily=a||t.config.chart.fontFamily,V.setAttrs(P,{rel:f+1,i:f,"data:default-text":encodeURIComponent(p),"data:collapsed":x||w}),M.appendChild(E),M.appendChild(P);var y=new se(this.ctx);t.config.legend.showForZeroSeries||y.getSeriesTotalByIndex(f)===0&&y.seriesHaveSameValues(f)&&!y.isSeriesNull(f)&&t.globals.collapsedSeriesIndices.indexOf(f)===-1&&t.globals.ancillaryCollapsedSeriesIndices.indexOf(f)===-1&&M.classList.add("apexcharts-hidden-zero-series"),t.config.legend.showForNullSeries||y.isSeriesNull(f)&&t.globals.collapsedSeriesIndices.indexOf(f)===-1&&t.globals.ancillaryCollapsedSeriesIndices.indexOf(f)===-1&&M.classList.add("apexcharts-hidden-null-series"),t.globals.dom.elLegendWrap.appendChild(M),t.globals.dom.elLegendWrap.classList.add("apexcharts-align-".concat(t.config.legend.horizontalAlign)),t.globals.dom.elLegendWrap.classList.add("apx-legend-position-"+t.config.legend.position),M.classList.add("apexcharts-legend-series"),M.style.margin="".concat(t.config.legend.itemMargin.vertical,"px ").concat(t.config.legend.itemMargin.horizontal,"px"),t.globals.dom.elLegendWrap.style.width=t.config.legend.width?t.config.legend.width+"px":"",t.globals.dom.elLegendWrap.style.height=t.config.legend.height?t.config.legend.height+"px":"",V.setAttrs(M,{rel:f+1,seriesName:X.escapeString(r[f]),"data:collapsed":x||w}),(x||w)&&M.classList.add("apexcharts-inactive-legend"),t.config.legend.onItemClick.toggleDataSeries||M.classList.add("apexcharts-no-click")}t.globals.dom.elWrap.addEventListener("click",e.onLegendClick,!0),t.config.legend.onItemHover.highlightDataSeries&&t.config.legend.customLegendItems.length===0&&(t.globals.dom.elWrap.addEventListener("mousemove",e.onLegendHovered,!0),t.globals.dom.elWrap.addEventListener("mouseout",e.onLegendHovered,!0))}},{key:"setLegendWrapXY",value:function(e,t){var a=this.w,r=a.globals.dom.elLegendWrap,l=r.clientHeight,o=0,c=0;if(a.config.legend.position==="bottom")c=a.globals.svgHeight-Math.min(l,a.globals.svgHeight/2)-5;else if(a.config.legend.position==="top"){var d=new wi(this.ctx),f=d.dimHelpers.getTitleSubtitleCoords("title").height,m=d.dimHelpers.getTitleSubtitleCoords("subtitle").height;c=(f>0?f-10:0)+(m>0?m-10:0)}r.style.position="absolute",o=o+e+a.config.legend.offsetX,c=c+t+a.config.legend.offsetY,r.style.left=o+"px",r.style.top=c+"px",a.config.legend.position==="right"&&(r.style.left="auto",r.style.right=25+a.config.legend.offsetX+"px"),["width","height"].forEach(function(p){r.style[p]&&(r.style[p]=parseInt(a.config.legend[p],10)+"px")})}},{key:"legendAlignHorizontal",value:function(){var e=this.w;e.globals.dom.elLegendWrap.style.right=0;var t=new wi(this.ctx),a=t.dimHelpers.getTitleSubtitleCoords("title"),r=t.dimHelpers.getTitleSubtitleCoords("subtitle"),l=0;e.config.legend.position==="top"&&(l=a.height+r.height+e.config.title.margin+e.config.subtitle.margin-10),this.setLegendWrapXY(20,l)}},{key:"legendAlignVertical",value:function(){var e=this.w,t=this.legendHelpers.getLegendDimensions(),a=0;e.config.legend.position==="left"&&(a=20),e.config.legend.position==="right"&&(a=e.globals.svgWidth-t.clww-10),this.setLegendWrapXY(a,20)}},{key:"onLegendHovered",value:function(e){var t=this.w,a=e.target.classList.contains("apexcharts-legend-series")||e.target.classList.contains("apexcharts-legend-text")||e.target.classList.contains("apexcharts-legend-marker");if(t.config.chart.type==="heatmap"||this.isBarsDistributed){if(a){var r=parseInt(e.target.getAttribute("rel"),10)-1;this.ctx.events.fireEvent("legendHover",[this.ctx,r,this.w]),new vt(this.ctx).highlightRangeInSeries(e,e.target)}}else!e.target.classList.contains("apexcharts-inactive-legend")&&a&&new vt(this.ctx).toggleSeriesOnHover(e,e.target)}},{key:"onLegendClick",value:function(e){var t=this.w;if(!t.config.legend.customLegendItems.length&&(e.target.classList.contains("apexcharts-legend-series")||e.target.classList.contains("apexcharts-legend-text")||e.target.classList.contains("apexcharts-legend-marker"))){var a=parseInt(e.target.getAttribute("rel"),10)-1,r=e.target.getAttribute("data:collapsed")==="true",l=this.w.config.chart.events.legendClick;typeof l=="function"&&l(this.ctx,a,this.w),this.ctx.events.fireEvent("legendClick",[this.ctx,a,this.w]);var o=this.w.config.legend.markers.onClick;typeof o=="function"&&e.target.classList.contains("apexcharts-legend-marker")&&(o(this.ctx,a,this.w),this.ctx.events.fireEvent("legendMarkerClick",[this.ctx,a,this.w])),t.config.chart.type!=="treemap"&&t.config.chart.type!=="heatmap"&&!this.isBarsDistributed&&t.config.legend.onItemClick.toggleDataSeries&&this.legendHelpers.toggleDataSeries(a,r)}}}]),_}(),va=function(){function _(e){g(this,_),this.ctx=e,this.w=e.w;var t=this.w;this.ev=this.w.config.chart.events,this.selectedClass="apexcharts-selected",this.localeValues=this.w.globals.locale.toolbar,this.minX=t.globals.minX,this.maxX=t.globals.maxX}return v(_,[{key:"createToolbar",value:function(){var e=this,t=this.w,a=function(){return document.createElement("div")},r=a();if(r.setAttribute("class","apexcharts-toolbar"),r.style.top=t.config.chart.toolbar.offsetY+"px",r.style.right=3-t.config.chart.toolbar.offsetX+"px",t.globals.dom.elWrap.appendChild(r),this.elZoom=a(),this.elZoomIn=a(),this.elZoomOut=a(),this.elPan=a(),this.elSelection=a(),this.elZoomReset=a(),this.elMenuIcon=a(),this.elMenu=a(),this.elCustomIcons=[],this.t=t.config.chart.toolbar.tools,Array.isArray(this.t.customIcons))for(var l=0;l<this.t.customIcons.length;l++)this.elCustomIcons.push(a());var o=[],c=function(p,x,w){var S=p.toLowerCase();e.t[S]&&t.config.chart.zoom.enabled&&o.push({el:x,icon:typeof e.t[S]=="string"?e.t[S]:w,title:e.localeValues[p],class:"apexcharts-".concat(S,"-icon")})};c("zoomIn",this.elZoomIn,`<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
    <path d="M0 0h24v24H0z" fill="none"/>
    <path d="M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"/>
</svg>
`),c("zoomOut",this.elZoomOut,`<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
    <path d="M0 0h24v24H0z" fill="none"/>
    <path d="M7 11v2h10v-2H7zm5-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"/>
</svg>
`);var d=function(p){e.t[p]&&t.config.chart[p].enabled&&o.push({el:p==="zoom"?e.elZoom:e.elSelection,icon:typeof e.t[p]=="string"?e.t[p]:p==="zoom"?`<svg xmlns="http://www.w3.org/2000/svg" fill="#000000" height="24" viewBox="0 0 24 24" width="24">
    <path d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"/>
    <path d="M0 0h24v24H0V0z" fill="none"/>
    <path d="M12 10h-2v2H9v-2H7V9h2V7h1v2h2v1z"/>
</svg>`:`<svg fill="#6E8192" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">
    <path d="M0 0h24v24H0z" fill="none"/>
    <path d="M3 5h2V3c-1.1 0-2 .9-2 2zm0 8h2v-2H3v2zm4 8h2v-2H7v2zM3 9h2V7H3v2zm10-6h-2v2h2V3zm6 0v2h2c0-1.1-.9-2-2-2zM5 21v-2H3c0 1.1.9 2 2 2zm-2-4h2v-2H3v2zM9 3H7v2h2V3zm2 18h2v-2h-2v2zm8-8h2v-2h-2v2zm0 8c1.1 0 2-.9 2-2h-2v2zm0-12h2V7h-2v2zm0 8h2v-2h-2v2zm-4 4h2v-2h-2v2zm0-16h2V3h-2v2z"/>
</svg>`,title:e.localeValues[p==="zoom"?"selectionZoom":"selection"],class:t.globals.isTouchDevice?"apexcharts-element-hidden":"apexcharts-".concat(p,"-icon")})};d("zoom"),d("selection"),this.t.pan&&t.config.chart.zoom.enabled&&o.push({el:this.elPan,icon:typeof this.t.pan=="string"?this.t.pan:`<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" fill="#000000" height="24" viewBox="0 0 24 24" width="24">
    <defs>
        <path d="M0 0h24v24H0z" id="a"/>
    </defs>
    <clipPath id="b">
        <use overflow="visible" xlink:href="#a"/>
    </clipPath>
    <path clip-path="url(#b)" d="M23 5.5V20c0 2.2-1.8 4-4 4h-7.3c-1.08 0-2.1-.43-2.85-1.19L1 14.83s1.26-1.23 1.3-1.25c.22-.19.49-.29.79-.29.22 0 .42.06.6.16.04.01 4.31 2.46 4.31 2.46V4c0-.83.67-1.5 1.5-1.5S11 3.17 11 4v7h1V1.5c0-.83.67-1.5 1.5-1.5S15 .67 15 1.5V11h1V2.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5V11h1V5.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5z"/>
</svg>`,title:this.localeValues.pan,class:t.globals.isTouchDevice?"apexcharts-element-hidden":"apexcharts-pan-icon"}),c("reset",this.elZoomReset,`<svg fill="#000000" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">
    <path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"/>
    <path d="M0 0h24v24H0z" fill="none"/>
</svg>`),this.t.download&&o.push({el:this.elMenuIcon,icon:typeof this.t.download=="string"?this.t.download:'<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0V0z"/><path d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"/></svg>',title:this.localeValues.menu,class:"apexcharts-menu-icon"});for(var f=0;f<this.elCustomIcons.length;f++)o.push({el:this.elCustomIcons[f],icon:this.t.customIcons[f].icon,title:this.t.customIcons[f].title,index:this.t.customIcons[f].index,class:"apexcharts-toolbar-custom-icon "+this.t.customIcons[f].class});o.forEach(function(p,x){p.index&&X.moveIndexInArray(o,x,p.index)});for(var m=0;m<o.length;m++)V.setAttrs(o[m].el,{class:o[m].class,title:o[m].title}),o[m].el.innerHTML=o[m].icon,r.appendChild(o[m].el);this._createHamburgerMenu(r),t.globals.zoomEnabled?this.elZoom.classList.add(this.selectedClass):t.globals.panEnabled?this.elPan.classList.add(this.selectedClass):t.globals.selectionEnabled&&this.elSelection.classList.add(this.selectedClass),this.addToolbarEventListeners()}},{key:"_createHamburgerMenu",value:function(e){this.elMenuItems=[],e.appendChild(this.elMenu),V.setAttrs(this.elMenu,{class:"apexcharts-menu"});for(var t=[{name:"exportSVG",title:this.localeValues.exportToSVG},{name:"exportPNG",title:this.localeValues.exportToPNG},{name:"exportCSV",title:this.localeValues.exportToCSV}],a=0;a<t.length;a++)this.elMenuItems.push(document.createElement("div")),this.elMenuItems[a].innerHTML=t[a].title,V.setAttrs(this.elMenuItems[a],{class:"apexcharts-menu-item ".concat(t[a].name),title:t[a].title}),this.elMenu.appendChild(this.elMenuItems[a])}},{key:"addToolbarEventListeners",value:function(){var e=this;this.elZoomReset.addEventListener("click",this.handleZoomReset.bind(this)),this.elSelection.addEventListener("click",this.toggleZoomSelection.bind(this,"selection")),this.elZoom.addEventListener("click",this.toggleZoomSelection.bind(this,"zoom")),this.elZoomIn.addEventListener("click",this.handleZoomIn.bind(this)),this.elZoomOut.addEventListener("click",this.handleZoomOut.bind(this)),this.elPan.addEventListener("click",this.togglePanning.bind(this)),this.elMenuIcon.addEventListener("click",this.toggleMenu.bind(this)),this.elMenuItems.forEach(function(a){a.classList.contains("exportSVG")?a.addEventListener("click",e.handleDownload.bind(e,"svg")):a.classList.contains("exportPNG")?a.addEventListener("click",e.handleDownload.bind(e,"png")):a.classList.contains("exportCSV")&&a.addEventListener("click",e.handleDownload.bind(e,"csv"))});for(var t=0;t<this.t.customIcons.length;t++)this.elCustomIcons[t].addEventListener("click",this.t.customIcons[t].click.bind(this,this.ctx,this.ctx.w))}},{key:"toggleZoomSelection",value:function(e){this.ctx.getSyncedCharts().forEach(function(t){t.ctx.toolbar.toggleOtherControls();var a=e==="selection"?t.ctx.toolbar.elSelection:t.ctx.toolbar.elZoom,r=e==="selection"?"selectionEnabled":"zoomEnabled";t.w.globals[r]=!t.w.globals[r],a.classList.contains(t.ctx.toolbar.selectedClass)?a.classList.remove(t.ctx.toolbar.selectedClass):a.classList.add(t.ctx.toolbar.selectedClass)})}},{key:"getToolbarIconsReference",value:function(){var e=this.w;this.elZoom||(this.elZoom=e.globals.dom.baseEl.querySelector(".apexcharts-zoom-icon")),this.elPan||(this.elPan=e.globals.dom.baseEl.querySelector(".apexcharts-pan-icon")),this.elSelection||(this.elSelection=e.globals.dom.baseEl.querySelector(".apexcharts-selection-icon"))}},{key:"enableZoomPanFromToolbar",value:function(e){this.toggleOtherControls(),e==="pan"?this.w.globals.panEnabled=!0:this.w.globals.zoomEnabled=!0;var t=e==="pan"?this.elPan:this.elZoom,a=e==="pan"?this.elZoom:this.elPan;t&&t.classList.add(this.selectedClass),a&&a.classList.remove(this.selectedClass)}},{key:"togglePanning",value:function(){this.ctx.getSyncedCharts().forEach(function(e){e.ctx.toolbar.toggleOtherControls(),e.w.globals.panEnabled=!e.w.globals.panEnabled,e.ctx.toolbar.elPan.classList.contains(e.ctx.toolbar.selectedClass)?e.ctx.toolbar.elPan.classList.remove(e.ctx.toolbar.selectedClass):e.ctx.toolbar.elPan.classList.add(e.ctx.toolbar.selectedClass)})}},{key:"toggleOtherControls",value:function(){var e=this,t=this.w;t.globals.panEnabled=!1,t.globals.zoomEnabled=!1,t.globals.selectionEnabled=!1,this.getToolbarIconsReference(),[this.elPan,this.elSelection,this.elZoom].forEach(function(a){a&&a.classList.remove(e.selectedClass)})}},{key:"handleZoomIn",value:function(){var e=this.w;e.globals.isRangeBar&&(this.minX=e.globals.minY,this.maxX=e.globals.maxY);var t=(this.minX+this.maxX)/2,a=(this.minX+t)/2,r=(this.maxX+t)/2,l=this._getNewMinXMaxX(a,r);e.globals.disableZoomIn||this.zoomUpdateOptions(l.minX,l.maxX)}},{key:"handleZoomOut",value:function(){var e=this.w;if(e.globals.isRangeBar&&(this.minX=e.globals.minY,this.maxX=e.globals.maxY),!(e.config.xaxis.type==="datetime"&&new Date(this.minX).getUTCFullYear()<1e3)){var t=(this.minX+this.maxX)/2,a=this.minX-(t-this.minX),r=this.maxX-(t-this.maxX),l=this._getNewMinXMaxX(a,r);e.globals.disableZoomOut||this.zoomUpdateOptions(l.minX,l.maxX)}}},{key:"_getNewMinXMaxX",value:function(e,t){var a=this.w.config.xaxis.convertedCatToNumeric;return{minX:a?Math.floor(e):e,maxX:a?Math.floor(t):t}}},{key:"zoomUpdateOptions",value:function(e,t){var a=this.w;if(e!==void 0||t!==void 0){if(!(a.config.xaxis.convertedCatToNumeric&&(e<1&&(e=1,t=a.globals.dataPoints),t-e<2))){var r={min:e,max:t},l=this.getBeforeZoomRange(r);l&&(r=l.xaxis);var o={xaxis:r},c=X.clone(a.globals.initialConfig.yaxis);a.config.chart.group||(o.yaxis=c),this.w.globals.zoomed=!0,this.ctx.updateHelpers._updateOptions(o,!1,this.w.config.chart.animations.dynamicAnimation.enabled),this.zoomCallback(r,c)}}else this.handleZoomReset()}},{key:"zoomCallback",value:function(e,t){typeof this.ev.zoomed=="function"&&this.ev.zoomed(this.ctx,{xaxis:e,yaxis:t})}},{key:"getBeforeZoomRange",value:function(e,t){var a=null;return typeof this.ev.beforeZoom=="function"&&(a=this.ev.beforeZoom(this,{xaxis:e,yaxis:t})),a}},{key:"toggleMenu",value:function(){var e=this;window.setTimeout(function(){e.elMenu.classList.contains("apexcharts-menu-open")?e.elMenu.classList.remove("apexcharts-menu-open"):e.elMenu.classList.add("apexcharts-menu-open")},0)}},{key:"handleDownload",value:function(e){var t=this.w,a=new ii(this.ctx);switch(e){case"svg":a.exportToSVG(this.ctx);break;case"png":a.exportToPng(this.ctx);break;case"csv":a.exportToCSV({series:t.config.series,columnDelimiter:t.config.chart.toolbar.export.csv.columnDelimiter})}}},{key:"handleZoomReset",value:function(e){this.ctx.getSyncedCharts().forEach(function(t){var a=t.w;if(a.globals.lastXAxis.min=a.globals.initialConfig.xaxis.min,a.globals.lastXAxis.max=a.globals.initialConfig.xaxis.max,t.updateHelpers.revertDefaultAxisMinMax(),typeof a.config.chart.events.beforeResetZoom=="function"){var r=a.config.chart.events.beforeResetZoom(t,a);r&&t.updateHelpers.revertDefaultAxisMinMax(r)}typeof a.config.chart.events.zoomed=="function"&&t.ctx.toolbar.zoomCallback({min:a.config.xaxis.min,max:a.config.xaxis.max}),a.globals.zoomed=!1;var l=t.ctx.series.emptyCollapsedSeries(X.clone(a.globals.initialSeries));t.updateHelpers._updateSeries(l,a.config.chart.animations.dynamicAnimation.enabled)})}},{key:"destroy",value:function(){this.elZoom=null,this.elZoomIn=null,this.elZoomOut=null,this.elPan=null,this.elSelection=null,this.elZoomReset=null,this.elMenuIcon=null}}]),_}(),mr=function(_){z(t,va);var e=T(t);function t(a){var r;return g(this,t),(r=e.call(this,a)).ctx=a,r.w=a.w,r.dragged=!1,r.graphics=new V(r.ctx),r.eventList=["mousedown","mouseleave","mousemove","touchstart","touchmove","mouseup","touchend","wheel"],r.clientX=0,r.clientY=0,r.startX=0,r.endX=0,r.dragX=0,r.startY=0,r.endY=0,r.dragY=0,r.moveDirection="none",r.debounceTimer=null,r.debounceDelay=100,r.wheelDelay=400,r}return v(t,[{key:"init",value:function(a){var r=this,l=a.xyRatios,o=this.w,c=this;this.xyRatios=l,this.zoomRect=this.graphics.drawRect(0,0,0,0),this.selectionRect=this.graphics.drawRect(0,0,0,0),this.gridRect=o.globals.dom.baseEl.querySelector(".apexcharts-grid"),this.zoomRect.node.classList.add("apexcharts-zoom-rect"),this.selectionRect.node.classList.add("apexcharts-selection-rect"),o.globals.dom.elGraphical.add(this.zoomRect),o.globals.dom.elGraphical.add(this.selectionRect),o.config.chart.selection.type==="x"?this.slDraggableRect=this.selectionRect.draggable({minX:0,minY:0,maxX:o.globals.gridWidth,maxY:o.globals.gridHeight}).on("dragmove",this.selectionDragging.bind(this,"dragging")):o.config.chart.selection.type==="y"?this.slDraggableRect=this.selectionRect.draggable({minX:0,maxX:o.globals.gridWidth}).on("dragmove",this.selectionDragging.bind(this,"dragging")):this.slDraggableRect=this.selectionRect.draggable().on("dragmove",this.selectionDragging.bind(this,"dragging")),this.preselectedSelection(),this.hoverArea=o.globals.dom.baseEl.querySelector("".concat(o.globals.chartClass," .apexcharts-svg")),this.hoverArea.classList.add("apexcharts-zoomable"),this.eventList.forEach(function(d){r.hoverArea.addEventListener(d,c.svgMouseEvents.bind(c,l),{capture:!1,passive:!0})}),o.config.chart.zoom.allowMouseWheelZoom&&this.hoverArea.addEventListener("wheel",c.mouseWheelEvent.bind(c),{capture:!1,passive:!1})}},{key:"destroy",value:function(){this.slDraggableRect&&(this.slDraggableRect.draggable(!1),this.slDraggableRect.off(),this.selectionRect.off()),this.selectionRect=null,this.zoomRect=null,this.gridRect=null}},{key:"svgMouseEvents",value:function(a,r){var l=this.w,o=this,c=this.ctx.toolbar,d=l.globals.zoomEnabled?l.config.chart.zoom.type:l.config.chart.selection.type,f=l.config.chart.toolbar.autoSelected;if(r.shiftKey?(this.shiftWasPressed=!0,c.enableZoomPanFromToolbar(f==="pan"?"zoom":"pan")):this.shiftWasPressed&&(c.enableZoomPanFromToolbar(f),this.shiftWasPressed=!1),r.target){var m,p=r.target.classList;if(r.target.parentNode&&r.target.parentNode!==null&&(m=r.target.parentNode.classList),!(p.contains("apexcharts-selection-rect")||p.contains("apexcharts-legend-marker")||p.contains("apexcharts-legend-text")||m&&m.contains("apexcharts-toolbar"))){if(o.clientX=r.type==="touchmove"||r.type==="touchstart"?r.touches[0].clientX:r.type==="touchend"?r.changedTouches[0].clientX:r.clientX,o.clientY=r.type==="touchmove"||r.type==="touchstart"?r.touches[0].clientY:r.type==="touchend"?r.changedTouches[0].clientY:r.clientY,r.type==="mousedown"&&r.which===1){var x=o.gridRect.getBoundingClientRect();o.startX=o.clientX-x.left,o.startY=o.clientY-x.top,o.dragged=!1,o.w.globals.mousedown=!0}if((r.type==="mousemove"&&r.which===1||r.type==="touchmove")&&(o.dragged=!0,l.globals.panEnabled?(l.globals.selection=null,o.w.globals.mousedown&&o.panDragging({context:o,zoomtype:d,xyRatios:a})):(o.w.globals.mousedown&&l.globals.zoomEnabled||o.w.globals.mousedown&&l.globals.selectionEnabled)&&(o.selection=o.selectionDrawing({context:o,zoomtype:d}))),r.type==="mouseup"||r.type==="touchend"||r.type==="mouseleave"){var w,S=(w=o.gridRect)===null||w===void 0?void 0:w.getBoundingClientRect();S&&o.w.globals.mousedown&&(o.endX=o.clientX-S.left,o.endY=o.clientY-S.top,o.dragX=Math.abs(o.endX-o.startX),o.dragY=Math.abs(o.endY-o.startY),(l.globals.zoomEnabled||l.globals.selectionEnabled)&&o.selectionDrawn({context:o,zoomtype:d}),l.globals.panEnabled&&l.config.xaxis.convertedCatToNumeric&&o.delayedPanScrolled()),l.globals.zoomEnabled&&o.hideSelectionRect(this.selectionRect),o.dragged=!1,o.w.globals.mousedown=!1}this.makeSelectionRectDraggable()}}}},{key:"mouseWheelEvent",value:function(a){var r=this,l=this.w;a.preventDefault();var o=Date.now();o-l.globals.lastWheelExecution>this.wheelDelay&&(this.executeMouseWheelZoom(a),l.globals.lastWheelExecution=o),this.debounceTimer&&clearTimeout(this.debounceTimer),this.debounceTimer=setTimeout(function(){o-l.globals.lastWheelExecution>r.wheelDelay&&(r.executeMouseWheelZoom(a),l.globals.lastWheelExecution=o)},this.debounceDelay)}},{key:"executeMouseWheelZoom",value:function(a){var r,l=this.w;this.minX=l.globals.isRangeBar?l.globals.minY:l.globals.minX,this.maxX=l.globals.isRangeBar?l.globals.maxY:l.globals.maxX;var o=(r=this.gridRect)===null||r===void 0?void 0:r.getBoundingClientRect();if(o){var c,d,f,m=(a.clientX-o.left)/o.width,p=this.minX,x=this.maxX,w=x-p;if(a.deltaY<0){var S=p+m*w;d=S-(c=.5*w)/2,f=S+c/2}else d=p-(c=1.5*w)/2,f=x+c/2;if(!l.globals.isRangeBar){d=Math.max(d,l.globals.initialMinX),f=Math.min(f,l.globals.initialMaxX);var A=.01*(l.globals.initialMaxX-l.globals.initialMinX);if(f-d<A){var E=(d+f)/2;d=E-A/2,f=E+A/2}}var M=this._getNewMinXMaxX(d,f);isNaN(M.minX)||isNaN(M.maxX)||this.zoomUpdateOptions(M.minX,M.maxX)}}},{key:"makeSelectionRectDraggable",value:function(){var a=this.w;if(this.selectionRect){var r=this.selectionRect.node.getBoundingClientRect();r.width>0&&r.height>0&&this.slDraggableRect.selectize({points:"l, r",pointSize:8,pointType:"rect"}).resize({constraint:{minX:0,minY:0,maxX:a.globals.gridWidth,maxY:a.globals.gridHeight}}).on("resizing",this.selectionDragging.bind(this,"resizing"))}}},{key:"preselectedSelection",value:function(){var a=this.w,r=this.xyRatios;if(!a.globals.zoomEnabled){if(a.globals.selection!==void 0&&a.globals.selection!==null)this.drawSelectionRect(a.globals.selection);else if(a.config.chart.selection.xaxis.min!==void 0&&a.config.chart.selection.xaxis.max!==void 0){var l=(a.config.chart.selection.xaxis.min-a.globals.minX)/r.xRatio,o=a.globals.gridWidth-(a.globals.maxX-a.config.chart.selection.xaxis.max)/r.xRatio-l;a.globals.isRangeBar&&(l=(a.config.chart.selection.xaxis.min-a.globals.yAxisScale[0].niceMin)/r.invertedYRatio,o=(a.config.chart.selection.xaxis.max-a.config.chart.selection.xaxis.min)/r.invertedYRatio);var c={x:l,y:0,width:o,height:a.globals.gridHeight,translateX:0,translateY:0,selectionEnabled:!0};this.drawSelectionRect(c),this.makeSelectionRectDraggable(),typeof a.config.chart.events.selection=="function"&&a.config.chart.events.selection(this.ctx,{xaxis:{min:a.config.chart.selection.xaxis.min,max:a.config.chart.selection.xaxis.max},yaxis:{}})}}}},{key:"drawSelectionRect",value:function(a){var r=a.x,l=a.y,o=a.width,c=a.height,d=a.translateX,f=d===void 0?0:d,m=a.translateY,p=m===void 0?0:m,x=this.w,w=this.zoomRect,S=this.selectionRect;if(this.dragged||x.globals.selection!==null){var A={transform:"translate("+f+", "+p+")"};x.globals.zoomEnabled&&this.dragged&&(o<0&&(o=1),w.attr({x:r,y:l,width:o,height:c,fill:x.config.chart.zoom.zoomedArea.fill.color,"fill-opacity":x.config.chart.zoom.zoomedArea.fill.opacity,stroke:x.config.chart.zoom.zoomedArea.stroke.color,"stroke-width":x.config.chart.zoom.zoomedArea.stroke.width,"stroke-opacity":x.config.chart.zoom.zoomedArea.stroke.opacity}),V.setAttrs(w.node,A)),x.globals.selectionEnabled&&(S.attr({x:r,y:l,width:o>0?o:0,height:c>0?c:0,fill:x.config.chart.selection.fill.color,"fill-opacity":x.config.chart.selection.fill.opacity,stroke:x.config.chart.selection.stroke.color,"stroke-width":x.config.chart.selection.stroke.width,"stroke-dasharray":x.config.chart.selection.stroke.dashArray,"stroke-opacity":x.config.chart.selection.stroke.opacity}),V.setAttrs(S.node,A))}}},{key:"hideSelectionRect",value:function(a){a&&a.attr({x:0,y:0,width:0,height:0})}},{key:"selectionDrawing",value:function(a){var r=a.context,l=a.zoomtype,o=this.w,c=r,d=this.gridRect.getBoundingClientRect(),f=c.startX-1,m=c.startY,p=!1,x=!1,w=c.clientX-d.left-f,S=c.clientY-d.top-m,A={};return Math.abs(w+f)>o.globals.gridWidth?w=o.globals.gridWidth-f:c.clientX-d.left<0&&(w=f),f>c.clientX-d.left&&(p=!0,w=Math.abs(w)),m>c.clientY-d.top&&(x=!0,S=Math.abs(S)),A=l==="x"?{x:p?f-w:f,y:0,width:w,height:o.globals.gridHeight}:l==="y"?{x:0,y:x?m-S:m,width:o.globals.gridWidth,height:S}:{x:p?f-w:f,y:x?m-S:m,width:w,height:S},c.drawSelectionRect(A),c.selectionDragging("resizing"),A}},{key:"selectionDragging",value:function(a,r){var l=this,o=this.w,c=this.xyRatios,d=this.selectionRect,f=0;a==="resizing"&&(f=30);var m=function(x){return parseFloat(d.node.getAttribute(x))},p={x:m("x"),y:m("y"),width:m("width"),height:m("height")};o.globals.selection=p,typeof o.config.chart.events.selection=="function"&&o.globals.selectionEnabled&&(clearTimeout(this.w.globals.selectionResizeTimer),this.w.globals.selectionResizeTimer=window.setTimeout(function(){var x,w,S,A,E=l.gridRect.getBoundingClientRect(),M=d.node.getBoundingClientRect();o.globals.isRangeBar?(x=o.globals.yAxisScale[0].niceMin+(M.left-E.left)*c.invertedYRatio,w=o.globals.yAxisScale[0].niceMin+(M.right-E.left)*c.invertedYRatio,S=0,A=1):(x=o.globals.xAxisScale.niceMin+(M.left-E.left)*c.xRatio,w=o.globals.xAxisScale.niceMin+(M.right-E.left)*c.xRatio,S=o.globals.yAxisScale[0].niceMin+(E.bottom-M.bottom)*c.yRatio[0],A=o.globals.yAxisScale[0].niceMax-(M.top-E.top)*c.yRatio[0]);var P={xaxis:{min:x,max:w},yaxis:{min:S,max:A}};o.config.chart.events.selection(l.ctx,P),o.config.chart.brush.enabled&&o.config.chart.events.brushScrolled!==void 0&&o.config.chart.events.brushScrolled(l.ctx,P)},f))}},{key:"selectionDrawn",value:function(a){var r=a.context,l=a.zoomtype,o=this.w,c=r,d=this.xyRatios,f=this.ctx.toolbar;if(c.startX>c.endX){var m=c.startX;c.startX=c.endX,c.endX=m}if(c.startY>c.endY){var p=c.startY;c.startY=c.endY,c.endY=p}var x=void 0,w=void 0;o.globals.isRangeBar?(x=o.globals.yAxisScale[0].niceMin+c.startX*d.invertedYRatio,w=o.globals.yAxisScale[0].niceMin+c.endX*d.invertedYRatio):(x=o.globals.xAxisScale.niceMin+c.startX*d.xRatio,w=o.globals.xAxisScale.niceMin+c.endX*d.xRatio);var S=[],A=[];if(o.config.yaxis.forEach(function(D,L){var I=o.globals.seriesYAxisMap[L][0];S.push(o.globals.yAxisScale[L].niceMax-d.yRatio[I]*c.startY),A.push(o.globals.yAxisScale[L].niceMax-d.yRatio[I]*c.endY)}),c.dragged&&(c.dragX>10||c.dragY>10)&&x!==w){if(o.globals.zoomEnabled){var E=X.clone(o.globals.initialConfig.yaxis),M=X.clone(o.globals.initialConfig.xaxis);if(o.globals.zoomed=!0,o.config.xaxis.convertedCatToNumeric&&(x=Math.floor(x),w=Math.floor(w),x<1&&(x=1,w=o.globals.dataPoints),w-x<2&&(w=x+1)),l!=="xy"&&l!=="x"||(M={min:x,max:w}),l!=="xy"&&l!=="y"||E.forEach(function(D,L){E[L].min=A[L],E[L].max=S[L]}),f){var P=f.getBeforeZoomRange(M,E);P&&(M=P.xaxis?P.xaxis:M,E=P.yaxis?P.yaxis:E)}var u={xaxis:M};o.config.chart.group||(u.yaxis=E),c.ctx.updateHelpers._updateOptions(u,!1,c.w.config.chart.animations.dynamicAnimation.enabled),typeof o.config.chart.events.zoomed=="function"&&f.zoomCallback(M,E)}else if(o.globals.selectionEnabled){var y,C=null;y={min:x,max:w},l!=="xy"&&l!=="y"||(C=X.clone(o.config.yaxis)).forEach(function(D,L){C[L].min=A[L],C[L].max=S[L]}),o.globals.selection=c.selection,typeof o.config.chart.events.selection=="function"&&o.config.chart.events.selection(c.ctx,{xaxis:y,yaxis:C})}}}},{key:"panDragging",value:function(a){var r=a.context,l=this.w,o=r;if(l.globals.lastClientPosition.x!==void 0){var c=l.globals.lastClientPosition.x-o.clientX,d=l.globals.lastClientPosition.y-o.clientY;Math.abs(c)>Math.abs(d)&&c>0?this.moveDirection="left":Math.abs(c)>Math.abs(d)&&c<0?this.moveDirection="right":Math.abs(d)>Math.abs(c)&&d>0?this.moveDirection="up":Math.abs(d)>Math.abs(c)&&d<0&&(this.moveDirection="down")}l.globals.lastClientPosition={x:o.clientX,y:o.clientY};var f=l.globals.isRangeBar?l.globals.minY:l.globals.minX,m=l.globals.isRangeBar?l.globals.maxY:l.globals.maxX;l.config.xaxis.convertedCatToNumeric||o.panScrolled(f,m)}},{key:"delayedPanScrolled",value:function(){var a=this.w,r=a.globals.minX,l=a.globals.maxX,o=(a.globals.maxX-a.globals.minX)/2;this.moveDirection==="left"?(r=a.globals.minX+o,l=a.globals.maxX+o):this.moveDirection==="right"&&(r=a.globals.minX-o,l=a.globals.maxX-o),r=Math.floor(r),l=Math.floor(l),this.updateScrolledChart({xaxis:{min:r,max:l}},r,l)}},{key:"panScrolled",value:function(a,r){var l=this.w,o=this.xyRatios,c=X.clone(l.globals.initialConfig.yaxis),d=o.xRatio,f=l.globals.minX,m=l.globals.maxX;l.globals.isRangeBar&&(d=o.invertedYRatio,f=l.globals.minY,m=l.globals.maxY),this.moveDirection==="left"?(a=f+l.globals.gridWidth/15*d,r=m+l.globals.gridWidth/15*d):this.moveDirection==="right"&&(a=f-l.globals.gridWidth/15*d,r=m-l.globals.gridWidth/15*d),l.globals.isRangeBar||(a<l.globals.initialMinX||r>l.globals.initialMaxX)&&(a=f,r=m);var p={xaxis:{min:a,max:r}};l.config.chart.group||(p.yaxis=c),this.updateScrolledChart(p,a,r)}},{key:"updateScrolledChart",value:function(a,r,l){var o=this.w;this.ctx.updateHelpers._updateOptions(a,!1,!1),typeof o.config.chart.events.scrolled=="function"&&o.config.chart.events.scrolled(this.ctx,{xaxis:{min:r,max:l}})}}]),t}(),sn=function(){function _(e){g(this,_),this.w=e.w,this.ttCtx=e,this.ctx=e.ctx}return v(_,[{key:"getNearestValues",value:function(e){var t=e.hoverArea,a=e.elGrid,r=e.clientX,l=e.clientY,o=this.w,c=a.getBoundingClientRect(),d=c.width,f=c.height,m=d/(o.globals.dataPoints-1),p=f/o.globals.dataPoints,x=this.hasBars();!o.globals.comboCharts&&!x||o.config.xaxis.convertedCatToNumeric||(m=d/o.globals.dataPoints);var w=r-c.left-o.globals.barPadForNumericAxis,S=l-c.top;w<0||S<0||w>d||S>f?(t.classList.remove("hovering-zoom"),t.classList.remove("hovering-pan")):o.globals.zoomEnabled?(t.classList.remove("hovering-pan"),t.classList.add("hovering-zoom")):o.globals.panEnabled&&(t.classList.remove("hovering-zoom"),t.classList.add("hovering-pan"));var A=Math.round(w/m),E=Math.floor(S/p);x&&!o.config.xaxis.convertedCatToNumeric&&(A=Math.ceil(w/m),A-=1);var M=null,P=null,u=o.globals.seriesXvalues.map(function(I){return I.filter(function(H){return X.isNumber(H)})}),y=o.globals.seriesYvalues.map(function(I){return I.filter(function(H){return X.isNumber(H)})});if(o.globals.isXNumeric){var C=this.ttCtx.getElGrid().getBoundingClientRect(),D=w*(C.width/d),L=S*(C.height/f);M=(P=this.closestInMultiArray(D,L,u,y)).index,A=P.j,M!==null&&(u=o.globals.seriesXvalues[M],A=(P=this.closestInArray(D,u)).index)}return o.globals.capturedSeriesIndex=M===null?-1:M,(!A||A<1)&&(A=0),o.globals.isBarHorizontal?o.globals.capturedDataPointIndex=E:o.globals.capturedDataPointIndex=A,{capturedSeries:M,j:o.globals.isBarHorizontal?E:A,hoverX:w,hoverY:S}}},{key:"closestInMultiArray",value:function(e,t,a,r){var l=this.w,o=0,c=null,d=-1;l.globals.series.length>1?o=this.getFirstActiveXArray(a):c=0;var f=a[o][0],m=Math.abs(e-f);if(a.forEach(function(w){w.forEach(function(S,A){var E=Math.abs(e-S);E<=m&&(m=E,d=A)})}),d!==-1){var p=r[o][d],x=Math.abs(t-p);c=o,r.forEach(function(w,S){var A=Math.abs(t-w[d]);A<=x&&(x=A,c=S)})}return{index:c,j:d}}},{key:"getFirstActiveXArray",value:function(e){for(var t=this.w,a=0,r=e.map(function(o,c){return o.length>0?c:-1}),l=0;l<r.length;l++)if(r[l]!==-1&&t.globals.collapsedSeriesIndices.indexOf(l)===-1&&t.globals.ancillaryCollapsedSeriesIndices.indexOf(l)===-1){a=r[l];break}return a}},{key:"closestInArray",value:function(e,t){for(var a=t[0],r=null,l=Math.abs(e-a),o=0;o<t.length;o++){var c=Math.abs(e-t[o]);c<l&&(l=c,r=o)}return{index:r}}},{key:"isXoverlap",value:function(e){var t=[],a=this.w.globals.seriesX.filter(function(l){return l[0]!==void 0});if(a.length>0)for(var r=0;r<a.length-1;r++)a[r][e]!==void 0&&a[r+1][e]!==void 0&&a[r][e]!==a[r+1][e]&&t.push("unEqual");return t.length===0}},{key:"isInitialSeriesSameLen",value:function(){for(var e=!0,t=this.w.globals.initialSeries,a=0;a<t.length-1;a++)if(t[a].data.length!==t[a+1].data.length){e=!1;break}return e}},{key:"getBarsHeight",value:function(e){return ie(e).reduce(function(t,a){return t+a.getBBox().height},0)}},{key:"getElMarkers",value:function(e){return typeof e=="number"?this.w.globals.dom.baseEl.querySelectorAll(".apexcharts-series[data\\:realIndex='".concat(e,"'] .apexcharts-series-markers-wrap > *")):this.w.globals.dom.baseEl.querySelectorAll(".apexcharts-series-markers-wrap > *")}},{key:"getAllMarkers",value:function(){var e=this.w.globals.dom.baseEl.querySelectorAll(".apexcharts-series-markers-wrap");(e=ie(e)).sort(function(a,r){var l=Number(a.getAttribute("data:realIndex")),o=Number(r.getAttribute("data:realIndex"));return o<l?1:o>l?-1:0});var t=[];return e.forEach(function(a){t.push(a.querySelector(".apexcharts-marker"))}),t}},{key:"hasMarkers",value:function(e){return this.getElMarkers(e).length>0}},{key:"getPathFromPoint",value:function(e,t){var a=Number(e.getAttribute("cx")),r=Number(e.getAttribute("cy")),l=e.getAttribute("shape");return new V(this.ctx).getMarkerPath(a,r,l,t)}},{key:"getElBars",value:function(){return this.w.globals.dom.baseEl.querySelectorAll(".apexcharts-bar-series,  .apexcharts-candlestick-series, .apexcharts-boxPlot-series, .apexcharts-rangebar-series")}},{key:"hasBars",value:function(){return this.getElBars().length>0}},{key:"getHoverMarkerSize",value:function(e){var t=this.w,a=t.config.markers.hover.size;return a===void 0&&(a=t.globals.markers.size[e]+t.config.markers.hover.sizeOffset),a}},{key:"toggleAllTooltipSeriesGroups",value:function(e){var t=this.w,a=this.ttCtx;a.allTooltipSeriesGroups.length===0&&(a.allTooltipSeriesGroups=t.globals.dom.baseEl.querySelectorAll(".apexcharts-tooltip-series-group"));for(var r=a.allTooltipSeriesGroups,l=0;l<r.length;l++)e==="enable"?(r[l].classList.add("apexcharts-active"),r[l].style.display=t.config.tooltip.items.display):(r[l].classList.remove("apexcharts-active"),r[l].style.display="none")}}]),_}(),He=function(){function _(e){g(this,_),this.w=e.w,this.ctx=e.ctx,this.ttCtx=e,this.tooltipUtil=new sn(e)}return v(_,[{key:"drawSeriesTexts",value:function(e){var t=e.shared,a=t===void 0||t,r=e.ttItems,l=e.i,o=l===void 0?0:l,c=e.j,d=c===void 0?null:c,f=e.y1,m=e.y2,p=e.e,x=this.w;x.config.tooltip.custom!==void 0?this.handleCustomTooltip({i:o,j:d,y1:f,y2:m,w:x}):this.toggleActiveInactiveSeries(a,o);var w=this.getValuesToPrint({i:o,j:d});this.printLabels({i:o,j:d,values:w,ttItems:r,shared:a,e:p});var S=this.ttCtx.getElTooltip();this.ttCtx.tooltipRect.ttWidth=S.getBoundingClientRect().width,this.ttCtx.tooltipRect.ttHeight=S.getBoundingClientRect().height}},{key:"printLabels",value:function(e){var t,a=this,r=e.i,l=e.j,o=e.values,c=e.ttItems,d=e.shared,f=e.e,m=this.w,p=[],x=function(C){return m.globals.seriesGoals[C]&&m.globals.seriesGoals[C][l]&&Array.isArray(m.globals.seriesGoals[C][l])},w=o.xVal,S=o.zVal,A=o.xAxisTTVal,E="",M=m.globals.colors[r];l!==null&&m.config.plotOptions.bar.distributed&&(M=m.globals.colors[l]);for(var P=function(C,D){var L=a.getFormatters(r);E=a.getSeriesName({fn:L.yLbTitleFormatter,index:r,seriesIndex:r,j:l}),m.config.chart.type==="treemap"&&(E=L.yLbTitleFormatter(String(m.config.series[r].data[l].x),{series:m.globals.series,seriesIndex:r,dataPointIndex:l,w:m}));var I=m.config.tooltip.inverseOrder?D:C;if(m.globals.axisCharts){var H=function(ee){var K,te,le,de;return m.globals.isRangeData?L.yLbFormatter((K=m.globals.seriesRangeStart)===null||K===void 0||(te=K[ee])===null||te===void 0?void 0:te[l],{series:m.globals.seriesRangeStart,seriesIndex:ee,dataPointIndex:l,w:m})+" - "+L.yLbFormatter((le=m.globals.seriesRangeEnd)===null||le===void 0||(de=le[ee])===null||de===void 0?void 0:de[l],{series:m.globals.seriesRangeEnd,seriesIndex:ee,dataPointIndex:l,w:m}):L.yLbFormatter(m.globals.series[ee][l],{series:m.globals.series,seriesIndex:ee,dataPointIndex:l,w:m})};if(d)L=a.getFormatters(I),E=a.getSeriesName({fn:L.yLbTitleFormatter,index:I,seriesIndex:r,j:l}),M=m.globals.colors[I],t=H(I),x(I)&&(p=m.globals.seriesGoals[I][l].map(function(ee){return{attrs:ee,val:L.yLbFormatter(ee.value,{seriesIndex:I,dataPointIndex:l,w:m})}}));else{var B,U=f==null||(B=f.target)===null||B===void 0?void 0:B.getAttribute("fill");U&&(U.indexOf("url")!==-1?U.indexOf("Pattern")!==-1&&(M=m.globals.dom.baseEl.querySelector(U.substr(4).slice(0,-1)).childNodes[0].getAttribute("stroke")):M=U),t=H(r),x(r)&&Array.isArray(m.globals.seriesGoals[r][l])&&(p=m.globals.seriesGoals[r][l].map(function(ee){return{attrs:ee,val:L.yLbFormatter(ee.value,{seriesIndex:r,dataPointIndex:l,w:m})}}))}}l===null&&(t=L.yLbFormatter(m.globals.series[r],Y(Y({},m),{},{seriesIndex:r,dataPointIndex:r}))),a.DOMHandling({i:r,t:I,j:l,ttItems:c,values:{val:t,goalVals:p,xVal:w,xAxisTTVal:A,zVal:S},seriesName:E,shared:d,pColor:M})},u=0,y=m.globals.series.length-1;u<m.globals.series.length;u++,y--)P(u,y)}},{key:"getFormatters",value:function(e){var t,a=this.w,r=a.globals.yLabelFormatters[e];return a.globals.ttVal!==void 0?Array.isArray(a.globals.ttVal)?(r=a.globals.ttVal[e]&&a.globals.ttVal[e].formatter,t=a.globals.ttVal[e]&&a.globals.ttVal[e].title&&a.globals.ttVal[e].title.formatter):(r=a.globals.ttVal.formatter,typeof a.globals.ttVal.title.formatter=="function"&&(t=a.globals.ttVal.title.formatter)):t=a.config.tooltip.y.title.formatter,typeof r!="function"&&(r=a.globals.yLabelFormatters[0]?a.globals.yLabelFormatters[0]:function(l){return l}),typeof t!="function"&&(t=function(l){return l}),{yLbFormatter:r,yLbTitleFormatter:t}}},{key:"getSeriesName",value:function(e){var t=e.fn,a=e.index,r=e.seriesIndex,l=e.j,o=this.w;return t(String(o.globals.seriesNames[a]),{series:o.globals.series,seriesIndex:r,dataPointIndex:l,w:o})}},{key:"DOMHandling",value:function(e){e.i;var t=e.t,a=e.j,r=e.ttItems,l=e.values,o=e.seriesName,c=e.shared,d=e.pColor,f=this.w,m=this.ttCtx,p=l.val,x=l.goalVals,w=l.xVal,S=l.xAxisTTVal,A=l.zVal,E=null;E=r[t].children,f.config.tooltip.fillSeriesColor&&(r[t].style.backgroundColor=d,E[0].style.display="none"),m.showTooltipTitle&&(m.tooltipTitle===null&&(m.tooltipTitle=f.globals.dom.baseEl.querySelector(".apexcharts-tooltip-title")),m.tooltipTitle.innerHTML=w),m.isXAxisTooltipEnabled&&(m.xaxisTooltipText.innerHTML=S!==""?S:w);var M=r[t].querySelector(".apexcharts-tooltip-text-y-label");M&&(M.innerHTML=o||"");var P=r[t].querySelector(".apexcharts-tooltip-text-y-value");P&&(P.innerHTML=p!==void 0?p:""),E[0]&&E[0].classList.contains("apexcharts-tooltip-marker")&&(f.config.tooltip.marker.fillColors&&Array.isArray(f.config.tooltip.marker.fillColors)&&(d=f.config.tooltip.marker.fillColors[t]),E[0].style.backgroundColor=d),f.config.tooltip.marker.show||(E[0].style.display="none");var u=r[t].querySelector(".apexcharts-tooltip-text-goals-label"),y=r[t].querySelector(".apexcharts-tooltip-text-goals-value");if(x.length&&f.globals.seriesGoals[t]){var C=function(){var I="<div >",H="<div>";x.forEach(function(B,U){I+=' <div style="display: flex"><span class="apexcharts-tooltip-marker" style="background-color: '.concat(B.attrs.strokeColor,'; height: 3px; border-radius: 0; top: 5px;"></span> ').concat(B.attrs.name,"</div>"),H+="<div>".concat(B.val,"</div>")}),u.innerHTML=I+"</div>",y.innerHTML=H+"</div>"};c?f.globals.seriesGoals[t][a]&&Array.isArray(f.globals.seriesGoals[t][a])?C():(u.innerHTML="",y.innerHTML=""):C()}else u.innerHTML="",y.innerHTML="";if(A!==null&&(r[t].querySelector(".apexcharts-tooltip-text-z-label").innerHTML=f.config.tooltip.z.title,r[t].querySelector(".apexcharts-tooltip-text-z-value").innerHTML=A!==void 0?A:""),c&&E[0]){if(f.config.tooltip.hideEmptySeries){var D=r[t].querySelector(".apexcharts-tooltip-marker"),L=r[t].querySelector(".apexcharts-tooltip-text");parseFloat(p)==0?(D.style.display="none",L.style.display="none"):(D.style.display="block",L.style.display="block")}p==null||f.globals.ancillaryCollapsedSeriesIndices.indexOf(t)>-1||f.globals.collapsedSeriesIndices.indexOf(t)>-1||Array.isArray(m.tConfig.enabledOnSeries)&&m.tConfig.enabledOnSeries.indexOf(t)===-1?E[0].parentNode.style.display="none":E[0].parentNode.style.display=f.config.tooltip.items.display}else Array.isArray(m.tConfig.enabledOnSeries)&&m.tConfig.enabledOnSeries.indexOf(t)===-1&&(E[0].parentNode.style.display="none")}},{key:"toggleActiveInactiveSeries",value:function(e,t){var a=this.w;if(e)this.tooltipUtil.toggleAllTooltipSeriesGroups("enable");else{this.tooltipUtil.toggleAllTooltipSeriesGroups("disable");var r=a.globals.dom.baseEl.querySelector(".apexcharts-tooltip-series-group-".concat(t));r&&(r.classList.add("apexcharts-active"),r.style.display=a.config.tooltip.items.display)}}},{key:"getValuesToPrint",value:function(e){var t=e.i,a=e.j,r=this.w,l=this.ctx.series.filteredSeriesX(),o="",c="",d=null,f=null,m={series:r.globals.series,seriesIndex:t,dataPointIndex:a,w:r},p=r.globals.ttZFormatter;a===null?f=r.globals.series[t]:r.globals.isXNumeric&&r.config.chart.type!=="treemap"?(o=l[t][a],l[t].length===0&&(o=l[this.tooltipUtil.getFirstActiveXArray(l)][a])):o=new Bi(this.ctx).isFormatXY()?r.config.series[t].data[a]!==void 0?r.config.series[t].data[a].x:"":r.globals.labels[a]!==void 0?r.globals.labels[a]:"";var x=o;return r.globals.isXNumeric&&r.config.xaxis.type==="datetime"?o=new Ye(this.ctx).xLabelFormat(r.globals.ttKeyFormatter,x,x,{i:void 0,dateFormatter:new De(this.ctx).formatDate,w:this.w}):o=r.globals.isBarHorizontal?r.globals.yLabelFormatters[0](x,m):r.globals.xLabelFormatter(x,m),r.config.tooltip.x.formatter!==void 0&&(o=r.globals.ttKeyFormatter(x,m)),r.globals.seriesZ.length>0&&r.globals.seriesZ[t].length>0&&(d=p(r.globals.seriesZ[t][a],r)),c=typeof r.config.xaxis.tooltip.formatter=="function"?r.globals.xaxisTooltipFormatter(x,m):o,{val:Array.isArray(f)?f.join(" "):f,xVal:Array.isArray(o)?o.join(" "):o,xAxisTTVal:Array.isArray(c)?c.join(" "):c,zVal:d}}},{key:"handleCustomTooltip",value:function(e){var t=e.i,a=e.j,r=e.y1,l=e.y2,o=e.w,c=this.ttCtx.getElTooltip(),d=o.config.tooltip.custom;Array.isArray(d)&&d[t]&&(d=d[t]),c.innerHTML=d({ctx:this.ctx,series:o.globals.series,seriesIndex:t,dataPointIndex:a,y1:r,y2:l,w:o})}}]),_}(),ji=function(){function _(e){g(this,_),this.ttCtx=e,this.ctx=e.ctx,this.w=e.w}return v(_,[{key:"moveXCrosshairs",value:function(e){var t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null,a=this.ttCtx,r=this.w,l=a.getElXCrosshairs(),o=e-a.xcrosshairsWidth/2,c=r.globals.labels.slice().length;if(t!==null&&(o=r.globals.gridWidth/c*t),l===null||r.globals.isBarHorizontal||(l.setAttribute("x",o),l.setAttribute("x1",o),l.setAttribute("x2",o),l.setAttribute("y2",r.globals.gridHeight),l.classList.add("apexcharts-active")),o<0&&(o=0),o>r.globals.gridWidth&&(o=r.globals.gridWidth),a.isXAxisTooltipEnabled){var d=o;r.config.xaxis.crosshairs.width!=="tickWidth"&&r.config.xaxis.crosshairs.width!=="barWidth"||(d=o+a.xcrosshairsWidth/2),this.moveXAxisTooltip(d)}}},{key:"moveYCrosshairs",value:function(e){var t=this.ttCtx;t.ycrosshairs!==null&&V.setAttrs(t.ycrosshairs,{y1:e,y2:e}),t.ycrosshairsHidden!==null&&V.setAttrs(t.ycrosshairsHidden,{y1:e,y2:e})}},{key:"moveXAxisTooltip",value:function(e){var t=this.w,a=this.ttCtx;if(a.xaxisTooltip!==null&&a.xcrosshairsWidth!==0){a.xaxisTooltip.classList.add("apexcharts-active");var r=a.xaxisOffY+t.config.xaxis.tooltip.offsetY+t.globals.translateY+1+t.config.xaxis.offsetY;if(e-=a.xaxisTooltip.getBoundingClientRect().width/2,!isNaN(e)){e+=t.globals.translateX;var l;l=new V(this.ctx).getTextRects(a.xaxisTooltipText.innerHTML),a.xaxisTooltipText.style.minWidth=l.width+"px",a.xaxisTooltip.style.left=e+"px",a.xaxisTooltip.style.top=r+"px"}}}},{key:"moveYAxisTooltip",value:function(e){var t=this.w,a=this.ttCtx;a.yaxisTTEls===null&&(a.yaxisTTEls=t.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxistooltip"));var r=parseInt(a.ycrosshairsHidden.getAttribute("y1"),10),l=t.globals.translateY+r,o=a.yaxisTTEls[e].getBoundingClientRect().height,c=t.globals.translateYAxisX[e]-2;t.config.yaxis[e].opposite&&(c-=26),l-=o/2,t.globals.ignoreYAxisIndexes.indexOf(e)===-1?(a.yaxisTTEls[e].classList.add("apexcharts-active"),a.yaxisTTEls[e].style.top=l+"px",a.yaxisTTEls[e].style.left=c+t.config.yaxis[e].tooltip.offsetX+"px"):a.yaxisTTEls[e].classList.remove("apexcharts-active")}},{key:"moveTooltip",value:function(e,t){var a=arguments.length>2&&arguments[2]!==void 0?arguments[2]:null,r=this.w,l=this.ttCtx,o=l.getElTooltip(),c=l.tooltipRect,d=a!==null?parseFloat(a):1,f=parseFloat(e)+d+5,m=parseFloat(t)+d/2;if(f>r.globals.gridWidth/2&&(f=f-c.ttWidth-d-10),f>r.globals.gridWidth-c.ttWidth-10&&(f=r.globals.gridWidth-c.ttWidth),f<-20&&(f=-20),r.config.tooltip.followCursor){var p=l.getElGrid().getBoundingClientRect();(f=l.e.clientX-p.left)>r.globals.gridWidth/2&&(f-=l.tooltipRect.ttWidth),(m=l.e.clientY+r.globals.translateY-p.top)>r.globals.gridHeight/2&&(m-=l.tooltipRect.ttHeight)}else r.globals.isBarHorizontal||c.ttHeight/2+m>r.globals.gridHeight&&(m=r.globals.gridHeight-c.ttHeight+r.globals.translateY);isNaN(f)||(f+=r.globals.translateX,o.style.left=f+"px",o.style.top=m+"px")}},{key:"moveMarkers",value:function(e,t){var a=this.w,r=this.ttCtx;if(a.globals.markers.size[e]>0)for(var l=a.globals.dom.baseEl.querySelectorAll(" .apexcharts-series[data\\:realIndex='".concat(e,"'] .apexcharts-marker")),o=0;o<l.length;o++)parseInt(l[o].getAttribute("rel"),10)===t&&(r.marker.resetPointsSize(),r.marker.enlargeCurrentPoint(t,l[o]));else r.marker.resetPointsSize(),this.moveDynamicPointOnHover(t,e)}},{key:"moveDynamicPointOnHover",value:function(e,t){var a,r,l,o,c=this.w,d=this.ttCtx,f=new V(this.ctx),m=c.globals.pointsArray,p=d.tooltipUtil.getHoverMarkerSize(t),x=c.config.series[t].type;if(!x||x!=="column"&&x!=="candlestick"&&x!=="boxPlot"){l=(a=m[t][e])===null||a===void 0?void 0:a[0],o=((r=m[t][e])===null||r===void 0?void 0:r[1])||0;var w=c.globals.dom.baseEl.querySelector(".apexcharts-series[data\\:realIndex='".concat(t,"'] .apexcharts-series-markers path"));if(w&&o<c.globals.gridHeight&&o>0){var S=w.getAttribute("shape"),A=f.getMarkerPath(l,o,S,1.5*p);w.setAttribute("d",A)}this.moveXCrosshairs(l),d.fixedTooltip||this.moveTooltip(l,o,p)}}},{key:"moveDynamicPointsOnHover",value:function(e){var t,a=this.ttCtx,r=a.w,l=0,o=0,c=r.globals.pointsArray,d=new vt(this.ctx),f=new V(this.ctx);t=d.getActiveConfigSeriesIndex("asc",["line","area","scatter","bubble"]);var m=a.tooltipUtil.getHoverMarkerSize(t);c[t]&&(l=c[t][e][0],o=c[t][e][1]);var p=a.tooltipUtil.getAllMarkers();if(p!==null)for(var x=0;x<r.globals.series.length;x++){var w=c[x];if(r.globals.comboCharts&&w===void 0&&p.splice(x,0,null),w&&w.length){var S=c[x][e][1],A=void 0;p[x].setAttribute("cx",l);var E=p[x].getAttribute("shape");if(r.config.chart.type==="rangeArea"&&!r.globals.comboCharts){var M=e+r.globals.series[x].length;A=c[x][M][1],S-=Math.abs(S-A)/2}if(S!==null&&!isNaN(S)&&S<r.globals.gridHeight+m&&S+m>0){var P=f.getMarkerPath(l,S,E,m);p[x].setAttribute("d",P)}else p[x].setAttribute("d","")}}this.moveXCrosshairs(l),a.fixedTooltip||this.moveTooltip(l,o||r.globals.gridHeight,m)}},{key:"moveStickyTooltipOverBars",value:function(e,t){var a=this.w,r=this.ttCtx,l=a.globals.columnSeries?a.globals.columnSeries.length:a.globals.series.length,o=l>=2&&l%2==0?Math.floor(l/2):Math.floor(l/2)+1;a.globals.isBarHorizontal&&(o=new vt(this.ctx).getActiveConfigSeriesIndex("desc")+1);var c=a.globals.dom.baseEl.querySelector(".apexcharts-bar-series .apexcharts-series[rel='".concat(o,"'] path[j='").concat(e,"'], .apexcharts-candlestick-series .apexcharts-series[rel='").concat(o,"'] path[j='").concat(e,"'], .apexcharts-boxPlot-series .apexcharts-series[rel='").concat(o,"'] path[j='").concat(e,"'], .apexcharts-rangebar-series .apexcharts-series[rel='").concat(o,"'] path[j='").concat(e,"']"));c||typeof t!="number"||(c=a.globals.dom.baseEl.querySelector(".apexcharts-bar-series .apexcharts-series[data\\:realIndex='".concat(t,"'] path[j='").concat(e,`'],
        .apexcharts-candlestick-series .apexcharts-series[data\\:realIndex='`).concat(t,"'] path[j='").concat(e,`'],
        .apexcharts-boxPlot-series .apexcharts-series[data\\:realIndex='`).concat(t,"'] path[j='").concat(e,`'],
        .apexcharts-rangebar-series .apexcharts-series[data\\:realIndex='`).concat(t,"'] path[j='").concat(e,"']")));var d=c?parseFloat(c.getAttribute("cx")):0,f=c?parseFloat(c.getAttribute("cy")):0,m=c?parseFloat(c.getAttribute("barWidth")):0,p=r.getElGrid().getBoundingClientRect(),x=c&&(c.classList.contains("apexcharts-candlestick-area")||c.classList.contains("apexcharts-boxPlot-area"));a.globals.isXNumeric?(c&&!x&&(d-=l%2!=0?m/2:0),c&&x&&a.globals.comboCharts&&(d-=m/2)):a.globals.isBarHorizontal||(d=r.xAxisTicksPositions[e-1]+r.dataPointsDividedWidth/2,isNaN(d)&&(d=r.xAxisTicksPositions[e]-r.dataPointsDividedWidth/2)),a.globals.isBarHorizontal?f-=r.tooltipRect.ttHeight:a.config.tooltip.followCursor?f=r.e.clientY-p.top-r.tooltipRect.ttHeight/2:f+r.tooltipRect.ttHeight+15>a.globals.gridHeight&&(f=a.globals.gridHeight),a.globals.isBarHorizontal||this.moveXCrosshairs(d),r.fixedTooltip||this.moveTooltip(d,f||a.globals.gridHeight)}}]),_}(),ba=function(){function _(e){g(this,_),this.w=e.w,this.ttCtx=e,this.ctx=e.ctx,this.tooltipPosition=new ji(e)}return v(_,[{key:"drawDynamicPoints",value:function(){var e=this.w,t=new V(this.ctx),a=new Nt(this.ctx),r=e.globals.dom.baseEl.querySelectorAll(".apexcharts-series");r=ie(r),e.config.chart.stacked&&r.sort(function(p,x){return parseFloat(p.getAttribute("data:realIndex"))-parseFloat(x.getAttribute("data:realIndex"))});for(var l=0;l<r.length;l++){var o=r[l].querySelector(".apexcharts-series-markers-wrap");if(o!==null){var c=void 0,d="apexcharts-marker w".concat((Math.random()+1).toString(36).substring(4));e.config.chart.type!=="line"&&e.config.chart.type!=="area"||e.globals.comboCharts||e.config.tooltip.intersect||(d+=" no-pointer-events");var f=a.getMarkerConfig({cssClass:d,seriesIndex:Number(o.getAttribute("data:realIndex"))});(c=t.drawMarker(0,0,f)).node.setAttribute("default-marker-size",0);var m=document.createElementNS(e.globals.SVGNS,"g");m.classList.add("apexcharts-series-markers"),m.appendChild(c.node),o.appendChild(m)}}}},{key:"enlargeCurrentPoint",value:function(e,t){var a=arguments.length>2&&arguments[2]!==void 0?arguments[2]:null,r=arguments.length>3&&arguments[3]!==void 0?arguments[3]:null,l=this.w;l.config.chart.type!=="bubble"&&this.newPointSize(e,t);var o=t.getAttribute("cx"),c=t.getAttribute("cy");if(a!==null&&r!==null&&(o=a,c=r),this.tooltipPosition.moveXCrosshairs(o),!this.fixedTooltip){if(l.config.chart.type==="radar"){var d=this.ttCtx.getElGrid().getBoundingClientRect();o=this.ttCtx.e.clientX-d.left}this.tooltipPosition.moveTooltip(o,c,l.config.markers.hover.size)}}},{key:"enlargePoints",value:function(e){for(var t=this.w,a=this,r=this.ttCtx,l=e,o=t.globals.dom.baseEl.querySelectorAll(".apexcharts-series:not(.apexcharts-series-collapsed) .apexcharts-marker"),c=t.config.markers.hover.size,d=0;d<o.length;d++){var f=o[d].getAttribute("rel"),m=o[d].getAttribute("index");if(c===void 0&&(c=t.globals.markers.size[m]+t.config.markers.hover.sizeOffset),l===parseInt(f,10)){a.newPointSize(l,o[d]);var p=o[d].getAttribute("cx"),x=o[d].getAttribute("cy");a.tooltipPosition.moveXCrosshairs(p),r.fixedTooltip||a.tooltipPosition.moveTooltip(p,x,c)}else a.oldPointSize(o[d])}}},{key:"newPointSize",value:function(e,t){var a=this.w,r=a.config.markers.hover.size,l=e===0?t.parentNode.firstChild:t.parentNode.lastChild;if(l.getAttribute("default-marker-size")!=="0"){var o=parseInt(l.getAttribute("index"),10);r===void 0&&(r=a.globals.markers.size[o]+a.config.markers.hover.sizeOffset),r<0&&(r=0);var c=this.ttCtx.tooltipUtil.getPathFromPoint(t,r);t.setAttribute("d",c)}}},{key:"oldPointSize",value:function(e){var t=parseFloat(e.getAttribute("default-marker-size")),a=this.ttCtx.tooltipUtil.getPathFromPoint(e,t);e.setAttribute("d",a)}},{key:"resetPointsSize",value:function(){for(var e=this.w.globals.dom.baseEl.querySelectorAll(".apexcharts-series:not(.apexcharts-series-collapsed) .apexcharts-marker"),t=0;t<e.length;t++){var a=parseFloat(e[t].getAttribute("default-marker-size"));if(X.isNumber(a)&&a>=0){var r=this.ttCtx.tooltipUtil.getPathFromPoint(e[t],a);e[t].setAttribute("d",r)}else e[t].setAttribute("d","M0,0")}}}]),_}(),xr=function(){function _(e){g(this,_),this.w=e.w;var t=this.w;this.ttCtx=e,this.isVerticalGroupedRangeBar=!t.globals.isBarHorizontal&&t.config.chart.type==="rangeBar"&&t.config.plotOptions.bar.rangeBarGroupRows}return v(_,[{key:"getAttr",value:function(e,t){return parseFloat(e.target.getAttribute(t))}},{key:"handleHeatTreeTooltip",value:function(e){var t=e.e,a=e.opt,r=e.x,l=e.y,o=e.type,c=this.ttCtx,d=this.w;if(t.target.classList.contains("apexcharts-".concat(o,"-rect"))){var f=this.getAttr(t,"i"),m=this.getAttr(t,"j"),p=this.getAttr(t,"cx"),x=this.getAttr(t,"cy"),w=this.getAttr(t,"width"),S=this.getAttr(t,"height");if(c.tooltipLabels.drawSeriesTexts({ttItems:a.ttItems,i:f,j:m,shared:!1,e:t}),d.globals.capturedSeriesIndex=f,d.globals.capturedDataPointIndex=m,r=p+c.tooltipRect.ttWidth/2+w,l=x+c.tooltipRect.ttHeight/2-S/2,c.tooltipPosition.moveXCrosshairs(p+w/2),r>d.globals.gridWidth/2&&(r=p-c.tooltipRect.ttWidth/2+w),c.w.config.tooltip.followCursor){var A=d.globals.dom.elWrap.getBoundingClientRect();r=d.globals.clientX-A.left-(r>d.globals.gridWidth/2?c.tooltipRect.ttWidth:0),l=d.globals.clientY-A.top-(l>d.globals.gridHeight/2?c.tooltipRect.ttHeight:0)}}return{x:r,y:l}}},{key:"handleMarkerTooltip",value:function(e){var t,a,r=e.e,l=e.opt,o=e.x,c=e.y,d=this.w,f=this.ttCtx;if(r.target.classList.contains("apexcharts-marker")){var m=parseInt(l.paths.getAttribute("cx"),10),p=parseInt(l.paths.getAttribute("cy"),10),x=parseFloat(l.paths.getAttribute("val"));if(a=parseInt(l.paths.getAttribute("rel"),10),t=parseInt(l.paths.parentNode.parentNode.parentNode.getAttribute("rel"),10)-1,f.intersect){var w=X.findAncestor(l.paths,"apexcharts-series");w&&(t=parseInt(w.getAttribute("data:realIndex"),10))}if(f.tooltipLabels.drawSeriesTexts({ttItems:l.ttItems,i:t,j:a,shared:!f.showOnIntersect&&d.config.tooltip.shared,e:r}),r.type==="mouseup"&&f.markerClick(r,t,a),d.globals.capturedSeriesIndex=t,d.globals.capturedDataPointIndex=a,o=m,c=p+d.globals.translateY-1.4*f.tooltipRect.ttHeight,f.w.config.tooltip.followCursor){var S=f.getElGrid().getBoundingClientRect();c=f.e.clientY+d.globals.translateY-S.top}x<0&&(c=p),f.marker.enlargeCurrentPoint(a,l.paths,o,c)}return{x:o,y:c}}},{key:"handleBarTooltip",value:function(e){var t,a,r=e.e,l=e.opt,o=this.w,c=this.ttCtx,d=c.getElTooltip(),f=0,m=0,p=0,x=this.getBarTooltipXY({e:r,opt:l});t=x.i;var w=x.j;o.globals.capturedSeriesIndex=t,o.globals.capturedDataPointIndex=w,o.globals.isBarHorizontal&&c.tooltipUtil.hasBars()||!o.config.tooltip.shared?(m=x.x,p=x.y,a=Array.isArray(o.config.stroke.width)?o.config.stroke.width[t]:o.config.stroke.width,f=m):o.globals.comboCharts||o.config.tooltip.shared||(f/=2),isNaN(p)&&(p=o.globals.svgHeight-c.tooltipRect.ttHeight);var S=parseInt(l.paths.parentNode.getAttribute("data:realIndex"),10);if(o.globals.isMultipleYAxis?o.config.yaxis[S]&&o.config.yaxis[S].reversed:o.config.yaxis[0].reversed,m+c.tooltipRect.ttWidth>o.globals.gridWidth?m-=c.tooltipRect.ttWidth:m<0&&(m=0),c.w.config.tooltip.followCursor){var A=c.getElGrid().getBoundingClientRect();p=c.e.clientY-A.top}c.tooltip===null&&(c.tooltip=o.globals.dom.baseEl.querySelector(".apexcharts-tooltip")),o.config.tooltip.shared||(o.globals.comboBarCount>0?c.tooltipPosition.moveXCrosshairs(f+a/2):c.tooltipPosition.moveXCrosshairs(f)),!c.fixedTooltip&&(!o.config.tooltip.shared||o.globals.isBarHorizontal&&c.tooltipUtil.hasBars())&&(p=p+o.globals.translateY-c.tooltipRect.ttHeight/2,d.style.left=m+o.globals.translateX+"px",d.style.top=p+"px")}},{key:"getBarTooltipXY",value:function(e){var t=this,a=e.e,r=e.opt,l=this.w,o=null,c=this.ttCtx,d=0,f=0,m=0,p=0,x=0,w=a.target.classList;if(w.contains("apexcharts-bar-area")||w.contains("apexcharts-candlestick-area")||w.contains("apexcharts-boxPlot-area")||w.contains("apexcharts-rangebar-area")){var S=a.target,A=S.getBoundingClientRect(),E=r.elGrid.getBoundingClientRect(),M=A.height;x=A.height;var P=A.width,u=parseInt(S.getAttribute("cx"),10),y=parseInt(S.getAttribute("cy"),10);p=parseFloat(S.getAttribute("barWidth"));var C=a.type==="touchmove"?a.touches[0].clientX:a.clientX;o=parseInt(S.getAttribute("j"),10),d=parseInt(S.parentNode.getAttribute("rel"),10)-1;var D=S.getAttribute("data-range-y1"),L=S.getAttribute("data-range-y2");l.globals.comboCharts&&(d=parseInt(S.parentNode.getAttribute("data:realIndex"),10));var I=function(B){return l.globals.isXNumeric?u-P/2:t.isVerticalGroupedRangeBar?u+P/2:u-c.dataPointsDividedWidth+P/2},H=function(){return y-c.dataPointsDividedHeight+M/2-c.tooltipRect.ttHeight/2};c.tooltipLabels.drawSeriesTexts({ttItems:r.ttItems,i:d,j:o,y1:D?parseInt(D,10):null,y2:L?parseInt(L,10):null,shared:!c.showOnIntersect&&l.config.tooltip.shared,e:a}),l.config.tooltip.followCursor?l.globals.isBarHorizontal?(f=C-E.left+15,m=H()):(f=I(),m=a.clientY-E.top-c.tooltipRect.ttHeight/2-15):l.globals.isBarHorizontal?((f=u)<c.xyRatios.baseLineInvertedY&&(f=u-c.tooltipRect.ttWidth),m=H()):(f=I(),m=y)}return{x:f,y:m,barHeight:x,barWidth:p,i:d,j:o}}}]),_}(),Ui=function(){function _(e){g(this,_),this.w=e.w,this.ttCtx=e}return v(_,[{key:"drawXaxisTooltip",value:function(){var e=this.w,t=this.ttCtx,a=e.config.xaxis.position==="bottom";t.xaxisOffY=a?e.globals.gridHeight+1:-e.globals.xAxisHeight-e.config.xaxis.axisTicks.height+3;var r=a?"apexcharts-xaxistooltip apexcharts-xaxistooltip-bottom":"apexcharts-xaxistooltip apexcharts-xaxistooltip-top",l=e.globals.dom.elWrap;t.isXAxisTooltipEnabled&&e.globals.dom.baseEl.querySelector(".apexcharts-xaxistooltip")===null&&(t.xaxisTooltip=document.createElement("div"),t.xaxisTooltip.setAttribute("class",r+" apexcharts-theme-"+e.config.tooltip.theme),l.appendChild(t.xaxisTooltip),t.xaxisTooltipText=document.createElement("div"),t.xaxisTooltipText.classList.add("apexcharts-xaxistooltip-text"),t.xaxisTooltipText.style.fontFamily=e.config.xaxis.tooltip.style.fontFamily||e.config.chart.fontFamily,t.xaxisTooltipText.style.fontSize=e.config.xaxis.tooltip.style.fontSize,t.xaxisTooltip.appendChild(t.xaxisTooltipText))}},{key:"drawYaxisTooltip",value:function(){for(var e=this.w,t=this.ttCtx,a=0;a<e.config.yaxis.length;a++){var r=e.config.yaxis[a].opposite||e.config.yaxis[a].crosshairs.opposite;t.yaxisOffX=r?e.globals.gridWidth+1:1;var l="apexcharts-yaxistooltip apexcharts-yaxistooltip-".concat(a,r?" apexcharts-yaxistooltip-right":" apexcharts-yaxistooltip-left"),o=e.globals.dom.elWrap;e.globals.dom.baseEl.querySelector(".apexcharts-yaxistooltip apexcharts-yaxistooltip-".concat(a))===null&&(t.yaxisTooltip=document.createElement("div"),t.yaxisTooltip.setAttribute("class",l+" apexcharts-theme-"+e.config.tooltip.theme),o.appendChild(t.yaxisTooltip),a===0&&(t.yaxisTooltipText=[]),t.yaxisTooltipText[a]=document.createElement("div"),t.yaxisTooltipText[a].classList.add("apexcharts-yaxistooltip-text"),t.yaxisTooltip.appendChild(t.yaxisTooltipText[a]))}}},{key:"setXCrosshairWidth",value:function(){var e=this.w,t=this.ttCtx,a=t.getElXCrosshairs();if(t.xcrosshairsWidth=parseInt(e.config.xaxis.crosshairs.width,10),e.globals.comboCharts){var r=e.globals.dom.baseEl.querySelector(".apexcharts-bar-area");if(r!==null&&e.config.xaxis.crosshairs.width==="barWidth"){var l=parseFloat(r.getAttribute("barWidth"));t.xcrosshairsWidth=l}else if(e.config.xaxis.crosshairs.width==="tickWidth"){var o=e.globals.labels.length;t.xcrosshairsWidth=e.globals.gridWidth/o}}else if(e.config.xaxis.crosshairs.width==="tickWidth"){var c=e.globals.labels.length;t.xcrosshairsWidth=e.globals.gridWidth/c}else if(e.config.xaxis.crosshairs.width==="barWidth"){var d=e.globals.dom.baseEl.querySelector(".apexcharts-bar-area");if(d!==null){var f=parseFloat(d.getAttribute("barWidth"));t.xcrosshairsWidth=f}else t.xcrosshairsWidth=1}e.globals.isBarHorizontal&&(t.xcrosshairsWidth=0),a!==null&&t.xcrosshairsWidth>0&&a.setAttribute("width",t.xcrosshairsWidth)}},{key:"handleYCrosshair",value:function(){var e=this.w,t=this.ttCtx;t.ycrosshairs=e.globals.dom.baseEl.querySelector(".apexcharts-ycrosshairs"),t.ycrosshairsHidden=e.globals.dom.baseEl.querySelector(".apexcharts-ycrosshairs-hidden")}},{key:"drawYaxisTooltipText",value:function(e,t,a){var r=this.ttCtx,l=this.w,o=l.globals,c=o.seriesYAxisMap[e];if(r.yaxisTooltips[e]&&c.length>0){var d=o.yLabelFormatters[e],f=r.getElGrid().getBoundingClientRect(),m=c[0],p=0;a.yRatio.length>1&&(p=m);var x=(t-f.top)*a.yRatio[p],w=o.maxYArr[m]-o.minYArr[m],S=o.minYArr[m]+(w-x);l.config.yaxis[e].reversed&&(S=o.maxYArr[m]-(w-x)),r.tooltipPosition.moveYCrosshairs(t-f.top),r.yaxisTooltipText[e].innerHTML=d(S),r.tooltipPosition.moveYAxisTooltip(e)}}}]),_}(),$i=function(){function _(e){g(this,_),this.ctx=e,this.w=e.w;var t=this.w;this.tConfig=t.config.tooltip,this.tooltipUtil=new sn(this),this.tooltipLabels=new He(this),this.tooltipPosition=new ji(this),this.marker=new ba(this),this.intersect=new xr(this),this.axesTooltip=new Ui(this),this.showOnIntersect=this.tConfig.intersect,this.showTooltipTitle=this.tConfig.x.show,this.fixedTooltip=this.tConfig.fixed.enabled,this.xaxisTooltip=null,this.yaxisTTEls=null,this.isBarShared=!t.globals.isBarHorizontal&&this.tConfig.shared,this.lastHoverTime=Date.now()}return v(_,[{key:"getElTooltip",value:function(e){return e||(e=this),e.w.globals.dom.baseEl?e.w.globals.dom.baseEl.querySelector(".apexcharts-tooltip"):null}},{key:"getElXCrosshairs",value:function(){return this.w.globals.dom.baseEl.querySelector(".apexcharts-xcrosshairs")}},{key:"getElGrid",value:function(){return this.w.globals.dom.baseEl.querySelector(".apexcharts-grid")}},{key:"drawTooltip",value:function(e){var t=this.w;this.xyRatios=e,this.isXAxisTooltipEnabled=t.config.xaxis.tooltip.enabled&&t.globals.axisCharts,this.yaxisTooltips=t.config.yaxis.map(function(o,c){return!!(o.show&&o.tooltip.enabled&&t.globals.axisCharts)}),this.allTooltipSeriesGroups=[],t.globals.axisCharts||(this.showTooltipTitle=!1);var a=document.createElement("div");if(a.classList.add("apexcharts-tooltip"),t.config.tooltip.cssClass&&a.classList.add(t.config.tooltip.cssClass),a.classList.add("apexcharts-theme-".concat(this.tConfig.theme)),t.globals.dom.elWrap.appendChild(a),t.globals.axisCharts){this.axesTooltip.drawXaxisTooltip(),this.axesTooltip.drawYaxisTooltip(),this.axesTooltip.setXCrosshairWidth(),this.axesTooltip.handleYCrosshair();var r=new yi(this.ctx);this.xAxisTicksPositions=r.getXAxisTicksPositions()}if(!t.globals.comboCharts&&!this.tConfig.intersect&&t.config.chart.type!=="rangeBar"||this.tConfig.shared||(this.showOnIntersect=!0),t.config.markers.size!==0&&t.globals.markers.largestSize!==0||this.marker.drawDynamicPoints(this),t.globals.collapsedSeries.length!==t.globals.series.length){this.dataPointsDividedHeight=t.globals.gridHeight/t.globals.dataPoints,this.dataPointsDividedWidth=t.globals.gridWidth/t.globals.dataPoints,this.showTooltipTitle&&(this.tooltipTitle=document.createElement("div"),this.tooltipTitle.classList.add("apexcharts-tooltip-title"),this.tooltipTitle.style.fontFamily=this.tConfig.style.fontFamily||t.config.chart.fontFamily,this.tooltipTitle.style.fontSize=this.tConfig.style.fontSize,a.appendChild(this.tooltipTitle));var l=t.globals.series.length;(t.globals.xyCharts||t.globals.comboCharts)&&this.tConfig.shared&&(l=this.showOnIntersect?1:t.globals.series.length),this.legendLabels=t.globals.dom.baseEl.querySelectorAll(".apexcharts-legend-text"),this.ttItems=this.createTTElements(l),this.addSVGEvents()}}},{key:"createTTElements",value:function(e){for(var t=this,a=this.w,r=[],l=this.getElTooltip(),o=function(d){var f=document.createElement("div");f.classList.add("apexcharts-tooltip-series-group","apexcharts-tooltip-series-group-".concat(d)),f.style.order=a.config.tooltip.inverseOrder?e-d:d+1;var m=document.createElement("span");m.classList.add("apexcharts-tooltip-marker"),m.style.backgroundColor=a.globals.colors[d],f.appendChild(m);var p=document.createElement("div");p.classList.add("apexcharts-tooltip-text"),p.style.fontFamily=t.tConfig.style.fontFamily||a.config.chart.fontFamily,p.style.fontSize=t.tConfig.style.fontSize,["y","goals","z"].forEach(function(x){var w=document.createElement("div");w.classList.add("apexcharts-tooltip-".concat(x,"-group"));var S=document.createElement("span");S.classList.add("apexcharts-tooltip-text-".concat(x,"-label")),w.appendChild(S);var A=document.createElement("span");A.classList.add("apexcharts-tooltip-text-".concat(x,"-value")),w.appendChild(A),p.appendChild(w)}),f.appendChild(p),l.appendChild(f),r.push(f)},c=0;c<e;c++)o(c);return r}},{key:"addSVGEvents",value:function(){var e=this.w,t=e.config.chart.type,a=this.getElTooltip(),r=!(t!=="bar"&&t!=="candlestick"&&t!=="boxPlot"&&t!=="rangeBar"),l=t==="area"||t==="line"||t==="scatter"||t==="bubble"||t==="radar",o=e.globals.dom.Paper.node,c=this.getElGrid();c&&(this.seriesBound=c.getBoundingClientRect());var d,f=[],m=[],p={hoverArea:o,elGrid:c,tooltipEl:a,tooltipY:f,tooltipX:m,ttItems:this.ttItems};if(e.globals.axisCharts&&(l?d=e.globals.dom.baseEl.querySelectorAll(".apexcharts-series[data\\:longestSeries='true'] .apexcharts-marker"):r?d=e.globals.dom.baseEl.querySelectorAll(".apexcharts-series .apexcharts-bar-area, .apexcharts-series .apexcharts-candlestick-area, .apexcharts-series .apexcharts-boxPlot-area, .apexcharts-series .apexcharts-rangebar-area"):t!=="heatmap"&&t!=="treemap"||(d=e.globals.dom.baseEl.querySelectorAll(".apexcharts-series .apexcharts-heatmap, .apexcharts-series .apexcharts-treemap")),d&&d.length))for(var x=0;x<d.length;x++)f.push(d[x].getAttribute("cy")),m.push(d[x].getAttribute("cx"));if(e.globals.xyCharts&&!this.showOnIntersect||e.globals.comboCharts&&!this.showOnIntersect||r&&this.tooltipUtil.hasBars()&&this.tConfig.shared)this.addPathsEventListeners([o],p);else if(r&&!e.globals.comboCharts||l&&this.showOnIntersect)this.addDatapointEventsListeners(p);else if(!e.globals.axisCharts||t==="heatmap"||t==="treemap"){var w=e.globals.dom.baseEl.querySelectorAll(".apexcharts-series");this.addPathsEventListeners(w,p)}if(this.showOnIntersect){var S=e.globals.dom.baseEl.querySelectorAll(".apexcharts-line-series .apexcharts-marker, .apexcharts-area-series .apexcharts-marker");S.length>0&&this.addPathsEventListeners(S,p),this.tooltipUtil.hasBars()&&!this.tConfig.shared&&this.addDatapointEventsListeners(p)}}},{key:"drawFixedTooltipRect",value:function(){var e=this.w,t=this.getElTooltip(),a=t.getBoundingClientRect(),r=a.width+10,l=a.height+10,o=this.tConfig.fixed.offsetX,c=this.tConfig.fixed.offsetY,d=this.tConfig.fixed.position.toLowerCase();return d.indexOf("right")>-1&&(o=o+e.globals.svgWidth-r+10),d.indexOf("bottom")>-1&&(c=c+e.globals.svgHeight-l-10),t.style.left=o+"px",t.style.top=c+"px",{x:o,y:c,ttWidth:r,ttHeight:l}}},{key:"addDatapointEventsListeners",value:function(e){var t=this.w.globals.dom.baseEl.querySelectorAll(".apexcharts-series-markers .apexcharts-marker, .apexcharts-bar-area, .apexcharts-candlestick-area, .apexcharts-boxPlot-area, .apexcharts-rangebar-area");this.addPathsEventListeners(t,e)}},{key:"addPathsEventListeners",value:function(e,t){for(var a=this,r=function(o){var c={paths:e[o],tooltipEl:t.tooltipEl,tooltipY:t.tooltipY,tooltipX:t.tooltipX,elGrid:t.elGrid,hoverArea:t.hoverArea,ttItems:t.ttItems};["mousemove","mouseup","touchmove","mouseout","touchend"].map(function(d){return e[o].addEventListener(d,a.onSeriesHover.bind(a,c),{capture:!1,passive:!0})})},l=0;l<e.length;l++)r(l)}},{key:"onSeriesHover",value:function(e,t){var a=this,r=Date.now()-this.lastHoverTime;r>=100?this.seriesHover(e,t):(clearTimeout(this.seriesHoverTimeout),this.seriesHoverTimeout=setTimeout(function(){a.seriesHover(e,t)},100-r))}},{key:"seriesHover",value:function(e,t){var a=this;this.lastHoverTime=Date.now();var r=[],l=this.w;l.config.chart.group&&(r=this.ctx.getGroupedCharts()),l.globals.axisCharts&&(l.globals.minX===-1/0&&l.globals.maxX===1/0||l.globals.dataPoints===0)||(r.length?r.forEach(function(o){var c=a.getElTooltip(o),d={paths:e.paths,tooltipEl:c,tooltipY:e.tooltipY,tooltipX:e.tooltipX,elGrid:e.elGrid,hoverArea:e.hoverArea,ttItems:o.w.globals.tooltip.ttItems};o.w.globals.minX===a.w.globals.minX&&o.w.globals.maxX===a.w.globals.maxX&&o.w.globals.tooltip.seriesHoverByContext({chartCtx:o,ttCtx:o.w.globals.tooltip,opt:d,e:t})}):this.seriesHoverByContext({chartCtx:this.ctx,ttCtx:this.w.globals.tooltip,opt:e,e:t}))}},{key:"seriesHoverByContext",value:function(e){var t=e.chartCtx,a=e.ttCtx,r=e.opt,l=e.e,o=t.w,c=this.getElTooltip(t);c&&(a.tooltipRect={x:0,y:0,ttWidth:c.getBoundingClientRect().width,ttHeight:c.getBoundingClientRect().height},a.e=l,a.tooltipUtil.hasBars()&&!o.globals.comboCharts&&!a.isBarShared&&this.tConfig.onDatasetHover.highlightDataSeries&&new vt(t).toggleSeriesOnHover(l,l.target.parentNode),a.fixedTooltip&&a.drawFixedTooltipRect(),o.globals.axisCharts?a.axisChartsTooltips({e:l,opt:r,tooltipRect:a.tooltipRect}):a.nonAxisChartsTooltips({e:l,opt:r,tooltipRect:a.tooltipRect}))}},{key:"axisChartsTooltips",value:function(e){var t,a,r=e.e,l=e.opt,o=this.w,c=l.elGrid.getBoundingClientRect(),d=r.type==="touchmove"?r.touches[0].clientX:r.clientX,f=r.type==="touchmove"?r.touches[0].clientY:r.clientY;if(this.clientY=f,this.clientX=d,o.globals.capturedSeriesIndex=-1,o.globals.capturedDataPointIndex=-1,f<c.top||f>c.top+c.height)this.handleMouseOut(l);else{if(Array.isArray(this.tConfig.enabledOnSeries)&&!o.config.tooltip.shared){var m=parseInt(l.paths.getAttribute("index"),10);if(this.tConfig.enabledOnSeries.indexOf(m)<0)return void this.handleMouseOut(l)}var p=this.getElTooltip(),x=this.getElXCrosshairs(),w=[];o.config.chart.group&&(w=this.ctx.getSyncedCharts());var S=o.globals.xyCharts||o.config.chart.type==="bar"&&!o.globals.isBarHorizontal&&this.tooltipUtil.hasBars()&&this.tConfig.shared||o.globals.comboCharts&&this.tooltipUtil.hasBars();if(r.type==="mousemove"||r.type==="touchmove"||r.type==="mouseup"){if(o.globals.collapsedSeries.length+o.globals.ancillaryCollapsedSeries.length===o.globals.series.length)return;x!==null&&x.classList.add("apexcharts-active");var A=this.yaxisTooltips.filter(function(P){return P===!0});if(this.ycrosshairs!==null&&A.length&&this.ycrosshairs.classList.add("apexcharts-active"),S&&!this.showOnIntersect||w.length>1)this.handleStickyTooltip(r,d,f,l);else if(o.config.chart.type==="heatmap"||o.config.chart.type==="treemap"){var E=this.intersect.handleHeatTreeTooltip({e:r,opt:l,x:t,y:a,type:o.config.chart.type});t=E.x,a=E.y,p.style.left=t+"px",p.style.top=a+"px"}else this.tooltipUtil.hasBars()&&this.intersect.handleBarTooltip({e:r,opt:l}),this.tooltipUtil.hasMarkers()&&this.intersect.handleMarkerTooltip({e:r,opt:l,x:t,y:a});if(this.yaxisTooltips.length)for(var M=0;M<o.config.yaxis.length;M++)this.axesTooltip.drawYaxisTooltipText(M,f,this.xyRatios);o.globals.dom.baseEl.classList.add("apexcharts-tooltip-active"),l.tooltipEl.classList.add("apexcharts-active")}else r.type!=="mouseout"&&r.type!=="touchend"||this.handleMouseOut(l)}}},{key:"nonAxisChartsTooltips",value:function(e){var t=e.e,a=e.opt,r=e.tooltipRect,l=this.w,o=a.paths.getAttribute("rel"),c=this.getElTooltip(),d=l.globals.dom.elWrap.getBoundingClientRect();if(t.type==="mousemove"||t.type==="touchmove"){l.globals.dom.baseEl.classList.add("apexcharts-tooltip-active"),c.classList.add("apexcharts-active"),this.tooltipLabels.drawSeriesTexts({ttItems:a.ttItems,i:parseInt(o,10)-1,shared:!1});var f=l.globals.clientX-d.left-r.ttWidth/2,m=l.globals.clientY-d.top-r.ttHeight-10;if(c.style.left=f+"px",c.style.top=m+"px",l.config.legend.tooltipHoverFormatter){var p=o-1,x=(0,l.config.legend.tooltipHoverFormatter)(this.legendLabels[p].getAttribute("data:default-text"),{seriesIndex:p,dataPointIndex:p,w:l});this.legendLabels[p].innerHTML=x}}else t.type!=="mouseout"&&t.type!=="touchend"||(c.classList.remove("apexcharts-active"),l.globals.dom.baseEl.classList.remove("apexcharts-tooltip-active"),l.config.legend.tooltipHoverFormatter&&this.legendLabels.forEach(function(w){var S=w.getAttribute("data:default-text");w.innerHTML=decodeURIComponent(S)}))}},{key:"handleStickyTooltip",value:function(e,t,a,r){var l=this.w,o=this.tooltipUtil.getNearestValues({context:this,hoverArea:r.hoverArea,elGrid:r.elGrid,clientX:t,clientY:a}),c=o.j,d=o.capturedSeries;l.globals.collapsedSeriesIndices.includes(d)&&(d=null);var f=r.elGrid.getBoundingClientRect();if(o.hoverX<0||o.hoverX>f.width)this.handleMouseOut(r);else if(d!==null)this.handleStickyCapturedSeries(e,d,r,c);else if(this.tooltipUtil.isXoverlap(c)||l.globals.isBarHorizontal){var m=l.globals.series.findIndex(function(p,x){return!l.globals.collapsedSeriesIndices.includes(x)});this.create(e,this,m,c,r.ttItems)}}},{key:"handleStickyCapturedSeries",value:function(e,t,a,r){var l=this.w;if(!this.tConfig.shared&&l.globals.series[t][r]===null)return void this.handleMouseOut(a);if(l.globals.series[t][r]!==void 0)this.tConfig.shared&&this.tooltipUtil.isXoverlap(r)&&this.tooltipUtil.isInitialSeriesSameLen()?this.create(e,this,t,r,a.ttItems):this.create(e,this,t,r,a.ttItems,!1);else if(this.tooltipUtil.isXoverlap(r)){var o=l.globals.series.findIndex(function(c,d){return!l.globals.collapsedSeriesIndices.includes(d)});this.create(e,this,o,r,a.ttItems)}}},{key:"deactivateHoverFilter",value:function(){for(var e=this.w,t=new V(this.ctx),a=e.globals.dom.Paper.select(".apexcharts-bar-area"),r=0;r<a.length;r++)t.pathMouseLeave(a[r])}},{key:"handleMouseOut",value:function(e){var t=this.w,a=this.getElXCrosshairs();if(t.globals.dom.baseEl.classList.remove("apexcharts-tooltip-active"),e.tooltipEl.classList.remove("apexcharts-active"),this.deactivateHoverFilter(),t.config.chart.type!=="bubble"&&this.marker.resetPointsSize(),a!==null&&a.classList.remove("apexcharts-active"),this.ycrosshairs!==null&&this.ycrosshairs.classList.remove("apexcharts-active"),this.isXAxisTooltipEnabled&&this.xaxisTooltip.classList.remove("apexcharts-active"),this.yaxisTooltips.length){this.yaxisTTEls===null&&(this.yaxisTTEls=t.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxistooltip"));for(var r=0;r<this.yaxisTTEls.length;r++)this.yaxisTTEls[r].classList.remove("apexcharts-active")}t.config.legend.tooltipHoverFormatter&&this.legendLabels.forEach(function(l){var o=l.getAttribute("data:default-text");l.innerHTML=decodeURIComponent(o)})}},{key:"markerClick",value:function(e,t,a){var r=this.w;typeof r.config.chart.events.markerClick=="function"&&r.config.chart.events.markerClick(e,this.ctx,{seriesIndex:t,dataPointIndex:a,w:r}),this.ctx.events.fireEvent("markerClick",[e,this.ctx,{seriesIndex:t,dataPointIndex:a,w:r}])}},{key:"create",value:function(e,t,a,r,l){var o,c,d,f,m,p,x,w,S,A,E,M,P,u,y,C,D=arguments.length>5&&arguments[5]!==void 0?arguments[5]:null,L=this.w,I=t;e.type==="mouseup"&&this.markerClick(e,a,r),D===null&&(D=this.tConfig.shared);var H=this.tooltipUtil.hasMarkers(a),B=this.tooltipUtil.getElBars();if(L.config.legend.tooltipHoverFormatter){var U=L.config.legend.tooltipHoverFormatter,ee=Array.from(this.legendLabels);ee.forEach(function(Be){var We=Be.getAttribute("data:default-text");Be.innerHTML=decodeURIComponent(We)});for(var K=0;K<ee.length;K++){var te=ee[K],le=parseInt(te.getAttribute("i"),10),de=decodeURIComponent(te.getAttribute("data:default-text")),fe=U(de,{seriesIndex:D?le:a,dataPointIndex:r,w:L});if(D)te.innerHTML=L.globals.collapsedSeriesIndices.indexOf(le)<0?fe:de;else if(te.innerHTML=le===a?fe:de,a===le)break}}var me=Y(Y({ttItems:l,i:a,j:r},((o=L.globals.seriesRange)===null||o===void 0||(c=o[a])===null||c===void 0||(d=c[r])===null||d===void 0||(f=d.y[0])===null||f===void 0?void 0:f.y1)!==void 0&&{y1:(m=L.globals.seriesRange)===null||m===void 0||(p=m[a])===null||p===void 0||(x=p[r])===null||x===void 0||(w=x.y[0])===null||w===void 0?void 0:w.y1}),((S=L.globals.seriesRange)===null||S===void 0||(A=S[a])===null||A===void 0||(E=A[r])===null||E===void 0||(M=E.y[0])===null||M===void 0?void 0:M.y2)!==void 0&&{y2:(P=L.globals.seriesRange)===null||P===void 0||(u=P[a])===null||u===void 0||(y=u[r])===null||y===void 0||(C=y.y[0])===null||C===void 0?void 0:C.y2});if(D){if(I.tooltipLabels.drawSeriesTexts(Y(Y({},me),{},{shared:!this.showOnIntersect&&this.tConfig.shared})),H)L.globals.markers.largestSize>0?I.marker.enlargePoints(r):I.tooltipPosition.moveDynamicPointsOnHover(r);else if(this.tooltipUtil.hasBars()&&(this.barSeriesHeight=this.tooltipUtil.getBarsHeight(B),this.barSeriesHeight>0)){var Ae=new V(this.ctx),xe=L.globals.dom.Paper.select(".apexcharts-bar-area[j='".concat(r,"']"));this.deactivateHoverFilter(),this.tooltipPosition.moveStickyTooltipOverBars(r,a);for(var _e=0;_e<xe.length;_e++)Ae.pathMouseEnter(xe[_e])}}else I.tooltipLabels.drawSeriesTexts(Y({shared:!1},me)),this.tooltipUtil.hasBars()&&I.tooltipPosition.moveStickyTooltipOverBars(r,a),H&&I.tooltipPosition.moveMarkers(a,r)}}]),_}(),Yt=function(){function _(e){g(this,_),this.w=e.w,this.barCtx=e,this.totalFormatter=this.w.config.plotOptions.bar.dataLabels.total.formatter,this.totalFormatter||(this.totalFormatter=this.w.config.dataLabels.formatter)}return v(_,[{key:"handleBarDataLabels",value:function(e){var t,a,r=e.x,l=e.y,o=e.y1,c=e.y2,d=e.i,f=e.j,m=e.realIndex,p=e.columnGroupIndex,x=e.series,w=e.barHeight,S=e.barWidth,A=e.barXPosition,E=e.barYPosition,M=e.visibleSeries,P=e.renderedPath,u=this.w,y=new V(this.barCtx.ctx),C=Array.isArray(this.barCtx.strokeWidth)?this.barCtx.strokeWidth[m]:this.barCtx.strokeWidth;u.globals.isXNumeric&&!u.globals.isBarHorizontal?(t=r+parseFloat(S*(M+1)),a=l+parseFloat(w*(M+1))-C):(t=r+parseFloat(S*M),a=l+parseFloat(w*M));var D,L=null,I=r,H=l,B={},U=u.config.dataLabels,ee=this.barCtx.barOptions.dataLabels,K=this.barCtx.barOptions.dataLabels.total;E!==void 0&&this.barCtx.isRangeBar&&(a=E,H=E),A!==void 0&&this.barCtx.isVerticalGroupedRangeBar&&(t=A,I=A);var te=U.offsetX,le=U.offsetY,de={width:0,height:0};if(u.config.dataLabels.enabled){var fe=u.globals.series[d][f];de=y.getTextRects(u.config.dataLabels.formatter?u.config.dataLabels.formatter(fe,Y(Y({},u),{},{seriesIndex:d,dataPointIndex:f,w:u})):u.globals.yLabelFormatters[0](fe),parseFloat(U.style.fontSize))}var me={x:r,y:l,i:d,j:f,realIndex:m,columnGroupIndex:p,renderedPath:P,bcx:t,bcy:a,barHeight:w,barWidth:S,textRects:de,strokeWidth:C,dataLabelsX:I,dataLabelsY:H,dataLabelsConfig:U,barDataLabelsConfig:ee,barTotalDataLabelsConfig:K,offX:te,offY:le};return B=this.barCtx.isHorizontal?this.calculateBarsDataLabelsPosition(me):this.calculateColumnsDataLabelsPosition(me),P.attr({cy:B.bcy,cx:B.bcx,j:f,val:u.globals.series[d][f],barHeight:w,barWidth:S}),D=this.drawCalculatedDataLabels({x:B.dataLabelsX,y:B.dataLabelsY,val:this.barCtx.isRangeBar?[o,c]:u.config.chart.stackType==="100%"?x[m][f]:u.globals.series[m][f],i:m,j:f,barWidth:S,barHeight:w,textRects:de,dataLabelsConfig:U}),u.config.chart.stacked&&K.enabled&&(L=this.drawTotalDataLabels({x:B.totalDataLabelsX,y:B.totalDataLabelsY,barWidth:S,barHeight:w,realIndex:m,textAnchor:B.totalDataLabelsAnchor,val:this.getStackedTotalDataLabel({realIndex:m,j:f}),dataLabelsConfig:U,barTotalDataLabelsConfig:K})),{dataLabels:D,totalDataLabels:L}}},{key:"getStackedTotalDataLabel",value:function(e){var t=e.realIndex,a=e.j,r=this.w,l=this.barCtx.stackedSeriesTotals[a];return this.totalFormatter&&(l=this.totalFormatter(l,Y(Y({},r),{},{seriesIndex:t,dataPointIndex:a,w:r}))),l}},{key:"calculateColumnsDataLabelsPosition",value:function(e){var t=this.w,a=e.i,r=e.j,l=e.realIndex;e.columnGroupIndex;var o,c,d=e.y,f=e.bcx,m=e.barWidth,p=e.barHeight,x=e.textRects,w=e.dataLabelsX,S=e.dataLabelsY,A=e.dataLabelsConfig,E=e.barDataLabelsConfig,M=e.barTotalDataLabelsConfig,P=e.strokeWidth,u=e.offX,y=e.offY,C=f;p=Math.abs(p);var D=t.config.plotOptions.bar.dataLabels.orientation==="vertical",L=this.barCtx.barHelpers.getZeroValueEncounters({i:a,j:r}).zeroEncounters;f-=P/2;var I=t.globals.gridWidth/t.globals.dataPoints;this.barCtx.isVerticalGroupedRangeBar?w+=m/2:(w=t.globals.isXNumeric?f-m/2+u:f-I+m/2+u,L>0&&t.config.plotOptions.bar.hideZeroBarsWhenGrouped&&(w-=m*L)),D&&(w=w+x.height/2-P/2-2);var H=t.globals.series[a][r]<0,B=d;switch(this.barCtx.isReversed&&(B=d+(H?p:-p)),E.position){case"center":S=D?H?B-p/2+y:B+p/2-y:H?B-p/2+x.height/2+y:B+p/2+x.height/2-y;break;case"bottom":S=D?H?B-p+y:B+p-y:H?B-p+x.height+P+y:B+p-x.height/2+P-y;break;case"top":S=D?H?B+y:B-y:H?B-x.height/2-y:B+x.height+y}if(this.barCtx.lastActiveBarSerieIndex===l&&M.enabled){var U=new V(this.barCtx.ctx).getTextRects(this.getStackedTotalDataLabel({realIndex:l,j:r}),A.fontSize);o=H?B-U.height/2-y-M.offsetY+18:B+U.height+y+M.offsetY-18;var ee=I;c=C+(t.globals.isXNumeric?-m*t.globals.barGroups.length/2:t.globals.barGroups.length*m/2-(t.globals.barGroups.length-1)*m-ee)+M.offsetX}return t.config.chart.stacked||(S<0?S=0+P:S+x.height/3>t.globals.gridHeight&&(S=t.globals.gridHeight-P)),{bcx:f,bcy:d,dataLabelsX:w,dataLabelsY:S,totalDataLabelsX:c,totalDataLabelsY:o,totalDataLabelsAnchor:"middle"}}},{key:"calculateBarsDataLabelsPosition",value:function(e){var t=this.w,a=e.x,r=e.i,l=e.j,o=e.realIndex,c=e.bcy,d=e.barHeight,f=e.barWidth,m=e.textRects,p=e.dataLabelsX,x=e.strokeWidth,w=e.dataLabelsConfig,S=e.barDataLabelsConfig,A=e.barTotalDataLabelsConfig,E=e.offX,M=e.offY,P=t.globals.gridHeight/t.globals.dataPoints;f=Math.abs(f);var u,y,C=c-(this.barCtx.isRangeBar?0:P)+d/2+m.height/2+M-3,D="start",L=t.globals.series[r][l]<0,I=a;switch(this.barCtx.isReversed&&(I=a+(L?-f:f),D=L?"start":"end"),S.position){case"center":p=L?I+f/2-E:Math.max(m.width/2,I-f/2)+E;break;case"bottom":p=L?I+f-x-E:I-f+x+E;break;case"top":p=L?I-x-E:I-x+E}if(this.barCtx.lastActiveBarSerieIndex===o&&A.enabled){var H=new V(this.barCtx.ctx).getTextRects(this.getStackedTotalDataLabel({realIndex:o,j:l}),w.fontSize);L?(u=I-x-E-A.offsetX,D="end"):u=I+E+A.offsetX+(this.barCtx.isReversed?-(f+x):x),y=C-m.height/2+H.height/2+A.offsetY+x}return t.config.chart.stacked||(w.textAnchor==="start"?p-m.width<0?p=L?m.width+x:x:p+m.width>t.globals.gridWidth&&(p=L?t.globals.gridWidth-x:t.globals.gridWidth-m.width-x):w.textAnchor==="middle"?p-m.width/2<0?p=m.width/2+x:p+m.width/2>t.globals.gridWidth&&(p=t.globals.gridWidth-m.width/2-x):w.textAnchor==="end"&&(p<1?p=m.width+x:p+1>t.globals.gridWidth&&(p=t.globals.gridWidth-m.width-x))),{bcx:a,bcy:c,dataLabelsX:p,dataLabelsY:C,totalDataLabelsX:u,totalDataLabelsY:y,totalDataLabelsAnchor:D}}},{key:"drawCalculatedDataLabels",value:function(e){var t=e.x,a=e.y,r=e.val,l=e.i,o=e.j,c=e.textRects,d=e.barHeight,f=e.barWidth,m=e.dataLabelsConfig,p=this.w,x="rotate(0)";p.config.plotOptions.bar.dataLabels.orientation==="vertical"&&(x="rotate(-90, ".concat(t,", ").concat(a,")"));var w=new zt(this.barCtx.ctx),S=new V(this.barCtx.ctx),A=m.formatter,E=null,M=p.globals.collapsedSeriesIndices.indexOf(l)>-1;if(m.enabled&&!M){E=S.group({class:"apexcharts-data-labels",transform:x});var P="";r!==void 0&&(P=A(r,Y(Y({},p),{},{seriesIndex:l,dataPointIndex:o,w:p}))),!r&&p.config.plotOptions.bar.hideZeroBarsWhenGrouped&&(P="");var u=p.globals.series[l][o]<0,y=p.config.plotOptions.bar.dataLabels.position;p.config.plotOptions.bar.dataLabels.orientation==="vertical"&&(y==="top"&&(m.textAnchor=u?"end":"start"),y==="center"&&(m.textAnchor="middle"),y==="bottom"&&(m.textAnchor=u?"end":"start")),this.barCtx.isRangeBar&&this.barCtx.barOptions.dataLabels.hideOverflowingLabels&&f<S.getTextRects(P,parseFloat(m.style.fontSize)).width&&(P=""),p.config.chart.stacked&&this.barCtx.barOptions.dataLabels.hideOverflowingLabels&&(this.barCtx.isHorizontal?c.width/1.6>Math.abs(f)&&(P=""):c.height/1.6>Math.abs(d)&&(P=""));var C=Y({},m);this.barCtx.isHorizontal&&r<0&&(m.textAnchor==="start"?C.textAnchor="end":m.textAnchor==="end"&&(C.textAnchor="start")),w.plotDataLabelsText({x:t,y:a,text:P,i:l,j:o,parent:E,dataLabelsConfig:C,alwaysDrawDataLabel:!0,offsetCorrection:!0})}return E}},{key:"drawTotalDataLabels",value:function(e){var t=e.x,a=e.y,r=e.val,l=e.realIndex,o=e.textAnchor,c=e.barTotalDataLabelsConfig;this.w;var d,f=new V(this.barCtx.ctx);return c.enabled&&t!==void 0&&a!==void 0&&this.barCtx.lastActiveBarSerieIndex===l&&(d=f.drawText({x:t,y:a,foreColor:c.style.color,text:r,textAnchor:o,fontFamily:c.style.fontFamily,fontSize:c.style.fontSize,fontWeight:c.style.fontWeight})),d}}]),_}(),vr=function(){function _(e){g(this,_),this.w=e.w,this.barCtx=e}return v(_,[{key:"initVariables",value:function(e){var t=this.w;this.barCtx.series=e,this.barCtx.totalItems=0,this.barCtx.seriesLen=0,this.barCtx.visibleI=-1,this.barCtx.visibleItems=1;for(var a=0;a<e.length;a++)if(e[a].length>0&&(this.barCtx.seriesLen=this.barCtx.seriesLen+1,this.barCtx.totalItems+=e[a].length),t.globals.isXNumeric)for(var r=0;r<e[a].length;r++)t.globals.seriesX[a][r]>t.globals.minX&&t.globals.seriesX[a][r]<t.globals.maxX&&this.barCtx.visibleItems++;else this.barCtx.visibleItems=t.globals.dataPoints;this.arrBorderRadius=this.createBorderRadiusArr(t.globals.series),this.barCtx.seriesLen===0&&(this.barCtx.seriesLen=1),this.barCtx.zeroSerieses=[],t.globals.comboCharts||this.checkZeroSeries({series:e})}},{key:"initialPositions",value:function(){var e,t,a,r,l,o,c,d,f=this.w,m=f.globals.dataPoints;this.barCtx.isRangeBar&&(m=f.globals.labels.length);var p=this.barCtx.seriesLen;if(f.config.plotOptions.bar.rangeBarGroupRows&&(p=1),this.barCtx.isHorizontal)l=(a=f.globals.gridHeight/m)/p,f.globals.isXNumeric&&(l=(a=f.globals.gridHeight/this.barCtx.totalItems)/this.barCtx.seriesLen),l=l*parseInt(this.barCtx.barOptions.barHeight,10)/100,String(this.barCtx.barOptions.barHeight).indexOf("%")===-1&&(l=parseInt(this.barCtx.barOptions.barHeight,10)),d=this.barCtx.baseLineInvertedY+f.globals.padHorizontal+(this.barCtx.isReversed?f.globals.gridWidth:0)-(this.barCtx.isReversed?2*this.barCtx.baseLineInvertedY:0),this.barCtx.isFunnel&&(d=f.globals.gridWidth/2),t=(a-l*this.barCtx.seriesLen)/2;else{if(r=f.globals.gridWidth/this.barCtx.visibleItems,f.config.xaxis.convertedCatToNumeric&&(r=f.globals.gridWidth/f.globals.dataPoints),o=r/p*parseInt(this.barCtx.barOptions.columnWidth,10)/100,f.globals.isXNumeric){var x=this.barCtx.xRatio;f.globals.minXDiff&&f.globals.minXDiff!==.5&&f.globals.minXDiff/x>0&&(r=f.globals.minXDiff/x),(o=r/p*parseInt(this.barCtx.barOptions.columnWidth,10)/100)<1&&(o=1)}String(this.barCtx.barOptions.columnWidth).indexOf("%")===-1&&(o=parseInt(this.barCtx.barOptions.columnWidth,10)),c=f.globals.gridHeight-this.barCtx.baseLineY[this.barCtx.translationsIndex]-(this.barCtx.isReversed?f.globals.gridHeight:0)+(this.barCtx.isReversed?2*this.barCtx.baseLineY[this.barCtx.translationsIndex]:0),e=f.globals.padHorizontal+(r-o*this.barCtx.seriesLen)/2}return f.globals.barHeight=l,f.globals.barWidth=o,{x:e,y:t,yDivision:a,xDivision:r,barHeight:l,barWidth:o,zeroH:c,zeroW:d}}},{key:"initializeStackedPrevVars",value:function(e){e.w.globals.seriesGroups.forEach(function(t){e[t]||(e[t]={}),e[t].prevY=[],e[t].prevX=[],e[t].prevYF=[],e[t].prevXF=[],e[t].prevYVal=[],e[t].prevXVal=[]})}},{key:"initializeStackedXYVars",value:function(e){e.w.globals.seriesGroups.forEach(function(t){e[t]||(e[t]={}),e[t].xArrj=[],e[t].xArrjF=[],e[t].xArrjVal=[],e[t].yArrj=[],e[t].yArrjF=[],e[t].yArrjVal=[]})}},{key:"getPathFillColor",value:function(e,t,a,r){var l,o,c,d,f,m=this.w,p=this.barCtx.ctx.fill,x=null,w=this.barCtx.barOptions.distributed?a:t;return this.barCtx.barOptions.colors.ranges.length>0&&this.barCtx.barOptions.colors.ranges.map(function(S){e[t][a]>=S.from&&e[t][a]<=S.to&&(x=S.color)}),(l=m.config.series[t].data[a])!==null&&l!==void 0&&l.fillColor&&(x=m.config.series[t].data[a].fillColor),p.fillPath({seriesNumber:this.barCtx.barOptions.distributed?w:r,dataPointIndex:a,color:x,value:e[t][a],fillConfig:(o=m.config.series[t].data[a])===null||o===void 0?void 0:o.fill,fillType:(c=m.config.series[t].data[a])!==null&&c!==void 0&&(d=c.fill)!==null&&d!==void 0&&d.type?(f=m.config.series[t].data[a])===null||f===void 0?void 0:f.fill.type:Array.isArray(m.config.fill.type)?m.config.fill.type[r]:m.config.fill.type})}},{key:"getStrokeWidth",value:function(e,t,a){var r=0,l=this.w;return this.barCtx.series[e][t]?this.barCtx.isNullValue=!1:this.barCtx.isNullValue=!0,l.config.stroke.show&&(this.barCtx.isNullValue||(r=Array.isArray(this.barCtx.strokeWidth)?this.barCtx.strokeWidth[a]:this.barCtx.strokeWidth)),r}},{key:"createBorderRadiusArr",value:function(e){var t=this.w,a=!this.w.config.chart.stacked||t.config.plotOptions.bar.borderRadiusWhenStacked!=="last"||t.config.plotOptions.bar.borderRadius<=0,r=e.length,l=e[0].length,o=Array.from({length:r},function(){return Array(l).fill(a?"top":"none")});if(a)return o;for(var c=0;c<l;c++){for(var d=[],f=[],m=0,p=0;p<r;p++){var x=e[p][c];x>0?(d.push(p),m++):x<0&&(f.push(p),m++)}if(d.length>0&&f.length===0)if(d.length===1)o[d[0]][c]="both";else{var w,S=d[0],A=d[d.length-1],E=k(d);try{for(E.s();!(w=E.n()).done;){var M=w.value;o[M][c]=M===S?"bottom":M===A?"top":"none"}}catch(le){E.e(le)}finally{E.f()}}else if(f.length>0&&d.length===0)if(f.length===1)o[f[0]][c]="both";else{var P,u=f[0],y=f[f.length-1],C=k(f);try{for(C.s();!(P=C.n()).done;){var D=P.value;o[D][c]=D===u?"bottom":D===y?"top":"none"}}catch(le){C.e(le)}finally{C.f()}}else if(d.length>0&&f.length>0){var L,I=d[d.length-1],H=k(d);try{for(H.s();!(L=H.n()).done;){var B=L.value;o[B][c]=B===I?"top":"none"}}catch(le){H.e(le)}finally{H.f()}var U,ee=f[f.length-1],K=k(f);try{for(K.s();!(U=K.n()).done;){var te=U.value;o[te][c]=te===ee?"bottom":"none"}}catch(le){K.e(le)}finally{K.f()}}else m===1&&(o[d[0]||f[0]][c]="both")}return o}},{key:"barBackground",value:function(e){var t=e.j,a=e.i,r=e.x1,l=e.x2,o=e.y1,c=e.y2,d=e.elSeries,f=this.w,m=new V(this.barCtx.ctx),p=new vt(this.barCtx.ctx).getActiveConfigSeriesIndex();if(this.barCtx.barOptions.colors.backgroundBarColors.length>0&&p===a){t>=this.barCtx.barOptions.colors.backgroundBarColors.length&&(t%=this.barCtx.barOptions.colors.backgroundBarColors.length);var x=this.barCtx.barOptions.colors.backgroundBarColors[t],w=m.drawRect(r!==void 0?r:0,o!==void 0?o:0,l!==void 0?l:f.globals.gridWidth,c!==void 0?c:f.globals.gridHeight,this.barCtx.barOptions.colors.backgroundBarRadius,x,this.barCtx.barOptions.colors.backgroundBarOpacity);d.add(w),w.node.classList.add("apexcharts-backgroundBar")}}},{key:"getColumnPaths",value:function(e){var t,a=e.barWidth,r=e.barXPosition,l=e.y1,o=e.y2,c=e.strokeWidth,d=e.isReversed,f=e.series,m=e.seriesGroup,p=e.realIndex,x=e.i,w=e.j,S=e.w,A=new V(this.barCtx.ctx);(c=Array.isArray(c)?c[p]:c)||(c=0);var E=a,M=r;(t=S.config.series[p].data[w])!==null&&t!==void 0&&t.columnWidthOffset&&(M=r-S.config.series[p].data[w].columnWidthOffset/2,E=a+S.config.series[p].data[w].columnWidthOffset);var P=c/2,u=M+P,y=M+E-P,C=(f[x][w]>=0?1:-1)*(d?-1:1);l+=.001-P*C,o+=.001+P*C;var D=A.move(u,l),L=A.move(u,l),I=A.line(y,l);if(S.globals.previousPaths.length>0&&(L=this.barCtx.getPreviousPath(p,w,!1)),D=D+A.line(u,o)+A.line(y,o)+I+(S.config.plotOptions.bar.borderRadiusApplication==="around"||this.arrBorderRadius[p][w]==="both"?" Z":" z"),L=L+A.line(u,l)+I+I+I+I+I+A.line(u,l)+(S.config.plotOptions.bar.borderRadiusApplication==="around"||this.arrBorderRadius[p][w]==="both"?" Z":" z"),this.arrBorderRadius[p][w]!=="none"&&(D=A.roundPathCorners(D,S.config.plotOptions.bar.borderRadius)),S.config.chart.stacked){var H=this.barCtx;(H=this.barCtx[m]).yArrj.push(o-P*C),H.yArrjF.push(Math.abs(l-o+c*C)),H.yArrjVal.push(this.barCtx.series[x][w])}return{pathTo:D,pathFrom:L}}},{key:"getBarpaths",value:function(e){var t,a=e.barYPosition,r=e.barHeight,l=e.x1,o=e.x2,c=e.strokeWidth,d=e.isReversed,f=e.series,m=e.seriesGroup,p=e.realIndex,x=e.i,w=e.j,S=e.w,A=new V(this.barCtx.ctx);(c=Array.isArray(c)?c[p]:c)||(c=0);var E=a,M=r;(t=S.config.series[p].data[w])!==null&&t!==void 0&&t.barHeightOffset&&(E=a-S.config.series[p].data[w].barHeightOffset/2,M=r+S.config.series[p].data[w].barHeightOffset);var P=c/2,u=E+P,y=E+M-P,C=(f[x][w]>=0?1:-1)*(d?-1:1);l+=.001+P*C,o+=.001-P*C;var D=A.move(l,u),L=A.move(l,u);S.globals.previousPaths.length>0&&(L=this.barCtx.getPreviousPath(p,w,!1));var I=A.line(l,y);if(D=D+A.line(o,u)+A.line(o,y)+I+(S.config.plotOptions.bar.borderRadiusApplication==="around"||this.arrBorderRadius[p][w]==="both"?" Z":" z"),L=L+A.line(l,u)+I+I+I+I+I+A.line(l,u)+(S.config.plotOptions.bar.borderRadiusApplication==="around"||this.arrBorderRadius[p][w]==="both"?" Z":" z"),this.arrBorderRadius[p][w]!=="none"&&(D=A.roundPathCorners(D,S.config.plotOptions.bar.borderRadius)),S.config.chart.stacked){var H=this.barCtx;(H=this.barCtx[m]).xArrj.push(o+P*C),H.xArrjF.push(Math.abs(l-o-c*C)),H.xArrjVal.push(this.barCtx.series[x][w])}return{pathTo:D,pathFrom:L}}},{key:"checkZeroSeries",value:function(e){for(var t=e.series,a=this.w,r=0;r<t.length;r++){for(var l=0,o=0;o<t[a.globals.maxValsInArrayIndex].length;o++)l+=t[r][o];l===0&&this.barCtx.zeroSerieses.push(r)}}},{key:"getXForValue",value:function(e,t){var a=!(arguments.length>2&&arguments[2]!==void 0)||arguments[2]?t:null;return e!=null&&(a=t+e/this.barCtx.invertedYRatio-2*(this.barCtx.isReversed?e/this.barCtx.invertedYRatio:0)),a}},{key:"getYForValue",value:function(e,t,a){var r=!(arguments.length>3&&arguments[3]!==void 0)||arguments[3]?t:null;return e!=null&&(r=t-e/this.barCtx.yRatio[a]+2*(this.barCtx.isReversed?e/this.barCtx.yRatio[a]:0)),r}},{key:"getGoalValues",value:function(e,t,a,r,l,o){var c=this,d=this.w,f=[],m=function(w,S){var A;f.push((O(A={},e,e==="x"?c.getXForValue(w,t,!1):c.getYForValue(w,a,o,!1)),O(A,"attrs",S),A))};if(d.globals.seriesGoals[r]&&d.globals.seriesGoals[r][l]&&Array.isArray(d.globals.seriesGoals[r][l])&&d.globals.seriesGoals[r][l].forEach(function(w){m(w.value,w)}),this.barCtx.barOptions.isDumbbell&&d.globals.seriesRange.length){var p=this.barCtx.barOptions.dumbbellColors?this.barCtx.barOptions.dumbbellColors:d.globals.colors,x={strokeHeight:e==="x"?0:d.globals.markers.size[r],strokeWidth:e==="x"?d.globals.markers.size[r]:0,strokeDashArray:0,strokeLineCap:"round",strokeColor:Array.isArray(p[r])?p[r][0]:p[r]};m(d.globals.seriesRangeStart[r][l],x),m(d.globals.seriesRangeEnd[r][l],Y(Y({},x),{},{strokeColor:Array.isArray(p[r])?p[r][1]:p[r]}))}return f}},{key:"drawGoalLine",value:function(e){var t=e.barXPosition,a=e.barYPosition,r=e.goalX,l=e.goalY,o=e.barWidth,c=e.barHeight,d=new V(this.barCtx.ctx),f=d.group({className:"apexcharts-bar-goals-groups"});f.node.classList.add("apexcharts-element-hidden"),this.barCtx.w.globals.delayedElements.push({el:f.node}),f.attr("clip-path","url(#gridRectMarkerMask".concat(this.barCtx.w.globals.cuid,")"));var m=null;return this.barCtx.isHorizontal?Array.isArray(r)&&r.forEach(function(p){if(p.x>=-1&&p.x<=d.w.globals.gridWidth+1){var x=p.attrs.strokeHeight!==void 0?p.attrs.strokeHeight:c/2,w=a+x+c/2;m=d.drawLine(p.x,w-2*x,p.x,w,p.attrs.strokeColor?p.attrs.strokeColor:void 0,p.attrs.strokeDashArray,p.attrs.strokeWidth?p.attrs.strokeWidth:2,p.attrs.strokeLineCap),f.add(m)}}):Array.isArray(l)&&l.forEach(function(p){if(p.y>=-1&&p.y<=d.w.globals.gridHeight+1){var x=p.attrs.strokeWidth!==void 0?p.attrs.strokeWidth:o/2,w=t+x+o/2;m=d.drawLine(w-2*x,p.y,w,p.y,p.attrs.strokeColor?p.attrs.strokeColor:void 0,p.attrs.strokeDashArray,p.attrs.strokeHeight?p.attrs.strokeHeight:2,p.attrs.strokeLineCap),f.add(m)}}),f}},{key:"drawBarShadow",value:function(e){var t=e.prevPaths,a=e.currPaths,r=e.color,l=this.w,o=t.x,c=t.x1,d=t.barYPosition,f=a.x,m=a.x1,p=a.barYPosition,x=d+a.barHeight,w=new V(this.barCtx.ctx),S=new X,A=w.move(c,x)+w.line(o,x)+w.line(f,p)+w.line(m,p)+w.line(c,x)+(l.config.plotOptions.bar.borderRadiusApplication==="around"||this.arrBorderRadius[realIndex][j]==="both"?" Z":" z");return w.drawPath({d:A,fill:S.shadeColor(.5,X.rgb2hex(r)),stroke:"none",strokeWidth:0,fillOpacity:1,classes:"apexcharts-bar-shadows"})}},{key:"getZeroValueEncounters",value:function(e){var t,a=e.i,r=e.j,l=this.w,o=0,c=0;return(l.config.plotOptions.bar.horizontal?l.globals.series.map(function(d,f){return f}):((t=l.globals.columnSeries)===null||t===void 0?void 0:t.i.map(function(d){return d}))||[]).forEach(function(d){var f=l.globals.seriesPercent[d][r];f&&o++,d<a&&f===0&&c++}),{nonZeroColumns:o,zeroEncounters:c}}},{key:"getGroupIndex",value:function(e){var t=this.w,a=t.globals.seriesGroups.findIndex(function(o){return o.indexOf(t.globals.seriesNames[e])>-1}),r=this.barCtx.columnGroupIndices,l=r.indexOf(a);return l<0&&(r.push(a),l=r.length-1),{groupIndex:a,columnGroupIndex:l}}}]),_}(),ci=function(){function _(e,t){g(this,_),this.ctx=e,this.w=e.w;var a=this.w;this.barOptions=a.config.plotOptions.bar,this.isHorizontal=this.barOptions.horizontal,this.strokeWidth=a.config.stroke.width,this.isNullValue=!1,this.isRangeBar=a.globals.seriesRange.length&&this.isHorizontal,this.isVerticalGroupedRangeBar=!a.globals.isBarHorizontal&&a.globals.seriesRange.length&&a.config.plotOptions.bar.rangeBarGroupRows,this.isFunnel=this.barOptions.isFunnel,this.xyRatios=t,this.xyRatios!==null&&(this.xRatio=t.xRatio,this.yRatio=t.yRatio,this.invertedXRatio=t.invertedXRatio,this.invertedYRatio=t.invertedYRatio,this.baseLineY=t.baseLineY,this.baseLineInvertedY=t.baseLineInvertedY),this.yaxisIndex=0,this.translationsIndex=0,this.seriesLen=0,this.pathArr=[];var r=new vt(this.ctx);this.lastActiveBarSerieIndex=r.getActiveConfigSeriesIndex("desc",["bar","column"]),this.columnGroupIndices=[];var l=r.getBarSeriesIndices(),o=new se(this.ctx);this.stackedSeriesTotals=o.getStackedSeriesTotals(this.w.config.series.map(function(c,d){return l.indexOf(d)===-1?d:-1}).filter(function(c){return c!==-1})),this.barHelpers=new vr(this)}return v(_,[{key:"draw",value:function(e,t){var a=this.w,r=new V(this.ctx),l=new se(this.ctx,a);e=l.getLogSeries(e),this.series=e,this.yRatio=l.getLogYRatios(this.yRatio),this.barHelpers.initVariables(e);var o=r.group({class:"apexcharts-bar-series apexcharts-plot-series"});a.config.dataLabels.enabled&&this.totalItems>this.barOptions.dataLabels.maxItems&&console.warn("WARNING: DataLabels are enabled but there are too many to display. This may cause performance issue when rendering - ApexCharts");for(var c=0,d=0;c<e.length;c++,d++){var f,m,p,x,w=void 0,S=void 0,A=[],E=[],M=a.globals.comboCharts?t[c]:c,P=this.barHelpers.getGroupIndex(M).columnGroupIndex,u=r.group({class:"apexcharts-series",rel:c+1,seriesName:X.escapeString(a.globals.seriesNames[M]),"data:realIndex":M});this.ctx.series.addCollapsedClassToSeries(u,M),e[c].length>0&&(this.visibleI=this.visibleI+1);var y=0,C=0;this.yRatio.length>1&&(this.yaxisIndex=a.globals.seriesYAxisReverseMap[M],this.translationsIndex=M);var D=this.translationsIndex;this.isReversed=a.config.yaxis[this.yaxisIndex]&&a.config.yaxis[this.yaxisIndex].reversed;var L=this.barHelpers.initialPositions();S=L.y,y=L.barHeight,m=L.yDivision,x=L.zeroW,w=L.x,C=L.barWidth,f=L.xDivision,p=L.zeroH,this.horizontal||E.push(w+C/2);var I=r.group({class:"apexcharts-datalabels","data:realIndex":M});a.globals.delayedElements.push({el:I.node}),I.node.classList.add("apexcharts-element-hidden");var H=r.group({class:"apexcharts-bar-goals-markers"}),B=r.group({class:"apexcharts-bar-shadows"});a.globals.delayedElements.push({el:B.node}),B.node.classList.add("apexcharts-element-hidden");for(var U=0;U<e[c].length;U++){var ee=this.barHelpers.getStrokeWidth(c,U,M),K=null,te={indexes:{i:c,j:U,realIndex:M,translationsIndex:D,bc:d},x:w,y:S,strokeWidth:ee,elSeries:u};this.isHorizontal?(K=this.drawBarPaths(Y(Y({},te),{},{barHeight:y,zeroW:x,yDivision:m})),C=this.series[c][U]/this.invertedYRatio):(K=this.drawColumnPaths(Y(Y({},te),{},{xDivision:f,barWidth:C,zeroH:p})),y=this.series[c][U]/this.yRatio[D]);var le=this.barHelpers.getPathFillColor(e,c,U,M);if(this.isFunnel&&this.barOptions.isFunnel3d&&this.pathArr.length&&U>0){var de=this.barHelpers.drawBarShadow({color:typeof le=="string"&&(le==null?void 0:le.indexOf("url"))===-1?le:X.hexToRgba(a.globals.colors[c]),prevPaths:this.pathArr[this.pathArr.length-1],currPaths:K});de&&B.add(de)}this.pathArr.push(K);var fe=this.barHelpers.drawGoalLine({barXPosition:K.barXPosition,barYPosition:K.barYPosition,goalX:K.goalX,goalY:K.goalY,barHeight:y,barWidth:C});fe&&H.add(fe),S=K.y,w=K.x,U>0&&E.push(w+C/2),A.push(S),this.renderSeries({realIndex:M,pathFill:le,j:U,i:c,columnGroupIndex:P,pathFrom:K.pathFrom,pathTo:K.pathTo,strokeWidth:ee,elSeries:u,x:w,y:S,series:e,barHeight:Math.abs(K.barHeight?K.barHeight:y),barWidth:Math.abs(K.barWidth?K.barWidth:C),elDataLabelsWrap:I,elGoalsMarkers:H,elBarShadows:B,visibleSeries:this.visibleI,type:"bar"})}a.globals.seriesXvalues[M]=E,a.globals.seriesYvalues[M]=A,o.add(u)}return o}},{key:"renderSeries",value:function(e){var t=e.realIndex,a=e.pathFill,r=e.lineFill,l=e.j,o=e.i,c=e.columnGroupIndex,d=e.pathFrom,f=e.pathTo,m=e.strokeWidth,p=e.elSeries,x=e.x,w=e.y,S=e.y1,A=e.y2,E=e.series,M=e.barHeight,P=e.barWidth,u=e.barXPosition,y=e.barYPosition,C=e.elDataLabelsWrap,D=e.elGoalsMarkers,L=e.elBarShadows,I=e.visibleSeries,H=e.type,B=e.classes,U=this.w,ee=new V(this.ctx);if(!r){var K=typeof U.globals.stroke.colors[t]=="function"?function(me){var Ae,xe=U.config.stroke.colors;return Array.isArray(xe)&&xe.length>0&&((Ae=xe[me])||(Ae=""),typeof Ae=="function")?Ae({value:U.globals.series[me][l],dataPointIndex:l,w:U}):Ae}(t):U.globals.stroke.colors[t];r=this.barOptions.distributed?U.globals.stroke.colors[l]:K}U.config.series[o].data[l]&&U.config.series[o].data[l].strokeColor&&(r=U.config.series[o].data[l].strokeColor),this.isNullValue&&(a="none");var te=l/U.config.chart.animations.animateGradually.delay*(U.config.chart.animations.speed/U.globals.dataPoints)/2.4,le=ee.renderPaths({i:o,j:l,realIndex:t,pathFrom:d,pathTo:f,stroke:r,strokeWidth:m,strokeLineCap:U.config.stroke.lineCap,fill:a,animationDelay:te,initialSpeed:U.config.chart.animations.speed,dataChangeSpeed:U.config.chart.animations.dynamicAnimation.speed,className:"apexcharts-".concat(H,"-area ").concat(B),chartType:H});le.attr("clip-path","url(#gridRectBarMask".concat(U.globals.cuid,")"));var de=U.config.forecastDataPoints;de.count>0&&l>=U.globals.dataPoints-de.count&&(le.node.setAttribute("stroke-dasharray",de.dashArray),le.node.setAttribute("stroke-width",de.strokeWidth),le.node.setAttribute("fill-opacity",de.fillOpacity)),S!==void 0&&A!==void 0&&(le.attr("data-range-y1",S),le.attr("data-range-y2",A)),new ce(this.ctx).setSelectionFilter(le,t,l),p.add(le);var fe=new Yt(this).handleBarDataLabels({x,y:w,y1:S,y2:A,i:o,j:l,series:E,realIndex:t,columnGroupIndex:c,barHeight:M,barWidth:P,barXPosition:u,barYPosition:y,renderedPath:le,visibleSeries:I});return fe.dataLabels!==null&&C.add(fe.dataLabels),fe.totalDataLabels&&C.add(fe.totalDataLabels),p.add(C),D&&p.add(D),L&&p.add(L),p}},{key:"drawBarPaths",value:function(e){var t,a=e.indexes,r=e.barHeight,l=e.strokeWidth,o=e.zeroW,c=e.x,d=e.y,f=e.yDivision,m=e.elSeries,p=this.w,x=a.i,w=a.j;if(p.globals.isXNumeric)t=(d=(p.globals.seriesX[x][w]-p.globals.minX)/this.invertedXRatio-r)+r*this.visibleI;else if(p.config.plotOptions.bar.hideZeroBarsWhenGrouped){var S=0,A=0;p.globals.seriesPercent.forEach(function(M,P){M[w]&&S++,P<x&&M[w]===0&&A++}),S>0&&(r=this.seriesLen*r/S),t=d+r*this.visibleI,t-=r*A}else t=d+r*this.visibleI;this.isFunnel&&(o-=(this.barHelpers.getXForValue(this.series[x][w],o)-o)/2),c=this.barHelpers.getXForValue(this.series[x][w],o);var E=this.barHelpers.getBarpaths({barYPosition:t,barHeight:r,x1:o,x2:c,strokeWidth:l,isReversed:this.isReversed,series:this.series,realIndex:a.realIndex,i:x,j:w,w:p});return p.globals.isXNumeric||(d+=f),this.barHelpers.barBackground({j:w,i:x,y1:t-r*this.visibleI,y2:r*this.seriesLen,elSeries:m}),{pathTo:E.pathTo,pathFrom:E.pathFrom,x1:o,x:c,y:d,goalX:this.barHelpers.getGoalValues("x",o,null,x,w),barYPosition:t,barHeight:r}}},{key:"drawColumnPaths",value:function(e){var t,a=e.indexes,r=e.x,l=e.y,o=e.xDivision,c=e.barWidth,d=e.zeroH,f=e.strokeWidth,m=e.elSeries,p=this.w,x=a.realIndex,w=a.translationsIndex,S=a.i,A=a.j,E=a.bc;if(p.globals.isXNumeric){var M=this.getBarXForNumericXAxis({x:r,j:A,realIndex:x,barWidth:c});r=M.x,t=M.barXPosition}else if(p.config.plotOptions.bar.hideZeroBarsWhenGrouped){var P=this.barHelpers.getZeroValueEncounters({i:S,j:A}),u=P.nonZeroColumns,y=P.zeroEncounters;u>0&&(c=this.seriesLen*c/u),t=r+c*this.visibleI,t-=c*y}else t=r+c*this.visibleI;l=this.barHelpers.getYForValue(this.series[S][A],d,w);var C=this.barHelpers.getColumnPaths({barXPosition:t,barWidth:c,y1:d,y2:l,strokeWidth:f,isReversed:this.isReversed,series:this.series,realIndex:x,i:S,j:A,w:p});return p.globals.isXNumeric||(r+=o),this.barHelpers.barBackground({bc:E,j:A,i:S,x1:t-f/2-c*this.visibleI,x2:c*this.seriesLen+f/2,elSeries:m}),{pathTo:C.pathTo,pathFrom:C.pathFrom,x:r,y:l,goalY:this.barHelpers.getGoalValues("y",null,d,S,A,w),barXPosition:t,barWidth:c}}},{key:"getBarXForNumericXAxis",value:function(e){var t=e.x,a=e.barWidth,r=e.realIndex,l=e.j,o=this.w,c=r;return o.globals.seriesX[r].length||(c=o.globals.maxValsInArrayIndex),o.globals.seriesX[c][l]&&(t=(o.globals.seriesX[c][l]-o.globals.minX)/this.xRatio-a*this.seriesLen/2),{barXPosition:t+a*this.visibleI,x:t}}},{key:"getPreviousPath",value:function(e,t){for(var a,r=this.w,l=0;l<r.globals.previousPaths.length;l++){var o=r.globals.previousPaths[l];o.paths&&o.paths.length>0&&parseInt(o.realIndex,10)===parseInt(e,10)&&r.globals.previousPaths[l].paths[t]!==void 0&&(a=r.globals.previousPaths[l].paths[t].d)}return a}}]),_}(),R=function(_){z(t,ci);var e=T(t);function t(){return g(this,t),e.apply(this,arguments)}return v(t,[{key:"draw",value:function(a,r){var l=this,o=this.w;this.graphics=new V(this.ctx),this.bar=new ci(this.ctx,this.xyRatios);var c=new se(this.ctx,o);a=c.getLogSeries(a),this.yRatio=c.getLogYRatios(this.yRatio),this.barHelpers.initVariables(a),o.config.chart.stackType==="100%"&&(a=o.globals.comboCharts?r.map(function(S){return o.globals.seriesPercent[S]}):o.globals.seriesPercent.slice()),this.series=a,this.barHelpers.initializeStackedPrevVars(this);for(var d=this.graphics.group({class:"apexcharts-bar-series apexcharts-plot-series"}),f=0,m=0,p=function(S,A){var E=void 0,M=void 0,P=void 0,u=void 0,y=o.globals.comboCharts?r[S]:S,C=l.barHelpers.getGroupIndex(y),D=C.groupIndex,L=C.columnGroupIndex;l.groupCtx=l[o.globals.seriesGroups[D]];var I=[],H=[],B=0;l.yRatio.length>1&&(l.yaxisIndex=o.globals.seriesYAxisReverseMap[y][0],B=y),l.isReversed=o.config.yaxis[l.yaxisIndex]&&o.config.yaxis[l.yaxisIndex].reversed;var U=l.graphics.group({class:"apexcharts-series",seriesName:X.escapeString(o.globals.seriesNames[y]),rel:S+1,"data:realIndex":y});l.ctx.series.addCollapsedClassToSeries(U,y);var ee=l.graphics.group({class:"apexcharts-datalabels","data:realIndex":y}),K=l.graphics.group({class:"apexcharts-bar-goals-markers"}),te=0,le=0,de=l.initialPositions(f,m,E,M,P,u,B);m=de.y,te=de.barHeight,M=de.yDivision,u=de.zeroW,f=de.x,le=de.barWidth,E=de.xDivision,P=de.zeroH,o.globals.barHeight=te,o.globals.barWidth=le,l.barHelpers.initializeStackedXYVars(l),l.groupCtx.prevY.length===1&&l.groupCtx.prevY[0].every(function(ze){return isNaN(ze)})&&(l.groupCtx.prevY[0]=l.groupCtx.prevY[0].map(function(){return P}),l.groupCtx.prevYF[0]=l.groupCtx.prevYF[0].map(function(){return 0}));for(var fe=0;fe<o.globals.dataPoints;fe++){var me=l.barHelpers.getStrokeWidth(S,fe,y),Ae={indexes:{i:S,j:fe,realIndex:y,translationsIndex:B,bc:A},strokeWidth:me,x:f,y:m,elSeries:U,columnGroupIndex:L,seriesGroup:o.globals.seriesGroups[D]},xe=null;l.isHorizontal?(xe=l.drawStackedBarPaths(Y(Y({},Ae),{},{zeroW:u,barHeight:te,yDivision:M})),le=l.series[S][fe]/l.invertedYRatio):(xe=l.drawStackedColumnPaths(Y(Y({},Ae),{},{xDivision:E,barWidth:le,zeroH:P})),te=l.series[S][fe]/l.yRatio[B]);var _e=l.barHelpers.drawGoalLine({barXPosition:xe.barXPosition,barYPosition:xe.barYPosition,goalX:xe.goalX,goalY:xe.goalY,barHeight:te,barWidth:le});_e&&K.add(_e),m=xe.y,f=xe.x,I.push(f),H.push(m);var Be=l.barHelpers.getPathFillColor(a,S,fe,y),We="";o.globals.isBarHorizontal?l.barHelpers.arrBorderRadius[y][fe]==="bottom"&&o.globals.series[y][fe]>0&&(We="apexcharts-flip-x"):l.barHelpers.arrBorderRadius[y][fe]==="bottom"&&o.globals.series[y][fe]>0&&(We="apexcharts-flip-y"),U=l.renderSeries({realIndex:y,pathFill:Be,j:fe,i:S,columnGroupIndex:L,pathFrom:xe.pathFrom,pathTo:xe.pathTo,strokeWidth:me,elSeries:U,x:f,y:m,series:a,barHeight:te,barWidth:le,elDataLabelsWrap:ee,elGoalsMarkers:K,type:"bar",visibleSeries:L,classes:We})}o.globals.seriesXvalues[y]=I,o.globals.seriesYvalues[y]=H,l.groupCtx.prevY.push(l.groupCtx.yArrj),l.groupCtx.prevYF.push(l.groupCtx.yArrjF),l.groupCtx.prevYVal.push(l.groupCtx.yArrjVal),l.groupCtx.prevX.push(l.groupCtx.xArrj),l.groupCtx.prevXF.push(l.groupCtx.xArrjF),l.groupCtx.prevXVal.push(l.groupCtx.xArrjVal),d.add(U)},x=0,w=0;x<a.length;x++,w++)p(x,w);return d}},{key:"initialPositions",value:function(a,r,l,o,c,d,f){var m,p,x=this.w;if(this.isHorizontal){o=x.globals.gridHeight/x.globals.dataPoints;var w=x.config.plotOptions.bar.barHeight;m=String(w).indexOf("%")===-1?parseInt(w,10):o*parseInt(w,10)/100,d=x.globals.padHorizontal+(this.isReversed?x.globals.gridWidth-this.baseLineInvertedY:this.baseLineInvertedY),r=(o-m)/2}else{p=l=x.globals.gridWidth/x.globals.dataPoints;var S=x.config.plotOptions.bar.columnWidth;x.globals.isXNumeric&&x.globals.dataPoints>1?p=(l=x.globals.minXDiff/this.xRatio)*parseInt(this.barOptions.columnWidth,10)/100:String(S).indexOf("%")===-1?p=parseInt(S,10):p*=parseInt(S,10)/100,c=this.isReversed?this.baseLineY[f]:x.globals.gridHeight-this.baseLineY[f],a=x.globals.padHorizontal+(l-p)/2}var A=x.globals.barGroups.length||1;return{x:a,y:r,yDivision:o,xDivision:l,barHeight:m/A,barWidth:p/A,zeroH:c,zeroW:d}}},{key:"drawStackedBarPaths",value:function(a){for(var r,l=a.indexes,o=a.barHeight,c=a.strokeWidth,d=a.zeroW,f=a.x,m=a.y,p=a.columnGroupIndex,x=a.seriesGroup,w=a.yDivision,S=a.elSeries,A=this.w,E=m+p*o,M=l.i,P=l.j,u=l.realIndex,y=l.translationsIndex,C=0,D=0;D<this.groupCtx.prevXF.length;D++)C+=this.groupCtx.prevXF[D][P];var L;if((L=x.indexOf(A.config.series[u].name))>0){var I=d;this.groupCtx.prevXVal[L-1][P]<0?I=this.series[M][P]>=0?this.groupCtx.prevX[L-1][P]+C-2*(this.isReversed?C:0):this.groupCtx.prevX[L-1][P]:this.groupCtx.prevXVal[L-1][P]>=0&&(I=this.series[M][P]>=0?this.groupCtx.prevX[L-1][P]:this.groupCtx.prevX[L-1][P]-C+2*(this.isReversed?C:0)),r=I}else r=d;f=this.series[M][P]===null?r:r+this.series[M][P]/this.invertedYRatio-2*(this.isReversed?this.series[M][P]/this.invertedYRatio:0);var H=this.barHelpers.getBarpaths({barYPosition:E,barHeight:o,x1:r,x2:f,strokeWidth:c,isReversed:this.isReversed,series:this.series,realIndex:l.realIndex,seriesGroup:x,i:M,j:P,w:A});return this.barHelpers.barBackground({j:P,i:M,y1:E,y2:o,elSeries:S}),m+=w,{pathTo:H.pathTo,pathFrom:H.pathFrom,goalX:this.barHelpers.getGoalValues("x",d,null,M,P,y),barXPosition:r,barYPosition:E,x:f,y:m}}},{key:"drawStackedColumnPaths",value:function(a){var r=a.indexes,l=a.x,o=a.y,c=a.xDivision,d=a.barWidth,f=a.zeroH,m=a.columnGroupIndex,p=a.seriesGroup,x=a.elSeries,w=this.w,S=r.i,A=r.j,E=r.bc,M=r.realIndex,P=r.translationsIndex;if(w.globals.isXNumeric){var u=w.globals.seriesX[M][A];u||(u=0),l=(u-w.globals.minX)/this.xRatio-d/2*w.globals.barGroups.length}for(var y,C=l+m*d,D=0,L=0;L<this.groupCtx.prevYF.length;L++)D+=isNaN(this.groupCtx.prevYF[L][A])?0:this.groupCtx.prevYF[L][A];var I=S;if(p&&(I=p.indexOf(w.globals.seriesNames[M])),I>0&&!w.globals.isXNumeric||I>0&&w.globals.isXNumeric&&w.globals.seriesX[M-1][A]===w.globals.seriesX[M][A]){var H,B,U,ee=Math.min(this.yRatio.length+1,M+1);if(this.groupCtx.prevY[I-1]!==void 0&&this.groupCtx.prevY[I-1].length)for(var K=1;K<ee;K++){var te;if(!isNaN((te=this.groupCtx.prevY[I-K])===null||te===void 0?void 0:te[A])){U=this.groupCtx.prevY[I-K][A];break}}for(var le=1;le<ee;le++){var de,fe;if(((de=this.groupCtx.prevYVal[I-le])===null||de===void 0?void 0:de[A])<0){B=this.series[S][A]>=0?U-D+2*(this.isReversed?D:0):U;break}if(((fe=this.groupCtx.prevYVal[I-le])===null||fe===void 0?void 0:fe[A])>=0){B=this.series[S][A]>=0?U:U+D-2*(this.isReversed?D:0);break}}B===void 0&&(B=w.globals.gridHeight),y=(H=this.groupCtx.prevYF[0])!==null&&H!==void 0&&H.every(function(Ae){return Ae===0})&&this.groupCtx.prevYF.slice(1,I).every(function(Ae){return Ae.every(function(xe){return isNaN(xe)})})?f:B}else y=f;o=this.series[S][A]?y-this.series[S][A]/this.yRatio[P]+2*(this.isReversed?this.series[S][A]/this.yRatio[P]:0):y;var me=this.barHelpers.getColumnPaths({barXPosition:C,barWidth:d,y1:y,y2:o,yRatio:this.yRatio[P],strokeWidth:this.strokeWidth,isReversed:this.isReversed,series:this.series,seriesGroup:p,realIndex:r.realIndex,i:S,j:A,w});return this.barHelpers.barBackground({bc:E,j:A,i:S,x1:C,x2:d,elSeries:x}),{pathTo:me.pathTo,pathFrom:me.pathFrom,goalY:this.barHelpers.getGoalValues("y",null,f,S,A),barXPosition:C,x:w.globals.isXNumeric?l:l+c,y:o}}}]),t}(),N=function(_){z(t,ci);var e=T(t);function t(){return g(this,t),e.apply(this,arguments)}return v(t,[{key:"draw",value:function(a,r,l){var o=this,c=this.w,d=new V(this.ctx),f=c.globals.comboCharts?r:c.config.chart.type,m=new dt(this.ctx);this.candlestickOptions=this.w.config.plotOptions.candlestick,this.boxOptions=this.w.config.plotOptions.boxPlot,this.isHorizontal=c.config.plotOptions.bar.horizontal;var p=new se(this.ctx,c);a=p.getLogSeries(a),this.series=a,this.yRatio=p.getLogYRatios(this.yRatio),this.barHelpers.initVariables(a);for(var x=d.group({class:"apexcharts-".concat(f,"-series apexcharts-plot-series")}),w=function(A){o.isBoxPlot=c.config.chart.type==="boxPlot"||c.config.series[A].type==="boxPlot";var E,M,P,u,y=void 0,C=void 0,D=[],L=[],I=c.globals.comboCharts?l[A]:A,H=o.barHelpers.getGroupIndex(I).columnGroupIndex,B=d.group({class:"apexcharts-series",seriesName:X.escapeString(c.globals.seriesNames[I]),rel:A+1,"data:realIndex":I});o.ctx.series.addCollapsedClassToSeries(B,I),a[A].length>0&&(o.visibleI=o.visibleI+1);var U,ee,K=0;o.yRatio.length>1&&(o.yaxisIndex=c.globals.seriesYAxisReverseMap[I][0],K=I);var te=o.barHelpers.initialPositions();C=te.y,U=te.barHeight,M=te.yDivision,u=te.zeroW,y=te.x,ee=te.barWidth,E=te.xDivision,P=te.zeroH,L.push(y+ee/2);for(var le=d.group({class:"apexcharts-datalabels","data:realIndex":I}),de=function(me){var Ae=o.barHelpers.getStrokeWidth(A,me,I),xe=null,_e={indexes:{i:A,j:me,realIndex:I,translationsIndex:K},x:y,y:C,strokeWidth:Ae,elSeries:B};xe=o.isHorizontal?o.drawHorizontalBoxPaths(Y(Y({},_e),{},{yDivision:M,barHeight:U,zeroW:u})):o.drawVerticalBoxPaths(Y(Y({},_e),{},{xDivision:E,barWidth:ee,zeroH:P})),C=xe.y,y=xe.x,me>0&&L.push(y+ee/2),D.push(C),xe.pathTo.forEach(function(Be,We){var ze=!o.isBoxPlot&&o.candlestickOptions.wick.useFillColor?xe.color[We]:c.globals.stroke.colors[A],kt=m.fillPath({seriesNumber:I,dataPointIndex:me,color:xe.color[We],value:a[A][me]});o.renderSeries({realIndex:I,pathFill:kt,lineFill:ze,j:me,i:A,pathFrom:xe.pathFrom,pathTo:Be,strokeWidth:Ae,elSeries:B,x:y,y:C,series:a,columnGroupIndex:H,barHeight:U,barWidth:ee,elDataLabelsWrap:le,visibleSeries:o.visibleI,type:c.config.chart.type})})},fe=0;fe<c.globals.dataPoints;fe++)de(fe);c.globals.seriesXvalues[I]=L,c.globals.seriesYvalues[I]=D,x.add(B)},S=0;S<a.length;S++)w(S);return x}},{key:"drawVerticalBoxPaths",value:function(a){var r=a.indexes,l=a.x;a.y;var o=a.xDivision,c=a.barWidth,d=a.zeroH,f=a.strokeWidth,m=this.w,p=new V(this.ctx),x=r.i,w=r.j,S=!0,A=m.config.plotOptions.candlestick.colors.upward,E=m.config.plotOptions.candlestick.colors.downward,M="";this.isBoxPlot&&(M=[this.boxOptions.colors.lower,this.boxOptions.colors.upper]);var P=this.yRatio[r.translationsIndex],u=r.realIndex,y=this.getOHLCValue(u,w),C=d,D=d;y.o>y.c&&(S=!1);var L=Math.min(y.o,y.c),I=Math.max(y.o,y.c),H=y.m;m.globals.isXNumeric&&(l=(m.globals.seriesX[u][w]-m.globals.minX)/this.xRatio-c/2);var B=l+c*this.visibleI;this.series[x][w]===void 0||this.series[x][w]===null?(L=d,I=d):(L=d-L/P,I=d-I/P,C=d-y.h/P,D=d-y.l/P,H=d-y.m/P);var U=p.move(B,d),ee=p.move(B+c/2,L);return m.globals.previousPaths.length>0&&(ee=this.getPreviousPath(u,w,!0)),U=this.isBoxPlot?[p.move(B,L)+p.line(B+c/2,L)+p.line(B+c/2,C)+p.line(B+c/4,C)+p.line(B+c-c/4,C)+p.line(B+c/2,C)+p.line(B+c/2,L)+p.line(B+c,L)+p.line(B+c,H)+p.line(B,H)+p.line(B,L+f/2),p.move(B,H)+p.line(B+c,H)+p.line(B+c,I)+p.line(B+c/2,I)+p.line(B+c/2,D)+p.line(B+c-c/4,D)+p.line(B+c/4,D)+p.line(B+c/2,D)+p.line(B+c/2,I)+p.line(B,I)+p.line(B,H)+"z"]:[p.move(B,I)+p.line(B+c/2,I)+p.line(B+c/2,C)+p.line(B+c/2,I)+p.line(B+c,I)+p.line(B+c,L)+p.line(B+c/2,L)+p.line(B+c/2,D)+p.line(B+c/2,L)+p.line(B,L)+p.line(B,I-f/2)],ee+=p.move(B,L),m.globals.isXNumeric||(l+=o),{pathTo:U,pathFrom:ee,x:l,y:I,barXPosition:B,color:this.isBoxPlot?M:S?[A]:[E]}}},{key:"drawHorizontalBoxPaths",value:function(a){var r=a.indexes;a.x;var l=a.y,o=a.yDivision,c=a.barHeight,d=a.zeroW,f=a.strokeWidth,m=this.w,p=new V(this.ctx),x=r.i,w=r.j,S=this.boxOptions.colors.lower;this.isBoxPlot&&(S=[this.boxOptions.colors.lower,this.boxOptions.colors.upper]);var A=this.invertedYRatio,E=r.realIndex,M=this.getOHLCValue(E,w),P=d,u=d,y=Math.min(M.o,M.c),C=Math.max(M.o,M.c),D=M.m;m.globals.isXNumeric&&(l=(m.globals.seriesX[E][w]-m.globals.minX)/this.invertedXRatio-c/2);var L=l+c*this.visibleI;this.series[x][w]===void 0||this.series[x][w]===null?(y=d,C=d):(y=d+y/A,C=d+C/A,P=d+M.h/A,u=d+M.l/A,D=d+M.m/A);var I=p.move(d,L),H=p.move(y,L+c/2);return m.globals.previousPaths.length>0&&(H=this.getPreviousPath(E,w,!0)),I=[p.move(y,L)+p.line(y,L+c/2)+p.line(P,L+c/2)+p.line(P,L+c/2-c/4)+p.line(P,L+c/2+c/4)+p.line(P,L+c/2)+p.line(y,L+c/2)+p.line(y,L+c)+p.line(D,L+c)+p.line(D,L)+p.line(y+f/2,L),p.move(D,L)+p.line(D,L+c)+p.line(C,L+c)+p.line(C,L+c/2)+p.line(u,L+c/2)+p.line(u,L+c-c/4)+p.line(u,L+c/4)+p.line(u,L+c/2)+p.line(C,L+c/2)+p.line(C,L)+p.line(D,L)+"z"],H+=p.move(y,L),m.globals.isXNumeric||(l+=o),{pathTo:I,pathFrom:H,x:C,y:l,barYPosition:L,color:S}}},{key:"getOHLCValue",value:function(a,r){var l=this.w;return{o:this.isBoxPlot?l.globals.seriesCandleH[a][r]:l.globals.seriesCandleO[a][r],h:this.isBoxPlot?l.globals.seriesCandleO[a][r]:l.globals.seriesCandleH[a][r],m:l.globals.seriesCandleM[a][r],l:this.isBoxPlot?l.globals.seriesCandleC[a][r]:l.globals.seriesCandleL[a][r],c:this.isBoxPlot?l.globals.seriesCandleL[a][r]:l.globals.seriesCandleC[a][r]}}}]),t}(),W=function(){function _(e){g(this,_),this.ctx=e,this.w=e.w}return v(_,[{key:"checkColorRange",value:function(){var e=this.w,t=!1,a=e.config.plotOptions[e.config.chart.type];return a.colorScale.ranges.length>0&&a.colorScale.ranges.map(function(r,l){r.from<=0&&(t=!0)}),t}},{key:"getShadeColor",value:function(e,t,a,r){var l=this.w,o=1,c=l.config.plotOptions[e].shadeIntensity,d=this.determineColor(e,t,a);l.globals.hasNegs||r?o=l.config.plotOptions[e].reverseNegativeShade?d.percent<0?d.percent/100*(1.25*c):(1-d.percent/100)*(1.25*c):d.percent<=0?1-(1+d.percent/100)*c:(1-d.percent/100)*c:(o=1-d.percent/100,e==="treemap"&&(o=(1-d.percent/100)*(1.25*c)));var f=d.color,m=new X;if(l.config.plotOptions[e].enableShades)if(this.w.config.theme.mode==="dark"){var p=m.shadeColor(-1*o,d.color);f=X.hexToRgba(X.isColorHex(p)?p:X.rgb2hex(p),l.config.fill.opacity)}else{var x=m.shadeColor(o,d.color);f=X.hexToRgba(X.isColorHex(x)?x:X.rgb2hex(x),l.config.fill.opacity)}return{color:f,colorProps:d}}},{key:"determineColor",value:function(e,t,a){var r=this.w,l=r.globals.series[t][a],o=r.config.plotOptions[e],c=o.colorScale.inverse?a:t;o.distributed&&r.config.chart.type==="treemap"&&(c=a);var d=r.globals.colors[c],f=null,m=Math.min.apply(Math,ie(r.globals.series[t])),p=Math.max.apply(Math,ie(r.globals.series[t]));o.distributed||e!=="heatmap"||(m=r.globals.minY,p=r.globals.maxY),o.colorScale.min!==void 0&&(m=o.colorScale.min<r.globals.minY?o.colorScale.min:r.globals.minY,p=o.colorScale.max>r.globals.maxY?o.colorScale.max:r.globals.maxY);var x=Math.abs(p)+Math.abs(m),w=100*l/(x===0?x-1e-6:x);return o.colorScale.ranges.length>0&&o.colorScale.ranges.map(function(S,A){if(l>=S.from&&l<=S.to){d=S.color,f=S.foreColor?S.foreColor:null,m=S.from,p=S.to;var E=Math.abs(p)+Math.abs(m);w=100*l/(E===0?E-1e-6:E)}}),{color:d,foreColor:f,percent:w}}},{key:"calculateDataLabels",value:function(e){var t=e.text,a=e.x,r=e.y,l=e.i,o=e.j,c=e.colorProps,d=e.fontSize,f=this.w.config.dataLabels,m=new V(this.ctx),p=new zt(this.ctx),x=null;if(f.enabled){x=m.group({class:"apexcharts-data-labels"});var w=f.offsetX,S=f.offsetY,A=a+w,E=r+parseFloat(f.style.fontSize)/3+S;p.plotDataLabelsText({x:A,y:E,text:t,i:l,j:o,color:c.foreColor,parent:x,fontSize:d,dataLabelsConfig:f})}return x}},{key:"addListeners",value:function(e){var t=new V(this.ctx);e.node.addEventListener("mouseenter",t.pathMouseEnter.bind(this,e)),e.node.addEventListener("mouseleave",t.pathMouseLeave.bind(this,e)),e.node.addEventListener("mousedown",t.pathMouseDown.bind(this,e))}}]),_}(),J=function(){function _(e,t){g(this,_),this.ctx=e,this.w=e.w,this.xRatio=t.xRatio,this.yRatio=t.yRatio,this.dynamicAnim=this.w.config.chart.animations.dynamicAnimation,this.helpers=new W(e),this.rectRadius=this.w.config.plotOptions.heatmap.radius,this.strokeWidth=this.w.config.stroke.show?this.w.config.stroke.width:0}return v(_,[{key:"draw",value:function(e){var t=this.w,a=new V(this.ctx),r=a.group({class:"apexcharts-heatmap"});r.attr("clip-path","url(#gridRectMask".concat(t.globals.cuid,")"));var l=t.globals.gridWidth/t.globals.dataPoints,o=t.globals.gridHeight/t.globals.series.length,c=0,d=!1;this.negRange=this.helpers.checkColorRange();var f=e.slice();t.config.yaxis[0].reversed&&(d=!0,f.reverse());for(var m=d?0:f.length-1;d?m<f.length:m>=0;d?m++:m--){var p=a.group({class:"apexcharts-series apexcharts-heatmap-series",seriesName:X.escapeString(t.globals.seriesNames[m]),rel:m+1,"data:realIndex":m});if(this.ctx.series.addCollapsedClassToSeries(p,m),t.config.chart.dropShadow.enabled){var x=t.config.chart.dropShadow;new ce(this.ctx).dropShadow(p,x,m)}for(var w=0,S=t.config.plotOptions.heatmap.shadeIntensity,A=0;A<f[m].length;A++){var E=this.helpers.getShadeColor(t.config.chart.type,m,A,this.negRange),M=E.color,P=E.colorProps;t.config.fill.type==="image"&&(M=new dt(this.ctx).fillPath({seriesNumber:m,dataPointIndex:A,opacity:t.globals.hasNegs?P.percent<0?1-(1+P.percent/100):S+P.percent/100:P.percent/100,patternID:X.randomId(),width:t.config.fill.image.width?t.config.fill.image.width:l,height:t.config.fill.image.height?t.config.fill.image.height:o}));var u=this.rectRadius,y=a.drawRect(w,c,l,o,u);if(y.attr({cx:w,cy:c}),y.node.classList.add("apexcharts-heatmap-rect"),p.add(y),y.attr({fill:M,i:m,index:m,j:A,val:e[m][A],"stroke-width":this.strokeWidth,stroke:t.config.plotOptions.heatmap.useFillColorAsStroke?M:t.globals.stroke.colors[0],color:M}),this.helpers.addListeners(y),t.config.chart.animations.enabled&&!t.globals.dataChanged){var C=1;t.globals.resized||(C=t.config.chart.animations.speed),this.animateHeatMap(y,w,c,l,o,C)}if(t.globals.dataChanged){var D=1;if(this.dynamicAnim.enabled&&t.globals.shouldAnimate){D=this.dynamicAnim.speed;var L=t.globals.previousPaths[m]&&t.globals.previousPaths[m][A]&&t.globals.previousPaths[m][A].color;L||(L="rgba(255, 255, 255, 0)"),this.animateHeatColor(y,X.isColorHex(L)?L:X.rgb2hex(L),X.isColorHex(M)?M:X.rgb2hex(M),D)}}var I=(0,t.config.dataLabels.formatter)(t.globals.series[m][A],{value:t.globals.series[m][A],seriesIndex:m,dataPointIndex:A,w:t}),H=this.helpers.calculateDataLabels({text:I,x:w+l/2,y:c+o/2,i:m,j:A,colorProps:P,series:f});H!==null&&p.add(H),w+=l}c+=o,r.add(p)}var B=t.globals.yAxisScale[0].result.slice();return t.config.yaxis[0].reversed?B.unshift(""):B.push(""),t.globals.yAxisScale[0].result=B,r}},{key:"animateHeatMap",value:function(e,t,a,r,l,o){var c=new we(this.ctx);c.animateRect(e,{x:t+r/2,y:a+l/2,width:0,height:0},{x:t,y:a,width:r,height:l},o,function(){c.animationCompleted(e)})}},{key:"animateHeatColor",value:function(e,t,a,r){e.attr({fill:t}).animate(r).attr({fill:a})}}]),_}(),re=function(){function _(e){g(this,_),this.ctx=e,this.w=e.w}return v(_,[{key:"drawYAxisTexts",value:function(e,t,a,r){var l=this.w,o=l.config.yaxis[0],c=l.globals.yLabelFormatters[0];return new V(this.ctx).drawText({x:e+o.labels.offsetX,y:t+o.labels.offsetY,text:c(r,a),textAnchor:"middle",fontSize:o.labels.style.fontSize,fontFamily:o.labels.style.fontFamily,foreColor:Array.isArray(o.labels.style.colors)?o.labels.style.colors[a]:o.labels.style.colors})}}]),_}(),he=function(){function _(e){g(this,_),this.ctx=e,this.w=e.w;var t=this.w;this.chartType=this.w.config.chart.type,this.initialAnim=this.w.config.chart.animations.enabled,this.dynamicAnim=this.initialAnim&&this.w.config.chart.animations.dynamicAnimation.enabled,this.animBeginArr=[0],this.animDur=0,this.donutDataLabels=this.w.config.plotOptions.pie.donut.labels,this.lineColorArr=t.globals.stroke.colors!==void 0?t.globals.stroke.colors:t.globals.colors,this.defaultSize=Math.min(t.globals.gridWidth,t.globals.gridHeight),this.centerY=this.defaultSize/2,this.centerX=t.globals.gridWidth/2,t.config.chart.type==="radialBar"?this.fullAngle=360:this.fullAngle=Math.abs(t.config.plotOptions.pie.endAngle-t.config.plotOptions.pie.startAngle),this.initialAngle=t.config.plotOptions.pie.startAngle%this.fullAngle,t.globals.radialSize=this.defaultSize/2.05-t.config.stroke.width-(t.config.chart.sparkline.enabled?0:t.config.chart.dropShadow.blur),this.donutSize=t.globals.radialSize*parseInt(t.config.plotOptions.pie.donut.size,10)/100;var a=t.config.plotOptions.pie.customScale,r=t.globals.gridWidth/2,l=t.globals.gridHeight/2;this.translateX=r-r*a,this.translateY=l-l*a,this.dataLabelsGroup=new V(this.ctx).group({class:"apexcharts-datalabels-group",transform:"translate(".concat(this.translateX,", ").concat(this.translateY,") scale(").concat(a,")")}),this.maxY=0,this.sliceLabels=[],this.sliceSizes=[],this.prevSectorAngleArr=[]}return v(_,[{key:"draw",value:function(e){var t=this,a=this.w,r=new V(this.ctx),l=r.group({class:"apexcharts-pie"});if(a.globals.noData)return l;for(var o=0,c=0;c<e.length;c++)o+=X.negToZero(e[c]);var d=[],f=r.group();o===0&&(o=1e-5),e.forEach(function(u){t.maxY=Math.max(t.maxY,u)}),a.config.yaxis[0].max&&(this.maxY=a.config.yaxis[0].max),a.config.grid.position==="back"&&this.chartType==="polarArea"&&this.drawPolarElements(l);for(var m=0;m<e.length;m++){var p=this.fullAngle*X.negToZero(e[m])/o;d.push(p),this.chartType==="polarArea"?(d[m]=this.fullAngle/e.length,this.sliceSizes.push(a.globals.radialSize*e[m]/this.maxY)):this.sliceSizes.push(a.globals.radialSize)}if(a.globals.dataChanged){for(var x,w=0,S=0;S<a.globals.previousPaths.length;S++)w+=X.negToZero(a.globals.previousPaths[S]);for(var A=0;A<a.globals.previousPaths.length;A++)x=this.fullAngle*X.negToZero(a.globals.previousPaths[A])/w,this.prevSectorAngleArr.push(x)}if(this.donutSize<0&&(this.donutSize=0),this.chartType==="donut"){var E=r.drawCircle(this.donutSize);E.attr({cx:this.centerX,cy:this.centerY,fill:a.config.plotOptions.pie.donut.background?a.config.plotOptions.pie.donut.background:"transparent"}),f.add(E)}var M=this.drawArcs(d,e);if(this.sliceLabels.forEach(function(u){M.add(u)}),f.attr({transform:"translate(".concat(this.translateX,", ").concat(this.translateY,") scale(").concat(a.config.plotOptions.pie.customScale,")")}),f.add(M),l.add(f),this.donutDataLabels.show){var P=this.renderInnerDataLabels(this.dataLabelsGroup,this.donutDataLabels,{hollowSize:this.donutSize,centerX:this.centerX,centerY:this.centerY,opacity:this.donutDataLabels.show});l.add(P)}return a.config.grid.position==="front"&&this.chartType==="polarArea"&&this.drawPolarElements(l),l}},{key:"drawArcs",value:function(e,t){var a=this.w,r=new ce(this.ctx),l=new V(this.ctx),o=new dt(this.ctx),c=l.group({class:"apexcharts-slices"}),d=this.initialAngle,f=this.initialAngle,m=this.initialAngle,p=this.initialAngle;this.strokeWidth=a.config.stroke.show?a.config.stroke.width:0;for(var x=0;x<e.length;x++){var w=l.group({class:"apexcharts-series apexcharts-pie-series",seriesName:X.escapeString(a.globals.seriesNames[x]),rel:x+1,"data:realIndex":x});c.add(w),f=p,m=(d=m)+e[x],p=f+this.prevSectorAngleArr[x];var S=m<d?this.fullAngle+m-d:m-d,A=o.fillPath({seriesNumber:x,size:this.sliceSizes[x],value:t[x]}),E=this.getChangedPath(f,p),M=l.drawPath({d:E,stroke:Array.isArray(this.lineColorArr)?this.lineColorArr[x]:this.lineColorArr,strokeWidth:0,fill:A,fillOpacity:a.config.fill.opacity,classes:"apexcharts-pie-area apexcharts-".concat(this.chartType.toLowerCase(),"-slice-").concat(x)});if(M.attr({index:0,j:x}),r.setSelectionFilter(M,0,x),a.config.chart.dropShadow.enabled){var P=a.config.chart.dropShadow;r.dropShadow(M,P,x)}this.addListeners(M,this.donutDataLabels),V.setAttrs(M.node,{"data:angle":S,"data:startAngle":d,"data:strokeWidth":this.strokeWidth,"data:value":t[x]});var u={x:0,y:0};this.chartType==="pie"||this.chartType==="polarArea"?u=X.polarToCartesian(this.centerX,this.centerY,a.globals.radialSize/1.25+a.config.plotOptions.pie.dataLabels.offset,(d+S/2)%this.fullAngle):this.chartType==="donut"&&(u=X.polarToCartesian(this.centerX,this.centerY,(a.globals.radialSize+this.donutSize)/2+a.config.plotOptions.pie.dataLabels.offset,(d+S/2)%this.fullAngle)),w.add(M);var y=0;if(!this.initialAnim||a.globals.resized||a.globals.dataChanged?this.animBeginArr.push(0):((y=S/this.fullAngle*a.config.chart.animations.speed)===0&&(y=1),this.animDur=y+this.animDur,this.animBeginArr.push(this.animDur)),this.dynamicAnim&&a.globals.dataChanged?this.animatePaths(M,{size:this.sliceSizes[x],endAngle:m,startAngle:d,prevStartAngle:f,prevEndAngle:p,animateStartingPos:!0,i:x,animBeginArr:this.animBeginArr,shouldSetPrevPaths:!0,dur:a.config.chart.animations.dynamicAnimation.speed}):this.animatePaths(M,{size:this.sliceSizes[x],endAngle:m,startAngle:d,i:x,totalItems:e.length-1,animBeginArr:this.animBeginArr,dur:y}),a.config.plotOptions.pie.expandOnClick&&this.chartType!=="polarArea"&&M.node.addEventListener("mouseup",this.pieClicked.bind(this,x)),a.globals.selectedDataPoints[0]!==void 0&&a.globals.selectedDataPoints[0].indexOf(x)>-1&&this.pieClicked(x),a.config.dataLabels.enabled){var C=u.x,D=u.y,L=100*S/this.fullAngle+"%";if(S!==0&&a.config.plotOptions.pie.dataLabels.minAngleToShowLabel<e[x]){var I=a.config.dataLabels.formatter;I!==void 0&&(L=I(a.globals.seriesPercent[x][0],{seriesIndex:x,w:a}));var H=a.globals.dataLabels.style.colors[x],B=l.group({class:"apexcharts-datalabels"}),U=l.drawText({x:C,y:D,text:L,textAnchor:"middle",fontSize:a.config.dataLabels.style.fontSize,fontFamily:a.config.dataLabels.style.fontFamily,fontWeight:a.config.dataLabels.style.fontWeight,foreColor:H});if(B.add(U),a.config.dataLabels.dropShadow.enabled){var ee=a.config.dataLabels.dropShadow;r.dropShadow(U,ee)}U.node.classList.add("apexcharts-pie-label"),a.config.chart.animations.animate&&a.globals.resized===!1&&(U.node.classList.add("apexcharts-pie-label-delay"),U.node.style.animationDelay=a.config.chart.animations.speed/940+"s"),this.sliceLabels.push(B)}}}return c}},{key:"addListeners",value:function(e,t){var a=new V(this.ctx);e.node.addEventListener("mouseenter",a.pathMouseEnter.bind(this,e)),e.node.addEventListener("mouseleave",a.pathMouseLeave.bind(this,e)),e.node.addEventListener("mouseleave",this.revertDataLabelsInner.bind(this,e.node,t)),e.node.addEventListener("mousedown",a.pathMouseDown.bind(this,e)),this.donutDataLabels.total.showAlways||(e.node.addEventListener("mouseenter",this.printDataLabelsInner.bind(this,e.node,t)),e.node.addEventListener("mousedown",this.printDataLabelsInner.bind(this,e.node,t)))}},{key:"animatePaths",value:function(e,t){var a=this.w,r=t.endAngle<t.startAngle?this.fullAngle+t.endAngle-t.startAngle:t.endAngle-t.startAngle,l=r,o=t.startAngle,c=t.startAngle;t.prevStartAngle!==void 0&&t.prevEndAngle!==void 0&&(o=t.prevEndAngle,l=t.prevEndAngle<t.prevStartAngle?this.fullAngle+t.prevEndAngle-t.prevStartAngle:t.prevEndAngle-t.prevStartAngle),t.i===a.config.series.length-1&&(r+c>this.fullAngle?t.endAngle=t.endAngle-(r+c):r+c<this.fullAngle&&(t.endAngle=t.endAngle+(this.fullAngle-(r+c)))),r===this.fullAngle&&(r=this.fullAngle-.01),this.animateArc(e,o,c,r,l,t)}},{key:"animateArc",value:function(e,t,a,r,l,o){var c,d=this,f=this.w,m=new we(this.ctx),p=o.size;(isNaN(t)||isNaN(l))&&(t=a,l=r,o.dur=0);var x=r,w=a,S=t<a?this.fullAngle+t-a:t-a;f.globals.dataChanged&&o.shouldSetPrevPaths&&o.prevEndAngle&&(c=d.getPiePath({me:d,startAngle:o.prevStartAngle,angle:o.prevEndAngle<o.prevStartAngle?this.fullAngle+o.prevEndAngle-o.prevStartAngle:o.prevEndAngle-o.prevStartAngle,size:p}),e.attr({d:c})),o.dur!==0?e.animate(o.dur,f.globals.easing,o.animBeginArr[o.i]).afterAll(function(){d.chartType!=="pie"&&d.chartType!=="donut"&&d.chartType!=="polarArea"||this.animate(f.config.chart.animations.dynamicAnimation.speed).attr({"stroke-width":d.strokeWidth}),o.i===f.config.series.length-1&&m.animationCompleted(e)}).during(function(A){x=S+(r-S)*A,o.animateStartingPos&&(x=l+(r-l)*A,w=t-l+(a-(t-l))*A),c=d.getPiePath({me:d,startAngle:w,angle:x,size:p}),e.node.setAttribute("data:pathOrig",c),e.attr({d:c})}):(c=d.getPiePath({me:d,startAngle:w,angle:r,size:p}),o.isTrack||(f.globals.animationEnded=!0),e.node.setAttribute("data:pathOrig",c),e.attr({d:c,"stroke-width":d.strokeWidth}))}},{key:"pieClicked",value:function(e){var t,a=this.w,r=this,l=r.sliceSizes[e]+(a.config.plotOptions.pie.expandOnClick?4:0),o=a.globals.dom.Paper.select(".apexcharts-".concat(r.chartType.toLowerCase(),"-slice-").concat(e)).members[0];if(o.attr("data:pieClicked")!=="true"){var c=a.globals.dom.baseEl.getElementsByClassName("apexcharts-pie-area");Array.prototype.forEach.call(c,function(p){p.setAttribute("data:pieClicked","false");var x=p.getAttribute("data:pathOrig");x&&p.setAttribute("d",x)}),a.globals.capturedDataPointIndex=e,o.attr("data:pieClicked","true");var d=parseInt(o.attr("data:startAngle"),10),f=parseInt(o.attr("data:angle"),10);t=r.getPiePath({me:r,startAngle:d,angle:f,size:l}),f!==360&&o.plot(t)}else{o.attr({"data:pieClicked":"false"}),this.revertDataLabelsInner(o.node,this.donutDataLabels);var m=o.attr("data:pathOrig");o.attr({d:m})}}},{key:"getChangedPath",value:function(e,t){var a="";return this.dynamicAnim&&this.w.globals.dataChanged&&(a=this.getPiePath({me:this,startAngle:e,angle:t-e,size:this.size})),a}},{key:"getPiePath",value:function(e){var t,a=e.me,r=e.startAngle,l=e.angle,o=e.size,c=new V(this.ctx),d=r,f=Math.PI*(d-90)/180,m=l+r;Math.ceil(m)>=this.fullAngle+this.w.config.plotOptions.pie.startAngle%this.fullAngle&&(m=this.fullAngle+this.w.config.plotOptions.pie.startAngle%this.fullAngle-.01),Math.ceil(m)>this.fullAngle&&(m-=this.fullAngle);var p=Math.PI*(m-90)/180,x=a.centerX+o*Math.cos(f),w=a.centerY+o*Math.sin(f),S=a.centerX+o*Math.cos(p),A=a.centerY+o*Math.sin(p),E=X.polarToCartesian(a.centerX,a.centerY,a.donutSize,m),M=X.polarToCartesian(a.centerX,a.centerY,a.donutSize,d),P=l>180?1:0,u=["M",x,w,"A",o,o,0,P,1,S,A];return t=a.chartType==="donut"?[].concat(u,["L",E.x,E.y,"A",a.donutSize,a.donutSize,0,P,0,M.x,M.y,"L",x,w,"z"]).join(" "):a.chartType==="pie"||a.chartType==="polarArea"?[].concat(u,["L",a.centerX,a.centerY,"L",x,w]).join(" "):[].concat(u).join(" "),c.roundPathCorners(t,2*this.strokeWidth)}},{key:"drawPolarElements",value:function(e){var t=this.w,a=new ga(this.ctx),r=new V(this.ctx),l=new re(this.ctx),o=r.group(),c=r.group(),d=a.niceScale(0,Math.ceil(this.maxY),0),f=d.result.reverse(),m=d.result.length;this.maxY=d.niceMax;for(var p=t.globals.radialSize,x=p/(m-1),w=0;w<m-1;w++){var S=r.drawCircle(p);if(S.attr({cx:this.centerX,cy:this.centerY,fill:"none","stroke-width":t.config.plotOptions.polarArea.rings.strokeWidth,stroke:t.config.plotOptions.polarArea.rings.strokeColor}),t.config.yaxis[0].show){var A=l.drawYAxisTexts(this.centerX,this.centerY-p+parseInt(t.config.yaxis[0].labels.style.fontSize,10)/2,w,f[w]);c.add(A)}o.add(S),p-=x}this.drawSpokes(e),e.add(o),e.add(c)}},{key:"renderInnerDataLabels",value:function(e,t,a){var r=this.w,l=new V(this.ctx),o=t.total.show;e.node.innerHTML="",e.node.style.opacity=a.opacity;var c,d,f=a.centerX,m=this.donutDataLabels.total.label?a.centerY:a.centerY-a.centerY/6;c=t.name.color===void 0?r.globals.colors[0]:t.name.color;var p=t.name.fontSize,x=t.name.fontFamily,w=t.name.fontWeight;d=t.value.color===void 0?r.config.chart.foreColor:t.value.color;var S=t.value.formatter,A="",E="";if(o?(c=t.total.color,p=t.total.fontSize,x=t.total.fontFamily,w=t.total.fontWeight,E=this.donutDataLabels.total.label?t.total.label:"",A=t.total.formatter(r)):r.globals.series.length===1&&(A=S(r.globals.series[0],r),E=r.globals.seriesNames[0]),E&&(E=t.name.formatter(E,t.total.show,r)),t.name.show){var M=l.drawText({x:f,y:m+parseFloat(t.name.offsetY),text:E,textAnchor:"middle",foreColor:c,fontSize:p,fontWeight:w,fontFamily:x});M.node.classList.add("apexcharts-datalabel-label"),e.add(M)}if(t.value.show){var P=t.name.show?parseFloat(t.value.offsetY)+16:t.value.offsetY,u=l.drawText({x:f,y:m+P,text:A,textAnchor:"middle",foreColor:d,fontWeight:t.value.fontWeight,fontSize:t.value.fontSize,fontFamily:t.value.fontFamily});u.node.classList.add("apexcharts-datalabel-value"),e.add(u)}return e}},{key:"printInnerLabels",value:function(e,t,a,r){var l,o=this.w;r?l=e.name.color===void 0?o.globals.colors[parseInt(r.parentNode.getAttribute("rel"),10)-1]:e.name.color:o.globals.series.length>1&&e.total.show&&(l=e.total.color);var c=o.globals.dom.baseEl.querySelector(".apexcharts-datalabel-label"),d=o.globals.dom.baseEl.querySelector(".apexcharts-datalabel-value");a=(0,e.value.formatter)(a,o),r||typeof e.total.formatter!="function"||(a=e.total.formatter(o));var f=t===e.total.label;t=this.donutDataLabels.total.label?e.name.formatter(t,f,o):"",c!==null&&(c.textContent=t),d!==null&&(d.textContent=a),c!==null&&(c.style.fill=l)}},{key:"printDataLabelsInner",value:function(e,t){var a=this.w,r=e.getAttribute("data:value"),l=a.globals.seriesNames[parseInt(e.parentNode.getAttribute("rel"),10)-1];a.globals.series.length>1&&this.printInnerLabels(t,l,r,e);var o=a.globals.dom.baseEl.querySelector(".apexcharts-datalabels-group");o!==null&&(o.style.opacity=1)}},{key:"drawSpokes",value:function(e){var t=this,a=this.w,r=new V(this.ctx),l=a.config.plotOptions.polarArea.spokes;if(l.strokeWidth!==0){for(var o=[],c=360/a.globals.series.length,d=0;d<a.globals.series.length;d++)o.push(X.polarToCartesian(this.centerX,this.centerY,a.globals.radialSize,a.config.plotOptions.pie.startAngle+c*d));o.forEach(function(f,m){var p=r.drawLine(f.x,f.y,t.centerX,t.centerY,Array.isArray(l.connectorColors)?l.connectorColors[m]:l.connectorColors);e.add(p)})}}},{key:"revertDataLabelsInner",value:function(){var e=this.w;if(this.donutDataLabels.show){var t=e.globals.dom.Paper.select(".apexcharts-datalabels-group").members[0],a=this.renderInnerDataLabels(t,this.donutDataLabels,{hollowSize:this.donutSize,centerX:this.centerX,centerY:this.centerY,opacity:this.donutDataLabels.show});e.globals.dom.Paper.select(".apexcharts-radialbar, .apexcharts-pie").members[0].add(a)}}}]),_}(),Ce=function(){function _(e){g(this,_),this.ctx=e,this.w=e.w,this.chartType=this.w.config.chart.type,this.initialAnim=this.w.config.chart.animations.enabled,this.dynamicAnim=this.initialAnim&&this.w.config.chart.animations.dynamicAnimation.enabled,this.animDur=0;var t=this.w;this.graphics=new V(this.ctx),this.lineColorArr=t.globals.stroke.colors!==void 0?t.globals.stroke.colors:t.globals.colors,this.defaultSize=t.globals.svgHeight<t.globals.svgWidth?t.globals.gridHeight:t.globals.gridWidth,this.isLog=t.config.yaxis[0].logarithmic,this.logBase=t.config.yaxis[0].logBase,this.coreUtils=new se(this.ctx),this.maxValue=this.isLog?this.coreUtils.getLogVal(this.logBase,t.globals.maxY,0):t.globals.maxY,this.minValue=this.isLog?this.coreUtils.getLogVal(this.logBase,this.w.globals.minY,0):t.globals.minY,this.polygons=t.config.plotOptions.radar.polygons,this.strokeWidth=t.config.stroke.show?t.config.stroke.width:0,this.size=this.defaultSize/2.1-this.strokeWidth-t.config.chart.dropShadow.blur,t.config.xaxis.labels.show&&(this.size=this.size-t.globals.xAxisLabelsWidth/1.75),t.config.plotOptions.radar.size!==void 0&&(this.size=t.config.plotOptions.radar.size),this.dataRadiusOfPercent=[],this.dataRadius=[],this.angleArr=[],this.yaxisLabelsTextsPos=[]}return v(_,[{key:"draw",value:function(e){var t=this,a=this.w,r=new dt(this.ctx),l=[],o=new zt(this.ctx);e.length&&(this.dataPointsLen=e[a.globals.maxValsInArrayIndex].length),this.disAngle=2*Math.PI/this.dataPointsLen;var c=a.globals.gridWidth/2,d=a.globals.gridHeight/2,f=c+a.config.plotOptions.radar.offsetX,m=d+a.config.plotOptions.radar.offsetY,p=this.graphics.group({class:"apexcharts-radar-series apexcharts-plot-series",transform:"translate(".concat(f||0,", ").concat(m||0,")")}),x=[],w=null,S=null;if(this.yaxisLabels=this.graphics.group({class:"apexcharts-yaxis"}),e.forEach(function(E,M){var P=E.length===a.globals.dataPoints,u=t.graphics.group().attr({class:"apexcharts-series","data:longestSeries":P,seriesName:X.escapeString(a.globals.seriesNames[M]),rel:M+1,"data:realIndex":M});t.dataRadiusOfPercent[M]=[],t.dataRadius[M]=[],t.angleArr[M]=[],E.forEach(function(K,te){var le=Math.abs(t.maxValue-t.minValue);K-=t.minValue,t.isLog&&(K=t.coreUtils.getLogVal(t.logBase,K,0)),t.dataRadiusOfPercent[M][te]=K/le,t.dataRadius[M][te]=t.dataRadiusOfPercent[M][te]*t.size,t.angleArr[M][te]=te*t.disAngle}),x=t.getDataPointsPos(t.dataRadius[M],t.angleArr[M]);var y=t.createPaths(x,{x:0,y:0});w=t.graphics.group({class:"apexcharts-series-markers-wrap apexcharts-element-hidden"}),S=t.graphics.group({class:"apexcharts-datalabels","data:realIndex":M}),a.globals.delayedElements.push({el:w.node,index:M});var C={i:M,realIndex:M,animationDelay:M,initialSpeed:a.config.chart.animations.speed,dataChangeSpeed:a.config.chart.animations.dynamicAnimation.speed,className:"apexcharts-radar",shouldClipToGrid:!1,bindEventsOnPaths:!1,stroke:a.globals.stroke.colors[M],strokeLineCap:a.config.stroke.lineCap},D=null;a.globals.previousPaths.length>0&&(D=t.getPreviousPath(M));for(var L=0;L<y.linePathsTo.length;L++){var I=t.graphics.renderPaths(Y(Y({},C),{},{pathFrom:D===null?y.linePathsFrom[L]:D,pathTo:y.linePathsTo[L],strokeWidth:Array.isArray(t.strokeWidth)?t.strokeWidth[M]:t.strokeWidth,fill:"none",drawShadow:!1}));u.add(I);var H=r.fillPath({seriesNumber:M}),B=t.graphics.renderPaths(Y(Y({},C),{},{pathFrom:D===null?y.areaPathsFrom[L]:D,pathTo:y.areaPathsTo[L],strokeWidth:0,fill:H,drawShadow:!1}));if(a.config.chart.dropShadow.enabled){var U=new ce(t.ctx),ee=a.config.chart.dropShadow;U.dropShadow(B,Object.assign({},ee,{noUserSpaceOnUse:!0}),M)}u.add(B)}E.forEach(function(K,te){var le=new Nt(t.ctx).getMarkerConfig({cssClass:"apexcharts-marker",seriesIndex:M,dataPointIndex:te}),de=t.graphics.drawMarker(x[te].x,x[te].y,le);de.attr("rel",te),de.attr("j",te),de.attr("index",M),de.node.setAttribute("default-marker-size",le.pSize);var fe=t.graphics.group({class:"apexcharts-series-markers"});fe&&fe.add(de),w.add(fe),u.add(w);var me=a.config.dataLabels;if(me.enabled){var Ae=me.formatter(a.globals.series[M][te],{seriesIndex:M,dataPointIndex:te,w:a});o.plotDataLabelsText({x:x[te].x,y:x[te].y,text:Ae,textAnchor:"middle",i:M,j:M,parent:S,offsetCorrection:!1,dataLabelsConfig:Y({},me)})}u.add(S)}),l.push(u)}),this.drawPolygons({parent:p}),a.config.xaxis.labels.show){var A=this.drawXAxisTexts();p.add(A)}return l.forEach(function(E){p.add(E)}),p.add(this.yaxisLabels),p}},{key:"drawPolygons",value:function(e){for(var t=this,a=this.w,r=e.parent,l=new re(this.ctx),o=a.globals.yAxisScale[0].result.reverse(),c=o.length,d=[],f=this.size/(c-1),m=0;m<c;m++)d[m]=f*m;d.reverse();var p=[],x=[];d.forEach(function(w,S){var A=X.getPolygonPos(w,t.dataPointsLen),E="";A.forEach(function(M,P){if(S===0){var u=t.graphics.drawLine(M.x,M.y,0,0,Array.isArray(t.polygons.connectorColors)?t.polygons.connectorColors[P]:t.polygons.connectorColors);x.push(u)}P===0&&t.yaxisLabelsTextsPos.push({x:M.x,y:M.y}),E+=M.x+","+M.y+" "}),p.push(E)}),p.forEach(function(w,S){var A=t.polygons.strokeColors,E=t.polygons.strokeWidth,M=t.graphics.drawPolygon(w,Array.isArray(A)?A[S]:A,Array.isArray(E)?E[S]:E,a.globals.radarPolygons.fill.colors[S]);r.add(M)}),x.forEach(function(w){r.add(w)}),a.config.yaxis[0].show&&this.yaxisLabelsTextsPos.forEach(function(w,S){var A=l.drawYAxisTexts(w.x,w.y,S,o[S]);t.yaxisLabels.add(A)})}},{key:"drawXAxisTexts",value:function(){var e=this,t=this.w,a=t.config.xaxis.labels,r=this.graphics.group({class:"apexcharts-xaxis"}),l=X.getPolygonPos(this.size,this.dataPointsLen);return t.globals.labels.forEach(function(o,c){var d=t.config.xaxis.labels.formatter,f=new zt(e.ctx);if(l[c]){var m=e.getTextPos(l[c],e.size),p=d(o,{seriesIndex:-1,dataPointIndex:c,w:t});f.plotDataLabelsText({x:m.newX,y:m.newY,text:p,textAnchor:m.textAnchor,i:c,j:c,parent:r,className:"apexcharts-xaxis-label",color:Array.isArray(a.style.colors)&&a.style.colors[c]?a.style.colors[c]:"#a8a8a8",dataLabelsConfig:Y({textAnchor:m.textAnchor,dropShadow:{enabled:!1}},a),offsetCorrection:!1}).on("click",function(x){if(typeof t.config.chart.events.xAxisLabelClick=="function"){var w=Object.assign({},t,{labelIndex:c});t.config.chart.events.xAxisLabelClick(x,e.ctx,w)}})}}),r}},{key:"createPaths",value:function(e,t){var a=this,r=[],l=[],o=[],c=[];if(e.length){l=[this.graphics.move(t.x,t.y)],c=[this.graphics.move(t.x,t.y)];var d=this.graphics.move(e[0].x,e[0].y),f=this.graphics.move(e[0].x,e[0].y);e.forEach(function(m,p){d+=a.graphics.line(m.x,m.y),f+=a.graphics.line(m.x,m.y),p===e.length-1&&(d+="Z",f+="Z")}),r.push(d),o.push(f)}return{linePathsFrom:l,linePathsTo:r,areaPathsFrom:c,areaPathsTo:o}}},{key:"getTextPos",value:function(e,t){var a="middle",r=e.x,l=e.y;return Math.abs(e.x)>=10?e.x>0?(a="start",r+=10):e.x<0&&(a="end",r-=10):a="middle",Math.abs(e.y)>=t-10&&(e.y<0?l-=10:e.y>0&&(l+=10)),{textAnchor:a,newX:r,newY:l}}},{key:"getPreviousPath",value:function(e){for(var t=this.w,a=null,r=0;r<t.globals.previousPaths.length;r++){var l=t.globals.previousPaths[r];l.paths.length>0&&parseInt(l.realIndex,10)===parseInt(e,10)&&t.globals.previousPaths[r].paths[0]!==void 0&&(a=t.globals.previousPaths[r].paths[0].d)}return a}},{key:"getDataPointsPos",value:function(e,t){var a=arguments.length>2&&arguments[2]!==void 0?arguments[2]:this.dataPointsLen;e=e||[],t=t||[];for(var r=[],l=0;l<a;l++){var o={};o.x=e[l]*Math.sin(t[l]),o.y=-e[l]*Math.cos(t[l]),r.push(o)}return r}}]),_}(),ge=function(_){z(t,he);var e=T(t);function t(a){var r;g(this,t),(r=e.call(this,a)).ctx=a,r.w=a.w,r.animBeginArr=[0],r.animDur=0;var l=r.w;return r.startAngle=l.config.plotOptions.radialBar.startAngle,r.endAngle=l.config.plotOptions.radialBar.endAngle,r.totalAngle=Math.abs(l.config.plotOptions.radialBar.endAngle-l.config.plotOptions.radialBar.startAngle),r.trackStartAngle=l.config.plotOptions.radialBar.track.startAngle,r.trackEndAngle=l.config.plotOptions.radialBar.track.endAngle,r.barLabels=r.w.config.plotOptions.radialBar.barLabels,r.donutDataLabels=r.w.config.plotOptions.radialBar.dataLabels,r.radialDataLabels=r.donutDataLabels,r.trackStartAngle||(r.trackStartAngle=r.startAngle),r.trackEndAngle||(r.trackEndAngle=r.endAngle),r.endAngle===360&&(r.endAngle=359.99),r.margin=parseInt(l.config.plotOptions.radialBar.track.margin,10),r.onBarLabelClick=r.onBarLabelClick.bind(h(r)),r}return v(t,[{key:"draw",value:function(a){var r=this.w,l=new V(this.ctx),o=l.group({class:"apexcharts-radialbar"});if(r.globals.noData)return o;var c=l.group(),d=this.defaultSize/2,f=r.globals.gridWidth/2,m=this.defaultSize/2.05;r.config.chart.sparkline.enabled||(m=m-r.config.stroke.width-r.config.chart.dropShadow.blur);var p=r.globals.fill.colors;if(r.config.plotOptions.radialBar.track.show){var x=this.drawTracks({size:m,centerX:f,centerY:d,colorArr:p,series:a});c.add(x)}var w=this.drawArcs({size:m,centerX:f,centerY:d,colorArr:p,series:a}),S=360;r.config.plotOptions.radialBar.startAngle<0&&(S=this.totalAngle);var A=(360-S)/360;if(r.globals.radialSize=m-m*A,this.radialDataLabels.value.show){var E=Math.max(this.radialDataLabels.value.offsetY,this.radialDataLabels.name.offsetY);r.globals.radialSize+=E*A}return c.add(w.g),r.config.plotOptions.radialBar.hollow.position==="front"&&(w.g.add(w.elHollow),w.dataLabels&&w.g.add(w.dataLabels)),o.add(c),o}},{key:"drawTracks",value:function(a){var r=this.w,l=new V(this.ctx),o=l.group({class:"apexcharts-tracks"}),c=new ce(this.ctx),d=new dt(this.ctx),f=this.getStrokeWidth(a);a.size=a.size-f/2;for(var m=0;m<a.series.length;m++){var p=l.group({class:"apexcharts-radialbar-track apexcharts-track"});o.add(p),p.attr({rel:m+1}),a.size=a.size-f-this.margin;var x=r.config.plotOptions.radialBar.track,w=d.fillPath({seriesNumber:0,size:a.size,fillColors:Array.isArray(x.background)?x.background[m]:x.background,solid:!0}),S=this.trackStartAngle,A=this.trackEndAngle;Math.abs(A)+Math.abs(S)>=360&&(A=360-Math.abs(this.startAngle)-.1);var E=l.drawPath({d:"",stroke:w,strokeWidth:f*parseInt(x.strokeWidth,10)/100,fill:"none",strokeOpacity:x.opacity,classes:"apexcharts-radialbar-area"});if(x.dropShadow.enabled){var M=x.dropShadow;c.dropShadow(E,M)}p.add(E),E.attr("id","apexcharts-radialbarTrack-"+m),this.animatePaths(E,{centerX:a.centerX,centerY:a.centerY,endAngle:A,startAngle:S,size:a.size,i:m,totalItems:2,animBeginArr:0,dur:0,isTrack:!0,easing:r.globals.easing})}return o}},{key:"drawArcs",value:function(a){var r=this.w,l=new V(this.ctx),o=new dt(this.ctx),c=new ce(this.ctx),d=l.group(),f=this.getStrokeWidth(a);a.size=a.size-f/2;var m=r.config.plotOptions.radialBar.hollow.background,p=a.size-f*a.series.length-this.margin*a.series.length-f*parseInt(r.config.plotOptions.radialBar.track.strokeWidth,10)/100/2,x=p-r.config.plotOptions.radialBar.hollow.margin;r.config.plotOptions.radialBar.hollow.image!==void 0&&(m=this.drawHollowImage(a,d,p,m));var w=this.drawHollow({size:x,centerX:a.centerX,centerY:a.centerY,fill:m||"transparent"});if(r.config.plotOptions.radialBar.hollow.dropShadow.enabled){var S=r.config.plotOptions.radialBar.hollow.dropShadow;c.dropShadow(w,S)}var A=1;!this.radialDataLabels.total.show&&r.globals.series.length>1&&(A=0);var E=null;if(this.radialDataLabels.show){var M=r.globals.dom.Paper.select(".apexcharts-datalabels-group").members[0];E=this.renderInnerDataLabels(M,this.radialDataLabels,{hollowSize:p,centerX:a.centerX,centerY:a.centerY,opacity:A})}r.config.plotOptions.radialBar.hollow.position==="back"&&(d.add(w),E&&d.add(E));var P=!1;r.config.plotOptions.radialBar.inverseOrder&&(P=!0);for(var u=P?a.series.length-1:0;P?u>=0:u<a.series.length;P?u--:u++){var y=l.group({class:"apexcharts-series apexcharts-radial-series",seriesName:X.escapeString(r.globals.seriesNames[u])});d.add(y),y.attr({rel:u+1,"data:realIndex":u}),this.ctx.series.addCollapsedClassToSeries(y,u),a.size=a.size-f-this.margin;var C=o.fillPath({seriesNumber:u,size:a.size,value:a.series[u]}),D=this.startAngle,L=void 0,I=X.negToZero(a.series[u]>100?100:a.series[u])/100,H=Math.round(this.totalAngle*I)+this.startAngle,B=void 0;r.globals.dataChanged&&(L=this.startAngle,B=Math.round(this.totalAngle*X.negToZero(r.globals.previousPaths[u])/100)+L),Math.abs(H)+Math.abs(D)>360&&(H-=.01),Math.abs(B)+Math.abs(L)>360&&(B-=.01);var U=H-D,ee=Array.isArray(r.config.stroke.dashArray)?r.config.stroke.dashArray[u]:r.config.stroke.dashArray,K=l.drawPath({d:"",stroke:C,strokeWidth:f,fill:"none",fillOpacity:r.config.fill.opacity,classes:"apexcharts-radialbar-area apexcharts-radialbar-slice-"+u,strokeDashArray:ee});if(V.setAttrs(K.node,{"data:angle":U,"data:value":a.series[u]}),r.config.chart.dropShadow.enabled){var te=r.config.chart.dropShadow;c.dropShadow(K,te,u)}if(c.setSelectionFilter(K,0,u),this.addListeners(K,this.radialDataLabels),y.add(K),K.attr({index:0,j:u}),this.barLabels.enabled){var le=X.polarToCartesian(a.centerX,a.centerY,a.size,D),de=this.barLabels.formatter(r.globals.seriesNames[u],{seriesIndex:u,w:r}),fe=["apexcharts-radialbar-label"];this.barLabels.onClick||fe.push("apexcharts-no-click");var me=this.barLabels.useSeriesColors?r.globals.colors[u]:r.config.chart.foreColor;me||(me=r.config.chart.foreColor);var Ae=le.x+this.barLabels.offsetX,xe=le.y+this.barLabels.offsetY,_e=l.drawText({x:Ae,y:xe,text:de,textAnchor:"end",dominantBaseline:"middle",fontFamily:this.barLabels.fontFamily,fontWeight:this.barLabels.fontWeight,fontSize:this.barLabels.fontSize,foreColor:me,cssClass:fe.join(" ")});_e.on("click",this.onBarLabelClick),_e.attr({rel:u+1}),D!==0&&_e.attr({"transform-origin":"".concat(Ae," ").concat(xe),transform:"rotate(".concat(D," 0 0)")}),y.add(_e)}var Be=0;!this.initialAnim||r.globals.resized||r.globals.dataChanged||(Be=r.config.chart.animations.speed),r.globals.dataChanged&&(Be=r.config.chart.animations.dynamicAnimation.speed),this.animDur=Be/(1.2*a.series.length)+this.animDur,this.animBeginArr.push(this.animDur),this.animatePaths(K,{centerX:a.centerX,centerY:a.centerY,endAngle:H,startAngle:D,prevEndAngle:B,prevStartAngle:L,size:a.size,i:u,totalItems:2,animBeginArr:this.animBeginArr,dur:Be,shouldSetPrevPaths:!0,easing:r.globals.easing})}return{g:d,elHollow:w,dataLabels:E}}},{key:"drawHollow",value:function(a){var r=new V(this.ctx).drawCircle(2*a.size);return r.attr({class:"apexcharts-radialbar-hollow",cx:a.centerX,cy:a.centerY,r:a.size,fill:a.fill}),r}},{key:"drawHollowImage",value:function(a,r,l,o){var c=this.w,d=new dt(this.ctx),f=X.randomId(),m=c.config.plotOptions.radialBar.hollow.image;if(c.config.plotOptions.radialBar.hollow.imageClipped)d.clippedImgArea({width:l,height:l,image:m,patternID:"pattern".concat(c.globals.cuid).concat(f)}),o="url(#pattern".concat(c.globals.cuid).concat(f,")");else{var p=c.config.plotOptions.radialBar.hollow.imageWidth,x=c.config.plotOptions.radialBar.hollow.imageHeight;if(p===void 0&&x===void 0){var w=c.globals.dom.Paper.image(m).loaded(function(A){this.move(a.centerX-A.width/2+c.config.plotOptions.radialBar.hollow.imageOffsetX,a.centerY-A.height/2+c.config.plotOptions.radialBar.hollow.imageOffsetY)});r.add(w)}else{var S=c.globals.dom.Paper.image(m).loaded(function(A){this.move(a.centerX-p/2+c.config.plotOptions.radialBar.hollow.imageOffsetX,a.centerY-x/2+c.config.plotOptions.radialBar.hollow.imageOffsetY),this.size(p,x)});r.add(S)}}return o}},{key:"getStrokeWidth",value:function(a){var r=this.w;return a.size*(100-parseInt(r.config.plotOptions.radialBar.hollow.size,10))/100/(a.series.length+1)-this.margin}},{key:"onBarLabelClick",value:function(a){var r=parseInt(a.target.getAttribute("rel"),10)-1,l=this.barLabels.onClick,o=this.w;l&&l(o.globals.seriesNames[r],{w:o,seriesIndex:r})}}]),t}(),Me=function(_){z(t,ci);var e=T(t);function t(){return g(this,t),e.apply(this,arguments)}return v(t,[{key:"draw",value:function(a,r){var l=this.w,o=new V(this.ctx);this.rangeBarOptions=this.w.config.plotOptions.rangeBar,this.series=a,this.seriesRangeStart=l.globals.seriesRangeStart,this.seriesRangeEnd=l.globals.seriesRangeEnd,this.barHelpers.initVariables(a);for(var c=o.group({class:"apexcharts-rangebar-series apexcharts-plot-series"}),d=0;d<a.length;d++){var f,m,p,x,w=void 0,S=void 0,A=l.globals.comboCharts?r[d]:d,E=this.barHelpers.getGroupIndex(A).columnGroupIndex,M=o.group({class:"apexcharts-series",seriesName:X.escapeString(l.globals.seriesNames[A]),rel:d+1,"data:realIndex":A});this.ctx.series.addCollapsedClassToSeries(M,A),a[d].length>0&&(this.visibleI=this.visibleI+1);var P=0,u=0,y=0;this.yRatio.length>1&&(this.yaxisIndex=l.globals.seriesYAxisReverseMap[A][0],y=A);var C=this.barHelpers.initialPositions();S=C.y,x=C.zeroW,w=C.x,u=C.barWidth,P=C.barHeight,f=C.xDivision,m=C.yDivision,p=C.zeroH;for(var D=o.group({class:"apexcharts-datalabels","data:realIndex":A}),L=o.group({class:"apexcharts-rangebar-goals-markers"}),I=0;I<l.globals.dataPoints;I++){var H=this.barHelpers.getStrokeWidth(d,I,A),B=this.seriesRangeStart[d][I],U=this.seriesRangeEnd[d][I],ee=null,K=null,te=null,le={x:w,y:S,strokeWidth:H,elSeries:M},de=this.seriesLen;if(l.config.plotOptions.bar.rangeBarGroupRows&&(de=1),l.config.series[d].data[I]===void 0)break;if(this.isHorizontal){te=S+P*this.visibleI;var fe=(m-P*de)/2;if(l.config.series[d].data[I].x){var me=this.detectOverlappingBars({i:d,j:I,barYPosition:te,srty:fe,barHeight:P,yDivision:m,initPositions:C});P=me.barHeight,te=me.barYPosition}u=(ee=this.drawRangeBarPaths(Y({indexes:{i:d,j:I,realIndex:A},barHeight:P,barYPosition:te,zeroW:x,yDivision:m,y1:B,y2:U},le))).barWidth}else{l.globals.isXNumeric&&(w=(l.globals.seriesX[d][I]-l.globals.minX)/this.xRatio-u/2),K=w+u*this.visibleI;var Ae=(f-u*de)/2;if(l.config.series[d].data[I].x){var xe=this.detectOverlappingBars({i:d,j:I,barXPosition:K,srtx:Ae,barWidth:u,xDivision:f,initPositions:C});u=xe.barWidth,K=xe.barXPosition}P=(ee=this.drawRangeColumnPaths(Y({indexes:{i:d,j:I,realIndex:A,translationsIndex:y},barWidth:u,barXPosition:K,zeroH:p,xDivision:f},le))).barHeight}var _e=this.barHelpers.drawGoalLine({barXPosition:ee.barXPosition,barYPosition:te,goalX:ee.goalX,goalY:ee.goalY,barHeight:P,barWidth:u});_e&&L.add(_e),S=ee.y,w=ee.x;var Be=this.barHelpers.getPathFillColor(a,d,I,A),We=l.globals.stroke.colors[A];this.renderSeries({realIndex:A,pathFill:Be,lineFill:We,j:I,i:d,x:w,y:S,y1:B,y2:U,pathFrom:ee.pathFrom,pathTo:ee.pathTo,strokeWidth:H,elSeries:M,series:a,barHeight:P,barWidth:u,barXPosition:K,barYPosition:te,columnGroupIndex:E,elDataLabelsWrap:D,elGoalsMarkers:L,visibleSeries:this.visibleI,type:"rangebar"})}c.add(M)}return c}},{key:"detectOverlappingBars",value:function(a){var r=a.i,l=a.j,o=a.barYPosition,c=a.barXPosition,d=a.srty,f=a.srtx,m=a.barHeight,p=a.barWidth,x=a.yDivision,w=a.xDivision,S=a.initPositions,A=this.w,E=[],M=A.config.series[r].data[l].rangeName,P=A.config.series[r].data[l].x,u=Array.isArray(P)?P.join(" "):P,y=A.globals.labels.map(function(D){return Array.isArray(D)?D.join(" "):D}).indexOf(u),C=A.globals.seriesRange[r].findIndex(function(D){return D.x===u&&D.overlaps.length>0});return this.isHorizontal?(o=A.config.plotOptions.bar.rangeBarGroupRows?d+x*y:d+m*this.visibleI+x*y,C>-1&&!A.config.plotOptions.bar.rangeBarOverlap&&(E=A.globals.seriesRange[r][C].overlaps).indexOf(M)>-1&&(o=(m=S.barHeight/E.length)*this.visibleI+x*(100-parseInt(this.barOptions.barHeight,10))/100/2+m*(this.visibleI+E.indexOf(M))+x*y)):(y>-1&&!A.globals.timescaleLabels.length&&(c=A.config.plotOptions.bar.rangeBarGroupRows?f+w*y:f+p*this.visibleI+w*y),C>-1&&!A.config.plotOptions.bar.rangeBarOverlap&&(E=A.globals.seriesRange[r][C].overlaps).indexOf(M)>-1&&(c=(p=S.barWidth/E.length)*this.visibleI+w*(100-parseInt(this.barOptions.barWidth,10))/100/2+p*(this.visibleI+E.indexOf(M))+w*y)),{barYPosition:o,barXPosition:c,barHeight:m,barWidth:p}}},{key:"drawRangeColumnPaths",value:function(a){var r=a.indexes,l=a.x,o=a.xDivision,c=a.barWidth,d=a.barXPosition,f=a.zeroH,m=this.w,p=r.i,x=r.j,w=r.realIndex,S=r.translationsIndex,A=this.yRatio[S],E=this.getRangeValue(w,x),M=Math.min(E.start,E.end),P=Math.max(E.start,E.end);this.series[p][x]===void 0||this.series[p][x]===null?M=f:(M=f-M/A,P=f-P/A);var u=Math.abs(P-M),y=this.barHelpers.getColumnPaths({barXPosition:d,barWidth:c,y1:M,y2:P,strokeWidth:this.strokeWidth,series:this.seriesRangeEnd,realIndex:w,i:w,j:x,w:m});if(m.globals.isXNumeric){var C=this.getBarXForNumericXAxis({x:l,j:x,realIndex:w,barWidth:c});l=C.x,d=C.barXPosition}else l+=o;return{pathTo:y.pathTo,pathFrom:y.pathFrom,barHeight:u,x:l,y:E.start<0&&E.end<0?M:P,goalY:this.barHelpers.getGoalValues("y",null,f,p,x,S),barXPosition:d}}},{key:"preventBarOverflow",value:function(a){var r=this.w;return a<0&&(a=0),a>r.globals.gridWidth&&(a=r.globals.gridWidth),a}},{key:"drawRangeBarPaths",value:function(a){var r=a.indexes,l=a.y,o=a.y1,c=a.y2,d=a.yDivision,f=a.barHeight,m=a.barYPosition,p=a.zeroW,x=this.w,w=r.realIndex,S=r.j,A=this.preventBarOverflow(p+o/this.invertedYRatio),E=this.preventBarOverflow(p+c/this.invertedYRatio),M=this.getRangeValue(w,S),P=Math.abs(E-A),u=this.barHelpers.getBarpaths({barYPosition:m,barHeight:f,x1:A,x2:E,strokeWidth:this.strokeWidth,series:this.seriesRangeEnd,i:w,realIndex:w,j:S,w:x});return x.globals.isXNumeric||(l+=d),{pathTo:u.pathTo,pathFrom:u.pathFrom,barWidth:P,x:M.start<0&&M.end<0?A:E,goalX:this.barHelpers.getGoalValues("x",p,null,w,S),y:l}}},{key:"getRangeValue",value:function(a,r){var l=this.w;return{start:l.globals.seriesRangeStart[a][r],end:l.globals.seriesRangeEnd[a][r]}}}]),t}(),ue=function(){function _(e){g(this,_),this.w=e.w,this.lineCtx=e}return v(_,[{key:"sameValueSeriesFix",value:function(e,t){var a=this.w;if((a.config.fill.type==="gradient"||a.config.fill.type[e]==="gradient")&&new se(this.lineCtx.ctx,a).seriesHaveSameValues(e)){var r=t[e].slice();r[r.length-1]=r[r.length-1]+1e-6,t[e]=r}return t}},{key:"calculatePoints",value:function(e){var t=e.series,a=e.realIndex,r=e.x,l=e.y,o=e.i,c=e.j,d=e.prevY,f=this.w,m=[],p=[];if(c===0){var x=this.lineCtx.categoryAxisCorrection+f.config.markers.offsetX;f.globals.isXNumeric&&(x=(f.globals.seriesX[a][0]-f.globals.minX)/this.lineCtx.xRatio+f.config.markers.offsetX),m.push(x),p.push(X.isNumber(t[o][0])?d+f.config.markers.offsetY:null),m.push(r+f.config.markers.offsetX),p.push(X.isNumber(t[o][c+1])?l+f.config.markers.offsetY:null)}else m.push(r+f.config.markers.offsetX),p.push(X.isNumber(t[o][c+1])?l+f.config.markers.offsetY:null);return{x:m,y:p}}},{key:"checkPreviousPaths",value:function(e){for(var t=e.pathFromLine,a=e.pathFromArea,r=e.realIndex,l=this.w,o=0;o<l.globals.previousPaths.length;o++){var c=l.globals.previousPaths[o];(c.type==="line"||c.type==="area")&&c.paths.length>0&&parseInt(c.realIndex,10)===parseInt(r,10)&&(c.type==="line"?(this.lineCtx.appendPathFrom=!1,t=l.globals.previousPaths[o].paths[0].d):c.type==="area"&&(this.lineCtx.appendPathFrom=!1,a=l.globals.previousPaths[o].paths[0].d,l.config.stroke.show&&l.globals.previousPaths[o].paths[1]&&(t=l.globals.previousPaths[o].paths[1].d)))}return{pathFromLine:t,pathFromArea:a}}},{key:"determineFirstPrevY",value:function(e){var t,a,r,l=e.i,o=e.realIndex,c=e.series,d=e.prevY,f=e.lineYPosition,m=e.translationsIndex,p=this.w,x=p.config.chart.stacked&&!p.globals.comboCharts||p.config.chart.stacked&&p.globals.comboCharts&&(!this.w.config.chart.stackOnlyBar||((t=this.w.config.series[o])===null||t===void 0?void 0:t.type)==="bar"||((a=this.w.config.series[o])===null||a===void 0?void 0:a.type)==="column");if(((r=c[l])===null||r===void 0?void 0:r[0])!==void 0)d=(f=x&&l>0?this.lineCtx.prevSeriesY[l-1][0]:this.lineCtx.zeroY)-c[l][0]/this.lineCtx.yRatio[m]+2*(this.lineCtx.isReversed?c[l][0]/this.lineCtx.yRatio[m]:0);else if(x&&l>0&&c[l][0]===void 0){for(var w=l-1;w>=0;w--)if(c[w][0]!==null&&c[w][0]!==void 0){d=f=this.lineCtx.prevSeriesY[w][0];break}}return{prevY:d,lineYPosition:f}}}]),_}(),ve=function(_){for(var e,t,a,r,l=function(m){for(var p=[],x=m[0],w=m[1],S=p[0]=it(x,w),A=1,E=m.length-1;A<E;A++)x=w,w=m[A+1],p[A]=.5*(S+(S=it(x,w)));return p[A]=S,p}(_),o=_.length-1,c=[],d=0;d<o;d++)a=it(_[d],_[d+1]),Math.abs(a)<1e-6?l[d]=l[d+1]=0:(r=(e=l[d]/a)*e+(t=l[d+1]/a)*t)>9&&(r=3*a/Math.sqrt(r),l[d]=r*e,l[d+1]=r*t);for(var f=0;f<=o;f++)r=(_[Math.min(o,f+1)][0]-_[Math.max(0,f-1)][0])/(6*(1+l[f]*l[f])),c.push([r||0,l[f]*r||0]);return c},Re=function(_){var e=ve(_),t=_[1],a=_[0],r=[],l=e[1],o=e[0];r.push(a,[a[0]+o[0],a[1]+o[1],t[0]-l[0],t[1]-l[1],t[0],t[1]]);for(var c=2,d=e.length;c<d;c++){var f=_[c],m=e[c];r.push([f[0]-m[0],f[1]-m[1],f[0],f[1]])}return r},It=function(_,e,t){var a=_.slice(e,t);if(e){if(t-e>1&&a[1].length<6){var r=a[0].length;a[1]=[2*a[0][r-2]-a[0][r-4],2*a[0][r-1]-a[0][r-3]].concat(a[1])}a[0]=a[0].slice(-2)}return a};function it(_,e){return(e[1]-_[1])/(e[0]-_[0])}var ai=function(){function _(e,t,a){g(this,_),this.ctx=e,this.w=e.w,this.xyRatios=t,this.pointsChart=!(this.w.config.chart.type!=="bubble"&&this.w.config.chart.type!=="scatter")||a,this.scatter=new Ut(this.ctx),this.noNegatives=this.w.globals.minX===Number.MAX_VALUE,this.lineHelpers=new ue(this),this.markers=new Nt(this.ctx),this.prevSeriesY=[],this.categoryAxisCorrection=0,this.yaxisIndex=0}return v(_,[{key:"draw",value:function(e,t,a,r){var l,o=this.w,c=new V(this.ctx),d=o.globals.comboCharts?t:o.config.chart.type,f=c.group({class:"apexcharts-".concat(d,"-series apexcharts-plot-series")}),m=new se(this.ctx,o);this.yRatio=this.xyRatios.yRatio,this.zRatio=this.xyRatios.zRatio,this.xRatio=this.xyRatios.xRatio,this.baseLineY=this.xyRatios.baseLineY,e=m.getLogSeries(e),this.yRatio=m.getLogYRatios(this.yRatio),this.prevSeriesY=[];for(var p=[],x=0;x<e.length;x++){e=this.lineHelpers.sameValueSeriesFix(x,e);var w=o.globals.comboCharts?a[x]:x,S=this.yRatio.length>1?w:0;this._initSerieVariables(e,x,w);var A=[],E=[],M=[],P=o.globals.padHorizontal+this.categoryAxisCorrection;this.ctx.series.addCollapsedClassToSeries(this.elSeries,w),o.globals.isXNumeric&&o.globals.seriesX.length>0&&(P=(o.globals.seriesX[w][0]-o.globals.minX)/this.xRatio),M.push(P);var u,y=P,C=void 0,D=y,L=this.zeroY,I=this.zeroY;L=this.lineHelpers.determineFirstPrevY({i:x,realIndex:w,series:e,prevY:L,lineYPosition:0,translationsIndex:S}).prevY,o.config.stroke.curve==="monotoneCubic"&&e[x][0]===null?A.push(null):A.push(L),u=L,d==="rangeArea"&&(C=I=this.lineHelpers.determineFirstPrevY({i:x,realIndex:w,series:r,prevY:I,lineYPosition:0,translationsIndex:S}).prevY,E.push(A[0]!==null?I:null));var H=this._calculatePathsFrom({type:d,series:e,i:x,realIndex:w,translationsIndex:S,prevX:D,prevY:L,prevY2:I}),B=[A[0]],U=[E[0]],ee={type:d,series:e,realIndex:w,translationsIndex:S,i:x,x:P,y:1,pX:y,pY:u,pathsFrom:H,linePaths:[],areaPaths:[],seriesIndex:a,lineYPosition:0,xArrj:M,yArrj:A,y2Arrj:E,seriesRangeEnd:r},K=this._iterateOverDataPoints(Y(Y({},ee),{},{iterations:d==="rangeArea"?e[x].length-1:void 0,isRangeStart:!0}));if(d==="rangeArea"){for(var te=this._calculatePathsFrom({series:r,i:x,realIndex:w,prevX:D,prevY:I}),le=this._iterateOverDataPoints(Y(Y({},ee),{},{series:r,xArrj:[P],yArrj:B,y2Arrj:U,pY:C,areaPaths:K.areaPaths,pathsFrom:te,iterations:r[x].length-1,isRangeStart:!1})),de=K.linePaths.length/2,fe=0;fe<de;fe++)K.linePaths[fe]=le.linePaths[fe+de]+K.linePaths[fe];K.linePaths.splice(de),K.pathFromLine=le.pathFromLine+K.pathFromLine}else K.pathFromArea+="z";this._handlePaths({type:d,realIndex:w,i:x,paths:K}),this.elSeries.add(this.elPointsMain),this.elSeries.add(this.elDataLabelsWrap),p.push(this.elSeries)}if(((l=o.config.series[0])===null||l===void 0?void 0:l.zIndex)!==void 0&&p.sort(function(xe,_e){return Number(xe.node.getAttribute("zIndex"))-Number(_e.node.getAttribute("zIndex"))}),o.config.chart.stacked)for(var me=p.length-1;me>=0;me--)f.add(p[me]);else for(var Ae=0;Ae<p.length;Ae++)f.add(p[Ae]);return f}},{key:"_initSerieVariables",value:function(e,t,a){var r=this.w,l=new V(this.ctx);this.xDivision=r.globals.gridWidth/(r.globals.dataPoints-(r.config.xaxis.tickPlacement==="on"?1:0)),this.strokeWidth=Array.isArray(r.config.stroke.width)?r.config.stroke.width[a]:r.config.stroke.width;var o=0;this.yRatio.length>1&&(this.yaxisIndex=r.globals.seriesYAxisReverseMap[a],o=a),this.isReversed=r.config.yaxis[this.yaxisIndex]&&r.config.yaxis[this.yaxisIndex].reversed,this.zeroY=r.globals.gridHeight-this.baseLineY[o]-(this.isReversed?r.globals.gridHeight:0)+(this.isReversed?2*this.baseLineY[o]:0),this.areaBottomY=this.zeroY,(this.zeroY>r.globals.gridHeight||r.config.plotOptions.area.fillTo==="end")&&(this.areaBottomY=r.globals.gridHeight),this.categoryAxisCorrection=this.xDivision/2,this.elSeries=l.group({class:"apexcharts-series",zIndex:r.config.series[a].zIndex!==void 0?r.config.series[a].zIndex:a,seriesName:X.escapeString(r.globals.seriesNames[a])}),this.elPointsMain=l.group({class:"apexcharts-series-markers-wrap","data:realIndex":a}),this.elDataLabelsWrap=l.group({class:"apexcharts-datalabels","data:realIndex":a});var c=e[t].length===r.globals.dataPoints;this.elSeries.attr({"data:longestSeries":c,rel:t+1,"data:realIndex":a}),this.appendPathFrom=!0}},{key:"_calculatePathsFrom",value:function(e){var t,a,r,l,o=e.type,c=e.series,d=e.i,f=e.realIndex,m=e.translationsIndex,p=e.prevX,x=e.prevY,w=e.prevY2,S=this.w,A=new V(this.ctx);if(c[d][0]===null){for(var E=0;E<c[d].length;E++)if(c[d][E]!==null){p=this.xDivision*E,x=this.zeroY-c[d][E]/this.yRatio[m],t=A.move(p,x),a=A.move(p,this.areaBottomY);break}}else t=A.move(p,x),o==="rangeArea"&&(t=A.move(p,w)+A.line(p,x)),a=A.move(p,this.areaBottomY)+A.line(p,x);if(r=A.move(0,this.zeroY)+A.line(0,this.zeroY),l=A.move(0,this.zeroY)+A.line(0,this.zeroY),S.globals.previousPaths.length>0){var M=this.lineHelpers.checkPreviousPaths({pathFromLine:r,pathFromArea:l,realIndex:f});r=M.pathFromLine,l=M.pathFromArea}return{prevX:p,prevY:x,linePath:t,areaPath:a,pathFromLine:r,pathFromArea:l}}},{key:"_handlePaths",value:function(e){var t=e.type,a=e.realIndex,r=e.i,l=e.paths,o=this.w,c=new V(this.ctx),d=new dt(this.ctx);this.prevSeriesY.push(l.yArrj),o.globals.seriesXvalues[a]=l.xArrj,o.globals.seriesYvalues[a]=l.yArrj;var f=o.config.forecastDataPoints;if(f.count>0&&t!=="rangeArea"){var m=o.globals.seriesXvalues[a][o.globals.seriesXvalues[a].length-f.count-1],p=c.drawRect(m,0,o.globals.gridWidth,o.globals.gridHeight,0);o.globals.dom.elForecastMask.appendChild(p.node);var x=c.drawRect(0,0,m,o.globals.gridHeight,0);o.globals.dom.elNonForecastMask.appendChild(x.node)}this.pointsChart||o.globals.delayedElements.push({el:this.elPointsMain.node,index:a});var w={i:r,realIndex:a,animationDelay:r,initialSpeed:o.config.chart.animations.speed,dataChangeSpeed:o.config.chart.animations.dynamicAnimation.speed,className:"apexcharts-".concat(t)};if(t==="area")for(var S=d.fillPath({seriesNumber:a}),A=0;A<l.areaPaths.length;A++){var E=c.renderPaths(Y(Y({},w),{},{pathFrom:l.pathFromArea,pathTo:l.areaPaths[A],stroke:"none",strokeWidth:0,strokeLineCap:null,fill:S}));this.elSeries.add(E)}if(o.config.stroke.show&&!this.pointsChart){var M=null;if(t==="line")M=d.fillPath({seriesNumber:a,i:r});else if(o.config.stroke.fill.type==="solid")M=o.globals.stroke.colors[a];else{var P=o.config.fill;o.config.fill=o.config.stroke.fill,M=d.fillPath({seriesNumber:a,i:r}),o.config.fill=P}for(var u=0;u<l.linePaths.length;u++){var y=M;t==="rangeArea"&&(y=d.fillPath({seriesNumber:a}));var C=Y(Y({},w),{},{pathFrom:l.pathFromLine,pathTo:l.linePaths[u],stroke:M,strokeWidth:this.strokeWidth,strokeLineCap:o.config.stroke.lineCap,fill:t==="rangeArea"?y:"none"}),D=c.renderPaths(C);if(this.elSeries.add(D),D.attr("fill-rule","evenodd"),f.count>0&&t!=="rangeArea"){var L=c.renderPaths(C);L.node.setAttribute("stroke-dasharray",f.dashArray),f.strokeWidth&&L.node.setAttribute("stroke-width",f.strokeWidth),this.elSeries.add(L),L.attr("clip-path","url(#forecastMask".concat(o.globals.cuid,")")),D.attr("clip-path","url(#nonForecastMask".concat(o.globals.cuid,")"))}}}}},{key:"_iterateOverDataPoints",value:function(e){var t,a,r=this,l=e.type,o=e.series,c=e.iterations,d=e.realIndex,f=e.translationsIndex,m=e.i,p=e.x,x=e.y,w=e.pX,S=e.pY,A=e.pathsFrom,E=e.linePaths,M=e.areaPaths,P=e.seriesIndex,u=e.lineYPosition,y=e.xArrj,C=e.yArrj,D=e.y2Arrj,L=e.isRangeStart,I=e.seriesRangeEnd,H=this.w,B=new V(this.ctx),U=this.yRatio,ee=A.prevY,K=A.linePath,te=A.areaPath,le=A.pathFromLine,de=A.pathFromArea,fe=X.isNumber(H.globals.minYArr[d])?H.globals.minYArr[d]:H.globals.minY;c||(c=H.globals.dataPoints>1?H.globals.dataPoints-1:H.globals.dataPoints);var me=function(st,ot){return ot-st/U[f]+2*(r.isReversed?st/U[f]:0)},Ae=x,xe=H.config.chart.stacked&&!H.globals.comboCharts||H.config.chart.stacked&&H.globals.comboCharts&&(!this.w.config.chart.stackOnlyBar||((t=this.w.config.series[d])===null||t===void 0?void 0:t.type)==="bar"||((a=this.w.config.series[d])===null||a===void 0?void 0:a.type)==="column"),_e=H.config.stroke.curve;Array.isArray(_e)&&(_e=Array.isArray(P)?_e[P[m]]:_e[m]);for(var Be,We=0,ze=0;ze<c;ze++){var kt=o[m][ze+1]===void 0||o[m][ze+1]===null;if(H.globals.isXNumeric){var Fe=H.globals.seriesX[d][ze+1];H.globals.seriesX[d][ze+1]===void 0&&(Fe=H.globals.seriesX[d][c-1]),p=(Fe-H.globals.minX)/this.xRatio}else p+=this.xDivision;xe?m>0&&H.globals.collapsedSeries.length<H.config.series.length-1?u=this.prevSeriesY[function(st){for(var ot=st;ot>0;ot--){if(!(H.globals.collapsedSeriesIndices.indexOf((P==null?void 0:P[ot])||ot)>-1))return ot;ot--}return 0}(m-1)][ze+1]:u=this.zeroY:u=this.zeroY,kt?x=me(fe,u):(x=me(o[m][ze+1],u),l==="rangeArea"&&(Ae=me(I[m][ze+1],u))),y.push(p),!kt||H.config.stroke.curve!=="smooth"&&H.config.stroke.curve!=="monotoneCubic"?(C.push(x),D.push(Ae)):(C.push(null),D.push(null));var Ie=this.lineHelpers.calculatePoints({series:o,x:p,y:x,realIndex:d,i:m,j:ze,prevY:ee}),Ne=this._createPaths({type:l,series:o,i:m,realIndex:d,j:ze,x:p,y:x,y2:Ae,xArrj:y,yArrj:C,y2Arrj:D,pX:w,pY:S,pathState:We,segmentStartX:Be,linePath:K,areaPath:te,linePaths:E,areaPaths:M,curve:_e,isRangeStart:L});M=Ne.areaPaths,E=Ne.linePaths,w=Ne.pX,S=Ne.pY,We=Ne.pathState,Be=Ne.segmentStartX,te=Ne.areaPath,K=Ne.linePath,!this.appendPathFrom||_e==="monotoneCubic"&&l==="rangeArea"||(le+=B.line(p,this.zeroY),de+=B.line(p,this.zeroY)),this.handleNullDataPoints(o,Ie,m,ze,d),this._handleMarkersAndLabels({type:l,pointsPos:Ie,i:m,j:ze,realIndex:d,isRangeStart:L})}return{yArrj:C,xArrj:y,pathFromArea:de,areaPaths:M,pathFromLine:le,linePaths:E,linePath:K,areaPath:te}}},{key:"_handleMarkersAndLabels",value:function(e){var t=e.type,a=e.pointsPos,r=e.isRangeStart,l=e.i,o=e.j,c=e.realIndex,d=this.w,f=new zt(this.ctx);if(this.pointsChart)this.scatter.draw(this.elSeries,o,{realIndex:c,pointsPos:a,zRatio:this.zRatio,elParent:this.elPointsMain});else{d.globals.series[l].length>1&&this.elPointsMain.node.classList.add("apexcharts-element-hidden");var m=this.markers.plotChartMarkers(a,c,o+1);m!==null&&this.elPointsMain.add(m)}var p=f.drawDataLabel({type:t,isRangeStart:r,pos:a,i:c,j:o+1});p!==null&&this.elDataLabelsWrap.add(p)}},{key:"_createPaths",value:function(e){var t=e.type,a=e.series,r=e.i;e.realIndex;var l,o=e.j,c=e.x,d=e.y,f=e.xArrj,m=e.yArrj,p=e.y2,x=e.y2Arrj,w=e.pX,S=e.pY,A=e.pathState,E=e.segmentStartX,M=e.linePath,P=e.areaPath,u=e.linePaths,y=e.areaPaths,C=e.curve,D=e.isRangeStart,L=new V(this.ctx),I=this.areaBottomY,H=t==="rangeArea",B=t==="rangeArea"&&D;switch(C){case"monotoneCubic":var U=D?m:x;switch(A){case 0:if(U[o+1]===null)break;A=1;case 1:if(!(H?f.length===a[r].length:o===a[r].length-2))break;case 2:var ee=D?f:f.slice().reverse(),K=D?U:U.slice().reverse(),te=(l=K,ee.map(function(Fe,Ie){return[Fe,l[Ie]]}).filter(function(Fe){return Fe[1]!==null})),le=te.length>1?Re(te):te,de=[];H&&(B?y=te:de=y.reverse());var fe=0,me=0;if(function(Fe,Ie){for(var Ne=function(Aa){var ut=[],ni=0;return Aa.forEach(function(fh){fh!==null?ni++:ni>0&&(ut.push(ni),ni=0)}),ni>0&&ut.push(ni),ut}(Fe),st=[],ot=0,$t=0;ot<Ne.length;$t+=Ne[ot++])st[ot]=It(Ie,$t,$t+Ne[ot]);return st}(K,le).forEach(function(Fe){fe++;var Ie=function(ot){for(var $t="",Aa=0;Aa<ot.length;Aa++){var ut=ot[Aa],ni=ut.length;ni>4?($t+="C".concat(ut[0],", ").concat(ut[1]),$t+=", ".concat(ut[2],", ").concat(ut[3]),$t+=", ".concat(ut[4],", ").concat(ut[5])):ni>2&&($t+="S".concat(ut[0],", ").concat(ut[1]),$t+=", ".concat(ut[2],", ").concat(ut[3]))}return $t}(Fe),Ne=me,st=(me+=Fe.length)-1;B?M=L.move(te[Ne][0],te[Ne][1])+Ie:H?M=L.move(de[Ne][0],de[Ne][1])+L.line(te[Ne][0],te[Ne][1])+Ie+L.line(de[st][0],de[st][1]):(M=L.move(te[Ne][0],te[Ne][1])+Ie,P=M+L.line(te[st][0],I)+L.line(te[Ne][0],I)+"z",y.push(P)),u.push(M)}),H&&fe>1&&!B){var Ae=u.slice(fe).reverse();u.splice(fe),Ae.forEach(function(Fe){return u.push(Fe)})}A=0}break;case"smooth":var xe=.35*(c-w);if(a[r][o]===null)A=0;else switch(A){case 0:if(E=w,M=B?L.move(w,x[o])+L.line(w,S):L.move(w,S),P=L.move(w,S),a[r][o+1]===null){u.push(M),y.push(P);break}if(A=1,o<a[r].length-2){var _e=L.curve(w+xe,S,c-xe,d,c,d);M+=_e,P+=_e;break}case 1:if(a[r][o+1]===null)M+=B?L.line(w,p):L.move(w,S),P+=L.line(w,I)+L.line(E,I)+"z",u.push(M),y.push(P),A=-1;else{var Be=L.curve(w+xe,S,c-xe,d,c,d);M+=Be,P+=Be,o>=a[r].length-2&&(B&&(M+=L.curve(c,d,c,d,c,p)+L.move(c,p)),P+=L.curve(c,d,c,d,c,I)+L.line(E,I)+"z",u.push(M),y.push(P),A=-1)}}w=c,S=d;break;default:var We=function(Fe,Ie,Ne){var st=[];switch(Fe){case"stepline":st=L.line(Ie,null,"H")+L.line(null,Ne,"V");break;case"linestep":st=L.line(null,Ne,"V")+L.line(Ie,null,"H");break;case"straight":st=L.line(Ie,Ne)}return st};if(a[r][o]===null)A=0;else switch(A){case 0:if(E=w,M=B?L.move(w,x[o])+L.line(w,S):L.move(w,S),P=L.move(w,S),a[r][o+1]===null){u.push(M),y.push(P);break}if(A=1,o<a[r].length-2){var ze=We(C,c,d);M+=ze,P+=ze;break}case 1:if(a[r][o+1]===null)M+=B?L.line(w,p):L.move(w,S),P+=L.line(w,I)+L.line(E,I)+"z",u.push(M),y.push(P),A=-1;else{var kt=We(C,c,d);M+=kt,P+=kt,o>=a[r].length-2&&(B&&(M+=L.line(c,p)),P+=L.line(c,I)+L.line(E,I)+"z",u.push(M),y.push(P),A=-1)}}w=c,S=d}return{linePaths:u,areaPaths:y,pX:w,pY:S,pathState:A,segmentStartX:E,linePath:M,areaPath:P}}},{key:"handleNullDataPoints",value:function(e,t,a,r,l){var o=this.w;if(e[a][r]===null&&o.config.markers.showNullDataPoints||e[a].length===1){var c=this.strokeWidth-o.config.markers.strokeWidth/2;c>0||(c=0);var d=this.markers.plotChartMarkers(t,l,r+1,c,!0);d!==null&&this.elPointsMain.add(d)}}}]),_}();window.TreemapSquared={},window.TreemapSquared.generate=function(){function _(c,d,f,m){this.xoffset=c,this.yoffset=d,this.height=m,this.width=f,this.shortestEdge=function(){return Math.min(this.height,this.width)},this.getCoordinates=function(p){var x,w=[],S=this.xoffset,A=this.yoffset,E=l(p)/this.height,M=l(p)/this.width;if(this.width>=this.height)for(x=0;x<p.length;x++)w.push([S,A,S+E,A+p[x]/E]),A+=p[x]/E;else for(x=0;x<p.length;x++)w.push([S,A,S+p[x]/M,A+M]),S+=p[x]/M;return w},this.cutArea=function(p){var x;if(this.width>=this.height){var w=p/this.height,S=this.width-w;x=new _(this.xoffset+w,this.yoffset,S,this.height)}else{var A=p/this.width,E=this.height-A;x=new _(this.xoffset,this.yoffset+A,this.width,E)}return x}}function e(c,d,f,m,p){m=m===void 0?0:m,p=p===void 0?0:p;var x=t(function(w,S){var A,E=[],M=S/l(w);for(A=0;A<w.length;A++)E[A]=w[A]*M;return E}(c,d*f),[],new _(m,p,d,f),[]);return function(w){var S,A,E=[];for(S=0;S<w.length;S++)for(A=0;A<w[S].length;A++)E.push(w[S][A]);return E}(x)}function t(c,d,f,m){var p,x,w;if(c.length!==0)return p=f.shortestEdge(),function(S,A,E){var M;if(S.length===0)return!0;(M=S.slice()).push(A);var P=a(S,E),u=a(M,E);return P>=u}(d,x=c[0],p)?(d.push(x),t(c.slice(1),d,f,m)):(w=f.cutArea(l(d),m),m.push(f.getCoordinates(d)),t(c,[],w,m)),m;m.push(f.getCoordinates(d))}function a(c,d){var f=Math.min.apply(Math,c),m=Math.max.apply(Math,c),p=l(c);return Math.max(Math.pow(d,2)*m/Math.pow(p,2),Math.pow(p,2)/(Math.pow(d,2)*f))}function r(c){return c&&c.constructor===Array}function l(c){var d,f=0;for(d=0;d<c.length;d++)f+=c[d];return f}function o(c){var d,f=0;if(r(c[0]))for(d=0;d<c.length;d++)f+=o(c[d]);else f=l(c);return f}return function c(d,f,m,p,x){p=p===void 0?0:p,x=x===void 0?0:x;var w,S,A=[],E=[];if(r(d[0])){for(S=0;S<d.length;S++)A[S]=o(d[S]);for(w=e(A,f,m,p,x),S=0;S<d.length;S++)E.push(c(d[S],w[S][2]-w[S][0],w[S][3]-w[S][1],w[S][0],w[S][1]))}else E=e(d,f,m,p,x);return E}}();var bt,qi,ya=function(){function _(e,t){g(this,_),this.ctx=e,this.w=e.w,this.strokeWidth=this.w.config.stroke.width,this.helpers=new W(e),this.dynamicAnim=this.w.config.chart.animations.dynamicAnimation,this.labels=[]}return v(_,[{key:"draw",value:function(e){var t=this,a=this.w,r=new V(this.ctx),l=new dt(this.ctx),o=r.group({class:"apexcharts-treemap"});if(a.globals.noData)return o;var c=[];return e.forEach(function(d){var f=d.map(function(m){return Math.abs(m)});c.push(f)}),this.negRange=this.helpers.checkColorRange(),a.config.series.forEach(function(d,f){d.data.forEach(function(m){Array.isArray(t.labels[f])||(t.labels[f]=[]),t.labels[f].push(m.x)})}),window.TreemapSquared.generate(c,a.globals.gridWidth,a.globals.gridHeight).forEach(function(d,f){var m=r.group({class:"apexcharts-series apexcharts-treemap-series",seriesName:X.escapeString(a.globals.seriesNames[f]),rel:f+1,"data:realIndex":f});if(a.config.chart.dropShadow.enabled){var p=a.config.chart.dropShadow;new ce(t.ctx).dropShadow(o,p,f)}var x=r.group({class:"apexcharts-data-labels"});d.forEach(function(w,S){var A=w[0],E=w[1],M=w[2],P=w[3],u=r.drawRect(A,E,M-A,P-E,a.config.plotOptions.treemap.borderRadius,"#fff",1,t.strokeWidth,a.config.plotOptions.treemap.useFillColorAsStroke?C:a.globals.stroke.colors[f]);u.attr({cx:A,cy:E,index:f,i:f,j:S,width:M-A,height:P-E});var y=t.helpers.getShadeColor(a.config.chart.type,f,S,t.negRange),C=y.color;a.config.series[f].data[S]!==void 0&&a.config.series[f].data[S].fillColor&&(C=a.config.series[f].data[S].fillColor);var D=l.fillPath({color:C,seriesNumber:f,dataPointIndex:S});u.node.classList.add("apexcharts-treemap-rect"),u.attr({fill:D}),t.helpers.addListeners(u);var L={x:A+(M-A)/2,y:E+(P-E)/2,width:0,height:0},I={x:A,y:E,width:M-A,height:P-E};if(a.config.chart.animations.enabled&&!a.globals.dataChanged){var H=1;a.globals.resized||(H=a.config.chart.animations.speed),t.animateTreemap(u,L,I,H)}if(a.globals.dataChanged){var B=1;t.dynamicAnim.enabled&&a.globals.shouldAnimate&&(B=t.dynamicAnim.speed,a.globals.previousPaths[f]&&a.globals.previousPaths[f][S]&&a.globals.previousPaths[f][S].rect&&(L=a.globals.previousPaths[f][S].rect),t.animateTreemap(u,L,I,B))}var U=t.getFontSize(w),ee=a.config.dataLabels.formatter(t.labels[f][S],{value:a.globals.series[f][S],seriesIndex:f,dataPointIndex:S,w:a});a.config.plotOptions.treemap.dataLabels.format==="truncate"&&(U=parseInt(a.config.dataLabels.style.fontSize,10),ee=t.truncateLabels(ee,U,A,E,M,P));var K=null;a.globals.series[f][S]&&(K=t.helpers.calculateDataLabels({text:ee,x:(A+M)/2,y:(E+P)/2+t.strokeWidth/2+U/3,i:f,j:S,colorProps:y,fontSize:U,series:e})),a.config.dataLabels.enabled&&K&&t.rotateToFitLabel(K,U,ee,A,E,M,P),m.add(u),K!==null&&m.add(K)}),m.add(x),o.add(m)}),o}},{key:"getFontSize",value:function(e){var t=this.w,a,r,l,o,c=function d(f){var m,p=0;if(Array.isArray(f[0]))for(m=0;m<f.length;m++)p+=d(f[m]);else for(m=0;m<f.length;m++)p+=f[m].length;return p}(this.labels)/function d(f){var m,p=0;if(Array.isArray(f[0]))for(m=0;m<f.length;m++)p+=d(f[m]);else for(m=0;m<f.length;m++)p+=1;return p}(this.labels);return a=e[2]-e[0],r=e[3]-e[1],l=a*r,o=Math.pow(l,.5),Math.min(o/c,parseInt(t.config.dataLabels.style.fontSize,10))}},{key:"rotateToFitLabel",value:function(e,t,a,r,l,o,c){var d=new V(this.ctx),f=d.getTextRects(a,t);if(f.width+this.w.config.stroke.width+5>o-r&&f.width<=c-l){var m=d.rotateAroundCenter(e.node);e.node.setAttribute("transform","rotate(-90 ".concat(m.x," ").concat(m.y,") translate(").concat(f.height/3,")"))}}},{key:"truncateLabels",value:function(e,t,a,r,l,o){var c=new V(this.ctx),d=c.getTextRects(e,t).width+this.w.config.stroke.width+5>l-a&&o-r>l-a?o-r:l-a,f=c.getTextBasedOnMaxWidth({text:e,maxWidth:d,fontSize:t});return e.length!==f.length&&d/t<5?"":f}},{key:"animateTreemap",value:function(e,t,a,r){var l=new we(this.ctx);l.animateRect(e,{x:t.x,y:t.y,width:t.width,height:t.height},{x:a.x,y:a.y,width:a.width,height:a.height},r,function(){l.animationCompleted(e)})}}]),_}(),on=86400,br=10/on,yr=function(){function _(e){g(this,_),this.ctx=e,this.w=e.w,this.timeScaleArray=[],this.utc=this.w.config.xaxis.labels.datetimeUTC}return v(_,[{key:"calculateTimeScaleTicks",value:function(e,t){var a=this,r=this.w;if(r.globals.allSeriesCollapsed)return r.globals.labels=[],r.globals.timescaleLabels=[],[];var l=new De(this.ctx),o=(t-e)/864e5;this.determineInterval(o),r.globals.disableZoomIn=!1,r.globals.disableZoomOut=!1,o<br?r.globals.disableZoomIn=!0:o>5e4&&(r.globals.disableZoomOut=!0);var c=l.getTimeUnitsfromTimestamp(e,t,this.utc),d=r.globals.gridWidth/o,f=d/24,m=f/60,p=m/60,x=Math.floor(24*o),w=Math.floor(1440*o),S=Math.floor(o*on),A=Math.floor(o),E=Math.floor(o/30),M=Math.floor(o/365),P={minMillisecond:c.minMillisecond,minSecond:c.minSecond,minMinute:c.minMinute,minHour:c.minHour,minDate:c.minDate,minMonth:c.minMonth,minYear:c.minYear},u={firstVal:P,currentMillisecond:P.minMillisecond,currentSecond:P.minSecond,currentMinute:P.minMinute,currentHour:P.minHour,currentMonthDate:P.minDate,currentDate:P.minDate,currentMonth:P.minMonth,currentYear:P.minYear,daysWidthOnXAxis:d,hoursWidthOnXAxis:f,minutesWidthOnXAxis:m,secondsWidthOnXAxis:p,numberOfSeconds:S,numberOfMinutes:w,numberOfHours:x,numberOfDays:A,numberOfMonths:E,numberOfYears:M};switch(this.tickInterval){case"years":this.generateYearScale(u);break;case"months":case"half_year":this.generateMonthScale(u);break;case"months_days":case"months_fortnight":case"days":case"week_days":this.generateDayScale(u);break;case"hours":this.generateHourScale(u);break;case"minutes_fives":case"minutes":this.generateMinuteScale(u);break;case"seconds_tens":case"seconds_fives":case"seconds":this.generateSecondScale(u)}var y=this.timeScaleArray.map(function(C){var D={position:C.position,unit:C.unit,year:C.year,day:C.day?C.day:1,hour:C.hour?C.hour:0,month:C.month+1};return C.unit==="month"?Y(Y({},D),{},{day:1,value:C.value+1}):C.unit==="day"||C.unit==="hour"?Y(Y({},D),{},{value:C.value}):C.unit==="minute"?Y(Y({},D),{},{value:C.value,minute:C.value}):C.unit==="second"?Y(Y({},D),{},{value:C.value,minute:C.minute,second:C.second}):C});return y.filter(function(C){var D=1,L=Math.ceil(r.globals.gridWidth/120),I=C.value;r.config.xaxis.tickAmount!==void 0&&(L=r.config.xaxis.tickAmount),y.length>L&&(D=Math.floor(y.length/L));var H=!1,B=!1;switch(a.tickInterval){case"years":C.unit==="year"&&(H=!0);break;case"half_year":D=7,C.unit==="year"&&(H=!0);break;case"months":D=1,C.unit==="year"&&(H=!0);break;case"months_fortnight":D=15,C.unit!=="year"&&C.unit!=="month"||(H=!0),I===30&&(B=!0);break;case"months_days":D=10,C.unit==="month"&&(H=!0),I===30&&(B=!0);break;case"week_days":D=8,C.unit==="month"&&(H=!0);break;case"days":D=1,C.unit==="month"&&(H=!0);break;case"hours":C.unit==="day"&&(H=!0);break;case"minutes_fives":case"seconds_fives":I%5!=0&&(B=!0);break;case"seconds_tens":I%10!=0&&(B=!0)}if(a.tickInterval==="hours"||a.tickInterval==="minutes_fives"||a.tickInterval==="seconds_tens"||a.tickInterval==="seconds_fives"){if(!B)return!0}else if((I%D==0||H)&&!B)return!0})}},{key:"recalcDimensionsBasedOnFormat",value:function(e,t){var a=this.w,r=this.formatDates(e),l=this.removeOverlappingTS(r);a.globals.timescaleLabels=l.slice(),new wi(this.ctx).plotCoords()}},{key:"determineInterval",value:function(e){var t=24*e,a=60*t;switch(!0){case e/365>5:this.tickInterval="years";break;case e>800:this.tickInterval="half_year";break;case e>180:this.tickInterval="months";break;case e>90:this.tickInterval="months_fortnight";break;case e>60:this.tickInterval="months_days";break;case e>30:this.tickInterval="week_days";break;case e>2:this.tickInterval="days";break;case t>2.4:this.tickInterval="hours";break;case a>15:this.tickInterval="minutes_fives";break;case a>5:this.tickInterval="minutes";break;case a>1:this.tickInterval="seconds_tens";break;case 60*a>20:this.tickInterval="seconds_fives";break;default:this.tickInterval="seconds"}}},{key:"generateYearScale",value:function(e){var t=e.firstVal,a=e.currentMonth,r=e.currentYear,l=e.daysWidthOnXAxis,o=e.numberOfYears,c=t.minYear,d=0,f=new De(this.ctx),m="year";if(t.minDate>1||t.minMonth>0){var p=f.determineRemainingDaysOfYear(t.minYear,t.minMonth,t.minDate);d=(f.determineDaysOfYear(t.minYear)-p+1)*l,c=t.minYear+1,this.timeScaleArray.push({position:d,value:c,unit:m,year:c,month:X.monthMod(a+1)})}else t.minDate===1&&t.minMonth===0&&this.timeScaleArray.push({position:d,value:c,unit:m,year:r,month:X.monthMod(a+1)});for(var x=c,w=d,S=0;S<o;S++)x++,w=f.determineDaysOfYear(x-1)*l+w,this.timeScaleArray.push({position:w,value:x,unit:m,year:x,month:1})}},{key:"generateMonthScale",value:function(e){var t=e.firstVal,a=e.currentMonthDate,r=e.currentMonth,l=e.currentYear,o=e.daysWidthOnXAxis,c=e.numberOfMonths,d=r,f=0,m=new De(this.ctx),p="month",x=0;if(t.minDate>1){f=(m.determineDaysOfMonths(r+1,t.minYear)-a+1)*o,d=X.monthMod(r+1);var w=l+x,S=X.monthMod(d),A=d;d===0&&(p="year",A=w,S=1,w+=x+=1),this.timeScaleArray.push({position:f,value:A,unit:p,year:w,month:S})}else this.timeScaleArray.push({position:f,value:d,unit:p,year:l,month:X.monthMod(r)});for(var E=d+1,M=f,P=0,u=1;P<c;P++,u++){(E=X.monthMod(E))===0?(p="year",x+=1):p="month";var y=this._getYear(l,E,x);M=m.determineDaysOfMonths(E,y)*o+M;var C=E===0?y:E;this.timeScaleArray.push({position:M,value:C,unit:p,year:y,month:E===0?1:E}),E++}}},{key:"generateDayScale",value:function(e){var t=e.firstVal,a=e.currentMonth,r=e.currentYear,l=e.hoursWidthOnXAxis,o=e.numberOfDays,c=new De(this.ctx),d="day",f=t.minDate+1,m=f,p=function(u,y,C){return u>c.determineDaysOfMonths(y+1,C)&&(m=1,d="month",w=y+=1),y},x=(24-t.minHour)*l,w=f,S=p(m,a,r);t.minHour===0&&t.minDate===1?(x=0,w=X.monthMod(t.minMonth),d="month",m=t.minDate):t.minDate!==1&&t.minHour===0&&t.minMinute===0&&(x=0,f=t.minDate,w=f,S=p(m=f,a,r)),this.timeScaleArray.push({position:x,value:w,unit:d,year:this._getYear(r,S,0),month:X.monthMod(S),day:m});for(var A=x,E=0;E<o;E++){d="day",S=p(m+=1,S,this._getYear(r,S,0));var M=this._getYear(r,S,0);A=24*l+A;var P=m===1?X.monthMod(S):m;this.timeScaleArray.push({position:A,value:P,unit:d,year:M,month:X.monthMod(S),day:P})}}},{key:"generateHourScale",value:function(e){var t=e.firstVal,a=e.currentDate,r=e.currentMonth,l=e.currentYear,o=e.minutesWidthOnXAxis,c=e.numberOfHours,d=new De(this.ctx),f="hour",m=function(D,L){return D>d.determineDaysOfMonths(L+1,l)&&(E=1,L+=1),{month:L,date:E}},p=function(D,L){return D>d.determineDaysOfMonths(L+1,l)?L+=1:L},x=60-(t.minMinute+t.minSecond/60),w=x*o,S=t.minHour+1,A=S;x===60&&(w=0,A=S=t.minHour);var E=a;A>=24&&(A=0,E+=1,f="day");var M=m(E,r).month;M=p(E,M),this.timeScaleArray.push({position:w,value:S,unit:f,day:E,hour:A,year:l,month:X.monthMod(M)}),A++;for(var P=w,u=0;u<c;u++){f="hour",A>=24&&(A=0,f="day",M=m(E+=1,M).month,M=p(E,M));var y=this._getYear(l,M,0);P=60*o+P;var C=A===0?E:A;this.timeScaleArray.push({position:P,value:C,unit:f,hour:A,day:E,year:y,month:X.monthMod(M)}),A++}}},{key:"generateMinuteScale",value:function(e){for(var t=e.currentMillisecond,a=e.currentSecond,r=e.currentMinute,l=e.currentHour,o=e.currentDate,c=e.currentMonth,d=e.currentYear,f=e.minutesWidthOnXAxis,m=e.secondsWidthOnXAxis,p=e.numberOfMinutes,x=r+1,w=o,S=c,A=d,E=l,M=(60-a-t/1e3)*m,P=0;P<p;P++)x>=60&&(x=0,(E+=1)===24&&(E=0)),this.timeScaleArray.push({position:M,value:x,unit:"minute",hour:E,minute:x,day:w,year:this._getYear(A,S,0),month:X.monthMod(S)}),M+=f,x++}},{key:"generateSecondScale",value:function(e){for(var t=e.currentMillisecond,a=e.currentSecond,r=e.currentMinute,l=e.currentHour,o=e.currentDate,c=e.currentMonth,d=e.currentYear,f=e.secondsWidthOnXAxis,m=e.numberOfSeconds,p=a+1,x=r,w=o,S=c,A=d,E=l,M=(1e3-t)/1e3*f,P=0;P<m;P++)p>=60&&(p=0,++x>=60&&(x=0,++E===24&&(E=0))),this.timeScaleArray.push({position:M,value:p,unit:"second",hour:E,minute:x,second:p,day:w,year:this._getYear(A,S,0),month:X.monthMod(S)}),M+=f,p++}},{key:"createRawDateString",value:function(e,t){var a=e.year;return e.month===0&&(e.month=1),a+="-"+("0"+e.month.toString()).slice(-2),e.unit==="day"?a+=e.unit==="day"?"-"+("0"+t).slice(-2):"-01":a+="-"+("0"+(e.day?e.day:"1")).slice(-2),e.unit==="hour"?a+=e.unit==="hour"?"T"+("0"+t).slice(-2):"T00":a+="T"+("0"+(e.hour?e.hour:"0")).slice(-2),e.unit==="minute"?a+=":"+("0"+t).slice(-2):a+=":"+(e.minute?("0"+e.minute).slice(-2):"00"),e.unit==="second"?a+=":"+("0"+t).slice(-2):a+=":00",this.utc&&(a+=".000Z"),a}},{key:"formatDates",value:function(e){var t=this,a=this.w;return e.map(function(r){var l=r.value.toString(),o=new De(t.ctx),c=t.createRawDateString(r,l),d=o.getDate(o.parseDate(c));if(t.utc||(d=o.getDate(o.parseDateWithTimezone(c))),a.config.xaxis.labels.format===void 0){var f="dd MMM",m=a.config.xaxis.labels.datetimeFormatter;r.unit==="year"&&(f=m.year),r.unit==="month"&&(f=m.month),r.unit==="day"&&(f=m.day),r.unit==="hour"&&(f=m.hour),r.unit==="minute"&&(f=m.minute),r.unit==="second"&&(f=m.second),l=o.formatDate(d,f)}else l=o.formatDate(d,a.config.xaxis.labels.format);return{dateString:c,position:r.position,value:l,unit:r.unit,year:r.year,month:r.month}})}},{key:"removeOverlappingTS",value:function(e){var t,a=this,r=new V(this.ctx),l=!1;e.length>0&&e[0].value&&e.every(function(d){return d.value.length===e[0].value.length})&&(l=!0,t=r.getTextRects(e[0].value).width);var o=0,c=e.map(function(d,f){if(f>0&&a.w.config.xaxis.labels.hideOverlappingLabels){var m=l?t:r.getTextRects(e[o].value).width,p=e[o].position;return d.position>p+m+10?(o=f,d):null}return d});return c=c.filter(function(d){return d!==null})}},{key:"_getYear",value:function(e,t,a){return e+Math.floor(t/12)+a}}]),_}(),wr=function(){function _(e,t){g(this,_),this.ctx=t,this.w=t.w,this.el=e}return v(_,[{key:"setupElements",value:function(){var e=this.w,t=e.globals,a=e.config,r=a.chart.type;t.axisCharts=["line","area","bar","rangeBar","rangeArea","candlestick","boxPlot","scatter","bubble","radar","heatmap","treemap"].includes(r),t.xyCharts=["line","area","bar","rangeBar","rangeArea","candlestick","boxPlot","scatter","bubble"].includes(r),t.isBarHorizontal=["bar","rangeBar","boxPlot"].includes(r)&&a.plotOptions.bar.horizontal,t.chartClass=".apexcharts".concat(t.chartID),t.dom.baseEl=this.el,t.dom.elWrap=document.createElement("div"),V.setAttrs(t.dom.elWrap,{id:t.chartClass.substring(1),class:"apexcharts-canvas ".concat(t.chartClass.substring(1))}),this.el.appendChild(t.dom.elWrap),t.dom.Paper=new window.SVG.Doc(t.dom.elWrap),t.dom.Paper.attr({class:"apexcharts-svg","xmlns:data":"ApexChartsNS",transform:"translate(".concat(a.chart.offsetX,", ").concat(a.chart.offsetY,")")}),t.dom.Paper.node.style.background=a.theme.mode!=="dark"||a.chart.background?a.theme.mode!=="light"||a.chart.background?a.chart.background:"#fff":"#424242",this.setSVGDimensions(),t.dom.elLegendForeign=document.createElementNS(t.SVGNS,"foreignObject"),V.setAttrs(t.dom.elLegendForeign,{x:0,y:0,width:t.svgWidth,height:t.svgHeight}),t.dom.elLegendWrap=document.createElement("div"),t.dom.elLegendWrap.classList.add("apexcharts-legend"),t.dom.elLegendWrap.setAttribute("xmlns","http://www.w3.org/1999/xhtml"),t.dom.elLegendForeign.appendChild(t.dom.elLegendWrap),t.dom.Paper.node.appendChild(t.dom.elLegendForeign),t.dom.elGraphical=t.dom.Paper.group().attr({class:"apexcharts-inner apexcharts-graphical"}),t.dom.elDefs=t.dom.Paper.defs(),t.dom.Paper.add(t.dom.elGraphical),t.dom.elGraphical.add(t.dom.elDefs)}},{key:"plotChartType",value:function(e,t){var a=this.w,r=this.ctx,l=a.config,o=a.globals,c={line:{series:[],i:[]},area:{series:[],i:[]},scatter:{series:[],i:[]},bubble:{series:[],i:[]},column:{series:[],i:[]},candlestick:{series:[],i:[]},boxPlot:{series:[],i:[]},rangeBar:{series:[],i:[]},rangeArea:{series:[],seriesRangeEnd:[],i:[]}},d=l.chart.type||"line",f=null,m=0;o.series.forEach(function(D,L){var I=e[L].type||d;c[I]?(I==="rangeArea"?(c[I].series.push(o.seriesRangeStart[L]),c[I].seriesRangeEnd.push(o.seriesRangeEnd[L])):c[I].series.push(D),c[I].i.push(L),I!=="column"&&I!=="bar"||(a.globals.columnSeries=c.column)):["heatmap","treemap","pie","donut","polarArea","radialBar","radar"].includes(I)?f=I:I==="bar"?(c.column.series.push(D),c.column.i.push(L)):console.warn("You have specified an unrecognized series type (".concat(I,").")),d!==I&&I!=="scatter"&&m++}),m>0&&(f&&console.warn("Chart or series type ".concat(f," cannot appear with other chart or series types.")),c.column.series.length>0&&l.plotOptions.bar.horizontal&&(m-=c.column.series.length,c.column={series:[],i:[]},a.globals.columnSeries={series:[],i:[]},console.warn("Horizontal bars are not supported in a mixed/combo chart. Please turn off `plotOptions.bar.horizontal`"))),o.comboCharts||(o.comboCharts=m>0);var p=new ai(r,t),x=new N(r,t);r.pie=new he(r);var w=new ge(r);r.rangeBar=new Me(r,t);var S=new Ce(r),A=[];if(o.comboCharts){var E,M,P=new se(r);if(c.area.series.length>0&&(E=A).push.apply(E,ie(P.drawSeriesByGroup(c.area,o.areaGroups,"area",p))),c.column.series.length>0)if(l.chart.stacked){var u=new R(r,t);A.push(u.draw(c.column.series,c.column.i))}else r.bar=new ci(r,t),A.push(r.bar.draw(c.column.series,c.column.i));if(c.rangeArea.series.length>0&&A.push(p.draw(c.rangeArea.series,"rangeArea",c.rangeArea.i,c.rangeArea.seriesRangeEnd)),c.line.series.length>0&&(M=A).push.apply(M,ie(P.drawSeriesByGroup(c.line,o.lineGroups,"line",p))),c.candlestick.series.length>0&&A.push(x.draw(c.candlestick.series,"candlestick",c.candlestick.i)),c.boxPlot.series.length>0&&A.push(x.draw(c.boxPlot.series,"boxPlot",c.boxPlot.i)),c.rangeBar.series.length>0&&A.push(r.rangeBar.draw(c.rangeBar.series,c.rangeBar.i)),c.scatter.series.length>0){var y=new ai(r,t,!0);A.push(y.draw(c.scatter.series,"scatter",c.scatter.i))}if(c.bubble.series.length>0){var C=new ai(r,t,!0);A.push(C.draw(c.bubble.series,"bubble",c.bubble.i))}}else switch(l.chart.type){case"line":A=p.draw(o.series,"line");break;case"area":A=p.draw(o.series,"area");break;case"bar":l.chart.stacked?A=new R(r,t).draw(o.series):(r.bar=new ci(r,t),A=r.bar.draw(o.series));break;case"candlestick":A=new N(r,t).draw(o.series,"candlestick");break;case"boxPlot":A=new N(r,t).draw(o.series,l.chart.type);break;case"rangeBar":A=r.rangeBar.draw(o.series);break;case"rangeArea":A=p.draw(o.seriesRangeStart,"rangeArea",void 0,o.seriesRangeEnd);break;case"heatmap":A=new J(r,t).draw(o.series);break;case"treemap":A=new ya(r,t).draw(o.series);break;case"pie":case"donut":case"polarArea":A=r.pie.draw(o.series);break;case"radialBar":A=w.draw(o.series);break;case"radar":A=S.draw(o.series);break;default:A=p.draw(o.series)}return A}},{key:"setSVGDimensions",value:function(){var e=this.w,t=e.globals,a=e.config;a.chart.width=a.chart.width||"100%",a.chart.height=a.chart.height||"auto",t.svgWidth=a.chart.width,t.svgHeight=a.chart.height;var r=X.getDimensions(this.el),l=a.chart.width.toString().split(/[0-9]+/g).pop();l==="%"?X.isNumber(r[0])&&(r[0].width===0&&(r=X.getDimensions(this.el.parentNode)),t.svgWidth=r[0]*parseInt(a.chart.width,10)/100):l!=="px"&&l!==""||(t.svgWidth=parseInt(a.chart.width,10));var o=String(a.chart.height).toString().split(/[0-9]+/g).pop();if(t.svgHeight!=="auto"&&t.svgHeight!=="")if(o==="%"){var c=X.getDimensions(this.el.parentNode);t.svgHeight=c[1]*parseInt(a.chart.height,10)/100}else t.svgHeight=parseInt(a.chart.height,10);else t.svgHeight=t.axisCharts?t.svgWidth/1.61:t.svgWidth/1.2;if(t.svgWidth=Math.max(t.svgWidth,0),t.svgHeight=Math.max(t.svgHeight,0),V.setAttrs(t.dom.Paper.node,{width:t.svgWidth,height:t.svgHeight}),o!=="%"){var d=a.chart.sparkline.enabled?0:t.axisCharts?a.chart.parentHeightOffset:0;t.dom.Paper.node.parentNode.parentNode.style.minHeight="".concat(t.svgHeight+d,"px")}t.dom.elWrap.style.width="".concat(t.svgWidth,"px"),t.dom.elWrap.style.height="".concat(t.svgHeight,"px")}},{key:"shiftGraphPosition",value:function(){var e=this.w.globals,t=e.translateY,a=e.translateX;V.setAttrs(e.dom.elGraphical.node,{transform:"translate(".concat(a,", ").concat(t,")")})}},{key:"resizeNonAxisCharts",value:function(){var e=this.w,t=e.globals,a=0,r=e.config.chart.sparkline.enabled?1:15;r+=e.config.grid.padding.bottom,["top","bottom"].includes(e.config.legend.position)&&e.config.legend.show&&!e.config.legend.floating&&(a=new rn(this.ctx).legendHelpers.getLegendDimensions().clwh+7);var l=e.globals.dom.baseEl.querySelector(".apexcharts-radialbar, .apexcharts-pie"),o=2.05*e.globals.radialSize;if(l&&!e.config.chart.sparkline.enabled&&e.config.plotOptions.radialBar.startAngle!==0){var c=X.getBoundingClientRect(l);o=c.bottom;var d=c.bottom-c.top;o=Math.max(2.05*e.globals.radialSize,d)}var f=Math.ceil(o+t.translateY+a+r);t.dom.elLegendForeign&&t.dom.elLegendForeign.setAttribute("height",f),e.config.chart.height&&String(e.config.chart.height).includes("%")||(t.dom.elWrap.style.height="".concat(f,"px"),V.setAttrs(t.dom.Paper.node,{height:f}),t.dom.Paper.node.parentNode.parentNode.style.minHeight="".concat(f,"px"))}},{key:"coreCalculations",value:function(){new pa(this.ctx).init()}},{key:"resetGlobals",value:function(){var e=this,t=function(){return e.w.config.series.map(function(){return[]})},a=new Ja,r=this.w.globals;a.initGlobalVars(r),r.seriesXvalues=t(),r.seriesYvalues=t()}},{key:"isMultipleY",value:function(){return!!(Array.isArray(this.w.config.yaxis)&&this.w.config.yaxis.length>1)&&(this.w.globals.isMultipleYAxis=!0,!0)}},{key:"xySettings",value:function(){var e=this.w,t=null;if(e.globals.axisCharts){if(e.config.xaxis.crosshairs.position==="back"&&new ma(this.ctx).drawXCrosshairs(),e.config.yaxis[0].crosshairs.position==="back"&&new ma(this.ctx).drawYCrosshairs(),e.config.xaxis.type==="datetime"&&e.config.xaxis.labels.formatter===void 0){this.ctx.timeScale=new yr(this.ctx);var a=[];isFinite(e.globals.minX)&&isFinite(e.globals.maxX)&&!e.globals.isBarHorizontal?a=this.ctx.timeScale.calculateTimeScaleTicks(e.globals.minX,e.globals.maxX):e.globals.isBarHorizontal&&(a=this.ctx.timeScale.calculateTimeScaleTicks(e.globals.minY,e.globals.maxY)),this.ctx.timeScale.recalcDimensionsBasedOnFormat(a)}t=new se(this.ctx).getCalculatedRatios()}return t}},{key:"updateSourceChart",value:function(e){this.ctx.w.globals.selection=void 0,this.ctx.updateHelpers._updateOptions({chart:{selection:{xaxis:{min:e.w.globals.minX,max:e.w.globals.maxX}}}},!1,!1)}},{key:"setupBrushHandler",value:function(){var e=this,t=this.w;if(t.config.chart.brush.enabled&&typeof t.config.chart.events.selection!="function"){var a=Array.isArray(t.config.chart.brush.targets)?t.config.chart.brush.targets:[t.config.chart.brush.target];a.forEach(function(r){var l=ApexCharts.getChartByID(r);l.w.globals.brushSource=e.ctx,typeof l.w.config.chart.events.zoomed!="function"&&(l.w.config.chart.events.zoomed=function(){return e.updateSourceChart(l)}),typeof l.w.config.chart.events.scrolled!="function"&&(l.w.config.chart.events.scrolled=function(){return e.updateSourceChart(l)})}),t.config.chart.events.selection=function(r,l){a.forEach(function(o){ApexCharts.getChartByID(o).ctx.updateHelpers._updateOptions({xaxis:{min:l.xaxis.min,max:l.xaxis.max}},!1,!1,!1,!1)})}}}}]),_}(),Ar=function(){function _(e){g(this,_),this.ctx=e,this.w=e.w}return v(_,[{key:"_updateOptions",value:function(e){var t=this,a=arguments.length>1&&arguments[1]!==void 0&&arguments[1],r=!(arguments.length>2&&arguments[2]!==void 0)||arguments[2],l=!(arguments.length>3&&arguments[3]!==void 0)||arguments[3],o=arguments.length>4&&arguments[4]!==void 0&&arguments[4];return new Promise(function(c){var d=[t.ctx];l&&(d=t.ctx.getSyncedCharts()),t.ctx.w.globals.isExecCalled&&(d=[t.ctx],t.ctx.w.globals.isExecCalled=!1),d.forEach(function(f,m){var p=f.w;if(p.globals.shouldAnimate=r,a||(p.globals.resized=!0,p.globals.dataChanged=!0,r&&f.series.getPreviousPaths()),e&&ne(e)==="object"&&(f.config=new vi(e),e=se.extendArrayProps(f.config,e,p),f.w.globals.chartID!==t.ctx.w.globals.chartID&&delete e.series,p.config=X.extend(p.config,e),o&&(p.globals.lastXAxis=e.xaxis?X.clone(e.xaxis):[],p.globals.lastYAxis=e.yaxis?X.clone(e.yaxis):[],p.globals.initialConfig=X.extend({},p.config),p.globals.initialSeries=X.clone(p.config.series),e.series))){for(var x=0;x<p.globals.collapsedSeriesIndices.length;x++){var w=p.config.series[p.globals.collapsedSeriesIndices[x]];p.globals.collapsedSeries[x].data=p.globals.axisCharts?w.data.slice():w}for(var S=0;S<p.globals.ancillaryCollapsedSeriesIndices.length;S++){var A=p.config.series[p.globals.ancillaryCollapsedSeriesIndices[S]];p.globals.ancillaryCollapsedSeries[S].data=p.globals.axisCharts?A.data.slice():A}f.series.emptyCollapsedSeries(p.config.series)}return f.update(e).then(function(){m===d.length-1&&c(f)})})})}},{key:"_updateSeries",value:function(e,t){var a=this,r=arguments.length>2&&arguments[2]!==void 0&&arguments[2];return new Promise(function(l){var o,c=a.w;return c.globals.shouldAnimate=t,c.globals.dataChanged=!0,t&&a.ctx.series.getPreviousPaths(),c.globals.axisCharts?((o=e.map(function(d,f){return a._extendSeries(d,f)})).length===0&&(o=[{data:[]}]),c.config.series=o):c.config.series=e.slice(),r&&(c.globals.initialConfig.series=X.clone(c.config.series),c.globals.initialSeries=X.clone(c.config.series)),a.ctx.update().then(function(){l(a.ctx)})})}},{key:"_extendSeries",value:function(e,t){var a=this.w,r=a.config.series[t];return Y(Y({},a.config.series[t]),{},{name:e.name?e.name:r==null?void 0:r.name,color:e.color?e.color:r==null?void 0:r.color,type:e.type?e.type:r==null?void 0:r.type,group:e.group?e.group:r==null?void 0:r.group,hidden:e.hidden!==void 0?e.hidden:r==null?void 0:r.hidden,data:e.data?e.data:r==null?void 0:r.data,zIndex:e.zIndex!==void 0?e.zIndex:t})}},{key:"toggleDataPointSelection",value:function(e,t){var a=this.w,r=null,l=".apexcharts-series[data\\:realIndex='".concat(e,"']");return a.globals.axisCharts?r=a.globals.dom.Paper.select("".concat(l," path[j='").concat(t,"'], ").concat(l," circle[j='").concat(t,"'], ").concat(l," rect[j='").concat(t,"']")).members[0]:t===void 0&&(r=a.globals.dom.Paper.select("".concat(l," path[j='").concat(e,"']")).members[0],a.config.chart.type!=="pie"&&a.config.chart.type!=="polarArea"&&a.config.chart.type!=="donut"||this.ctx.pie.pieClicked(e)),r?(new V(this.ctx).pathMouseDown(r,null),r.node?r.node:null):(console.warn("toggleDataPointSelection: Element not found"),null)}},{key:"forceXAxisUpdate",value:function(e){var t=this.w;if(["min","max"].forEach(function(r){e.xaxis[r]!==void 0&&(t.config.xaxis[r]=e.xaxis[r],t.globals.lastXAxis[r]=e.xaxis[r])}),e.xaxis.categories&&e.xaxis.categories.length&&(t.config.xaxis.categories=e.xaxis.categories),t.config.xaxis.convertedCatToNumeric){var a=new ti(e);e=a.convertCatToNumericXaxis(e,this.ctx)}return e}},{key:"forceYAxisUpdate",value:function(e){return e.chart&&e.chart.stacked&&e.chart.stackType==="100%"&&(Array.isArray(e.yaxis)?e.yaxis.forEach(function(t,a){e.yaxis[a].min=0,e.yaxis[a].max=100}):(e.yaxis.min=0,e.yaxis.max=100)),e}},{key:"revertDefaultAxisMinMax",value:function(e){var t=this,a=this.w,r=a.globals.lastXAxis,l=a.globals.lastYAxis;e&&e.xaxis&&(r=e.xaxis),e&&e.yaxis&&(l=e.yaxis),a.config.xaxis.min=r.min,a.config.xaxis.max=r.max;var o=function(c){l[c]!==void 0&&(a.config.yaxis[c].min=l[c].min,a.config.yaxis[c].max=l[c].max)};a.config.yaxis.map(function(c,d){a.globals.zoomed||l[d]!==void 0?o(d):t.ctx.opts.yaxis[d]!==void 0&&(c.min=t.ctx.opts.yaxis[d].min,c.max=t.ctx.opts.yaxis[d].max)})}}]),_}();bt=typeof window<"u"?window:void 0,qi=function(_,e){var t=(this!==void 0?this:_).SVG=function(u){if(t.supported)return u=new t.Doc(u),t.parser.draw||t.prepare(),u};if(t.ns="http://www.w3.org/2000/svg",t.xmlns="http://www.w3.org/2000/xmlns/",t.xlink="http://www.w3.org/1999/xlink",t.svgjs="http://svgjs.dev",t.supported=!0,!t.supported)return!1;t.did=1e3,t.eid=function(u){return"Svgjs"+m(u)+t.did++},t.create=function(u){var y=e.createElementNS(this.ns,u);return y.setAttribute("id",this.eid(u)),y},t.extend=function(){var u,y;y=(u=[].slice.call(arguments)).pop();for(var C=u.length-1;C>=0;C--)if(u[C])for(var D in y)u[C].prototype[D]=y[D];t.Set&&t.Set.inherit&&t.Set.inherit()},t.invent=function(u){var y=typeof u.create=="function"?u.create:function(){this.constructor.call(this,t.create(u.create))};return u.inherit&&(y.prototype=new u.inherit),u.extend&&t.extend(y,u.extend),u.construct&&t.extend(u.parent||t.Container,u.construct),y},t.adopt=function(u){return u?u.instance?u.instance:((y=u.nodeName=="svg"?u.parentNode instanceof _.SVGElement?new t.Nested:new t.Doc:u.nodeName=="linearGradient"?new t.Gradient("linear"):u.nodeName=="radialGradient"?new t.Gradient("radial"):t[m(u.nodeName)]?new t[m(u.nodeName)]:new t.Element(u)).type=u.nodeName,y.node=u,u.instance=y,y instanceof t.Doc&&y.namespace().defs(),y.setData(JSON.parse(u.getAttribute("svgjs:data"))||{}),y):null;var y},t.prepare=function(){var u=e.getElementsByTagName("body")[0],y=(u?new t.Doc(u):t.adopt(e.documentElement).nested()).size(2,0);t.parser={body:u||e.documentElement,draw:y.style("opacity:0;position:absolute;left:-100%;top:-100%;overflow:hidden").node,poly:y.polyline().node,path:y.path().node,native:t.create("svg")}},t.parser={native:t.create("svg")},e.addEventListener("DOMContentLoaded",function(){t.parser.draw||t.prepare()},!1),t.regex={numberAndUnit:/^([+-]?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?)([a-z%]*)$/i,hex:/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i,rgb:/rgb\((\d+),(\d+),(\d+)\)/,reference:/#([a-z0-9\-_]+)/i,transforms:/\)\s*,?\s*/,whitespace:/\s/g,isHex:/^#[a-f0-9]{3,6}$/i,isRgb:/^rgb\(/,isCss:/[^:]+:[^;]+;?/,isBlank:/^(\s+)?$/,isNumber:/^[+-]?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,isPercent:/^-?[\d\.]+%$/,isImage:/\.(jpg|jpeg|png|gif|svg)(\?[^=]+.*)?/i,delimiter:/[\s,]+/,hyphen:/([^e])\-/gi,pathLetters:/[MLHVCSQTAZ]/gi,isPathLetter:/[MLHVCSQTAZ]/i,numbersWithDots:/((\d?\.\d+(?:e[+-]?\d+)?)((?:\.\d+(?:e[+-]?\d+)?)+))+/gi,dots:/\./g},t.utils={map:function(u,y){for(var C=u.length,D=[],L=0;L<C;L++)D.push(y(u[L]));return D},filter:function(u,y){for(var C=u.length,D=[],L=0;L<C;L++)y(u[L])&&D.push(u[L]);return D},filterSVGElements:function(u){return this.filter(u,function(y){return y instanceof _.SVGElement})}},t.defaults={attrs:{"fill-opacity":1,"stroke-opacity":1,"stroke-width":0,"stroke-linejoin":"miter","stroke-linecap":"butt",fill:"#000000",stroke:"#000000",opacity:1,x:0,y:0,cx:0,cy:0,width:0,height:0,r:0,rx:0,ry:0,offset:0,"stop-opacity":1,"stop-color":"#000000","font-size":16,"font-family":"Helvetica, Arial, sans-serif","text-anchor":"start"}},t.Color=function(u){var y,C;this.r=0,this.g=0,this.b=0,u&&(typeof u=="string"?t.regex.isRgb.test(u)?(y=t.regex.rgb.exec(u.replace(t.regex.whitespace,"")),this.r=parseInt(y[1]),this.g=parseInt(y[2]),this.b=parseInt(y[3])):t.regex.isHex.test(u)&&(y=t.regex.hex.exec((C=u).length==4?["#",C.substring(1,2),C.substring(1,2),C.substring(2,3),C.substring(2,3),C.substring(3,4),C.substring(3,4)].join(""):C),this.r=parseInt(y[1],16),this.g=parseInt(y[2],16),this.b=parseInt(y[3],16)):ne(u)==="object"&&(this.r=u.r,this.g=u.g,this.b=u.b))},t.extend(t.Color,{toString:function(){return this.toHex()},toHex:function(){return"#"+p(this.r)+p(this.g)+p(this.b)},toRgb:function(){return"rgb("+[this.r,this.g,this.b].join()+")"},brightness:function(){return this.r/255*.3+this.g/255*.59+this.b/255*.11},morph:function(u){return this.destination=new t.Color(u),this},at:function(u){return this.destination?(u=u<0?0:u>1?1:u,new t.Color({r:~~(this.r+(this.destination.r-this.r)*u),g:~~(this.g+(this.destination.g-this.g)*u),b:~~(this.b+(this.destination.b-this.b)*u)})):this}}),t.Color.test=function(u){return u+="",t.regex.isHex.test(u)||t.regex.isRgb.test(u)},t.Color.isRgb=function(u){return u&&typeof u.r=="number"&&typeof u.g=="number"&&typeof u.b=="number"},t.Color.isColor=function(u){return t.Color.isRgb(u)||t.Color.test(u)},t.Array=function(u,y){(u=(u||[]).valueOf()).length==0&&y&&(u=y.valueOf()),this.value=this.parse(u)},t.extend(t.Array,{toString:function(){return this.value.join(" ")},valueOf:function(){return this.value},parse:function(u){return u=u.valueOf(),Array.isArray(u)?u:this.split(u)}}),t.PointArray=function(u,y){t.Array.call(this,u,y||[[0,0]])},t.PointArray.prototype=new t.Array,t.PointArray.prototype.constructor=t.PointArray;for(var a={M:function(u,y,C){return y.x=C.x=u[0],y.y=C.y=u[1],["M",y.x,y.y]},L:function(u,y){return y.x=u[0],y.y=u[1],["L",u[0],u[1]]},H:function(u,y){return y.x=u[0],["H",u[0]]},V:function(u,y){return y.y=u[0],["V",u[0]]},C:function(u,y){return y.x=u[4],y.y=u[5],["C",u[0],u[1],u[2],u[3],u[4],u[5]]},Q:function(u,y){return y.x=u[2],y.y=u[3],["Q",u[0],u[1],u[2],u[3]]},S:function(u,y){return y.x=u[2],y.y=u[3],["S",u[0],u[1],u[2],u[3]]},Z:function(u,y,C){return y.x=C.x,y.y=C.y,["Z"]}},r="mlhvqtcsaz".split(""),l=0,o=r.length;l<o;++l)a[r[l]]=function(u){return function(y,C,D){if(u=="H")y[0]=y[0]+C.x;else if(u=="V")y[0]=y[0]+C.y;else if(u=="A")y[5]=y[5]+C.x,y[6]=y[6]+C.y;else for(var L=0,I=y.length;L<I;++L)y[L]=y[L]+(L%2?C.y:C.x);if(a&&typeof a[u]=="function")return a[u](y,C,D)}}(r[l].toUpperCase());t.PathArray=function(u,y){t.Array.call(this,u,y||[["M",0,0]])},t.PathArray.prototype=new t.Array,t.PathArray.prototype.constructor=t.PathArray,t.extend(t.PathArray,{toString:function(){return function(u){for(var y=0,C=u.length,D="";y<C;y++)D+=u[y][0],u[y][1]!=null&&(D+=u[y][1],u[y][2]!=null&&(D+=" ",D+=u[y][2],u[y][3]!=null&&(D+=" ",D+=u[y][3],D+=" ",D+=u[y][4],u[y][5]!=null&&(D+=" ",D+=u[y][5],D+=" ",D+=u[y][6],u[y][7]!=null&&(D+=" ",D+=u[y][7])))));return D+" "}(this.value)},move:function(u,y){var C=this.bbox();return C.x,C.y,this},at:function(u){if(!this.destination)return this;for(var y=this.value,C=this.destination.value,D=[],L=new t.PathArray,I=0,H=y.length;I<H;I++){D[I]=[y[I][0]];for(var B=1,U=y[I].length;B<U;B++)D[I][B]=y[I][B]+(C[I][B]-y[I][B])*u;D[I][0]==="A"&&(D[I][4]=+(D[I][4]!=0),D[I][5]=+(D[I][5]!=0))}return L.value=D,L},parse:function(u){if(u instanceof t.PathArray)return u.valueOf();var y,C={M:2,L:2,H:1,V:1,C:6,S:4,Q:4,T:2,A:7,Z:0};u=typeof u=="string"?u.replace(t.regex.numbersWithDots,d).replace(t.regex.pathLetters," $& ").replace(t.regex.hyphen,"$1 -").trim().split(t.regex.delimiter):u.reduce(function(U,ee){return[].concat.call(U,ee)},[]);var D=[],L=new t.Point,I=new t.Point,H=0,B=u.length;do t.regex.isPathLetter.test(u[H])?(y=u[H],++H):y=="M"?y="L":y=="m"&&(y="l"),D.push(a[y].call(null,u.slice(H,H+=C[y.toUpperCase()]).map(parseFloat),L,I));while(B>H);return D},bbox:function(){return t.parser.draw||t.prepare(),t.parser.path.setAttribute("d",this.toString()),t.parser.path.getBBox()}}),t.Number=t.invent({create:function(u,y){this.value=0,this.unit=y||"",typeof u=="number"?this.value=isNaN(u)?0:isFinite(u)?u:u<0?-34e37:34e37:typeof u=="string"?(y=u.match(t.regex.numberAndUnit))&&(this.value=parseFloat(y[1]),y[5]=="%"?this.value/=100:y[5]=="s"&&(this.value*=1e3),this.unit=y[5]):u instanceof t.Number&&(this.value=u.valueOf(),this.unit=u.unit)},extend:{toString:function(){return(this.unit=="%"?~~(1e8*this.value)/1e6:this.unit=="s"?this.value/1e3:this.value)+this.unit},toJSON:function(){return this.toString()},valueOf:function(){return this.value},plus:function(u){return u=new t.Number(u),new t.Number(this+u,this.unit||u.unit)},minus:function(u){return u=new t.Number(u),new t.Number(this-u,this.unit||u.unit)},times:function(u){return u=new t.Number(u),new t.Number(this*u,this.unit||u.unit)},divide:function(u){return u=new t.Number(u),new t.Number(this/u,this.unit||u.unit)},to:function(u){var y=new t.Number(this);return typeof u=="string"&&(y.unit=u),y},morph:function(u){return this.destination=new t.Number(u),u.relative&&(this.destination.value+=this.value),this},at:function(u){return this.destination?new t.Number(this.destination).minus(this).times(u).plus(this):this}}}),t.Element=t.invent({create:function(u){this._stroke=t.defaults.attrs.stroke,this._event=null,this.dom={},(this.node=u)&&(this.type=u.nodeName,this.node.instance=this,this._stroke=u.getAttribute("stroke")||this._stroke)},extend:{x:function(u){return this.attr("x",u)},y:function(u){return this.attr("y",u)},cx:function(u){return u==null?this.x()+this.width()/2:this.x(u-this.width()/2)},cy:function(u){return u==null?this.y()+this.height()/2:this.y(u-this.height()/2)},move:function(u,y){return this.x(u).y(y)},center:function(u,y){return this.cx(u).cy(y)},width:function(u){return this.attr("width",u)},height:function(u){return this.attr("height",u)},size:function(u,y){var C=x(this,u,y);return this.width(new t.Number(C.width)).height(new t.Number(C.height))},clone:function(u){this.writeDataToDom();var y=A(this.node.cloneNode(!0));return u?u.add(y):this.after(y),y},remove:function(){return this.parent()&&this.parent().removeElement(this),this},replace:function(u){return this.after(u).remove(),u},addTo:function(u){return u.put(this)},putIn:function(u){return u.add(this)},id:function(u){return this.attr("id",u)},show:function(){return this.style("display","")},hide:function(){return this.style("display","none")},visible:function(){return this.style("display")!="none"},toString:function(){return this.attr("id")},classes:function(){var u=this.attr("class");return u==null?[]:u.trim().split(t.regex.delimiter)},hasClass:function(u){return this.classes().indexOf(u)!=-1},addClass:function(u){if(!this.hasClass(u)){var y=this.classes();y.push(u),this.attr("class",y.join(" "))}return this},removeClass:function(u){return this.hasClass(u)&&this.attr("class",this.classes().filter(function(y){return y!=u}).join(" ")),this},toggleClass:function(u){return this.hasClass(u)?this.removeClass(u):this.addClass(u)},reference:function(u){return t.get(this.attr(u))},parent:function(u){var y=this;if(!y.node.parentNode)return null;if(y=t.adopt(y.node.parentNode),!u)return y;for(;y&&y.node instanceof _.SVGElement;){if(typeof u=="string"?y.matches(u):y instanceof u)return y;if(!y.node.parentNode||y.node.parentNode.nodeName=="#document")return null;y=t.adopt(y.node.parentNode)}},doc:function(){return this instanceof t.Doc?this:this.parent(t.Doc)},parents:function(u){var y=[],C=this;do{if(!(C=C.parent(u))||!C.node)break;y.push(C)}while(C.parent);return y},matches:function(u){return function(y,C){return(y.matches||y.matchesSelector||y.msMatchesSelector||y.mozMatchesSelector||y.webkitMatchesSelector||y.oMatchesSelector).call(y,C)}(this.node,u)},native:function(){return this.node},svg:function(u){var y=e.createElementNS("http://www.w3.org/2000/svg","svg");if(!(u&&this instanceof t.Parent))return y.appendChild(u=e.createElementNS("http://www.w3.org/2000/svg","svg")),this.writeDataToDom(),u.appendChild(this.node.cloneNode(!0)),y.innerHTML.replace(/^<svg>/,"").replace(/<\/svg>$/,"");y.innerHTML="<svg>"+u.replace(/\n/,"").replace(/<([\w:-]+)([^<]+?)\/>/g,"<$1$2></$1>")+"</svg>";for(var C=0,D=y.firstChild.childNodes.length;C<D;C++)this.node.appendChild(y.firstChild.firstChild);return this},writeDataToDom:function(){return(this.each||this.lines)&&(this.each?this:this.lines()).each(function(){this.writeDataToDom()}),this.node.removeAttribute("svgjs:data"),Object.keys(this.dom).length&&this.node.setAttribute("svgjs:data",JSON.stringify(this.dom)),this},setData:function(u){return this.dom=u,this},is:function(u){return function(y,C){return y instanceof C}(this,u)}}}),t.easing={"-":function(u){return u},"<>":function(u){return-Math.cos(u*Math.PI)/2+.5},">":function(u){return Math.sin(u*Math.PI/2)},"<":function(u){return 1-Math.cos(u*Math.PI/2)}},t.morph=function(u){return function(y,C){return new t.MorphObj(y,C).at(u)}},t.Situation=t.invent({create:function(u){this.init=!1,this.reversed=!1,this.reversing=!1,this.duration=new t.Number(u.duration).valueOf(),this.delay=new t.Number(u.delay).valueOf(),this.start=+new Date+this.delay,this.finish=this.start+this.duration,this.ease=u.ease,this.loop=0,this.loops=!1,this.animations={},this.attrs={},this.styles={},this.transforms=[],this.once={}}}),t.FX=t.invent({create:function(u){this._target=u,this.situations=[],this.active=!1,this.situation=null,this.paused=!1,this.lastPos=0,this.pos=0,this.absPos=0,this._speed=1},extend:{animate:function(u,y,C){ne(u)==="object"&&(y=u.ease,C=u.delay,u=u.duration);var D=new t.Situation({duration:u||1e3,delay:C||0,ease:t.easing[y||"-"]||y});return this.queue(D),this},target:function(u){return u&&u instanceof t.Element?(this._target=u,this):this._target},timeToAbsPos:function(u){return(u-this.situation.start)/(this.situation.duration/this._speed)},absPosToTime:function(u){return this.situation.duration/this._speed*u+this.situation.start},startAnimFrame:function(){this.stopAnimFrame(),this.animationFrame=_.requestAnimationFrame((function(){this.step()}).bind(this))},stopAnimFrame:function(){_.cancelAnimationFrame(this.animationFrame)},start:function(){return!this.active&&this.situation&&(this.active=!0,this.startCurrent()),this},startCurrent:function(){return this.situation.start=+new Date+this.situation.delay/this._speed,this.situation.finish=this.situation.start+this.situation.duration/this._speed,this.initAnimations().step()},queue:function(u){return(typeof u=="function"||u instanceof t.Situation)&&this.situations.push(u),this.situation||(this.situation=this.situations.shift()),this},dequeue:function(){return this.stop(),this.situation=this.situations.shift(),this.situation&&(this.situation instanceof t.Situation?this.start():this.situation.call(this)),this},initAnimations:function(){var u,y=this.situation;if(y.init)return this;for(var C in y.animations){u=this.target()[C](),Array.isArray(u)||(u=[u]),Array.isArray(y.animations[C])||(y.animations[C]=[y.animations[C]]);for(var D=u.length;D--;)y.animations[C][D]instanceof t.Number&&(u[D]=new t.Number(u[D])),y.animations[C][D]=u[D].morph(y.animations[C][D])}for(var C in y.attrs)y.attrs[C]=new t.MorphObj(this.target().attr(C),y.attrs[C]);for(var C in y.styles)y.styles[C]=new t.MorphObj(this.target().style(C),y.styles[C]);return y.initialTransformation=this.target().matrixify(),y.init=!0,this},clearQueue:function(){return this.situations=[],this},clearCurrent:function(){return this.situation=null,this},stop:function(u,y){var C=this.active;return this.active=!1,y&&this.clearQueue(),u&&this.situation&&(!C&&this.startCurrent(),this.atEnd()),this.stopAnimFrame(),this.clearCurrent()},after:function(u){var y=this.last();return this.target().on("finished.fx",function C(D){D.detail.situation==y&&(u.call(this,y),this.off("finished.fx",C))}),this._callStart()},during:function(u){var y=this.last(),C=function(D){D.detail.situation==y&&u.call(this,D.detail.pos,t.morph(D.detail.pos),D.detail.eased,y)};return this.target().off("during.fx",C).on("during.fx",C),this.after(function(){this.off("during.fx",C)}),this._callStart()},afterAll:function(u){var y=function C(D){u.call(this),this.off("allfinished.fx",C)};return this.target().off("allfinished.fx",y).on("allfinished.fx",y),this._callStart()},last:function(){return this.situations.length?this.situations[this.situations.length-1]:this.situation},add:function(u,y,C){return this.last()[C||"animations"][u]=y,this._callStart()},step:function(u){var y,C,D;u||(this.absPos=this.timeToAbsPos(+new Date)),this.situation.loops!==!1?(y=Math.max(this.absPos,0),C=Math.floor(y),this.situation.loops===!0||C<this.situation.loops?(this.pos=y-C,D=this.situation.loop,this.situation.loop=C):(this.absPos=this.situation.loops,this.pos=1,D=this.situation.loop-1,this.situation.loop=this.situation.loops),this.situation.reversing&&(this.situation.reversed=this.situation.reversed!=!!((this.situation.loop-D)%2))):(this.absPos=Math.min(this.absPos,1),this.pos=this.absPos),this.pos<0&&(this.pos=0),this.situation.reversed&&(this.pos=1-this.pos);var L=this.situation.ease(this.pos);for(var I in this.situation.once)I>this.lastPos&&I<=L&&(this.situation.once[I].call(this.target(),this.pos,L),delete this.situation.once[I]);return this.active&&this.target().fire("during",{pos:this.pos,eased:L,fx:this,situation:this.situation}),this.situation?(this.eachAt(),this.pos==1&&!this.situation.reversed||this.situation.reversed&&this.pos==0?(this.stopAnimFrame(),this.target().fire("finished",{fx:this,situation:this.situation}),this.situations.length||(this.target().fire("allfinished"),this.situations.length||(this.target().off(".fx"),this.active=!1)),this.active?this.dequeue():this.clearCurrent()):!this.paused&&this.active&&this.startAnimFrame(),this.lastPos=L,this):this},eachAt:function(){var u,y=this,C=this.target(),D=this.situation;for(var L in D.animations)u=[].concat(D.animations[L]).map(function(B){return typeof B!="string"&&B.at?B.at(D.ease(y.pos),y.pos):B}),C[L].apply(C,u);for(var L in D.attrs)u=[L].concat(D.attrs[L]).map(function(U){return typeof U!="string"&&U.at?U.at(D.ease(y.pos),y.pos):U}),C.attr.apply(C,u);for(var L in D.styles)u=[L].concat(D.styles[L]).map(function(U){return typeof U!="string"&&U.at?U.at(D.ease(y.pos),y.pos):U}),C.style.apply(C,u);if(D.transforms.length){u=D.initialTransformation,L=0;for(var I=D.transforms.length;L<I;L++){var H=D.transforms[L];H instanceof t.Matrix?u=H.relative?u.multiply(new t.Matrix().morph(H).at(D.ease(this.pos))):u.morph(H).at(D.ease(this.pos)):(H.relative||H.undo(u.extract()),u=u.multiply(H.at(D.ease(this.pos))))}C.matrix(u)}return this},once:function(u,y,C){var D=this.last();return C||(u=D.ease(u)),D.once[u]=y,this},_callStart:function(){return setTimeout((function(){this.start()}).bind(this),0),this}},parent:t.Element,construct:{animate:function(u,y,C){return(this.fx||(this.fx=new t.FX(this))).animate(u,y,C)},delay:function(u){return(this.fx||(this.fx=new t.FX(this))).delay(u)},stop:function(u,y){return this.fx&&this.fx.stop(u,y),this},finish:function(){return this.fx&&this.fx.finish(),this}}}),t.MorphObj=t.invent({create:function(u,y){return t.Color.isColor(y)?new t.Color(u).morph(y):t.regex.delimiter.test(u)?t.regex.pathLetters.test(u)?new t.PathArray(u).morph(y):new t.Array(u).morph(y):t.regex.numberAndUnit.test(y)?new t.Number(u).morph(y):(this.value=u,void(this.destination=y))},extend:{at:function(u,y){return y<1?this.value:this.destination},valueOf:function(){return this.value}}}),t.extend(t.FX,{attr:function(u,y,C){if(ne(u)==="object")for(var D in u)this.attr(D,u[D]);else this.add(u,y,"attrs");return this},plot:function(u,y,C,D){return arguments.length==4?this.plot([u,y,C,D]):this.add("plot",new(this.target()).morphArray(u))}}),t.Box=t.invent({create:function(u,y,C,D){if(!(ne(u)!=="object"||u instanceof t.Element))return t.Box.call(this,u.left!=null?u.left:u.x,u.top!=null?u.top:u.y,u.width,u.height);var L;arguments.length==4&&(this.x=u,this.y=y,this.width=C,this.height=D),(L=this).x==null&&(L.x=0,L.y=0,L.width=0,L.height=0),L.w=L.width,L.h=L.height,L.x2=L.x+L.width,L.y2=L.y+L.height,L.cx=L.x+L.width/2,L.cy=L.y+L.height/2}}),t.BBox=t.invent({create:function(u){if(t.Box.apply(this,[].slice.call(arguments)),u instanceof t.Element){var y;try{if(!e.documentElement.contains){for(var C=u.node;C.parentNode;)C=C.parentNode;if(C!=e)throw new Error("Element not in the dom")}y=u.node.getBBox()}catch{if(u instanceof t.Shape){t.parser.draw||t.prepare();var D=u.clone(t.parser.draw.instance).show();D&&D.node&&typeof D.node.getBBox=="function"&&(y=D.node.getBBox()),D&&typeof D.remove=="function"&&D.remove()}else y={x:u.node.clientLeft,y:u.node.clientTop,width:u.node.clientWidth,height:u.node.clientHeight}}t.Box.call(this,y)}},inherit:t.Box,parent:t.Element,construct:{bbox:function(){return new t.BBox(this)}}}),t.BBox.prototype.constructor=t.BBox,t.Matrix=t.invent({create:function(u){var y=S([1,0,0,1,0,0]);u=u===null?y:u instanceof t.Element?u.matrixify():typeof u=="string"?S(u.split(t.regex.delimiter).map(parseFloat)):arguments.length==6?S([].slice.call(arguments)):Array.isArray(u)?S(u):u&&ne(u)==="object"?u:y;for(var C=M.length-1;C>=0;--C)this[M[C]]=u[M[C]]!=null?u[M[C]]:y[M[C]]},extend:{extract:function(){var u=w(this,0,1);w(this,1,0);var y=180/Math.PI*Math.atan2(u.y,u.x)-90;return{x:this.e,y:this.f,transformedX:(this.e*Math.cos(y*Math.PI/180)+this.f*Math.sin(y*Math.PI/180))/Math.sqrt(this.a*this.a+this.b*this.b),transformedY:(this.f*Math.cos(y*Math.PI/180)+this.e*Math.sin(-y*Math.PI/180))/Math.sqrt(this.c*this.c+this.d*this.d),rotation:y,a:this.a,b:this.b,c:this.c,d:this.d,e:this.e,f:this.f,matrix:new t.Matrix(this)}},clone:function(){return new t.Matrix(this)},morph:function(u){return this.destination=new t.Matrix(u),this},multiply:function(u){return new t.Matrix(this.native().multiply(function(y){return y instanceof t.Matrix||(y=new t.Matrix(y)),y}(u).native()))},inverse:function(){return new t.Matrix(this.native().inverse())},translate:function(u,y){return new t.Matrix(this.native().translate(u||0,y||0))},native:function(){for(var u=t.parser.native.createSVGMatrix(),y=M.length-1;y>=0;y--)u[M[y]]=this[M[y]];return u},toString:function(){return"matrix("+E(this.a)+","+E(this.b)+","+E(this.c)+","+E(this.d)+","+E(this.e)+","+E(this.f)+")"}},parent:t.Element,construct:{ctm:function(){return new t.Matrix(this.node.getCTM())},screenCTM:function(){if(this instanceof t.Nested){var u=this.rect(1,1),y=u.node.getScreenCTM();return u.remove(),new t.Matrix(y)}return new t.Matrix(this.node.getScreenCTM())}}}),t.Point=t.invent({create:function(u,y){var C;C=Array.isArray(u)?{x:u[0],y:u[1]}:ne(u)==="object"?{x:u.x,y:u.y}:u!=null?{x:u,y:y??u}:{x:0,y:0},this.x=C.x,this.y=C.y},extend:{clone:function(){return new t.Point(this)},morph:function(u,y){return this.destination=new t.Point(u,y),this}}}),t.extend(t.Element,{point:function(u,y){return new t.Point(u,y).transform(this.screenCTM().inverse())}}),t.extend(t.Element,{attr:function(u,y,C){if(u==null){for(u={},C=(y=this.node.attributes).length-1;C>=0;C--)u[y[C].nodeName]=t.regex.isNumber.test(y[C].nodeValue)?parseFloat(y[C].nodeValue):y[C].nodeValue;return u}if(ne(u)==="object")for(var D in u)this.attr(D,u[D]);else if(y===null)this.node.removeAttribute(u);else{if(y==null)return(y=this.node.getAttribute(u))==null?t.defaults.attrs[u]:t.regex.isNumber.test(y)?parseFloat(y):y;u=="stroke-width"?this.attr("stroke",parseFloat(y)>0?this._stroke:null):u=="stroke"&&(this._stroke=y),u!="fill"&&u!="stroke"||(t.regex.isImage.test(y)&&(y=this.doc().defs().image(y,0,0)),y instanceof t.Image&&(y=this.doc().defs().pattern(0,0,function(){this.add(y)}))),typeof y=="number"?y=new t.Number(y):t.Color.isColor(y)?y=new t.Color(y):Array.isArray(y)&&(y=new t.Array(y)),u=="leading"?this.leading&&this.leading(y):typeof C=="string"?this.node.setAttributeNS(C,u,y.toString()):this.node.setAttribute(u,y.toString()),!this.rebuild||u!="font-size"&&u!="x"||this.rebuild(u,y)}return this}}),t.extend(t.Element,{transform:function(u,y){var C;return ne(u)!=="object"?(C=new t.Matrix(this).extract(),typeof u=="string"?C[u]:C):(C=new t.Matrix(this),y=!!y||!!u.relative,u.a!=null&&(C=y?C.multiply(new t.Matrix(u)):new t.Matrix(u)),this.attr("transform",C))}}),t.extend(t.Element,{untransform:function(){return this.attr("transform",null)},matrixify:function(){return(this.attr("transform")||"").split(t.regex.transforms).slice(0,-1).map(function(u){var y=u.trim().split("(");return[y[0],y[1].split(t.regex.delimiter).map(function(C){return parseFloat(C)})]}).reduce(function(u,y){return y[0]=="matrix"?u.multiply(S(y[1])):u[y[0]].apply(u,y[1])},new t.Matrix)},toParent:function(u){if(this==u)return this;var y=this.screenCTM(),C=u.screenCTM().inverse();return this.addTo(u).untransform().transform(C.multiply(y)),this},toDoc:function(){return this.toParent(this.doc())}}),t.Transformation=t.invent({create:function(u,y){if(arguments.length>1&&typeof y!="boolean")return this.constructor.call(this,[].slice.call(arguments));if(Array.isArray(u))for(var C=0,D=this.arguments.length;C<D;++C)this[this.arguments[C]]=u[C];else if(u&&ne(u)==="object")for(C=0,D=this.arguments.length;C<D;++C)this[this.arguments[C]]=u[this.arguments[C]];this.inversed=!1,y===!0&&(this.inversed=!0)}}),t.Translate=t.invent({parent:t.Matrix,inherit:t.Transformation,create:function(u,y){this.constructor.apply(this,[].slice.call(arguments))},extend:{arguments:["transformedX","transformedY"],method:"translate"}}),t.extend(t.Element,{style:function(u,y){if(arguments.length==0)return this.node.style.cssText||"";if(arguments.length<2)if(ne(u)==="object")for(var C in u)this.style(C,u[C]);else{if(!t.regex.isCss.test(u))return this.node.style[f(u)];for(u=u.split(/\s*;\s*/).filter(function(D){return!!D}).map(function(D){return D.split(/\s*:\s*/)});y=u.pop();)this.style(y[0],y[1])}else this.node.style[f(u)]=y===null||t.regex.isBlank.test(y)?"":y;return this}}),t.Parent=t.invent({create:function(u){this.constructor.call(this,u)},inherit:t.Element,extend:{children:function(){return t.utils.map(t.utils.filterSVGElements(this.node.childNodes),function(u){return t.adopt(u)})},add:function(u,y){return y==null?this.node.appendChild(u.node):u.node!=this.node.childNodes[y]&&this.node.insertBefore(u.node,this.node.childNodes[y]),this},put:function(u,y){return this.add(u,y),u},has:function(u){return this.index(u)>=0},index:function(u){return[].slice.call(this.node.childNodes).indexOf(u.node)},get:function(u){return t.adopt(this.node.childNodes[u])},first:function(){return this.get(0)},last:function(){return this.get(this.node.childNodes.length-1)},each:function(u,y){for(var C=this.children(),D=0,L=C.length;D<L;D++)C[D]instanceof t.Element&&u.apply(C[D],[D,C]),y&&C[D]instanceof t.Container&&C[D].each(u,y);return this},removeElement:function(u){return this.node.removeChild(u.node),this},clear:function(){for(;this.node.hasChildNodes();)this.node.removeChild(this.node.lastChild);return delete this._defs,this},defs:function(){return this.doc().defs()}}}),t.extend(t.Parent,{ungroup:function(u,y){return y===0||this instanceof t.Defs||this.node==t.parser.draw||(u=u||(this instanceof t.Doc?this:this.parent(t.Parent)),y=y||1/0,this.each(function(){return this instanceof t.Defs?this:this instanceof t.Parent?this.ungroup(u,y-1):this.toParent(u)}),this.node.firstChild||this.remove()),this},flatten:function(u,y){return this.ungroup(u,y)}}),t.Container=t.invent({create:function(u){this.constructor.call(this,u)},inherit:t.Parent}),t.ViewBox=t.invent({parent:t.Container,construct:{}}),["click","dblclick","mousedown","mouseup","mouseover","mouseout","mousemove","touchstart","touchmove","touchleave","touchend","touchcancel"].forEach(function(u){t.Element.prototype[u]=function(y){return t.on(this.node,u,y),this}}),t.listeners=[],t.handlerMap=[],t.listenerId=0,t.on=function(u,y,C,D,L){var I=C.bind(D||u.instance||u),H=(t.handlerMap.indexOf(u)+1||t.handlerMap.push(u))-1,B=y.split(".")[0],U=y.split(".")[1]||"*";t.listeners[H]=t.listeners[H]||{},t.listeners[H][B]=t.listeners[H][B]||{},t.listeners[H][B][U]=t.listeners[H][B][U]||{},C._svgjsListenerId||(C._svgjsListenerId=++t.listenerId),t.listeners[H][B][U][C._svgjsListenerId]=I,u.addEventListener(B,I,L||{passive:!1})},t.off=function(u,y,C){var D=t.handlerMap.indexOf(u),L=y&&y.split(".")[0],I=y&&y.split(".")[1],H="";if(D!=-1)if(C){if(typeof C=="function"&&(C=C._svgjsListenerId),!C)return;t.listeners[D][L]&&t.listeners[D][L][I||"*"]&&(u.removeEventListener(L,t.listeners[D][L][I||"*"][C],!1),delete t.listeners[D][L][I||"*"][C])}else if(I&&L){if(t.listeners[D][L]&&t.listeners[D][L][I]){for(var B in t.listeners[D][L][I])t.off(u,[L,I].join("."),B);delete t.listeners[D][L][I]}}else if(I)for(var U in t.listeners[D])for(var H in t.listeners[D][U])I===H&&t.off(u,[U,I].join("."));else if(L){if(t.listeners[D][L]){for(var H in t.listeners[D][L])t.off(u,[L,H].join("."));delete t.listeners[D][L]}}else{for(var U in t.listeners[D])t.off(u,U);delete t.listeners[D],delete t.handlerMap[D]}},t.extend(t.Element,{on:function(u,y,C,D){return t.on(this.node,u,y,C,D),this},off:function(u,y){return t.off(this.node,u,y),this},fire:function(u,y){return u instanceof _.Event?this.node.dispatchEvent(u):this.node.dispatchEvent(u=new t.CustomEvent(u,{detail:y,cancelable:!0})),this._event=u,this},event:function(){return this._event}}),t.Defs=t.invent({create:"defs",inherit:t.Container}),t.G=t.invent({create:"g",inherit:t.Container,extend:{x:function(u){return u==null?this.transform("x"):this.transform({x:u-this.x()},!0)}},construct:{group:function(){return this.put(new t.G)}}}),t.Doc=t.invent({create:function(u){u&&((u=typeof u=="string"?e.getElementById(u):u).nodeName=="svg"?this.constructor.call(this,u):(this.constructor.call(this,t.create("svg")),u.appendChild(this.node),this.size("100%","100%")),this.namespace().defs())},inherit:t.Container,extend:{namespace:function(){return this.attr({xmlns:t.ns,version:"1.1"}).attr("xmlns:xlink",t.xlink,t.xmlns).attr("xmlns:svgjs",t.svgjs,t.xmlns)},defs:function(){var u;return this._defs||((u=this.node.getElementsByTagName("defs")[0])?this._defs=t.adopt(u):this._defs=new t.Defs,this.node.appendChild(this._defs.node)),this._defs},parent:function(){return this.node.parentNode&&this.node.parentNode.nodeName!="#document"?this.node.parentNode:null},remove:function(){return this.parent()&&this.parent().removeChild(this.node),this},clear:function(){for(;this.node.hasChildNodes();)this.node.removeChild(this.node.lastChild);return delete this._defs,t.parser.draw&&!t.parser.draw.parentNode&&this.node.appendChild(t.parser.draw),this},clone:function(u){this.writeDataToDom();var y=this.node,C=A(y.cloneNode(!0));return u?(u.node||u).appendChild(C.node):y.parentNode.insertBefore(C.node,y.nextSibling),C}}}),t.extend(t.Element,{}),t.Gradient=t.invent({create:function(u){this.constructor.call(this,t.create(u+"Gradient")),this.type=u},inherit:t.Container,extend:{at:function(u,y,C){return this.put(new t.Stop).update(u,y,C)},update:function(u){return this.clear(),typeof u=="function"&&u.call(this,this),this},fill:function(){return"url(#"+this.id()+")"},toString:function(){return this.fill()},attr:function(u,y,C){return u=="transform"&&(u="gradientTransform"),t.Container.prototype.attr.call(this,u,y,C)}},construct:{gradient:function(u,y){return this.defs().gradient(u,y)}}}),t.extend(t.Gradient,t.FX,{from:function(u,y){return(this._target||this).type=="radial"?this.attr({fx:new t.Number(u),fy:new t.Number(y)}):this.attr({x1:new t.Number(u),y1:new t.Number(y)})},to:function(u,y){return(this._target||this).type=="radial"?this.attr({cx:new t.Number(u),cy:new t.Number(y)}):this.attr({x2:new t.Number(u),y2:new t.Number(y)})}}),t.extend(t.Defs,{gradient:function(u,y){return this.put(new t.Gradient(u)).update(y)}}),t.Stop=t.invent({create:"stop",inherit:t.Element,extend:{update:function(u){return(typeof u=="number"||u instanceof t.Number)&&(u={offset:arguments[0],color:arguments[1],opacity:arguments[2]}),u.opacity!=null&&this.attr("stop-opacity",u.opacity),u.color!=null&&this.attr("stop-color",u.color),u.offset!=null&&this.attr("offset",new t.Number(u.offset)),this}}}),t.Pattern=t.invent({create:"pattern",inherit:t.Container,extend:{fill:function(){return"url(#"+this.id()+")"},update:function(u){return this.clear(),typeof u=="function"&&u.call(this,this),this},toString:function(){return this.fill()},attr:function(u,y,C){return u=="transform"&&(u="patternTransform"),t.Container.prototype.attr.call(this,u,y,C)}},construct:{pattern:function(u,y,C){return this.defs().pattern(u,y,C)}}}),t.extend(t.Defs,{pattern:function(u,y,C){return this.put(new t.Pattern).update(C).attr({x:0,y:0,width:u,height:y,patternUnits:"userSpaceOnUse"})}}),t.Shape=t.invent({create:function(u){this.constructor.call(this,u)},inherit:t.Element}),t.Symbol=t.invent({create:"symbol",inherit:t.Container,construct:{symbol:function(){return this.put(new t.Symbol)}}}),t.Use=t.invent({create:"use",inherit:t.Shape,extend:{element:function(u,y){return this.attr("href",(y||"")+"#"+u,t.xlink)}},construct:{use:function(u,y){return this.put(new t.Use).element(u,y)}}}),t.Rect=t.invent({create:"rect",inherit:t.Shape,construct:{rect:function(u,y){return this.put(new t.Rect).size(u,y)}}}),t.Circle=t.invent({create:"circle",inherit:t.Shape,construct:{circle:function(u){return this.put(new t.Circle).rx(new t.Number(u).divide(2)).move(0,0)}}}),t.extend(t.Circle,t.FX,{rx:function(u){return this.attr("r",u)},ry:function(u){return this.rx(u)}}),t.Ellipse=t.invent({create:"ellipse",inherit:t.Shape,construct:{ellipse:function(u,y){return this.put(new t.Ellipse).size(u,y).move(0,0)}}}),t.extend(t.Ellipse,t.Rect,t.FX,{rx:function(u){return this.attr("rx",u)},ry:function(u){return this.attr("ry",u)}}),t.extend(t.Circle,t.Ellipse,{x:function(u){return u==null?this.cx()-this.rx():this.cx(u+this.rx())},y:function(u){return u==null?this.cy()-this.ry():this.cy(u+this.ry())},cx:function(u){return u==null?this.attr("cx"):this.attr("cx",u)},cy:function(u){return u==null?this.attr("cy"):this.attr("cy",u)},width:function(u){return u==null?2*this.rx():this.rx(new t.Number(u).divide(2))},height:function(u){return u==null?2*this.ry():this.ry(new t.Number(u).divide(2))},size:function(u,y){var C=x(this,u,y);return this.rx(new t.Number(C.width).divide(2)).ry(new t.Number(C.height).divide(2))}}),t.Line=t.invent({create:"line",inherit:t.Shape,extend:{array:function(){return new t.PointArray([[this.attr("x1"),this.attr("y1")],[this.attr("x2"),this.attr("y2")]])},plot:function(u,y,C,D){return u==null?this.array():(u=y!==void 0?{x1:u,y1:y,x2:C,y2:D}:new t.PointArray(u).toLine(),this.attr(u))},move:function(u,y){return this.attr(this.array().move(u,y).toLine())},size:function(u,y){var C=x(this,u,y);return this.attr(this.array().size(C.width,C.height).toLine())}},construct:{line:function(u,y,C,D){return t.Line.prototype.plot.apply(this.put(new t.Line),u!=null?[u,y,C,D]:[0,0,0,0])}}}),t.Polyline=t.invent({create:"polyline",inherit:t.Shape,construct:{polyline:function(u){return this.put(new t.Polyline).plot(u||new t.PointArray)}}}),t.Polygon=t.invent({create:"polygon",inherit:t.Shape,construct:{polygon:function(u){return this.put(new t.Polygon).plot(u||new t.PointArray)}}}),t.extend(t.Polyline,t.Polygon,{array:function(){return this._array||(this._array=new t.PointArray(this.attr("points")))},plot:function(u){return u==null?this.array():this.clear().attr("points",typeof u=="string"?u:this._array=new t.PointArray(u))},clear:function(){return delete this._array,this},move:function(u,y){return this.attr("points",this.array().move(u,y))},size:function(u,y){var C=x(this,u,y);return this.attr("points",this.array().size(C.width,C.height))}}),t.extend(t.Line,t.Polyline,t.Polygon,{morphArray:t.PointArray,x:function(u){return u==null?this.bbox().x:this.move(u,this.bbox().y)},y:function(u){return u==null?this.bbox().y:this.move(this.bbox().x,u)},width:function(u){var y=this.bbox();return u==null?y.width:this.size(u,y.height)},height:function(u){var y=this.bbox();return u==null?y.height:this.size(y.width,u)}}),t.Path=t.invent({create:"path",inherit:t.Shape,extend:{morphArray:t.PathArray,array:function(){return this._array||(this._array=new t.PathArray(this.attr("d")))},plot:function(u){return u==null?this.array():this.clear().attr("d",typeof u=="string"?u:this._array=new t.PathArray(u))},clear:function(){return delete this._array,this}},construct:{path:function(u){return this.put(new t.Path).plot(u||new t.PathArray)}}}),t.Image=t.invent({create:"image",inherit:t.Shape,extend:{load:function(u){if(!u)return this;var y=this,C=new _.Image;return t.on(C,"load",function(){t.off(C);var D=y.parent(t.Pattern);D!==null&&(y.width()==0&&y.height()==0&&y.size(C.width,C.height),D&&D.width()==0&&D.height()==0&&D.size(y.width(),y.height()),typeof y._loaded=="function"&&y._loaded.call(y,{width:C.width,height:C.height,ratio:C.width/C.height,url:u}))}),t.on(C,"error",function(D){t.off(C),typeof y._error=="function"&&y._error.call(y,D)}),this.attr("href",C.src=this.src=u,t.xlink)},loaded:function(u){return this._loaded=u,this},error:function(u){return this._error=u,this}},construct:{image:function(u,y,C){return this.put(new t.Image).load(u).size(y||0,C||y||0)}}}),t.Text=t.invent({create:function(){this.constructor.call(this,t.create("text")),this.dom.leading=new t.Number(1.3),this._rebuild=!0,this._build=!1,this.attr("font-family",t.defaults.attrs["font-family"])},inherit:t.Shape,extend:{x:function(u){return u==null?this.attr("x"):this.attr("x",u)},text:function(u){if(u===void 0){u="";for(var y=this.node.childNodes,C=0,D=y.length;C<D;++C)C!=0&&y[C].nodeType!=3&&t.adopt(y[C]).dom.newLined==1&&(u+=`
`),u+=y[C].textContent;return u}if(this.clear().build(!0),typeof u=="function")u.call(this,this);else{C=0;for(var L=(u=u.split(`
`)).length;C<L;C++)this.tspan(u[C]).newLine()}return this.build(!1).rebuild()},size:function(u){return this.attr("font-size",u).rebuild()},leading:function(u){return u==null?this.dom.leading:(this.dom.leading=new t.Number(u),this.rebuild())},lines:function(){var u=(this.textPath&&this.textPath()||this).node,y=t.utils.map(t.utils.filterSVGElements(u.childNodes),function(C){return t.adopt(C)});return new t.Set(y)},rebuild:function(u){if(typeof u=="boolean"&&(this._rebuild=u),this._rebuild){var y=this,C=0,D=this.dom.leading*new t.Number(this.attr("font-size"));this.lines().each(function(){this.dom.newLined&&(y.textPath()||this.attr("x",y.attr("x")),this.text()==`
`?C+=D:(this.attr("dy",D+C),C=0))}),this.fire("rebuild")}return this},build:function(u){return this._build=!!u,this},setData:function(u){return this.dom=u,this.dom.leading=new t.Number(u.leading||1.3),this}},construct:{text:function(u){return this.put(new t.Text).text(u)},plain:function(u){return this.put(new t.Text).plain(u)}}}),t.Tspan=t.invent({create:"tspan",inherit:t.Shape,extend:{text:function(u){return u==null?this.node.textContent+(this.dom.newLined?`
`:""):(typeof u=="function"?u.call(this,this):this.plain(u),this)},dx:function(u){return this.attr("dx",u)},dy:function(u){return this.attr("dy",u)},newLine:function(){var u=this.parent(t.Text);return this.dom.newLined=!0,this.dy(u.dom.leading*u.attr("font-size")).attr("x",u.x())}}}),t.extend(t.Text,t.Tspan,{plain:function(u){return this._build===!1&&this.clear(),this.node.appendChild(e.createTextNode(u)),this},tspan:function(u){var y=(this.textPath&&this.textPath()||this).node,C=new t.Tspan;return this._build===!1&&this.clear(),y.appendChild(C.node),C.text(u)},clear:function(){for(var u=(this.textPath&&this.textPath()||this).node;u.hasChildNodes();)u.removeChild(u.lastChild);return this},length:function(){return this.node.getComputedTextLength()}}),t.TextPath=t.invent({create:"textPath",inherit:t.Parent,parent:t.Text,construct:{morphArray:t.PathArray,array:function(){var u=this.track();return u?u.array():null},plot:function(u){var y=this.track(),C=null;return y&&(C=y.plot(u)),u==null?C:this},track:function(){var u=this.textPath();if(u)return u.reference("href")},textPath:function(){if(this.node.firstChild&&this.node.firstChild.nodeName=="textPath")return t.adopt(this.node.firstChild)}}}),t.Nested=t.invent({create:function(){this.constructor.call(this,t.create("svg")),this.style("overflow","visible")},inherit:t.Container,construct:{nested:function(){return this.put(new t.Nested)}}});var c={stroke:["color","width","opacity","linecap","linejoin","miterlimit","dasharray","dashoffset"],fill:["color","opacity","rule"],prefix:function(u,y){return y=="color"?u:u+"-"+y}};function d(u,y,C,D){return C+D.replace(t.regex.dots," .")}function f(u){return u.toLowerCase().replace(/-(.)/g,function(y,C){return C.toUpperCase()})}function m(u){return u.charAt(0).toUpperCase()+u.slice(1)}function p(u){var y=u.toString(16);return y.length==1?"0"+y:y}function x(u,y,C){if(y==null||C==null){var D=u.bbox();y==null?y=D.width/D.height*C:C==null&&(C=D.height/D.width*y)}return{width:y,height:C}}function w(u,y,C){return{x:y*u.a+C*u.c+0,y:y*u.b+C*u.d+0}}function S(u){return{a:u[0],b:u[1],c:u[2],d:u[3],e:u[4],f:u[5]}}function A(u){for(var y=u.childNodes.length-1;y>=0;y--)u.childNodes[y]instanceof _.SVGElement&&A(u.childNodes[y]);return t.adopt(u).id(t.eid(u.nodeName))}function E(u){return Math.abs(u)>1e-37?u:0}["fill","stroke"].forEach(function(u){var y={};y[u]=function(C){if(C===void 0)return this;if(typeof C=="string"||t.Color.isRgb(C)||C&&typeof C.fill=="function")this.attr(u,C);else for(var D=c[u].length-1;D>=0;D--)C[c[u][D]]!=null&&this.attr(c.prefix(u,c[u][D]),C[c[u][D]]);return this},t.extend(t.Element,t.FX,y)}),t.extend(t.Element,t.FX,{translate:function(u,y){return this.transform({x:u,y})},matrix:function(u){return this.attr("transform",new t.Matrix(arguments.length==6?[].slice.call(arguments):u))},opacity:function(u){return this.attr("opacity",u)},dx:function(u){return this.x(new t.Number(u).plus(this instanceof t.FX?0:this.x()),!0)},dy:function(u){return this.y(new t.Number(u).plus(this instanceof t.FX?0:this.y()),!0)}}),t.extend(t.Path,{length:function(){return this.node.getTotalLength()},pointAt:function(u){return this.node.getPointAtLength(u)}}),t.Set=t.invent({create:function(u){Array.isArray(u)?this.members=u:this.clear()},extend:{add:function(){for(var u=[].slice.call(arguments),y=0,C=u.length;y<C;y++)this.members.push(u[y]);return this},remove:function(u){var y=this.index(u);return y>-1&&this.members.splice(y,1),this},each:function(u){for(var y=0,C=this.members.length;y<C;y++)u.apply(this.members[y],[y,this.members]);return this},clear:function(){return this.members=[],this},length:function(){return this.members.length},has:function(u){return this.index(u)>=0},index:function(u){return this.members.indexOf(u)},get:function(u){return this.members[u]},first:function(){return this.get(0)},last:function(){return this.get(this.members.length-1)},valueOf:function(){return this.members}},construct:{set:function(u){return new t.Set(u)}}}),t.FX.Set=t.invent({create:function(u){this.set=u}}),t.Set.inherit=function(){var u=[];for(var y in t.Shape.prototype)typeof t.Shape.prototype[y]=="function"&&typeof t.Set.prototype[y]!="function"&&u.push(y);for(var y in u.forEach(function(D){t.Set.prototype[D]=function(){for(var L=0,I=this.members.length;L<I;L++)this.members[L]&&typeof this.members[L][D]=="function"&&this.members[L][D].apply(this.members[L],arguments);return D=="animate"?this.fx||(this.fx=new t.FX.Set(this)):this}}),u=[],t.FX.prototype)typeof t.FX.prototype[y]=="function"&&typeof t.FX.Set.prototype[y]!="function"&&u.push(y);u.forEach(function(C){t.FX.Set.prototype[C]=function(){for(var D=0,L=this.set.members.length;D<L;D++)this.set.members[D].fx[C].apply(this.set.members[D].fx,arguments);return this}})},t.extend(t.Element,{}),t.extend(t.Element,{remember:function(u,y){if(ne(arguments[0])==="object")for(var C in u)this.remember(C,u[C]);else{if(arguments.length==1)return this.memory()[u];this.memory()[u]=y}return this},forget:function(){if(arguments.length==0)this._memory={};else for(var u=arguments.length-1;u>=0;u--)delete this.memory()[arguments[u]];return this},memory:function(){return this._memory||(this._memory={})}}),t.get=function(u){var y=e.getElementById(function(C){var D=(C||"").toString().match(t.regex.reference);if(D)return D[1]}(u)||u);return t.adopt(y)},t.select=function(u,y){return new t.Set(t.utils.map((y||e).querySelectorAll(u),function(C){return t.adopt(C)}))},t.extend(t.Parent,{select:function(u){return t.select(u,this.node)}});var M="abcdef".split("");if(typeof _.CustomEvent!="function"){var P=function(u,y){y=y||{bubbles:!1,cancelable:!1,detail:void 0};var C=e.createEvent("CustomEvent");return C.initCustomEvent(u,y.bubbles,y.cancelable,y.detail),C};P.prototype=_.Event.prototype,t.CustomEvent=P}else t.CustomEvent=_.CustomEvent;return t},ne(s)==="object"?n.exports=bt.document?qi(bt,bt.document):function(_){return qi(_,_.document)}:bt.SVG=qi(bt,bt.document),(function(){SVG.Filter=SVG.invent({create:"filter",inherit:SVG.Parent,extend:{source:"SourceGraphic",sourceAlpha:"SourceAlpha",background:"BackgroundImage",backgroundAlpha:"BackgroundAlpha",fill:"FillPaint",stroke:"StrokePaint",autoSetIn:!0,put:function(o,c){return this.add(o,c),!o.attr("in")&&this.autoSetIn&&o.attr("in",this.source),o.attr("result")||o.attr("result",o),o},blend:function(o,c,d){return this.put(new SVG.BlendEffect(o,c,d))},colorMatrix:function(o,c){return this.put(new SVG.ColorMatrixEffect(o,c))},convolveMatrix:function(o){return this.put(new SVG.ConvolveMatrixEffect(o))},componentTransfer:function(o){return this.put(new SVG.ComponentTransferEffect(o))},composite:function(o,c,d){return this.put(new SVG.CompositeEffect(o,c,d))},flood:function(o,c){return this.put(new SVG.FloodEffect(o,c))},offset:function(o,c){return this.put(new SVG.OffsetEffect(o,c))},image:function(o){return this.put(new SVG.ImageEffect(o))},merge:function(){var o=[void 0];for(var c in arguments)o.push(arguments[c]);return this.put(new(SVG.MergeEffect.bind.apply(SVG.MergeEffect,o)))},gaussianBlur:function(o,c){return this.put(new SVG.GaussianBlurEffect(o,c))},morphology:function(o,c){return this.put(new SVG.MorphologyEffect(o,c))},diffuseLighting:function(o,c,d){return this.put(new SVG.DiffuseLightingEffect(o,c,d))},displacementMap:function(o,c,d,f,m){return this.put(new SVG.DisplacementMapEffect(o,c,d,f,m))},specularLighting:function(o,c,d,f){return this.put(new SVG.SpecularLightingEffect(o,c,d,f))},tile:function(){return this.put(new SVG.TileEffect)},turbulence:function(o,c,d,f,m){return this.put(new SVG.TurbulenceEffect(o,c,d,f,m))},toString:function(){return"url(#"+this.attr("id")+")"}}}),SVG.extend(SVG.Defs,{filter:function(o){var c=this.put(new SVG.Filter);return typeof o=="function"&&o.call(c,c),c}}),SVG.extend(SVG.Container,{filter:function(o){return this.defs().filter(o)}}),SVG.extend(SVG.Element,SVG.G,SVG.Nested,{filter:function(o){return this.filterer=o instanceof SVG.Element?o:this.doc().filter(o),this.doc()&&this.filterer.doc()!==this.doc()&&this.doc().defs().add(this.filterer),this.attr("filter",this.filterer),this.filterer},unfilter:function(o){return this.filterer&&o===!0&&this.filterer.remove(),delete this.filterer,this.attr("filter",null)}}),SVG.Effect=SVG.invent({create:function(){this.constructor.call(this)},inherit:SVG.Element,extend:{in:function(o){return o==null?this.parent()&&this.parent().select('[result="'+this.attr("in")+'"]').get(0)||this.attr("in"):this.attr("in",o)},result:function(o){return o==null?this.attr("result"):this.attr("result",o)},toString:function(){return this.result()}}}),SVG.ParentEffect=SVG.invent({create:function(){this.constructor.call(this)},inherit:SVG.Parent,extend:{in:function(o){return o==null?this.parent()&&this.parent().select('[result="'+this.attr("in")+'"]').get(0)||this.attr("in"):this.attr("in",o)},result:function(o){return o==null?this.attr("result"):this.attr("result",o)},toString:function(){return this.result()}}});var _={blend:function(o,c){return this.parent()&&this.parent().blend(this,o,c)},colorMatrix:function(o,c){return this.parent()&&this.parent().colorMatrix(o,c).in(this)},convolveMatrix:function(o){return this.parent()&&this.parent().convolveMatrix(o).in(this)},componentTransfer:function(o){return this.parent()&&this.parent().componentTransfer(o).in(this)},composite:function(o,c){return this.parent()&&this.parent().composite(this,o,c)},flood:function(o,c){return this.parent()&&this.parent().flood(o,c)},offset:function(o,c){return this.parent()&&this.parent().offset(o,c).in(this)},image:function(o){return this.parent()&&this.parent().image(o)},merge:function(){return this.parent()&&this.parent().merge.apply(this.parent(),[this].concat(arguments))},gaussianBlur:function(o,c){return this.parent()&&this.parent().gaussianBlur(o,c).in(this)},morphology:function(o,c){return this.parent()&&this.parent().morphology(o,c).in(this)},diffuseLighting:function(o,c,d){return this.parent()&&this.parent().diffuseLighting(o,c,d).in(this)},displacementMap:function(o,c,d,f){return this.parent()&&this.parent().displacementMap(this,o,c,d,f)},specularLighting:function(o,c,d,f){return this.parent()&&this.parent().specularLighting(o,c,d,f).in(this)},tile:function(){return this.parent()&&this.parent().tile().in(this)},turbulence:function(o,c,d,f,m){return this.parent()&&this.parent().turbulence(o,c,d,f,m).in(this)}};SVG.extend(SVG.Effect,_),SVG.extend(SVG.ParentEffect,_),SVG.ChildEffect=SVG.invent({create:function(){this.constructor.call(this)},inherit:SVG.Element,extend:{in:function(o){this.attr("in",o)}}});var e={blend:function(o,c,d){this.attr({in:o,in2:c,mode:d||"normal"})},colorMatrix:function(o,c){o=="matrix"&&(c=r(c)),this.attr({type:o,values:c===void 0?null:c})},convolveMatrix:function(o){o=r(o),this.attr({order:Math.sqrt(o.split(" ").length),kernelMatrix:o})},composite:function(o,c,d){this.attr({in:o,in2:c,operator:d})},flood:function(o,c){this.attr("flood-color",o),c!=null&&this.attr("flood-opacity",c)},offset:function(o,c){this.attr({dx:o,dy:c})},image:function(o){this.attr("href",o,SVG.xlink)},displacementMap:function(o,c,d,f,m){this.attr({in:o,in2:c,scale:d,xChannelSelector:f,yChannelSelector:m})},gaussianBlur:function(o,c){o!=null||c!=null?this.attr("stdDeviation",function(d){if(!Array.isArray(d))return d;for(var f=0,m=d.length,p=[];f<m;f++)p.push(d[f]);return p.join(" ")}(Array.prototype.slice.call(arguments))):this.attr("stdDeviation","0 0")},morphology:function(o,c){this.attr({operator:o,radius:c})},tile:function(){},turbulence:function(o,c,d,f,m){this.attr({numOctaves:c,seed:d,stitchTiles:f,baseFrequency:o,type:m})}},t={merge:function(){var o;if(arguments[0]instanceof SVG.Set){var c=this;arguments[0].each(function(f){this instanceof SVG.MergeNode?c.put(this):(this instanceof SVG.Effect||this instanceof SVG.ParentEffect)&&c.put(new SVG.MergeNode(this))})}else{o=Array.isArray(arguments[0])?arguments[0]:arguments;for(var d=0;d<o.length;d++)o[d]instanceof SVG.MergeNode?this.put(o[d]):this.put(new SVG.MergeNode(o[d]))}},componentTransfer:function(o){if(this.rgb=new SVG.Set,["r","g","b","a"].forEach((function(d){this[d]=new SVG["Func"+d.toUpperCase()]("identity"),this.rgb.add(this[d]),this.node.appendChild(this[d].node)}).bind(this)),o)for(var c in o.rgb&&(["r","g","b"].forEach((function(d){this[d].attr(o.rgb)}).bind(this)),delete o.rgb),o)this[c].attr(o[c])},diffuseLighting:function(o,c,d){this.attr({surfaceScale:o,diffuseConstant:c,kernelUnitLength:d})},specularLighting:function(o,c,d,f){this.attr({surfaceScale:o,diffuseConstant:c,specularExponent:d,kernelUnitLength:f})}},a={distantLight:function(o,c){this.attr({azimuth:o,elevation:c})},pointLight:function(o,c,d){this.attr({x:o,y:c,z:d})},spotLight:function(o,c,d,f,m,p){this.attr({x:o,y:c,z:d,pointsAtX:f,pointsAtY:m,pointsAtZ:p})},mergeNode:function(o){this.attr("in",o)}};function r(o){return Array.isArray(o)&&(o=new SVG.Array(o)),o.toString().replace(/^\s+/,"").replace(/\s+$/,"").replace(/\s+/g," ")}function l(){var o=function(){};for(var c in typeof arguments[arguments.length-1]=="function"&&(o=arguments[arguments.length-1],Array.prototype.splice.call(arguments,arguments.length-1,1)),arguments)for(var d in arguments[c])o(arguments[c][d],d,arguments[c])}["r","g","b","a"].forEach(function(o){a["Func"+o.toUpperCase()]=function(c){switch(this.attr("type",c),c){case"table":this.attr("tableValues",arguments[1]);break;case"linear":this.attr("slope",arguments[1]),this.attr("intercept",arguments[2]);break;case"gamma":this.attr("amplitude",arguments[1]),this.attr("exponent",arguments[2]),this.attr("offset",arguments[2])}}}),l(e,function(o,c){var d=c.charAt(0).toUpperCase()+c.slice(1);SVG[d+"Effect"]=SVG.invent({create:function(){this.constructor.call(this,SVG.create("fe"+d)),o.apply(this,arguments),this.result(this.attr("id")+"Out")},inherit:SVG.Effect,extend:{}})}),l(t,function(o,c){var d=c.charAt(0).toUpperCase()+c.slice(1);SVG[d+"Effect"]=SVG.invent({create:function(){this.constructor.call(this,SVG.create("fe"+d)),o.apply(this,arguments),this.result(this.attr("id")+"Out")},inherit:SVG.ParentEffect,extend:{}})}),l(a,function(o,c){var d=c.charAt(0).toUpperCase()+c.slice(1);SVG[d]=SVG.invent({create:function(){this.constructor.call(this,SVG.create("fe"+d)),o.apply(this,arguments)},inherit:SVG.ChildEffect,extend:{}})}),SVG.extend(SVG.MergeEffect,{in:function(o){return o instanceof SVG.MergeNode?this.add(o,0):this.add(new SVG.MergeNode(o),0),this}}),SVG.extend(SVG.CompositeEffect,SVG.BlendEffect,SVG.DisplacementMapEffect,{in2:function(o){return o==null?this.parent()&&this.parent().select('[result="'+this.attr("in2")+'"]').get(0)||this.attr("in2"):this.attr("in2",o)}}),SVG.filter={sepiatone:[.343,.669,.119,0,0,.249,.626,.13,0,0,.172,.334,.111,0,0,0,0,0,1,0]}}).call(void 0),function(){function _(l,o,c,d,f,m,p){for(var x=l.slice(o,c||p),w=d.slice(f,m||p),S=0,A={pos:[0,0],start:[0,0]},E={pos:[0,0],start:[0,0]};x[S]=e.call(A,x[S]),w[S]=e.call(E,w[S]),x[S][0]!=w[S][0]||x[S][0]=="M"||x[S][0]=="A"&&(x[S][4]!=w[S][4]||x[S][5]!=w[S][5])?(Array.prototype.splice.apply(x,[S,1].concat(a.call(A,x[S]))),Array.prototype.splice.apply(w,[S,1].concat(a.call(E,w[S])))):(x[S]=t.call(A,x[S]),w[S]=t.call(E,w[S])),!(++S==x.length&&S==w.length);)S==x.length&&x.push(["C",A.pos[0],A.pos[1],A.pos[0],A.pos[1],A.pos[0],A.pos[1]]),S==w.length&&w.push(["C",E.pos[0],E.pos[1],E.pos[0],E.pos[1],E.pos[0],E.pos[1]]);return{start:x,dest:w}}function e(l){switch(l[0]){case"z":case"Z":l[0]="L",l[1]=this.start[0],l[2]=this.start[1];break;case"H":l[0]="L",l[2]=this.pos[1];break;case"V":l[0]="L",l[2]=l[1],l[1]=this.pos[0];break;case"T":l[0]="Q",l[3]=l[1],l[4]=l[2],l[1]=this.reflection[1],l[2]=this.reflection[0];break;case"S":l[0]="C",l[6]=l[4],l[5]=l[3],l[4]=l[2],l[3]=l[1],l[2]=this.reflection[1],l[1]=this.reflection[0]}return l}function t(l){var o=l.length;return this.pos=[l[o-2],l[o-1]],"SCQT".indexOf(l[0])!=-1&&(this.reflection=[2*this.pos[0]-l[o-4],2*this.pos[1]-l[o-3]]),l}function a(l){var o=[l];switch(l[0]){case"M":return this.pos=this.start=[l[1],l[2]],o;case"L":l[5]=l[3]=l[1],l[6]=l[4]=l[2],l[1]=this.pos[0],l[2]=this.pos[1];break;case"Q":l[6]=l[4],l[5]=l[3],l[4]=1*l[4]/3+2*l[2]/3,l[3]=1*l[3]/3+2*l[1]/3,l[2]=1*this.pos[1]/3+2*l[2]/3,l[1]=1*this.pos[0]/3+2*l[1]/3;break;case"A":o=function(c,d){var f,m,p,x,w,S,A,E,M,P,u,y,C,D,L,I,H,B,U,ee,K,te,le,de,fe,me,Ae=Math.abs(d[1]),xe=Math.abs(d[2]),_e=d[3]%360,Be=d[4],We=d[5],ze=d[6],kt=d[7],Fe=new SVG.Point(c),Ie=new SVG.Point(ze,kt),Ne=[];if(Ae===0||xe===0||Fe.x===Ie.x&&Fe.y===Ie.y)return[["C",Fe.x,Fe.y,Ie.x,Ie.y,Ie.x,Ie.y]];for(f=new SVG.Point((Fe.x-Ie.x)/2,(Fe.y-Ie.y)/2).transform(new SVG.Matrix().rotate(_e)),(m=f.x*f.x/(Ae*Ae)+f.y*f.y/(xe*xe))>1&&(Ae*=m=Math.sqrt(m),xe*=m),p=new SVG.Matrix().rotate(_e).scale(1/Ae,1/xe).rotate(-_e),Fe=Fe.transform(p),Ie=Ie.transform(p),x=[Ie.x-Fe.x,Ie.y-Fe.y],S=x[0]*x[0]+x[1]*x[1],w=Math.sqrt(S),x[0]/=w,x[1]/=w,A=S<4?Math.sqrt(1-S/4):0,Be===We&&(A*=-1),E=new SVG.Point((Ie.x+Fe.x)/2+A*-x[1],(Ie.y+Fe.y)/2+A*x[0]),M=new SVG.Point(Fe.x-E.x,Fe.y-E.y),P=new SVG.Point(Ie.x-E.x,Ie.y-E.y),u=Math.acos(M.x/Math.sqrt(M.x*M.x+M.y*M.y)),M.y<0&&(u*=-1),y=Math.acos(P.x/Math.sqrt(P.x*P.x+P.y*P.y)),P.y<0&&(y*=-1),We&&u>y&&(y+=2*Math.PI),!We&&u<y&&(y-=2*Math.PI),D=Math.ceil(2*Math.abs(u-y)/Math.PI),I=[],H=u,C=(y-u)/D,L=4*Math.tan(C/4)/3,K=0;K<=D;K++)U=Math.cos(H),B=Math.sin(H),ee=new SVG.Point(E.x+U,E.y+B),I[K]=[new SVG.Point(ee.x+L*B,ee.y-L*U),ee,new SVG.Point(ee.x-L*B,ee.y+L*U)],H+=C;for(I[0][0]=I[0][1].clone(),I[I.length-1][2]=I[I.length-1][1].clone(),p=new SVG.Matrix().rotate(_e).scale(Ae,xe).rotate(-_e),K=0,te=I.length;K<te;K++)I[K][0]=I[K][0].transform(p),I[K][1]=I[K][1].transform(p),I[K][2]=I[K][2].transform(p);for(K=1,te=I.length;K<te;K++)le=(ee=I[K-1][2]).x,de=ee.y,fe=(ee=I[K][0]).x,me=ee.y,ze=(ee=I[K][1]).x,kt=ee.y,Ne.push(["C",le,de,fe,me,ze,kt]);return Ne}(this.pos,l),l=o[0]}return l[0]="C",this.pos=[l[5],l[6]],this.reflection=[2*l[5]-l[3],2*l[6]-l[4]],o}function r(l,o){if(o===!1)return!1;for(var c=o,d=l.length;c<d;++c)if(l[c][0]=="M")return c;return!1}SVG.extend(SVG.PathArray,{morph:function(l){for(var o=this.value,c=this.parse(l),d=0,f=0,m=!1,p=!1;d!==!1||f!==!1;){var x;m=r(o,d!==!1&&d+1),p=r(c,f!==!1&&f+1),d===!1&&(d=(x=new SVG.PathArray(w.start).bbox()).height==0||x.width==0?o.push(o[0])-1:o.push(["M",x.x+x.width/2,x.y+x.height/2])-1),f===!1&&(f=(x=new SVG.PathArray(w.dest).bbox()).height==0||x.width==0?c.push(c[0])-1:c.push(["M",x.x+x.width/2,x.y+x.height/2])-1);var w=_(o,d,m,c,f,p);o=o.slice(0,d).concat(w.start,m===!1?[]:o.slice(m)),c=c.slice(0,f).concat(w.dest,p===!1?[]:c.slice(p)),d=m!==!1&&d+w.start.length,f=p!==!1&&f+w.dest.length}return this.value=o,this.destination=new SVG.PathArray,this.destination.value=c,this}})}(),(function(){function _(e){e.remember("_draggable",this),this.el=e}_.prototype.init=function(e,t){var a=this;this.constraint=e,this.value=t,this.el.on("mousedown.drag",function(r){a.start(r)}),this.el.on("touchstart.drag",function(r){a.start(r)})},_.prototype.transformPoint=function(e,t){var a=(e=e||window.event).changedTouches&&e.changedTouches[0]||e;return this.p.x=a.clientX-(t||0),this.p.y=a.clientY,this.p.matrixTransform(this.m)},_.prototype.getBBox=function(){var e=this.el.bbox();return this.el instanceof SVG.Nested&&(e=this.el.rbox()),(this.el instanceof SVG.G||this.el instanceof SVG.Use||this.el instanceof SVG.Nested)&&(e.x=this.el.x(),e.y=this.el.y()),e},_.prototype.start=function(e){if(e.type!="click"&&e.type!="mousedown"&&e.type!="mousemove"||(e.which||e.buttons)==1){var t=this;if(this.el.fire("beforedrag",{event:e,handler:this}),!this.el.event().defaultPrevented){e.preventDefault(),e.stopPropagation(),this.parent=this.parent||this.el.parent(SVG.Nested)||this.el.parent(SVG.Doc),this.p=this.parent.node.createSVGPoint(),this.m=this.el.node.getScreenCTM().inverse();var a,r=this.getBBox();if(this.el instanceof SVG.Text)switch(a=this.el.node.getComputedTextLength(),this.el.attr("text-anchor")){case"middle":a/=2;break;case"start":a=0}this.startPoints={point:this.transformPoint(e,a),box:r,transform:this.el.transform()},SVG.on(window,"mousemove.drag",function(l){t.drag(l)}),SVG.on(window,"touchmove.drag",function(l){t.drag(l)}),SVG.on(window,"mouseup.drag",function(l){t.end(l)}),SVG.on(window,"touchend.drag",function(l){t.end(l)}),this.el.fire("dragstart",{event:e,p:this.startPoints.point,m:this.m,handler:this})}}},_.prototype.drag=function(e){var t=this.getBBox(),a=this.transformPoint(e),r=this.startPoints.box.x+a.x-this.startPoints.point.x,l=this.startPoints.box.y+a.y-this.startPoints.point.y,o=this.constraint,c=a.x-this.startPoints.point.x,d=a.y-this.startPoints.point.y;if(this.el.fire("dragmove",{event:e,p:a,m:this.m,handler:this}),this.el.event().defaultPrevented)return a;if(typeof o=="function"){var f=o.call(this.el,r,l,this.m);typeof f=="boolean"&&(f={x:f,y:f}),f.x===!0?this.el.x(r):f.x!==!1&&this.el.x(f.x),f.y===!0?this.el.y(l):f.y!==!1&&this.el.y(f.y)}else typeof o=="object"&&(o.minX!=null&&r<o.minX?c=(r=o.minX)-this.startPoints.box.x:o.maxX!=null&&r>o.maxX-t.width&&(c=(r=o.maxX-t.width)-this.startPoints.box.x),o.minY!=null&&l<o.minY?d=(l=o.minY)-this.startPoints.box.y:o.maxY!=null&&l>o.maxY-t.height&&(d=(l=o.maxY-t.height)-this.startPoints.box.y),o.snapToGrid!=null&&(r-=r%o.snapToGrid,l-=l%o.snapToGrid,c-=c%o.snapToGrid,d-=d%o.snapToGrid),this.el instanceof SVG.G?this.el.matrix(this.startPoints.transform).transform({x:c,y:d},!0):this.el.move(r,l));return a},_.prototype.end=function(e){var t=this.drag(e);this.el.fire("dragend",{event:e,p:t,m:this.m,handler:this}),SVG.off(window,"mousemove.drag"),SVG.off(window,"touchmove.drag"),SVG.off(window,"mouseup.drag"),SVG.off(window,"touchend.drag")},SVG.extend(SVG.Element,{draggable:function(e,t){typeof e!="function"&&typeof e!="object"||(t=e,e=!0);var a=this.remember("_draggable")||new _(this);return(e=e===void 0||e)?a.init(t||{},e):(this.off("mousedown.drag"),this.off("touchstart.drag")),this}})}).call(void 0),function(){function _(e){this.el=e,e.remember("_selectHandler",this),this.pointSelection={isSelected:!1},this.rectSelection={isSelected:!1},this.pointsList={lt:[0,0],rt:["width",0],rb:["width","height"],lb:[0,"height"],t:["width",0],r:["width","height"],b:["width","height"],l:[0,"height"]},this.pointCoord=function(t,a,r){var l=typeof t!="string"?t:a[t];return r?l/2:l},this.pointCoords=function(t,a){var r=this.pointsList[t];return{x:this.pointCoord(r[0],a,t==="t"||t==="b"),y:this.pointCoord(r[1],a,t==="r"||t==="l")}}}_.prototype.init=function(e,t){var a=this.el.bbox();this.options={};var r=this.el.selectize.defaults.points;for(var l in this.el.selectize.defaults)this.options[l]=this.el.selectize.defaults[l],t[l]!==void 0&&(this.options[l]=t[l]);var o=["points","pointsExclude"];for(var l in o){var c=this.options[o[l]];typeof c=="string"?c=c.length>0?c.split(/\s*,\s*/i):[]:typeof c=="boolean"&&o[l]==="points"&&(c=c?r:[]),this.options[o[l]]=c}this.options.points=[r,this.options.points].reduce(function(d,f){return d.filter(function(m){return f.indexOf(m)>-1})}),this.options.points=[this.options.points,this.options.pointsExclude].reduce(function(d,f){return d.filter(function(m){return f.indexOf(m)<0})}),this.parent=this.el.parent(),this.nested=this.nested||this.parent.group(),this.nested.matrix(new SVG.Matrix(this.el).translate(a.x,a.y)),this.options.deepSelect&&["line","polyline","polygon"].indexOf(this.el.type)!==-1?this.selectPoints(e):this.selectRect(e),this.observe(),this.cleanup()},_.prototype.selectPoints=function(e){return this.pointSelection.isSelected=e,this.pointSelection.set||(this.pointSelection.set=this.parent.set(),this.drawPoints()),this},_.prototype.getPointArray=function(){var e=this.el.bbox();return this.el.array().valueOf().map(function(t){return[t[0]-e.x,t[1]-e.y]})},_.prototype.drawPoints=function(){for(var e=this,t=this.getPointArray(),a=0,r=t.length;a<r;++a){var l=function(c){return function(d){(d=d||window.event).preventDefault?d.preventDefault():d.returnValue=!1,d.stopPropagation();var f=d.pageX||d.touches[0].pageX,m=d.pageY||d.touches[0].pageY;e.el.fire("point",{x:f,y:m,i:c,event:d})}}(a),o=this.drawPoint(t[a][0],t[a][1]).addClass(this.options.classPoints).addClass(this.options.classPoints+"_point").on("touchstart",l).on("mousedown",l);this.pointSelection.set.add(o)}},_.prototype.drawPoint=function(e,t){var a=this.options.pointType;switch(a){case"circle":return this.drawCircle(e,t);case"rect":return this.drawRect(e,t);default:if(typeof a=="function")return a.call(this,e,t);throw new Error("Unknown "+a+" point type!")}},_.prototype.drawCircle=function(e,t){return this.nested.circle(this.options.pointSize).center(e,t)},_.prototype.drawRect=function(e,t){return this.nested.rect(this.options.pointSize,this.options.pointSize).center(e,t)},_.prototype.updatePointSelection=function(){var e=this.getPointArray();this.pointSelection.set.each(function(t){this.cx()===e[t][0]&&this.cy()===e[t][1]||this.center(e[t][0],e[t][1])})},_.prototype.updateRectSelection=function(){var e=this,t=this.el.bbox();if(this.rectSelection.set.get(0).attr({width:t.width,height:t.height}),this.options.points.length&&this.options.points.map(function(r,l){var o=e.pointCoords(r,t);e.rectSelection.set.get(l+1).center(o.x,o.y)}),this.options.rotationPoint){var a=this.rectSelection.set.length();this.rectSelection.set.get(a-1).center(t.width/2,20)}},_.prototype.selectRect=function(e){var t=this,a=this.el.bbox();function r(c){return function(d){(d=d||window.event).preventDefault?d.preventDefault():d.returnValue=!1,d.stopPropagation();var f=d.pageX||d.touches[0].pageX,m=d.pageY||d.touches[0].pageY;t.el.fire(c,{x:f,y:m,event:d})}}if(this.rectSelection.isSelected=e,this.rectSelection.set=this.rectSelection.set||this.parent.set(),this.rectSelection.set.get(0)||this.rectSelection.set.add(this.nested.rect(a.width,a.height).addClass(this.options.classRect)),this.options.points.length&&this.rectSelection.set.length()<2&&(this.options.points.map(function(c,d){var f=t.pointCoords(c,a),m=t.drawPoint(f.x,f.y).attr("class",t.options.classPoints+"_"+c).on("mousedown",r(c)).on("touchstart",r(c));t.rectSelection.set.add(m)}),this.rectSelection.set.each(function(){this.addClass(t.options.classPoints)})),this.options.rotationPoint&&(this.options.points&&!this.rectSelection.set.get(9)||!this.options.points&&!this.rectSelection.set.get(1))){var l=function(c){(c=c||window.event).preventDefault?c.preventDefault():c.returnValue=!1,c.stopPropagation();var d=c.pageX||c.touches[0].pageX,f=c.pageY||c.touches[0].pageY;t.el.fire("rot",{x:d,y:f,event:c})},o=this.drawPoint(a.width/2,20).attr("class",this.options.classPoints+"_rot").on("touchstart",l).on("mousedown",l);this.rectSelection.set.add(o)}},_.prototype.handler=function(){var e=this.el.bbox();this.nested.matrix(new SVG.Matrix(this.el).translate(e.x,e.y)),this.rectSelection.isSelected&&this.updateRectSelection(),this.pointSelection.isSelected&&this.updatePointSelection()},_.prototype.observe=function(){var e=this;if(MutationObserver)if(this.rectSelection.isSelected||this.pointSelection.isSelected)this.observerInst=this.observerInst||new MutationObserver(function(){e.handler()}),this.observerInst.observe(this.el.node,{attributes:!0});else try{this.observerInst.disconnect(),delete this.observerInst}catch{}else this.el.off("DOMAttrModified.select"),(this.rectSelection.isSelected||this.pointSelection.isSelected)&&this.el.on("DOMAttrModified.select",function(){e.handler()})},_.prototype.cleanup=function(){!this.rectSelection.isSelected&&this.rectSelection.set&&(this.rectSelection.set.each(function(){this.remove()}),this.rectSelection.set.clear(),delete this.rectSelection.set),!this.pointSelection.isSelected&&this.pointSelection.set&&(this.pointSelection.set.each(function(){this.remove()}),this.pointSelection.set.clear(),delete this.pointSelection.set),this.pointSelection.isSelected||this.rectSelection.isSelected||(this.nested.remove(),delete this.nested)},SVG.extend(SVG.Element,{selectize:function(e,t){return typeof e=="object"&&(t=e,e=!0),(this.remember("_selectHandler")||new _(this)).init(e===void 0||e,t||{}),this}}),SVG.Element.prototype.selectize.defaults={points:["lt","rt","rb","lb","t","r","b","l"],pointsExclude:[],classRect:"svg_select_boundingRect",classPoints:"svg_select_points",pointSize:7,rotationPoint:!0,deepSelect:!1,pointType:"circle"}}(),function(){(function(){function _(e){e.remember("_resizeHandler",this),this.el=e,this.parameters={},this.lastUpdateCall=null,this.p=e.doc().node.createSVGPoint()}_.prototype.transformPoint=function(e,t,a){return this.p.x=e-(this.offset.x-window.pageXOffset),this.p.y=t-(this.offset.y-window.pageYOffset),this.p.matrixTransform(a||this.m)},_.prototype._extractPosition=function(e){return{x:e.clientX!=null?e.clientX:e.touches[0].clientX,y:e.clientY!=null?e.clientY:e.touches[0].clientY}},_.prototype.init=function(e){var t=this;if(this.stop(),e!=="stop"){for(var a in this.options={},this.el.resize.defaults)this.options[a]=this.el.resize.defaults[a],e[a]!==void 0&&(this.options[a]=e[a]);this.el.on("lt.resize",function(r){t.resize(r||window.event)}),this.el.on("rt.resize",function(r){t.resize(r||window.event)}),this.el.on("rb.resize",function(r){t.resize(r||window.event)}),this.el.on("lb.resize",function(r){t.resize(r||window.event)}),this.el.on("t.resize",function(r){t.resize(r||window.event)}),this.el.on("r.resize",function(r){t.resize(r||window.event)}),this.el.on("b.resize",function(r){t.resize(r||window.event)}),this.el.on("l.resize",function(r){t.resize(r||window.event)}),this.el.on("rot.resize",function(r){t.resize(r||window.event)}),this.el.on("point.resize",function(r){t.resize(r||window.event)}),this.update()}},_.prototype.stop=function(){return this.el.off("lt.resize"),this.el.off("rt.resize"),this.el.off("rb.resize"),this.el.off("lb.resize"),this.el.off("t.resize"),this.el.off("r.resize"),this.el.off("b.resize"),this.el.off("l.resize"),this.el.off("rot.resize"),this.el.off("point.resize"),this},_.prototype.resize=function(e){var t=this;this.m=this.el.node.getScreenCTM().inverse(),this.offset={x:window.pageXOffset,y:window.pageYOffset};var a=this._extractPosition(e.detail.event);if(this.parameters={type:this.el.type,p:this.transformPoint(a.x,a.y),x:e.detail.x,y:e.detail.y,box:this.el.bbox(),rotation:this.el.transform().rotation},this.el.type==="text"&&(this.parameters.fontSize=this.el.attr()["font-size"]),e.detail.i!==void 0){var r=this.el.array().valueOf();this.parameters.i=e.detail.i,this.parameters.pointCoords=[r[e.detail.i][0],r[e.detail.i][1]]}switch(e.type){case"lt":this.calc=function(l,o){var c=this.snapToGrid(l,o);if(this.parameters.box.width-c[0]>0&&this.parameters.box.height-c[1]>0){if(this.parameters.type==="text")return this.el.move(this.parameters.box.x+c[0],this.parameters.box.y),void this.el.attr("font-size",this.parameters.fontSize-c[0]);c=this.checkAspectRatio(c),this.el.move(this.parameters.box.x+c[0],this.parameters.box.y+c[1]).size(this.parameters.box.width-c[0],this.parameters.box.height-c[1])}};break;case"rt":this.calc=function(l,o){var c=this.snapToGrid(l,o,2);if(this.parameters.box.width+c[0]>0&&this.parameters.box.height-c[1]>0){if(this.parameters.type==="text")return this.el.move(this.parameters.box.x-c[0],this.parameters.box.y),void this.el.attr("font-size",this.parameters.fontSize+c[0]);c=this.checkAspectRatio(c,!0),this.el.move(this.parameters.box.x,this.parameters.box.y+c[1]).size(this.parameters.box.width+c[0],this.parameters.box.height-c[1])}};break;case"rb":this.calc=function(l,o){var c=this.snapToGrid(l,o,0);if(this.parameters.box.width+c[0]>0&&this.parameters.box.height+c[1]>0){if(this.parameters.type==="text")return this.el.move(this.parameters.box.x-c[0],this.parameters.box.y),void this.el.attr("font-size",this.parameters.fontSize+c[0]);c=this.checkAspectRatio(c),this.el.move(this.parameters.box.x,this.parameters.box.y).size(this.parameters.box.width+c[0],this.parameters.box.height+c[1])}};break;case"lb":this.calc=function(l,o){var c=this.snapToGrid(l,o,1);if(this.parameters.box.width-c[0]>0&&this.parameters.box.height+c[1]>0){if(this.parameters.type==="text")return this.el.move(this.parameters.box.x+c[0],this.parameters.box.y),void this.el.attr("font-size",this.parameters.fontSize-c[0]);c=this.checkAspectRatio(c,!0),this.el.move(this.parameters.box.x+c[0],this.parameters.box.y).size(this.parameters.box.width-c[0],this.parameters.box.height+c[1])}};break;case"t":this.calc=function(l,o){var c=this.snapToGrid(l,o,2);if(this.parameters.box.height-c[1]>0){if(this.parameters.type==="text")return;this.el.move(this.parameters.box.x,this.parameters.box.y+c[1]).height(this.parameters.box.height-c[1])}};break;case"r":this.calc=function(l,o){var c=this.snapToGrid(l,o,0);if(this.parameters.box.width+c[0]>0){if(this.parameters.type==="text")return;this.el.move(this.parameters.box.x,this.parameters.box.y).width(this.parameters.box.width+c[0])}};break;case"b":this.calc=function(l,o){var c=this.snapToGrid(l,o,0);if(this.parameters.box.height+c[1]>0){if(this.parameters.type==="text")return;this.el.move(this.parameters.box.x,this.parameters.box.y).height(this.parameters.box.height+c[1])}};break;case"l":this.calc=function(l,o){var c=this.snapToGrid(l,o,1);if(this.parameters.box.width-c[0]>0){if(this.parameters.type==="text")return;this.el.move(this.parameters.box.x+c[0],this.parameters.box.y).width(this.parameters.box.width-c[0])}};break;case"rot":this.calc=function(l,o){var c=l+this.parameters.p.x,d=o+this.parameters.p.y,f=Math.atan2(this.parameters.p.y-this.parameters.box.y-this.parameters.box.height/2,this.parameters.p.x-this.parameters.box.x-this.parameters.box.width/2),m=Math.atan2(d-this.parameters.box.y-this.parameters.box.height/2,c-this.parameters.box.x-this.parameters.box.width/2),p=this.parameters.rotation+180*(m-f)/Math.PI+this.options.snapToAngle/2;this.el.center(this.parameters.box.cx,this.parameters.box.cy).rotate(p-p%this.options.snapToAngle,this.parameters.box.cx,this.parameters.box.cy)};break;case"point":this.calc=function(l,o){var c=this.snapToGrid(l,o,this.parameters.pointCoords[0],this.parameters.pointCoords[1]),d=this.el.array().valueOf();d[this.parameters.i][0]=this.parameters.pointCoords[0]+c[0],d[this.parameters.i][1]=this.parameters.pointCoords[1]+c[1],this.el.plot(d)}}this.el.fire("resizestart",{dx:this.parameters.x,dy:this.parameters.y,event:e}),SVG.on(window,"touchmove.resize",function(l){t.update(l||window.event)}),SVG.on(window,"touchend.resize",function(){t.done()}),SVG.on(window,"mousemove.resize",function(l){t.update(l||window.event)}),SVG.on(window,"mouseup.resize",function(){t.done()})},_.prototype.update=function(e){if(e){var t=this._extractPosition(e),a=this.transformPoint(t.x,t.y),r=a.x-this.parameters.p.x,l=a.y-this.parameters.p.y;this.lastUpdateCall=[r,l],this.calc(r,l),this.el.fire("resizing",{dx:r,dy:l,event:e})}else this.lastUpdateCall&&this.calc(this.lastUpdateCall[0],this.lastUpdateCall[1])},_.prototype.done=function(){this.lastUpdateCall=null,SVG.off(window,"mousemove.resize"),SVG.off(window,"mouseup.resize"),SVG.off(window,"touchmove.resize"),SVG.off(window,"touchend.resize"),this.el.fire("resizedone")},_.prototype.snapToGrid=function(e,t,a,r){var l;return r!==void 0?l=[(a+e)%this.options.snapToGrid,(r+t)%this.options.snapToGrid]:(a=a??3,l=[(this.parameters.box.x+e+(1&a?0:this.parameters.box.width))%this.options.snapToGrid,(this.parameters.box.y+t+(2&a?0:this.parameters.box.height))%this.options.snapToGrid]),e<0&&(l[0]-=this.options.snapToGrid),t<0&&(l[1]-=this.options.snapToGrid),e-=Math.abs(l[0])<this.options.snapToGrid/2?l[0]:l[0]-(e<0?-this.options.snapToGrid:this.options.snapToGrid),t-=Math.abs(l[1])<this.options.snapToGrid/2?l[1]:l[1]-(t<0?-this.options.snapToGrid:this.options.snapToGrid),this.constraintToBox(e,t,a,r)},_.prototype.constraintToBox=function(e,t,a,r){var l,o,c=this.options.constraint||{};return r!==void 0?(l=a,o=r):(l=this.parameters.box.x+(1&a?0:this.parameters.box.width),o=this.parameters.box.y+(2&a?0:this.parameters.box.height)),c.minX!==void 0&&l+e<c.minX&&(e=c.minX-l),c.maxX!==void 0&&l+e>c.maxX&&(e=c.maxX-l),c.minY!==void 0&&o+t<c.minY&&(t=c.minY-o),c.maxY!==void 0&&o+t>c.maxY&&(t=c.maxY-o),[e,t]},_.prototype.checkAspectRatio=function(e,t){if(!this.options.saveAspectRatio)return e;var a=e.slice(),r=this.parameters.box.width/this.parameters.box.height,l=this.parameters.box.width+e[0],o=this.parameters.box.height-e[1],c=l/o;return c<r?(a[1]=l/r-this.parameters.box.height,t&&(a[1]=-a[1])):c>r&&(a[0]=this.parameters.box.width-o*r,t&&(a[0]=-a[0])),a},SVG.extend(SVG.Element,{resize:function(e){return(this.remember("_resizeHandler")||new _(this)).init(e||{}),this}}),SVG.Element.prototype.resize.defaults={snapToAngle:.1,snapToGrid:1,constraint:{},saveAspectRatio:!1}}).call(this)}(),window.Apex===void 0&&(window.Apex={});var ln=function(){function _(e){g(this,_),this.ctx=e,this.w=e.w}return v(_,[{key:"initModules",value:function(){this.ctx.publicMethods=["updateOptions","updateSeries","appendData","appendSeries","isSeriesHidden","highlightSeries","toggleSeries","showSeries","hideSeries","setLocale","resetSeries","zoomX","toggleDataPointSelection","dataURI","exportToCSV","addXaxisAnnotation","addYaxisAnnotation","addPointAnnotation","clearAnnotations","removeAnnotation","paper","destroy"],this.ctx.eventList=["click","mousedown","mousemove","mouseleave","touchstart","touchmove","touchleave","mouseup","touchend"],this.ctx.animations=new we(this.ctx),this.ctx.axes=new ur(this.ctx),this.ctx.core=new wr(this.ctx.el,this.ctx),this.ctx.config=new vi({}),this.ctx.data=new Bi(this.ctx),this.ctx.grid=new Qa(this.ctx),this.ctx.graphics=new V(this.ctx),this.ctx.coreUtils=new se(this.ctx),this.ctx.crosshairs=new ma(this.ctx),this.ctx.events=new en(this.ctx),this.ctx.exports=new ii(this.ctx),this.ctx.fill=new dt(this.ctx),this.ctx.localization=new Gi(this.ctx),this.ctx.options=new rt,this.ctx.responsive=new tn(this.ctx),this.ctx.series=new vt(this.ctx),this.ctx.theme=new xa(this.ctx),this.ctx.formatters=new Ye(this.ctx),this.ctx.titleSubtitle=new an(this.ctx),this.ctx.legend=new rn(this.ctx),this.ctx.toolbar=new va(this.ctx),this.ctx.tooltip=new $i(this.ctx),this.ctx.dimensions=new wi(this.ctx),this.ctx.updateHelpers=new Ar(this.ctx),this.ctx.zoomPanSelection=new mr(this.ctx),this.ctx.w.globals.tooltip=new $i(this.ctx)}}]),_}(),cn=function(){function _(e){g(this,_),this.ctx=e,this.w=e.w}return v(_,[{key:"clear",value:function(e){var t=e.isUpdating;this.ctx.zoomPanSelection&&this.ctx.zoomPanSelection.destroy(),this.ctx.toolbar&&this.ctx.toolbar.destroy(),this.ctx.animations=null,this.ctx.axes=null,this.ctx.annotations=null,this.ctx.core=null,this.ctx.data=null,this.ctx.grid=null,this.ctx.series=null,this.ctx.responsive=null,this.ctx.theme=null,this.ctx.formatters=null,this.ctx.titleSubtitle=null,this.ctx.legend=null,this.ctx.dimensions=null,this.ctx.options=null,this.ctx.crosshairs=null,this.ctx.zoomPanSelection=null,this.ctx.updateHelpers=null,this.ctx.toolbar=null,this.ctx.localization=null,this.ctx.w.globals.tooltip=null,this.clearDomElements({isUpdating:t})}},{key:"killSVG",value:function(e){e.each(function(){this.removeClass("*"),this.off(),this.stop()},!0),e.ungroup(),e.clear()}},{key:"clearDomElements",value:function(e){var t=this,a=e.isUpdating,r=this.w.globals.dom.Paper.node;r.parentNode&&r.parentNode.parentNode&&!a&&(r.parentNode.parentNode.style.minHeight="unset");var l=this.w.globals.dom.baseEl;l&&this.ctx.eventList.forEach(function(c){l.removeEventListener(c,t.ctx.events.documentEvent)});var o=this.w.globals.dom;if(this.ctx.el!==null)for(;this.ctx.el.firstChild;)this.ctx.el.removeChild(this.ctx.el.firstChild);this.killSVG(o.Paper),o.Paper.remove(),o.elWrap=null,o.elGraphical=null,o.elLegendWrap=null,o.elLegendForeign=null,o.baseEl=null,o.elGridRect=null,o.elGridRectMask=null,o.elGridRectBarMask=null,o.elGridRectMarkerMask=null,o.elForecastMask=null,o.elNonForecastMask=null,o.elDefs=null}}]),_}(),wa=new WeakMap,uh=function(){function _(e,t){g(this,_),this.opts=t,this.ctx=this,this.w=new bi(t).init(),this.el=e,this.w.globals.cuid=X.randomId(),this.w.globals.chartID=this.w.config.chart.id?X.escapeString(this.w.config.chart.id):this.w.globals.cuid,new ln(this).initModules(),this.create=X.bind(this.create,this),this.windowResizeHandler=this._windowResizeHandler.bind(this),this.parentResizeHandler=this._parentResizeCallback.bind(this)}return v(_,[{key:"render",value:function(){var e=this;return new Promise(function(t,a){if(e.el!==null){Apex._chartInstances===void 0&&(Apex._chartInstances=[]),e.w.config.chart.id&&Apex._chartInstances.push({id:e.w.globals.chartID,group:e.w.config.chart.group,chart:e}),e.setLocale(e.w.config.chart.defaultLocale);var r=e.w.config.chart.events.beforeMount;typeof r=="function"&&r(e,e.w),e.events.fireEvent("beforeMount",[e,e.w]),window.addEventListener("resize",e.windowResizeHandler),function(x,w){var S=!1;if(x.nodeType!==Node.DOCUMENT_FRAGMENT_NODE){var A=x.getBoundingClientRect();x.style.display!=="none"&&A.width!==0||(S=!0)}var E=new ResizeObserver(function(M){S&&w.call(x,M),S=!0});x.nodeType===Node.DOCUMENT_FRAGMENT_NODE?Array.from(x.children).forEach(function(M){return E.observe(M)}):E.observe(x),wa.set(w,E)}(e.el.parentNode,e.parentResizeHandler);var l=e.el.getRootNode&&e.el.getRootNode(),o=X.is("ShadowRoot",l),c=e.el.ownerDocument,d=o?l.getElementById("apexcharts-css"):c.getElementById("apexcharts-css");if(!d){var f;(d=document.createElement("style")).id="apexcharts-css",d.textContent=`@keyframes opaque {
  0% {
    opacity: 0
  }

  to {
    opacity: 1
  }
}

@keyframes resizeanim {

  0%,
  to {
    opacity: 0
  }
}

.apexcharts-canvas {
  position: relative;
  direction: ltr !important;
  user-select: none
}

.apexcharts-canvas ::-webkit-scrollbar {
  -webkit-appearance: none;
  width: 6px
}

.apexcharts-canvas ::-webkit-scrollbar-thumb {
  border-radius: 4px;
  background-color: rgba(0, 0, 0, .5);
  box-shadow: 0 0 1px rgba(255, 255, 255, .5);
  -webkit-box-shadow: 0 0 1px rgba(255, 255, 255, .5)
}

.apexcharts-inner {
  position: relative
}

.apexcharts-text tspan {
  font-family: inherit
}

rect.legend-mouseover-inactive,
.legend-mouseover-inactive rect,
.legend-mouseover-inactive path,
.legend-mouseover-inactive circle,
.legend-mouseover-inactive line,
.legend-mouseover-inactive text.apexcharts-yaxis-title-text,
.legend-mouseover-inactive text.apexcharts-yaxis-label {
  transition: .15s ease all;
  opacity: .2
}

.apexcharts-legend-text {
  padding-left: 15px;
  margin-left: -15px;
}

.apexcharts-series-collapsed {
  opacity: 0
}

.apexcharts-tooltip {
  border-radius: 5px;
  box-shadow: 2px 2px 6px -4px #999;
  cursor: default;
  font-size: 14px;
  left: 62px;
  opacity: 0;
  pointer-events: none;
  position: absolute;
  top: 20px;
  display: flex;
  flex-direction: column;
  overflow: hidden;
  white-space: nowrap;
  z-index: 12;
  transition: .15s ease all
}

.apexcharts-tooltip.apexcharts-active {
  opacity: 1;
  transition: .15s ease all
}

.apexcharts-tooltip.apexcharts-theme-light {
  border: 1px solid #e3e3e3;
  background: rgba(255, 255, 255, .96)
}

.apexcharts-tooltip.apexcharts-theme-dark {
  color: #fff;
  background: rgba(30, 30, 30, .8)
}

.apexcharts-tooltip * {
  font-family: inherit
}

.apexcharts-tooltip-title {
  padding: 6px;
  font-size: 15px;
  margin-bottom: 4px
}

.apexcharts-tooltip.apexcharts-theme-light .apexcharts-tooltip-title {
  background: #eceff1;
  border-bottom: 1px solid #ddd
}

.apexcharts-tooltip.apexcharts-theme-dark .apexcharts-tooltip-title {
  background: rgba(0, 0, 0, .7);
  border-bottom: 1px solid #333
}

.apexcharts-tooltip-text-goals-value,
.apexcharts-tooltip-text-y-value,
.apexcharts-tooltip-text-z-value {
  display: inline-block;
  margin-left: 5px;
  font-weight: 600
}

.apexcharts-tooltip-text-goals-label:empty,
.apexcharts-tooltip-text-goals-value:empty,
.apexcharts-tooltip-text-y-label:empty,
.apexcharts-tooltip-text-y-value:empty,
.apexcharts-tooltip-text-z-value:empty,
.apexcharts-tooltip-title:empty {
  display: none
}

.apexcharts-tooltip-text-goals-label,
.apexcharts-tooltip-text-goals-value {
  padding: 6px 0 5px
}

.apexcharts-tooltip-goals-group,
.apexcharts-tooltip-text-goals-label,
.apexcharts-tooltip-text-goals-value {
  display: flex
}

.apexcharts-tooltip-text-goals-label:not(:empty),
.apexcharts-tooltip-text-goals-value:not(:empty) {
  margin-top: -6px
}

.apexcharts-tooltip-marker {
  width: 12px;
  height: 12px;
  position: relative;
  top: 0;
  margin-right: 10px;
  border-radius: 50%
}

.apexcharts-tooltip-series-group {
  padding: 0 10px;
  display: none;
  text-align: left;
  justify-content: left;
  align-items: center
}

.apexcharts-tooltip-series-group.apexcharts-active .apexcharts-tooltip-marker {
  opacity: 1
}

.apexcharts-tooltip-series-group.apexcharts-active,
.apexcharts-tooltip-series-group:last-child {
  padding-bottom: 4px
}

.apexcharts-tooltip-y-group {
  padding: 6px 0 5px
}

.apexcharts-custom-tooltip,
.apexcharts-tooltip-box {
  padding: 4px 8px
}

.apexcharts-tooltip-boxPlot {
  display: flex;
  flex-direction: column-reverse
}

.apexcharts-tooltip-box>div {
  margin: 4px 0
}

.apexcharts-tooltip-box span.value {
  font-weight: 700
}

.apexcharts-tooltip-rangebar {
  padding: 5px 8px
}

.apexcharts-tooltip-rangebar .category {
  font-weight: 600;
  color: #777
}

.apexcharts-tooltip-rangebar .series-name {
  font-weight: 700;
  display: block;
  margin-bottom: 5px
}

.apexcharts-xaxistooltip,
.apexcharts-yaxistooltip {
  opacity: 0;
  pointer-events: none;
  color: #373d3f;
  font-size: 13px;
  text-align: center;
  border-radius: 2px;
  position: absolute;
  z-index: 10;
  background: #eceff1;
  border: 1px solid #90a4ae
}

.apexcharts-xaxistooltip {
  padding: 9px 10px;
  transition: .15s ease all
}

.apexcharts-xaxistooltip.apexcharts-theme-dark {
  background: rgba(0, 0, 0, .7);
  border: 1px solid rgba(0, 0, 0, .5);
  color: #fff
}

.apexcharts-xaxistooltip:after,
.apexcharts-xaxistooltip:before {
  left: 50%;
  border: solid transparent;
  content: " ";
  height: 0;
  width: 0;
  position: absolute;
  pointer-events: none
}

.apexcharts-xaxistooltip:after {
  border-color: transparent;
  border-width: 6px;
  margin-left: -6px
}

.apexcharts-xaxistooltip:before {
  border-color: transparent;
  border-width: 7px;
  margin-left: -7px
}

.apexcharts-xaxistooltip-bottom:after,
.apexcharts-xaxistooltip-bottom:before {
  bottom: 100%
}

.apexcharts-xaxistooltip-top:after,
.apexcharts-xaxistooltip-top:before {
  top: 100%
}

.apexcharts-xaxistooltip-bottom:after {
  border-bottom-color: #eceff1
}

.apexcharts-xaxistooltip-bottom:before {
  border-bottom-color: #90a4ae
}

.apexcharts-xaxistooltip-bottom.apexcharts-theme-dark:after,
.apexcharts-xaxistooltip-bottom.apexcharts-theme-dark:before {
  border-bottom-color: rgba(0, 0, 0, .5)
}

.apexcharts-xaxistooltip-top:after {
  border-top-color: #eceff1
}

.apexcharts-xaxistooltip-top:before {
  border-top-color: #90a4ae
}

.apexcharts-xaxistooltip-top.apexcharts-theme-dark:after,
.apexcharts-xaxistooltip-top.apexcharts-theme-dark:before {
  border-top-color: rgba(0, 0, 0, .5)
}

.apexcharts-xaxistooltip.apexcharts-active {
  opacity: 1;
  transition: .15s ease all
}

.apexcharts-yaxistooltip {
  padding: 4px 10px
}

.apexcharts-yaxistooltip.apexcharts-theme-dark {
  background: rgba(0, 0, 0, .7);
  border: 1px solid rgba(0, 0, 0, .5);
  color: #fff
}

.apexcharts-yaxistooltip:after,
.apexcharts-yaxistooltip:before {
  top: 50%;
  border: solid transparent;
  content: " ";
  height: 0;
  width: 0;
  position: absolute;
  pointer-events: none
}

.apexcharts-yaxistooltip:after {
  border-color: transparent;
  border-width: 6px;
  margin-top: -6px
}

.apexcharts-yaxistooltip:before {
  border-color: transparent;
  border-width: 7px;
  margin-top: -7px
}

.apexcharts-yaxistooltip-left:after,
.apexcharts-yaxistooltip-left:before {
  left: 100%
}

.apexcharts-yaxistooltip-right:after,
.apexcharts-yaxistooltip-right:before {
  right: 100%
}

.apexcharts-yaxistooltip-left:after {
  border-left-color: #eceff1
}

.apexcharts-yaxistooltip-left:before {
  border-left-color: #90a4ae
}

.apexcharts-yaxistooltip-left.apexcharts-theme-dark:after,
.apexcharts-yaxistooltip-left.apexcharts-theme-dark:before {
  border-left-color: rgba(0, 0, 0, .5)
}

.apexcharts-yaxistooltip-right:after {
  border-right-color: #eceff1
}

.apexcharts-yaxistooltip-right:before {
  border-right-color: #90a4ae
}

.apexcharts-yaxistooltip-right.apexcharts-theme-dark:after,
.apexcharts-yaxistooltip-right.apexcharts-theme-dark:before {
  border-right-color: rgba(0, 0, 0, .5)
}

.apexcharts-yaxistooltip.apexcharts-active {
  opacity: 1
}

.apexcharts-yaxistooltip-hidden {
  display: none
}

.apexcharts-xcrosshairs,
.apexcharts-ycrosshairs {
  pointer-events: none;
  opacity: 0;
  transition: .15s ease all
}

.apexcharts-xcrosshairs.apexcharts-active,
.apexcharts-ycrosshairs.apexcharts-active {
  opacity: 1;
  transition: .15s ease all
}

.apexcharts-ycrosshairs-hidden {
  opacity: 0
}

.apexcharts-selection-rect {
  cursor: move
}

.svg_select_boundingRect,
.svg_select_points_rot {
  pointer-events: none;
  opacity: 0;
  visibility: hidden
}

.apexcharts-selection-rect+g .svg_select_boundingRect,
.apexcharts-selection-rect+g .svg_select_points_rot {
  opacity: 0;
  visibility: hidden
}

.apexcharts-selection-rect+g .svg_select_points_l,
.apexcharts-selection-rect+g .svg_select_points_r {
  cursor: ew-resize;
  opacity: 1;
  visibility: visible
}

.svg_select_points {
  fill: #efefef;
  stroke: #333;
  rx: 2
}

.apexcharts-svg.apexcharts-zoomable.hovering-zoom {
  cursor: crosshair
}

.apexcharts-svg.apexcharts-zoomable.hovering-pan {
  cursor: move
}

.apexcharts-menu-icon,
.apexcharts-pan-icon,
.apexcharts-reset-icon,
.apexcharts-selection-icon,
.apexcharts-toolbar-custom-icon,
.apexcharts-zoom-icon,
.apexcharts-zoomin-icon,
.apexcharts-zoomout-icon {
  cursor: pointer;
  width: 20px;
  height: 20px;
  line-height: 24px;
  color: #6e8192;
  text-align: center
}

.apexcharts-menu-icon svg,
.apexcharts-reset-icon svg,
.apexcharts-zoom-icon svg,
.apexcharts-zoomin-icon svg,
.apexcharts-zoomout-icon svg {
  fill: #6e8192
}

.apexcharts-selection-icon svg {
  fill: #444;
  transform: scale(.76)
}

.apexcharts-theme-dark .apexcharts-menu-icon svg,
.apexcharts-theme-dark .apexcharts-pan-icon svg,
.apexcharts-theme-dark .apexcharts-reset-icon svg,
.apexcharts-theme-dark .apexcharts-selection-icon svg,
.apexcharts-theme-dark .apexcharts-toolbar-custom-icon svg,
.apexcharts-theme-dark .apexcharts-zoom-icon svg,
.apexcharts-theme-dark .apexcharts-zoomin-icon svg,
.apexcharts-theme-dark .apexcharts-zoomout-icon svg {
  fill: #f3f4f5
}

.apexcharts-canvas .apexcharts-reset-zoom-icon.apexcharts-selected svg,
.apexcharts-canvas .apexcharts-selection-icon.apexcharts-selected svg,
.apexcharts-canvas .apexcharts-zoom-icon.apexcharts-selected svg {
  fill: #008ffb
}

.apexcharts-theme-light .apexcharts-menu-icon:hover svg,
.apexcharts-theme-light .apexcharts-reset-icon:hover svg,
.apexcharts-theme-light .apexcharts-selection-icon:not(.apexcharts-selected):hover svg,
.apexcharts-theme-light .apexcharts-zoom-icon:not(.apexcharts-selected):hover svg,
.apexcharts-theme-light .apexcharts-zoomin-icon:hover svg,
.apexcharts-theme-light .apexcharts-zoomout-icon:hover svg {
  fill: #333
}

.apexcharts-menu-icon,
.apexcharts-selection-icon {
  position: relative
}

.apexcharts-reset-icon {
  margin-left: 5px
}

.apexcharts-menu-icon,
.apexcharts-reset-icon,
.apexcharts-zoom-icon {
  transform: scale(.85)
}

.apexcharts-zoomin-icon,
.apexcharts-zoomout-icon {
  transform: scale(.7)
}

.apexcharts-zoomout-icon {
  margin-right: 3px
}

.apexcharts-pan-icon {
  transform: scale(.62);
  position: relative;
  left: 1px;
  top: 0
}

.apexcharts-pan-icon svg {
  fill: #fff;
  stroke: #6e8192;
  stroke-width: 2
}

.apexcharts-pan-icon.apexcharts-selected svg {
  stroke: #008ffb
}

.apexcharts-pan-icon:not(.apexcharts-selected):hover svg {
  stroke: #333
}

.apexcharts-toolbar {
  position: absolute;
  z-index: 11;
  max-width: 176px;
  text-align: right;
  border-radius: 3px;
  padding: 0 6px 2px;
  display: flex;
  justify-content: space-between;
  align-items: center
}

.apexcharts-menu {
  background: #fff;
  position: absolute;
  top: 100%;
  border: 1px solid #ddd;
  border-radius: 3px;
  padding: 3px;
  right: 10px;
  opacity: 0;
  min-width: 110px;
  transition: .15s ease all;
  pointer-events: none
}

.apexcharts-menu.apexcharts-menu-open {
  opacity: 1;
  pointer-events: all;
  transition: .15s ease all
}

.apexcharts-menu-item {
  padding: 6px 7px;
  font-size: 12px;
  cursor: pointer
}

.apexcharts-theme-light .apexcharts-menu-item:hover {
  background: #eee
}

.apexcharts-theme-dark .apexcharts-menu {
  background: rgba(0, 0, 0, .7);
  color: #fff
}

@media screen and (min-width:768px) {
  .apexcharts-canvas:hover .apexcharts-toolbar {
    opacity: 1
  }
}

.apexcharts-canvas .apexcharts-element-hidden,
.apexcharts-datalabel.apexcharts-element-hidden,
.apexcharts-hide .apexcharts-series-points {
  opacity: 0;
}

.apexcharts-hidden-element-shown {
  opacity: 1;
  transition: 0.25s ease all;
}

.apexcharts-datalabel,
.apexcharts-datalabel-label,
.apexcharts-datalabel-value,
.apexcharts-datalabels,
.apexcharts-pie-label {
  cursor: default;
  pointer-events: none
}

.apexcharts-pie-label-delay {
  opacity: 0;
  animation-name: opaque;
  animation-duration: .3s;
  animation-fill-mode: forwards;
  animation-timing-function: ease
}

.apexcharts-radialbar-label {
  cursor: pointer;
}

.apexcharts-annotation-rect,
.apexcharts-area-series .apexcharts-area,
.apexcharts-area-series .apexcharts-series-markers .apexcharts-marker.no-pointer-events,
.apexcharts-gridline,
.apexcharts-line,
.apexcharts-line-series .apexcharts-series-markers .apexcharts-marker.no-pointer-events,
.apexcharts-point-annotation-label,
.apexcharts-radar-series path:not(.apexcharts-marker),
.apexcharts-radar-series polygon,
.apexcharts-toolbar svg,
.apexcharts-tooltip .apexcharts-marker,
.apexcharts-xaxis-annotation-label,
.apexcharts-yaxis-annotation-label,
.apexcharts-zoom-rect {
  pointer-events: none
}

.apexcharts-tooltip-active .apexcharts-marker {
  transition: .15s ease all
}

.resize-triggers {
  animation: 1ms resizeanim;
  visibility: hidden;
  opacity: 0;
  height: 100%;
  width: 100%;
  overflow: hidden
}

.contract-trigger:before,
.resize-triggers,
.resize-triggers>div {
  content: " ";
  display: block;
  position: absolute;
  top: 0;
  left: 0
}

.resize-triggers>div {
  height: 100%;
  width: 100%;
  background: #eee;
  overflow: auto
}

.contract-trigger:before {
  overflow: hidden;
  width: 200%;
  height: 200%
}

.apexcharts-bar-goals-markers {
  pointer-events: none
}

.apexcharts-bar-shadows {
  pointer-events: none
}

.apexcharts-rangebar-goals-markers {
  pointer-events: none
}
`;var m=((f=e.opts.chart)===null||f===void 0?void 0:f.nonce)||e.w.config.chart.nonce;m&&d.setAttribute("nonce",m),o?l.prepend(d):c.head.appendChild(d)}var p=e.create(e.w.config.series,{});if(!p)return t(e);e.mount(p).then(function(){typeof e.w.config.chart.events.mounted=="function"&&e.w.config.chart.events.mounted(e,e.w),e.events.fireEvent("mounted",[e,e.w]),t(p)}).catch(function(x){a(x)})}else a(new Error("Element not found"))})}},{key:"create",value:function(e,t){var a=this,r=this.w;new ln(this).initModules();var l=this.w.globals;if(l.noData=!1,l.animationEnded=!1,this.responsive.checkResponsiveConfig(t),r.config.xaxis.convertedCatToNumeric&&new ti(r.config).convertCatToNumericXaxis(r.config,this.ctx),this.el===null||(this.core.setupElements(),r.config.chart.type==="treemap"&&(r.config.grid.show=!1,r.config.yaxis[0].show=!1),l.svgWidth===0))return l.animationEnded=!0,null;var o=e;e.forEach(function(x,w){x.hidden&&(o=a.legend.legendHelpers.getSeriesAfterCollapsing({realIndex:w}))});var c=se.checkComboSeries(o,r.config.chart.type);l.comboCharts=c.comboCharts,l.comboBarCount=c.comboBarCount;var d=o.every(function(x){return x.data&&x.data.length===0});(o.length===0||d&&l.collapsedSeries.length<1)&&this.series.handleNoData(),this.events.setupEventHandlers(),this.data.parseData(o),this.theme.init(),new Nt(this).setGlobalMarkerSize(),this.formatters.setLabelFormatters(),this.titleSubtitle.draw(),l.noData&&l.collapsedSeries.length!==l.series.length&&!r.config.legend.showForSingleSeries||this.legend.init(),this.series.hasAllSeriesEqualX(),l.axisCharts&&(this.core.coreCalculations(),r.config.xaxis.type!=="category"&&this.formatters.setLabelFormatters(),this.ctx.toolbar.minX=r.globals.minX,this.ctx.toolbar.maxX=r.globals.maxX),this.formatters.heatmapLabelFormatters(),new se(this).getLargestMarkerSize(),this.dimensions.plotCoords();var f=this.core.xySettings();this.grid.createGridMask();var m=this.core.plotChartType(o,f),p=new zt(this);return p.bringForward(),r.config.dataLabels.background.enabled&&p.dataLabelsBackground(),this.core.shiftGraphPosition(),{elGraph:m,xyRatios:f,dimensions:{plot:{left:r.globals.translateX,top:r.globals.translateY,width:r.globals.gridWidth,height:r.globals.gridHeight}}}}},{key:"mount",value:function(){var e=this,t=arguments.length>0&&arguments[0]!==void 0?arguments[0]:null,a=this,r=a.w;return new Promise(function(l,o){if(a.el===null)return o(new Error("Not enough data to display or target element not found"));(t===null||r.globals.allSeriesCollapsed)&&a.series.handleNoData(),a.grid=new Qa(a);var c,d,f=a.grid.drawGrid();if(a.annotations=new Hi(a),a.annotations.drawImageAnnos(),a.annotations.drawTextAnnos(),r.config.grid.position==="back"&&(f&&r.globals.dom.elGraphical.add(f.el),f!=null&&(c=f.elGridBorders)!==null&&c!==void 0&&c.node&&r.globals.dom.elGraphical.add(f.elGridBorders)),Array.isArray(t.elGraph))for(var m=0;m<t.elGraph.length;m++)r.globals.dom.elGraphical.add(t.elGraph[m]);else r.globals.dom.elGraphical.add(t.elGraph);r.config.grid.position==="front"&&(f&&r.globals.dom.elGraphical.add(f.el),f!=null&&(d=f.elGridBorders)!==null&&d!==void 0&&d.node&&r.globals.dom.elGraphical.add(f.elGridBorders)),r.config.xaxis.crosshairs.position==="front"&&a.crosshairs.drawXCrosshairs(),r.config.yaxis[0].crosshairs.position==="front"&&a.crosshairs.drawYCrosshairs(),r.config.chart.type!=="treemap"&&a.axes.drawAxis(r.config.chart.type,f);var p=new yi(e.ctx,f),x=new Wi(e.ctx,f);if(f!==null&&(p.xAxisLabelCorrections(f.xAxisTickWidth),x.setYAxisTextAlignments(),r.config.yaxis.map(function(S,A){r.globals.ignoreYAxisIndexes.indexOf(A)===-1&&x.yAxisTitleRotate(A,S.opposite)})),a.annotations.drawAxesAnnotations(),!r.globals.noData){if(r.config.tooltip.enabled&&!r.globals.noData&&a.w.globals.tooltip.drawTooltip(t.xyRatios),r.globals.axisCharts&&(r.globals.isXNumeric||r.config.xaxis.convertedCatToNumeric||r.globals.isRangeBar))(r.config.chart.zoom.enabled||r.config.chart.selection&&r.config.chart.selection.enabled||r.config.chart.pan&&r.config.chart.pan.enabled)&&a.zoomPanSelection.init({xyRatios:t.xyRatios});else{var w=r.config.chart.toolbar.tools;["zoom","zoomin","zoomout","selection","pan","reset"].forEach(function(S){w[S]=!1})}r.config.chart.toolbar.show&&!r.globals.allSeriesCollapsed&&a.toolbar.createToolbar()}r.globals.memory.methodsToExec.length>0&&r.globals.memory.methodsToExec.forEach(function(S){S.method(S.params,!1,S.context)}),r.globals.axisCharts||r.globals.noData||a.core.resizeNonAxisCharts(),l(a)})}},{key:"destroy",value:function(){var e,t;window.removeEventListener("resize",this.windowResizeHandler),this.el.parentNode,e=this.parentResizeHandler,(t=wa.get(e))&&(t.disconnect(),wa.delete(e));var a=this.w.config.chart.id;a&&Apex._chartInstances.forEach(function(r,l){r.id===X.escapeString(a)&&Apex._chartInstances.splice(l,1)}),new cn(this.ctx).clear({isUpdating:!1})}},{key:"updateOptions",value:function(e){var t=this,a=arguments.length>1&&arguments[1]!==void 0&&arguments[1],r=!(arguments.length>2&&arguments[2]!==void 0)||arguments[2],l=!(arguments.length>3&&arguments[3]!==void 0)||arguments[3],o=!(arguments.length>4&&arguments[4]!==void 0)||arguments[4],c=this.w;return c.globals.selection=void 0,e.series&&(this.series.resetSeries(!1,!0,!1),e.series.length&&e.series[0].data&&(e.series=e.series.map(function(d,f){return t.updateHelpers._extendSeries(d,f)})),this.updateHelpers.revertDefaultAxisMinMax()),e.xaxis&&(e=this.updateHelpers.forceXAxisUpdate(e)),e.yaxis&&(e=this.updateHelpers.forceYAxisUpdate(e)),c.globals.collapsedSeriesIndices.length>0&&this.series.clearPreviousPaths(),e.theme&&(e=this.theme.updateThemeOptions(e)),this.updateHelpers._updateOptions(e,a,r,l,o)}},{key:"updateSeries",value:function(){var e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:[],t=!(arguments.length>1&&arguments[1]!==void 0)||arguments[1],a=!(arguments.length>2&&arguments[2]!==void 0)||arguments[2];return this.series.resetSeries(!1),this.updateHelpers.revertDefaultAxisMinMax(),this.updateHelpers._updateSeries(e,t,a)}},{key:"appendSeries",value:function(e){var t=!(arguments.length>1&&arguments[1]!==void 0)||arguments[1],a=!(arguments.length>2&&arguments[2]!==void 0)||arguments[2],r=this.w.config.series.slice();return r.push(e),this.series.resetSeries(!1),this.updateHelpers.revertDefaultAxisMinMax(),this.updateHelpers._updateSeries(r,t,a)}},{key:"appendData",value:function(e){var t=!(arguments.length>1&&arguments[1]!==void 0)||arguments[1],a=this;a.w.globals.dataChanged=!0,a.series.getPreviousPaths();for(var r=a.w.config.series.slice(),l=0;l<r.length;l++)if(e[l]!==null&&e[l]!==void 0)for(var o=0;o<e[l].data.length;o++)r[l].data.push(e[l].data[o]);return a.w.config.series=r,t&&(a.w.globals.initialSeries=X.clone(a.w.config.series)),this.update()}},{key:"update",value:function(e){var t=this;return new Promise(function(a,r){new cn(t.ctx).clear({isUpdating:!0});var l=t.create(t.w.config.series,e);if(!l)return a(t);t.mount(l).then(function(){typeof t.w.config.chart.events.updated=="function"&&t.w.config.chart.events.updated(t,t.w),t.events.fireEvent("updated",[t,t.w]),t.w.globals.isDirty=!0,a(t)}).catch(function(o){r(o)})})}},{key:"getSyncedCharts",value:function(){var e=this.getGroupedCharts(),t=[this];return e.length&&(t=[],e.forEach(function(a){t.push(a)})),t}},{key:"getGroupedCharts",value:function(){var e=this;return Apex._chartInstances.filter(function(t){if(t.group)return!0}).map(function(t){return e.w.config.chart.group===t.group?t.chart:e})}},{key:"toggleSeries",value:function(e){return this.series.toggleSeries(e)}},{key:"highlightSeriesOnLegendHover",value:function(e,t){return this.series.toggleSeriesOnHover(e,t)}},{key:"showSeries",value:function(e){this.series.showSeries(e)}},{key:"hideSeries",value:function(e){this.series.hideSeries(e)}},{key:"highlightSeries",value:function(e){this.series.highlightSeries(e)}},{key:"isSeriesHidden",value:function(e){this.series.isSeriesHidden(e)}},{key:"resetSeries",value:function(){var e=!(arguments.length>0&&arguments[0]!==void 0)||arguments[0],t=!(arguments.length>1&&arguments[1]!==void 0)||arguments[1];this.series.resetSeries(e,t)}},{key:"addEventListener",value:function(e,t){this.events.addEventListener(e,t)}},{key:"removeEventListener",value:function(e,t){this.events.removeEventListener(e,t)}},{key:"addXaxisAnnotation",value:function(e){var t=!(arguments.length>1&&arguments[1]!==void 0)||arguments[1],a=arguments.length>2&&arguments[2]!==void 0?arguments[2]:void 0,r=this;a&&(r=a),r.annotations.addXaxisAnnotationExternal(e,t,r)}},{key:"addYaxisAnnotation",value:function(e){var t=!(arguments.length>1&&arguments[1]!==void 0)||arguments[1],a=arguments.length>2&&arguments[2]!==void 0?arguments[2]:void 0,r=this;a&&(r=a),r.annotations.addYaxisAnnotationExternal(e,t,r)}},{key:"addPointAnnotation",value:function(e){var t=!(arguments.length>1&&arguments[1]!==void 0)||arguments[1],a=arguments.length>2&&arguments[2]!==void 0?arguments[2]:void 0,r=this;a&&(r=a),r.annotations.addPointAnnotationExternal(e,t,r)}},{key:"clearAnnotations",value:function(){var e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:void 0,t=this;e&&(t=e),t.annotations.clearAnnotations(t)}},{key:"removeAnnotation",value:function(e){var t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:void 0,a=this;t&&(a=t),a.annotations.removeAnnotation(a,e)}},{key:"getChartArea",value:function(){return this.w.globals.dom.baseEl.querySelector(".apexcharts-inner")}},{key:"getSeriesTotalXRange",value:function(e,t){return this.coreUtils.getSeriesTotalsXRange(e,t)}},{key:"getHighestValueInSeries",value:function(){var e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:0;return new pa(this.ctx).getMinYMaxY(e).highestY}},{key:"getLowestValueInSeries",value:function(){var e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:0;return new pa(this.ctx).getMinYMaxY(e).lowestY}},{key:"getSeriesTotal",value:function(){return this.w.globals.seriesTotals}},{key:"toggleDataPointSelection",value:function(e,t){return this.updateHelpers.toggleDataPointSelection(e,t)}},{key:"zoomX",value:function(e,t){this.ctx.toolbar.zoomUpdateOptions(e,t)}},{key:"setLocale",value:function(e){this.localization.setCurrentLocaleValues(e)}},{key:"dataURI",value:function(e){return new ii(this.ctx).dataURI(e)}},{key:"exportToCSV",value:function(){var e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};return new ii(this.ctx).exportToCSV(e)}},{key:"paper",value:function(){return this.w.globals.dom.Paper}},{key:"_parentResizeCallback",value:function(){this.w.globals.animationEnded&&this.w.config.chart.redrawOnParentResize&&this._windowResize()}},{key:"_windowResize",value:function(){var e=this;clearTimeout(this.w.globals.resizeTimer),this.w.globals.resizeTimer=window.setTimeout(function(){e.w.globals.resized=!0,e.w.globals.dataChanged=!1,e.ctx.update()},150)}},{key:"_windowResizeHandler",value:function(){var e=this.w.config.chart.redrawOnWindowResize;typeof e=="function"&&(e=e()),e&&this._windowResize()}}],[{key:"getChartByID",value:function(e){var t=X.escapeString(e);if(Apex._chartInstances){var a=Apex._chartInstances.filter(function(r){return r.id===t})[0];return a&&a.chart}}},{key:"initOnLoad",value:function(){for(var e=document.querySelectorAll("[data-apexcharts]"),t=0;t<e.length;t++)new _(e[t],JSON.parse(e[t].getAttribute("data-options"))).render()}},{key:"exec",value:function(e,t){var a=this.getChartByID(e);if(a){a.w.globals.isExecCalled=!0;var r=null;if(a.publicMethods.indexOf(t)!==-1){for(var l=arguments.length,o=new Array(l>2?l-2:0),c=2;c<l;c++)o[c-2]=arguments[c];r=a[t].apply(a,o)}return r}}},{key:"merge",value:function(e,t){return X.extend(e,t)}}]),_}();n.exports=uh})(Es,Es.exports);var fm=Es.exports;const gm=um(fm);var Ur=["onChange","onClose","onDayCreate","onDestroy","onKeyDown","onMonthChange","onOpen","onParseConfig","onReady","onValueUpdate","onYearChange","onPreCalendarPosition"],ia={_disable:[],allowInput:!1,allowInvalidPreload:!1,altFormat:"F j, Y",altInput:!1,altInputClass:"form-control input",animate:typeof window=="object"&&window.navigator.userAgent.indexOf("MSIE")===-1,ariaDateFormat:"F j, Y",autoFillDefaultTime:!0,clickOpens:!0,closeOnSelect:!0,conjunction:", ",dateFormat:"Y-m-d",defaultHour:12,defaultMinute:0,defaultSeconds:0,disable:[],disableMobile:!1,enableSeconds:!1,enableTime:!1,errorHandler:function(n){return typeof console<"u"&&console.warn(n)},getWeek:function(n){var s=new Date(n.getTime());s.setHours(0,0,0,0),s.setDate(s.getDate()+3-(s.getDay()+6)%7);var i=new Date(s.getFullYear(),0,4);return 1+Math.round(((s.getTime()-i.getTime())/864e5-3+(i.getDay()+6)%7)/7)},hourIncrement:1,ignoredFocusElements:[],inline:!1,locale:"default",minuteIncrement:5,mode:"single",monthSelectorType:"dropdown",nextArrow:"<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M13.207 8.472l-7.854 7.854-0.707-0.707 7.146-7.146-7.146-7.148 0.707-0.707 7.854 7.854z' /></svg>",noCalendar:!1,now:new Date,onChange:[],onClose:[],onDayCreate:[],onDestroy:[],onKeyDown:[],onMonthChange:[],onOpen:[],onParseConfig:[],onReady:[],onValueUpdate:[],onYearChange:[],onPreCalendarPosition:[],plugins:[],position:"auto",positionElement:void 0,prevArrow:"<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M5.207 8.471l7.146 7.147-0.707 0.707-7.853-7.854 7.854-7.853 0.707 0.707-7.147 7.146z' /></svg>",shorthandCurrentMonth:!1,showMonths:1,static:!1,time_24hr:!1,weekNumbers:!1,wrap:!1},Ba={weekdays:{shorthand:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],longhand:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},months:{shorthand:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],longhand:["January","February","March","April","May","June","July","August","September","October","November","December"]},daysInMonth:[31,28,31,30,31,30,31,31,30,31,30,31],firstDayOfWeek:0,ordinal:function(n){var s=n%100;if(s>3&&s<21)return"th";switch(s%10){case 1:return"st";case 2:return"nd";case 3:return"rd";default:return"th"}},rangeSeparator:" to ",weekAbbreviation:"Wk",scrollTitle:"Scroll to increment",toggleTitle:"Click to toggle",amPM:["AM","PM"],yearAriaLabel:"Year",monthAriaLabel:"Month",hourAriaLabel:"Hour",minuteAriaLabel:"Minute",time_24hr:!1},wt=function(n,s){return s===void 0&&(s=2),("000"+n).slice(s*-1)},Ot=function(n){return n===!0?1:0};function nl(n,s){var i;return function(){var h=this,g=arguments;clearTimeout(i),i=setTimeout(function(){return n.apply(h,g)},s)}}var $r=function(n){return n instanceof Array?n:[n]};function gt(n,s,i){if(i===!0)return n.classList.add(s);n.classList.remove(s)}function Oe(n,s,i){var h=window.document.createElement(n);return s=s||"",i=i||"",h.className=s,i!==void 0&&(h.textContent=i),h}function Sn(n){for(;n.firstChild;)n.removeChild(n.firstChild)}function hh(n,s){if(s(n))return n;if(n.parentNode)return hh(n.parentNode,s)}function Cn(n,s){var i=Oe("div","numInputWrapper"),h=Oe("input","numInput "+n),g=Oe("span","arrowUp"),b=Oe("span","arrowDown");if(navigator.userAgent.indexOf("MSIE 9.0")===-1?h.type="number":(h.type="text",h.pattern="\\d*"),s!==void 0)for(var v in s)h.setAttribute(v,s[v]);return i.appendChild(h),i.appendChild(g),i.appendChild(b),i}function Mt(n){try{if(typeof n.composedPath=="function"){var s=n.composedPath();return s[0]}return n.target}catch{return n.target}}var qr=function(){},Zn=function(n,s,i){return i.months[s?"shorthand":"longhand"][n]},pm={D:qr,F:function(n,s,i){n.setMonth(i.months.longhand.indexOf(s))},G:function(n,s){n.setHours((n.getHours()>=12?12:0)+parseFloat(s))},H:function(n,s){n.setHours(parseFloat(s))},J:function(n,s){n.setDate(parseFloat(s))},K:function(n,s,i){n.setHours(n.getHours()%12+12*Ot(new RegExp(i.amPM[1],"i").test(s)))},M:function(n,s,i){n.setMonth(i.months.shorthand.indexOf(s))},S:function(n,s){n.setSeconds(parseFloat(s))},U:function(n,s){return new Date(parseFloat(s)*1e3)},W:function(n,s,i){var h=parseInt(s),g=new Date(n.getFullYear(),0,2+(h-1)*7,0,0,0,0);return g.setDate(g.getDate()-g.getDay()+i.firstDayOfWeek),g},Y:function(n,s){n.setFullYear(parseFloat(s))},Z:function(n,s){return new Date(s)},d:function(n,s){n.setDate(parseFloat(s))},h:function(n,s){n.setHours((n.getHours()>=12?12:0)+parseFloat(s))},i:function(n,s){n.setMinutes(parseFloat(s))},j:function(n,s){n.setDate(parseFloat(s))},l:qr,m:function(n,s){n.setMonth(parseFloat(s)-1)},n:function(n,s){n.setMonth(parseFloat(s)-1)},s:function(n,s){n.setSeconds(parseFloat(s))},u:function(n,s){return new Date(parseFloat(s))},w:qr,y:function(n,s){n.setFullYear(2e3+parseFloat(s))}},Pi={D:"",F:"",G:"(\\d\\d|\\d)",H:"(\\d\\d|\\d)",J:"(\\d\\d|\\d)\\w+",K:"",M:"",S:"(\\d\\d|\\d)",U:"(.+)",W:"(\\d\\d|\\d)",Y:"(\\d{4})",Z:"(.+)",d:"(\\d\\d|\\d)",h:"(\\d\\d|\\d)",i:"(\\d\\d|\\d)",j:"(\\d\\d|\\d)",l:"",m:"(\\d\\d|\\d)",n:"(\\d\\d|\\d)",s:"(\\d\\d|\\d)",u:"(.+)",w:"(\\d\\d|\\d)",y:"(\\d{2})"},za={Z:function(n){return n.toISOString()},D:function(n,s,i){return s.weekdays.shorthand[za.w(n,s,i)]},F:function(n,s,i){return Zn(za.n(n,s,i)-1,!1,s)},G:function(n,s,i){return wt(za.h(n,s,i))},H:function(n){return wt(n.getHours())},J:function(n,s){return s.ordinal!==void 0?n.getDate()+s.ordinal(n.getDate()):n.getDate()},K:function(n,s){return s.amPM[Ot(n.getHours()>11)]},M:function(n,s){return Zn(n.getMonth(),!0,s)},S:function(n){return wt(n.getSeconds())},U:function(n){return n.getTime()/1e3},W:function(n,s,i){return i.getWeek(n)},Y:function(n){return wt(n.getFullYear(),4)},d:function(n){return wt(n.getDate())},h:function(n){return n.getHours()%12?n.getHours()%12:12},i:function(n){return wt(n.getMinutes())},j:function(n){return n.getDate()},l:function(n,s){return s.weekdays.longhand[n.getDay()]},m:function(n){return wt(n.getMonth()+1)},n:function(n){return n.getMonth()+1},s:function(n){return n.getSeconds()},u:function(n){return n.getTime()},w:function(n){return n.getDay()},y:function(n){return String(n.getFullYear()).substring(2)}},dh=function(n){var s=n.config,i=s===void 0?ia:s,h=n.l10n,g=h===void 0?Ba:h,b=n.isMobile,v=b===void 0?!1:b;return function(k,T,O){var F=O||g;return i.formatDate!==void 0&&!v?i.formatDate(k,T,F):T.split("").map(function(z,G,ae){return za[z]&&ae[G-1]!=="\\"?za[z](k,F,i):z!=="\\"?z:""}).join("")}},Ms=function(n){var s=n.config,i=s===void 0?ia:s,h=n.l10n,g=h===void 0?Ba:h;return function(b,v,k,T){if(!(b!==0&&!b)){var O=T||g,F,z=b;if(b instanceof Date)F=new Date(b.getTime());else if(typeof b!="string"&&b.toFixed!==void 0)F=new Date(b);else if(typeof b=="string"){var G=v||(i||ia).dateFormat,ae=String(b).trim();if(ae==="today")F=new Date,k=!0;else if(i&&i.parseDate)F=i.parseDate(b,G);else if(/Z$/.test(ae)||/GMT$/.test(ae))F=new Date(b);else{for(var Y=void 0,q=[],$=0,ie=0,Q="";$<G.length;$++){var ne=G[$],pe=ne==="\\",X=G[$-1]==="\\"||pe;if(Pi[ne]&&!X){Q+=Pi[ne];var we=new RegExp(Q).exec(b);we&&(Y=!0)&&q[ne!=="Y"?"push":"unshift"]({fn:pm[ne],val:we[++ie]})}else pe||(Q+=".")}F=!i||!i.noCalendar?new Date(new Date().getFullYear(),0,1,0,0,0,0):new Date(new Date().setHours(0,0,0,0)),q.forEach(function(ce){var V=ce.fn,se=ce.val;return F=V(F,se,O)||F}),F=Y?F:void 0}}if(!(F instanceof Date&&!isNaN(F.getTime()))){i.errorHandler(new Error("Invalid date provided: "+z));return}return k===!0&&F.setHours(0,0,0,0),F}}};function Pt(n,s,i){return i===void 0&&(i=!0),i!==!1?new Date(n.getTime()).setHours(0,0,0,0)-new Date(s.getTime()).setHours(0,0,0,0):n.getTime()-s.getTime()}var mm=function(n,s,i){return n>Math.min(s,i)&&n<Math.max(s,i)},Zr=function(n,s,i){return n*3600+s*60+i},xm=function(n){var s=Math.floor(n/3600),i=(n-s*3600)/60;return[s,i,n-s*3600-i*60]},vm={DAY:864e5};function Kr(n){var s=n.defaultHour,i=n.defaultMinute,h=n.defaultSeconds;if(n.minDate!==void 0){var g=n.minDate.getHours(),b=n.minDate.getMinutes(),v=n.minDate.getSeconds();s<g&&(s=g),s===g&&i<b&&(i=b),s===g&&i===b&&h<v&&(h=n.minDate.getSeconds())}if(n.maxDate!==void 0){var k=n.maxDate.getHours(),T=n.maxDate.getMinutes();s=Math.min(s,k),s===k&&(i=Math.min(T,i)),s===k&&i===T&&(h=n.maxDate.getSeconds())}return{hours:s,minutes:i,seconds:h}}typeof Object.assign!="function"&&(Object.assign=function(n){for(var s=[],i=1;i<arguments.length;i++)s[i-1]=arguments[i];if(!n)throw TypeError("Cannot convert undefined or null to object");for(var h=function(k){k&&Object.keys(k).forEach(function(T){return n[T]=k[T]})},g=0,b=s;g<b.length;g++){var v=b[g];h(v)}return n});var ct=function(){return ct=Object.assign||function(n){for(var s,i=1,h=arguments.length;i<h;i++){s=arguments[i];for(var g in s)Object.prototype.hasOwnProperty.call(s,g)&&(n[g]=s[g])}return n},ct.apply(this,arguments)},rl=function(){for(var n=0,s=0,i=arguments.length;s<i;s++)n+=arguments[s].length;for(var h=Array(n),g=0,s=0;s<i;s++)for(var b=arguments[s],v=0,k=b.length;v<k;v++,g++)h[g]=b[v];return h},bm=300;function ym(n,s){var i={config:ct(ct({},ia),et.defaultConfig),l10n:Ba};i.parseDate=Ms({config:i.config,l10n:i.l10n}),i._handlers=[],i.pluginElements=[],i.loadedPlugins=[],i._bind=q,i._setHoursFromDate=G,i._positionCalendar=Gi,i.changeMonth=jt,i.changeYear=Nt,i.clear=ti,i.close=vi,i.onMouseOver=ii,i._createElement=Oe,i.createDay=we,i.destroy=Ja,i.isEnabled=Ut,i.jumpToDate=Q,i.updateValue=Yt,i.open=Qa,i.redraw=tn,i.set=fr,i.setDate=gr,i.toggle=sn;function h(){i.utils={getDaysInMonth:function(R,N){return R===void 0&&(R=i.currentMonth),N===void 0&&(N=i.currentYear),R===1&&(N%4===0&&N%100!==0||N%400===0)?29:i.l10n.daysInMonth[R]}}}function g(){i.element=i.input=n,i.isOpen=!1,pa(),en(),rn(),pr(),h(),i.isMobile||X(),ie(),(i.selectedDates.length||i.config.noCalendar)&&(i.config.enableTime&&G(i.config.noCalendar?i.latestSelectedDateObj:void 0),Yt(!1)),k();var R=/^((?!chrome|android).)*safari/i.test(navigator.userAgent);!i.isMobile&&R&&Gi(),He("onReady")}function b(){var R;return((R=i.calendarContainer)===null||R===void 0?void 0:R.getRootNode()).activeElement||document.activeElement}function v(R){return R.bind(i)}function k(){var R=i.config;R.weekNumbers===!1&&R.showMonths===1||R.noCalendar!==!0&&window.requestAnimationFrame(function(){if(i.calendarContainer!==void 0&&(i.calendarContainer.style.visibility="hidden",i.calendarContainer.style.display="block"),i.daysContainer!==void 0){var N=(i.days.offsetWidth+1)*R.showMonths;i.daysContainer.style.width=N+"px",i.calendarContainer.style.width=N+(i.weekWrapper!==void 0?i.weekWrapper.offsetWidth:0)+"px",i.calendarContainer.style.removeProperty("visibility"),i.calendarContainer.style.removeProperty("display")}})}function T(R){if(i.selectedDates.length===0){var N=i.config.minDate===void 0||Pt(new Date,i.config.minDate)>=0?new Date:new Date(i.config.minDate.getTime()),W=Kr(i.config);N.setHours(W.hours,W.minutes,W.seconds,N.getMilliseconds()),i.selectedDates=[N],i.latestSelectedDateObj=N}R!==void 0&&R.type!=="blur"&&ci(R);var J=i._input.value;z(),Yt(),i._input.value!==J&&i._debouncedChange()}function O(R,N){return R%12+12*Ot(N===i.l10n.amPM[1])}function F(R){switch(R%24){case 0:case 12:return 12;default:return R%12}}function z(){if(!(i.hourElement===void 0||i.minuteElement===void 0)){var R=(parseInt(i.hourElement.value.slice(-2),10)||0)%24,N=(parseInt(i.minuteElement.value,10)||0)%60,W=i.secondElement!==void 0?(parseInt(i.secondElement.value,10)||0)%60:0;i.amPM!==void 0&&(R=O(R,i.amPM.textContent));var J=i.config.minTime!==void 0||i.config.minDate&&i.minDateHasTime&&i.latestSelectedDateObj&&Pt(i.latestSelectedDateObj,i.config.minDate,!0)===0,re=i.config.maxTime!==void 0||i.config.maxDate&&i.maxDateHasTime&&i.latestSelectedDateObj&&Pt(i.latestSelectedDateObj,i.config.maxDate,!0)===0;if(i.config.maxTime!==void 0&&i.config.minTime!==void 0&&i.config.minTime>i.config.maxTime){var he=Zr(i.config.minTime.getHours(),i.config.minTime.getMinutes(),i.config.minTime.getSeconds()),Ce=Zr(i.config.maxTime.getHours(),i.config.maxTime.getMinutes(),i.config.maxTime.getSeconds()),ge=Zr(R,N,W);if(ge>Ce&&ge<he){var Me=xm(he);R=Me[0],N=Me[1],W=Me[2]}}else{if(re){var ue=i.config.maxTime!==void 0?i.config.maxTime:i.config.maxDate;R=Math.min(R,ue.getHours()),R===ue.getHours()&&(N=Math.min(N,ue.getMinutes())),N===ue.getMinutes()&&(W=Math.min(W,ue.getSeconds()))}if(J){var ve=i.config.minTime!==void 0?i.config.minTime:i.config.minDate;R=Math.max(R,ve.getHours()),R===ve.getHours()&&N<ve.getMinutes()&&(N=ve.getMinutes()),N===ve.getMinutes()&&(W=Math.max(W,ve.getSeconds()))}}ae(R,N,W)}}function G(R){var N=R||i.latestSelectedDateObj;N&&N instanceof Date&&ae(N.getHours(),N.getMinutes(),N.getSeconds())}function ae(R,N,W){i.latestSelectedDateObj!==void 0&&i.latestSelectedDateObj.setHours(R%24,N,W||0,0),!(!i.hourElement||!i.minuteElement||i.isMobile)&&(i.hourElement.value=wt(i.config.time_24hr?R:(12+R)%12+12*Ot(R%12===0)),i.minuteElement.value=wt(N),i.amPM!==void 0&&(i.amPM.textContent=i.l10n.amPM[Ot(R>=12)]),i.secondElement!==void 0&&(i.secondElement.value=wt(W)))}function Y(R){var N=Mt(R),W=parseInt(N.value)+(R.delta||0);(W/1e3>1||R.key==="Enter"&&!/[^\d]/.test(W.toString()))&&Nt(W)}function q(R,N,W,J){if(N instanceof Array)return N.forEach(function(re){return q(R,re,W,J)});if(R instanceof Array)return R.forEach(function(re){return q(re,N,W,J)});R.addEventListener(N,W,J),i._handlers.push({remove:function(){return R.removeEventListener(N,W,J)}})}function $(){He("onChange")}function ie(){if(i.config.wrap&&["open","close","toggle","clear"].forEach(function(W){Array.prototype.forEach.call(i.element.querySelectorAll("[data-"+W+"]"),function(J){return q(J,"click",i[W])})}),i.isMobile){mr();return}var R=nl(yi,50);if(i._debouncedChange=nl($,bm),i.daysContainer&&!/iPhone|iPad|iPod/i.test(navigator.userAgent)&&q(i.daysContainer,"mouseover",function(W){i.config.mode==="range"&&ii(Mt(W))}),q(i._input,"keydown",Bi),i.calendarContainer!==void 0&&q(i.calendarContainer,"keydown",Bi),!i.config.inline&&!i.config.static&&q(window,"resize",R),window.ontouchstart!==void 0?q(window.document,"touchstart",dt):q(window.document,"mousedown",dt),q(window.document,"focus",dt,{capture:!0}),i.config.clickOpens===!0&&(q(i._input,"focus",i.open),q(i._input,"click",i.open)),i.daysContainer!==void 0&&(q(i.monthNav,"click",vr),q(i.monthNav,["keyup","increment"],Y),q(i.daysContainer,"click",an)),i.timeContainer!==void 0&&i.minuteElement!==void 0&&i.hourElement!==void 0){var N=function(W){return Mt(W).select()};q(i.timeContainer,["increment"],T),q(i.timeContainer,"blur",T,{capture:!0}),q(i.timeContainer,"click",ne),q([i.hourElement,i.minuteElement],["focus","click"],N),i.secondElement!==void 0&&q(i.secondElement,"focus",function(){return i.secondElement&&i.secondElement.select()}),i.amPM!==void 0&&q(i.amPM,"click",function(W){T(W)})}i.config.allowInput&&q(i._input,"blur",vt)}function Q(R,N){var W=R!==void 0?i.parseDate(R):i.latestSelectedDateObj||(i.config.minDate&&i.config.minDate>i.now?i.config.minDate:i.config.maxDate&&i.config.maxDate<i.now?i.config.maxDate:i.now),J=i.currentYear,re=i.currentMonth;try{W!==void 0&&(i.currentYear=W.getFullYear(),i.currentMonth=W.getMonth())}catch(he){he.message="Invalid date supplied: "+W,i.config.errorHandler(he)}N&&i.currentYear!==J&&(He("onYearChange"),Ye()),N&&(i.currentYear!==J||i.currentMonth!==re)&&He("onMonthChange"),i.redraw()}function ne(R){var N=Mt(R);~N.className.indexOf("arrow")&&pe(R,N.classList.contains("arrowUp")?1:-1)}function pe(R,N,W){var J=R&&Mt(R),re=W||J&&J.parentNode&&J.parentNode.firstChild,he=ji("increment");he.delta=N,re&&re.dispatchEvent(he)}function X(){var R=window.document.createDocumentFragment();if(i.calendarContainer=Oe("div","flatpickr-calendar"),i.calendarContainer.tabIndex=-1,!i.config.noCalendar){if(R.appendChild(Dt()),i.innerContainer=Oe("div","flatpickr-innerContainer"),i.config.weekNumbers){var N=Xi(),W=N.weekWrapper,J=N.weekNumbers;i.innerContainer.appendChild(W),i.weekNumbers=J,i.weekWrapper=W}i.rContainer=Oe("div","flatpickr-rContainer"),i.rContainer.appendChild(rt()),i.daysContainer||(i.daysContainer=Oe("div","flatpickr-days"),i.daysContainer.tabIndex=-1),De(),i.rContainer.appendChild(i.daysContainer),i.innerContainer.appendChild(i.rContainer),R.appendChild(i.innerContainer)}i.config.enableTime&&R.appendChild(ei()),gt(i.calendarContainer,"rangeMode",i.config.mode==="range"),gt(i.calendarContainer,"animate",i.config.animate===!0),gt(i.calendarContainer,"multiMonth",i.config.showMonths>1),i.calendarContainer.appendChild(R);var re=i.config.appendTo!==void 0&&i.config.appendTo.nodeType!==void 0;if((i.config.inline||i.config.static)&&(i.calendarContainer.classList.add(i.config.inline?"inline":"static"),i.config.inline&&(!re&&i.element.parentNode?i.element.parentNode.insertBefore(i.calendarContainer,i._input.nextSibling):i.config.appendTo!==void 0&&i.config.appendTo.appendChild(i.calendarContainer)),i.config.static)){var he=Oe("div","flatpickr-wrapper");i.element.parentNode&&i.element.parentNode.insertBefore(he,i.element),he.appendChild(i.element),i.altInput&&he.appendChild(i.altInput),he.appendChild(i.calendarContainer)}!i.config.static&&!i.config.inline&&(i.config.appendTo!==void 0?i.config.appendTo:window.document.body).appendChild(i.calendarContainer)}function we(R,N,W,J){var re=Ut(N,!0),he=Oe("span",R,N.getDate().toString());return he.dateObj=N,he.$i=J,he.setAttribute("aria-label",i.formatDate(N,i.config.ariaDateFormat)),R.indexOf("hidden")===-1&&Pt(N,i.now)===0&&(i.todayDateElem=he,he.classList.add("today"),he.setAttribute("aria-current","date")),re?(he.tabIndex=-1,ba(N)&&(he.classList.add("selected"),i.selectedDateElem=he,i.config.mode==="range"&&(gt(he,"startRange",i.selectedDates[0]&&Pt(N,i.selectedDates[0],!0)===0),gt(he,"endRange",i.selectedDates[1]&&Pt(N,i.selectedDates[1],!0)===0),R==="nextMonthDay"&&he.classList.add("inRange")))):he.classList.add("flatpickr-disabled"),i.config.mode==="range"&&xr(N)&&!ba(N)&&he.classList.add("inRange"),i.weekNumbers&&i.config.showMonths===1&&R!=="prevMonthDay"&&J%7===6&&i.weekNumbers.insertAdjacentHTML("beforeend","<span class='flatpickr-day'>"+i.config.getWeek(N)+"</span>"),He("onDayCreate",he),he}function ce(R){R.focus(),i.config.mode==="range"&&ii(R)}function V(R){for(var N=R>0?0:i.config.showMonths-1,W=R>0?i.config.showMonths:-1,J=N;J!=W;J+=R)for(var re=i.daysContainer.children[J],he=R>0?0:re.children.length-1,Ce=R>0?re.children.length:-1,ge=he;ge!=Ce;ge+=R){var Me=re.children[ge];if(Me.className.indexOf("hidden")===-1&&Ut(Me.dateObj))return Me}}function se(R,N){for(var W=R.className.indexOf("Month")===-1?R.dateObj.getMonth():i.currentMonth,J=N>0?i.config.showMonths:-1,re=N>0?1:-1,he=W-i.currentMonth;he!=J;he+=re)for(var Ce=i.daysContainer.children[he],ge=W-i.currentMonth===he?R.$i+N:N<0?Ce.children.length-1:0,Me=Ce.children.length,ue=ge;ue>=0&&ue<Me&&ue!=(N>0?Me:-1);ue+=re){var ve=Ce.children[ue];if(ve.className.indexOf("hidden")===-1&&Ut(ve.dateObj)&&Math.abs(R.$i-ue)>=Math.abs(N))return ce(ve)}i.changeMonth(re),Le(V(re),0)}function Le(R,N){var W=b(),J=zt(W||document.body),re=R!==void 0?R:J?W:i.selectedDateElem!==void 0&&zt(i.selectedDateElem)?i.selectedDateElem:i.todayDateElem!==void 0&&zt(i.todayDateElem)?i.todayDateElem:V(N>0?1:-1);re===void 0?i._input.focus():J?se(re,N):ce(re)}function ke(R,N){for(var W=(new Date(R,N,1).getDay()-i.l10n.firstDayOfWeek+7)%7,J=i.utils.getDaysInMonth((N-1+12)%12,R),re=i.utils.getDaysInMonth(N,R),he=window.document.createDocumentFragment(),Ce=i.config.showMonths>1,ge=Ce?"prevMonthDay hidden":"prevMonthDay",Me=Ce?"nextMonthDay hidden":"nextMonthDay",ue=J+1-W,ve=0;ue<=J;ue++,ve++)he.appendChild(we("flatpickr-day "+ge,new Date(R,N-1,ue),ue,ve));for(ue=1;ue<=re;ue++,ve++)he.appendChild(we("flatpickr-day",new Date(R,N,ue),ue,ve));for(var Re=re+1;Re<=42-W&&(i.config.showMonths===1||ve%7!==0);Re++,ve++)he.appendChild(we("flatpickr-day "+Me,new Date(R,N+1,Re%re),Re,ve));var It=Oe("div","dayContainer");return It.appendChild(he),It}function De(){if(i.daysContainer!==void 0){Sn(i.daysContainer),i.weekNumbers&&Sn(i.weekNumbers);for(var R=document.createDocumentFragment(),N=0;N<i.config.showMonths;N++){var W=new Date(i.currentYear,i.currentMonth,1);W.setMonth(i.currentMonth+N),R.appendChild(ke(W.getFullYear(),W.getMonth()))}i.daysContainer.appendChild(R),i.days=i.daysContainer.firstChild,i.config.mode==="range"&&i.selectedDates.length===1&&ii()}}function Ye(){if(!(i.config.showMonths>1||i.config.monthSelectorType!=="dropdown")){var R=function(J){return i.config.minDate!==void 0&&i.currentYear===i.config.minDate.getFullYear()&&J<i.config.minDate.getMonth()?!1:!(i.config.maxDate!==void 0&&i.currentYear===i.config.maxDate.getFullYear()&&J>i.config.maxDate.getMonth())};i.monthsDropdownContainer.tabIndex=-1,i.monthsDropdownContainer.innerHTML="";for(var N=0;N<12;N++)if(R(N)){var W=Oe("option","flatpickr-monthDropdown-month");W.value=new Date(i.currentYear,N).getMonth().toString(),W.textContent=Zn(N,i.config.shorthandCurrentMonth,i.l10n),W.tabIndex=-1,i.currentMonth===N&&(W.selected=!0),i.monthsDropdownContainer.appendChild(W)}}}function Ke(){var R=Oe("div","flatpickr-month"),N=window.document.createDocumentFragment(),W;i.config.showMonths>1||i.config.monthSelectorType==="static"?W=Oe("span","cur-month"):(i.monthsDropdownContainer=Oe("select","flatpickr-monthDropdown-months"),i.monthsDropdownContainer.setAttribute("aria-label",i.l10n.monthAriaLabel),q(i.monthsDropdownContainer,"change",function(Ce){var ge=Mt(Ce),Me=parseInt(ge.value,10);i.changeMonth(Me-i.currentMonth),He("onMonthChange")}),Ye(),W=i.monthsDropdownContainer);var J=Cn("cur-year",{tabindex:"-1"}),re=J.getElementsByTagName("input")[0];re.setAttribute("aria-label",i.l10n.yearAriaLabel),i.config.minDate&&re.setAttribute("min",i.config.minDate.getFullYear().toString()),i.config.maxDate&&(re.setAttribute("max",i.config.maxDate.getFullYear().toString()),re.disabled=!!i.config.minDate&&i.config.minDate.getFullYear()===i.config.maxDate.getFullYear());var he=Oe("div","flatpickr-current-month");return he.appendChild(W),he.appendChild(J),N.appendChild(he),R.appendChild(N),{container:R,yearElement:re,monthElement:W}}function Tt(){Sn(i.monthNav),i.monthNav.appendChild(i.prevMonthNav),i.config.showMonths&&(i.yearElements=[],i.monthElements=[]);for(var R=i.config.showMonths;R--;){var N=Ke();i.yearElements.push(N.yearElement),i.monthElements.push(N.monthElement),i.monthNav.appendChild(N.container)}i.monthNav.appendChild(i.nextMonthNav)}function Dt(){return i.monthNav=Oe("div","flatpickr-months"),i.yearElements=[],i.monthElements=[],i.prevMonthNav=Oe("span","flatpickr-prev-month"),i.prevMonthNav.innerHTML=i.config.prevArrow,i.nextMonthNav=Oe("span","flatpickr-next-month"),i.nextMonthNav.innerHTML=i.config.nextArrow,Tt(),Object.defineProperty(i,"_hidePrevMonthArrow",{get:function(){return i.__hidePrevMonthArrow},set:function(R){i.__hidePrevMonthArrow!==R&&(gt(i.prevMonthNav,"flatpickr-disabled",R),i.__hidePrevMonthArrow=R)}}),Object.defineProperty(i,"_hideNextMonthArrow",{get:function(){return i.__hideNextMonthArrow},set:function(R){i.__hideNextMonthArrow!==R&&(gt(i.nextMonthNav,"flatpickr-disabled",R),i.__hideNextMonthArrow=R)}}),i.currentYearElement=i.yearElements[0],Ui(),i.monthNav}function ei(){i.calendarContainer.classList.add("hasTime"),i.config.noCalendar&&i.calendarContainer.classList.add("noCalendar");var R=Kr(i.config);i.timeContainer=Oe("div","flatpickr-time"),i.timeContainer.tabIndex=-1;var N=Oe("span","flatpickr-time-separator",":"),W=Cn("flatpickr-hour",{"aria-label":i.l10n.hourAriaLabel});i.hourElement=W.getElementsByTagName("input")[0];var J=Cn("flatpickr-minute",{"aria-label":i.l10n.minuteAriaLabel});if(i.minuteElement=J.getElementsByTagName("input")[0],i.hourElement.tabIndex=i.minuteElement.tabIndex=-1,i.hourElement.value=wt(i.latestSelectedDateObj?i.latestSelectedDateObj.getHours():i.config.time_24hr?R.hours:F(R.hours)),i.minuteElement.value=wt(i.latestSelectedDateObj?i.latestSelectedDateObj.getMinutes():R.minutes),i.hourElement.setAttribute("step",i.config.hourIncrement.toString()),i.minuteElement.setAttribute("step",i.config.minuteIncrement.toString()),i.hourElement.setAttribute("min",i.config.time_24hr?"0":"1"),i.hourElement.setAttribute("max",i.config.time_24hr?"23":"12"),i.hourElement.setAttribute("maxlength","2"),i.minuteElement.setAttribute("min","0"),i.minuteElement.setAttribute("max","59"),i.minuteElement.setAttribute("maxlength","2"),i.timeContainer.appendChild(W),i.timeContainer.appendChild(N),i.timeContainer.appendChild(J),i.config.time_24hr&&i.timeContainer.classList.add("time24hr"),i.config.enableSeconds){i.timeContainer.classList.add("hasSeconds");var re=Cn("flatpickr-second");i.secondElement=re.getElementsByTagName("input")[0],i.secondElement.value=wt(i.latestSelectedDateObj?i.latestSelectedDateObj.getSeconds():R.seconds),i.secondElement.setAttribute("step",i.minuteElement.getAttribute("step")),i.secondElement.setAttribute("min","0"),i.secondElement.setAttribute("max","59"),i.secondElement.setAttribute("maxlength","2"),i.timeContainer.appendChild(Oe("span","flatpickr-time-separator",":")),i.timeContainer.appendChild(re)}return i.config.time_24hr||(i.amPM=Oe("span","flatpickr-am-pm",i.l10n.amPM[Ot((i.latestSelectedDateObj?i.hourElement.value:i.config.defaultHour)>11)]),i.amPM.title=i.l10n.toggleTitle,i.amPM.tabIndex=-1,i.timeContainer.appendChild(i.amPM)),i.timeContainer}function rt(){i.weekdayContainer?Sn(i.weekdayContainer):i.weekdayContainer=Oe("div","flatpickr-weekdays");for(var R=i.config.showMonths;R--;){var N=Oe("div","flatpickr-weekdaycontainer");i.weekdayContainer.appendChild(N)}return Hi(),i.weekdayContainer}function Hi(){if(i.weekdayContainer){var R=i.l10n.firstDayOfWeek,N=rl(i.l10n.weekdays.shorthand);R>0&&R<N.length&&(N=rl(N.splice(R,N.length),N.splice(0,R)));for(var W=i.config.showMonths;W--;)i.weekdayContainer.children[W].innerHTML=`
      <span class='flatpickr-weekday'>
        `+N.join("</span><span class='flatpickr-weekday'>")+`
      </span>
      `}}function Xi(){i.calendarContainer.classList.add("hasWeeks");var R=Oe("div","flatpickr-weekwrapper");R.appendChild(Oe("span","flatpickr-weekday",i.l10n.weekAbbreviation));var N=Oe("div","flatpickr-weeks");return R.appendChild(N),{weekWrapper:R,weekNumbers:N}}function jt(R,N){N===void 0&&(N=!0);var W=N?R:R-i.currentMonth;W<0&&i._hidePrevMonthArrow===!0||W>0&&i._hideNextMonthArrow===!0||(i.currentMonth+=W,(i.currentMonth<0||i.currentMonth>11)&&(i.currentYear+=i.currentMonth>11?1:-1,i.currentMonth=(i.currentMonth+12)%12,He("onYearChange"),Ye()),De(),He("onMonthChange"),Ui())}function ti(R,N){if(R===void 0&&(R=!0),N===void 0&&(N=!0),i.input.value="",i.altInput!==void 0&&(i.altInput.value=""),i.mobileInput!==void 0&&(i.mobileInput.value=""),i.selectedDates=[],i.latestSelectedDateObj=void 0,N===!0&&(i.currentYear=i._initialDate.getFullYear(),i.currentMonth=i._initialDate.getMonth()),i.config.enableTime===!0){var W=Kr(i.config),J=W.hours,re=W.minutes,he=W.seconds;ae(J,re,he)}i.redraw(),R&&He("onChange")}function vi(){i.isOpen=!1,i.isMobile||(i.calendarContainer!==void 0&&i.calendarContainer.classList.remove("open"),i._input!==void 0&&i._input.classList.remove("active")),He("onClose")}function Ja(){i.config!==void 0&&He("onDestroy");for(var R=i._handlers.length;R--;)i._handlers[R].remove();if(i._handlers=[],i.mobileInput)i.mobileInput.parentNode&&i.mobileInput.parentNode.removeChild(i.mobileInput),i.mobileInput=void 0;else if(i.calendarContainer&&i.calendarContainer.parentNode)if(i.config.static&&i.calendarContainer.parentNode){var N=i.calendarContainer.parentNode;if(N.lastChild&&N.removeChild(N.lastChild),N.parentNode){for(;N.firstChild;)N.parentNode.insertBefore(N.firstChild,N);N.parentNode.removeChild(N)}}else i.calendarContainer.parentNode.removeChild(i.calendarContainer);i.altInput&&(i.input.type="text",i.altInput.parentNode&&i.altInput.parentNode.removeChild(i.altInput),delete i.altInput),i.input&&(i.input.type=i.input._type,i.input.classList.remove("flatpickr-input"),i.input.removeAttribute("readonly")),["_showTimeInput","latestSelectedDateObj","_hideNextMonthArrow","_hidePrevMonthArrow","__hideNextMonthArrow","__hidePrevMonthArrow","isMobile","isOpen","selectedDateElem","minDateHasTime","maxDateHasTime","days","daysContainer","_input","_positionElement","innerContainer","rContainer","monthNav","todayDateElem","calendarContainer","weekdayContainer","prevMonthNav","nextMonthNav","monthsDropdownContainer","currentMonthElement","currentYearElement","navigationCurrentMonth","selectedDateElem","config"].forEach(function(W){try{delete i[W]}catch{}})}function bi(R){return i.calendarContainer.contains(R)}function dt(R){if(i.isOpen&&!i.config.inline){var N=Mt(R),W=bi(N),J=N===i.input||N===i.altInput||i.element.contains(N)||R.path&&R.path.indexOf&&(~R.path.indexOf(i.input)||~R.path.indexOf(i.altInput)),re=!J&&!W&&!bi(R.relatedTarget),he=!i.config.ignoredFocusElements.some(function(Ce){return Ce.contains(N)});re&&he&&(i.config.allowInput&&i.setDate(i._input.value,!1,i.config.altInput?i.config.altFormat:i.config.dateFormat),i.timeContainer!==void 0&&i.minuteElement!==void 0&&i.hourElement!==void 0&&i.input.value!==""&&i.input.value!==void 0&&T(),i.close(),i.config&&i.config.mode==="range"&&i.selectedDates.length===1&&i.clear(!1))}}function Nt(R){if(!(!R||i.config.minDate&&R<i.config.minDate.getFullYear()||i.config.maxDate&&R>i.config.maxDate.getFullYear())){var N=R,W=i.currentYear!==N;i.currentYear=N||i.currentYear,i.config.maxDate&&i.currentYear===i.config.maxDate.getFullYear()?i.currentMonth=Math.min(i.config.maxDate.getMonth(),i.currentMonth):i.config.minDate&&i.currentYear===i.config.minDate.getFullYear()&&(i.currentMonth=Math.max(i.config.minDate.getMonth(),i.currentMonth)),W&&(i.redraw(),He("onYearChange"),Ye())}}function Ut(R,N){var W;N===void 0&&(N=!0);var J=i.parseDate(R,void 0,N);if(i.config.minDate&&J&&Pt(J,i.config.minDate,N!==void 0?N:!i.minDateHasTime)<0||i.config.maxDate&&J&&Pt(J,i.config.maxDate,N!==void 0?N:!i.maxDateHasTime)>0)return!1;if(!i.config.enable&&i.config.disable.length===0)return!0;if(J===void 0)return!1;for(var re=!!i.config.enable,he=(W=i.config.enable)!==null&&W!==void 0?W:i.config.disable,Ce=0,ge=void 0;Ce<he.length;Ce++){if(ge=he[Ce],typeof ge=="function"&&ge(J))return re;if(ge instanceof Date&&J!==void 0&&ge.getTime()===J.getTime())return re;if(typeof ge=="string"){var Me=i.parseDate(ge,void 0,!0);return Me&&Me.getTime()===J.getTime()?re:!re}else if(typeof ge=="object"&&J!==void 0&&ge.from&&ge.to&&J.getTime()>=ge.from.getTime()&&J.getTime()<=ge.to.getTime())return re}return!re}function zt(R){return i.daysContainer!==void 0?R.className.indexOf("hidden")===-1&&R.className.indexOf("flatpickr-disabled")===-1&&i.daysContainer.contains(R):!1}function vt(R){var N=R.target===i._input,W=i._input.value.trimEnd()!==$i();N&&W&&!(R.relatedTarget&&bi(R.relatedTarget))&&i.setDate(i._input.value,!0,R.target===i.altInput?i.config.altFormat:i.config.dateFormat)}function Bi(R){var N=Mt(R),W=i.config.wrap?n.contains(N):N===i._input,J=i.config.allowInput,re=i.isOpen&&(!J||!W),he=i.config.inline&&W&&!J;if(R.keyCode===13&&W){if(J)return i.setDate(i._input.value,!0,N===i.altInput?i.config.altFormat:i.config.dateFormat),i.close(),N.blur();i.open()}else if(bi(N)||re||he){var Ce=!!i.timeContainer&&i.timeContainer.contains(N);switch(R.keyCode){case 13:Ce?(R.preventDefault(),T(),xa()):an(R);break;case 27:R.preventDefault(),xa();break;case 8:case 46:W&&!i.config.allowInput&&(R.preventDefault(),i.clear());break;case 37:case 39:if(!Ce&&!W){R.preventDefault();var ge=b();if(i.daysContainer!==void 0&&(J===!1||ge&&zt(ge))){var Me=R.keyCode===39?1:-1;R.ctrlKey?(R.stopPropagation(),jt(Me),Le(V(1),0)):Le(void 0,Me)}}else i.hourElement&&i.hourElement.focus();break;case 38:case 40:R.preventDefault();var ue=R.keyCode===40?1:-1;i.daysContainer&&N.$i!==void 0||N===i.input||N===i.altInput?R.ctrlKey?(R.stopPropagation(),Nt(i.currentYear-ue),Le(V(1),0)):Ce||Le(void 0,ue*7):N===i.currentYearElement?Nt(i.currentYear-ue):i.config.enableTime&&(!Ce&&i.hourElement&&i.hourElement.focus(),T(R),i._debouncedChange());break;case 9:if(Ce){var ve=[i.hourElement,i.minuteElement,i.secondElement,i.amPM].concat(i.pluginElements).filter(function(it){return it}),Re=ve.indexOf(N);if(Re!==-1){var It=ve[Re+(R.shiftKey?-1:1)];R.preventDefault(),(It||i._input).focus()}}else!i.config.noCalendar&&i.daysContainer&&i.daysContainer.contains(N)&&R.shiftKey&&(R.preventDefault(),i._input.focus());break}}if(i.amPM!==void 0&&N===i.amPM)switch(R.key){case i.l10n.amPM[0].charAt(0):case i.l10n.amPM[0].charAt(0).toLowerCase():i.amPM.textContent=i.l10n.amPM[0],z(),Yt();break;case i.l10n.amPM[1].charAt(0):case i.l10n.amPM[1].charAt(0).toLowerCase():i.amPM.textContent=i.l10n.amPM[1],z(),Yt();break}(W||bi(N))&&He("onKeyDown",R)}function ii(R,N){if(N===void 0&&(N="flatpickr-day"),!(i.selectedDates.length!==1||R&&(!R.classList.contains(N)||R.classList.contains("flatpickr-disabled")))){for(var W=R?R.dateObj.getTime():i.days.firstElementChild.dateObj.getTime(),J=i.parseDate(i.selectedDates[0],void 0,!0).getTime(),re=Math.min(W,i.selectedDates[0].getTime()),he=Math.max(W,i.selectedDates[0].getTime()),Ce=!1,ge=0,Me=0,ue=re;ue<he;ue+=vm.DAY)Ut(new Date(ue),!0)||(Ce=Ce||ue>re&&ue<he,ue<J&&(!ge||ue>ge)?ge=ue:ue>J&&(!Me||ue<Me)&&(Me=ue));var ve=Array.from(i.rContainer.querySelectorAll("*:nth-child(-n+"+i.config.showMonths+") > ."+N));ve.forEach(function(Re){var It=Re.dateObj,it=It.getTime(),ai=ge>0&&it<ge||Me>0&&it>Me;if(ai){Re.classList.add("notAllowed"),["inRange","startRange","endRange"].forEach(function(bt){Re.classList.remove(bt)});return}else if(Ce&&!ai)return;["startRange","inRange","endRange","notAllowed"].forEach(function(bt){Re.classList.remove(bt)}),R!==void 0&&(R.classList.add(W<=i.selectedDates[0].getTime()?"startRange":"endRange"),J<W&&it===J?Re.classList.add("startRange"):J>W&&it===J&&Re.classList.add("endRange"),it>=ge&&(Me===0||it<=Me)&&mm(it,J,W)&&Re.classList.add("inRange"))})}}function yi(){i.isOpen&&!i.config.static&&!i.config.inline&&Gi()}function Qa(R,N){if(N===void 0&&(N=i._positionElement),i.isMobile===!0){if(R){R.preventDefault();var W=Mt(R);W&&W.blur()}i.mobileInput!==void 0&&(i.mobileInput.focus(),i.mobileInput.click()),He("onOpen");return}else if(i._input.disabled||i.config.inline)return;var J=i.isOpen;i.isOpen=!0,J||(i.calendarContainer.classList.add("open"),i._input.classList.add("active"),He("onOpen"),Gi(N)),i.config.enableTime===!0&&i.config.noCalendar===!0&&i.config.allowInput===!1&&(R===void 0||!i.timeContainer.contains(R.relatedTarget))&&setTimeout(function(){return i.hourElement.select()},50)}function ga(R){return function(N){var W=i.config["_"+R+"Date"]=i.parseDate(N,i.config.dateFormat),J=i.config["_"+(R==="min"?"max":"min")+"Date"];W!==void 0&&(i[R==="min"?"minDateHasTime":"maxDateHasTime"]=W.getHours()>0||W.getMinutes()>0||W.getSeconds()>0),i.selectedDates&&(i.selectedDates=i.selectedDates.filter(function(re){return Ut(re)}),!i.selectedDates.length&&R==="min"&&G(W),Yt()),i.daysContainer&&(tn(),W!==void 0?i.currentYearElement[R]=W.getFullYear().toString():i.currentYearElement.removeAttribute(R),i.currentYearElement.disabled=!!J&&W!==void 0&&J.getFullYear()===W.getFullYear())}}function pa(){var R=["wrap","weekNumbers","allowInput","allowInvalidPreload","clickOpens","time_24hr","enableTime","noCalendar","altInput","shorthandCurrentMonth","inline","static","enableSeconds","disableMobile"],N=ct(ct({},JSON.parse(JSON.stringify(n.dataset||{}))),s),W={};i.config.parseDate=N.parseDate,i.config.formatDate=N.formatDate,Object.defineProperty(i.config,"enable",{get:function(){return i.config._enable},set:function(ve){i.config._enable=wi(ve)}}),Object.defineProperty(i.config,"disable",{get:function(){return i.config._disable},set:function(ve){i.config._disable=wi(ve)}});var J=N.mode==="time";if(!N.dateFormat&&(N.enableTime||J)){var re=et.defaultConfig.dateFormat||ia.dateFormat;W.dateFormat=N.noCalendar||J?"H:i"+(N.enableSeconds?":S":""):re+" H:i"+(N.enableSeconds?":S":"")}if(N.altInput&&(N.enableTime||J)&&!N.altFormat){var he=et.defaultConfig.altFormat||ia.altFormat;W.altFormat=N.noCalendar||J?"h:i"+(N.enableSeconds?":S K":" K"):he+(" h:i"+(N.enableSeconds?":S":"")+" K")}Object.defineProperty(i.config,"minDate",{get:function(){return i.config._minDate},set:ga("min")}),Object.defineProperty(i.config,"maxDate",{get:function(){return i.config._maxDate},set:ga("max")});var Ce=function(ve){return function(Re){i.config[ve==="min"?"_minTime":"_maxTime"]=i.parseDate(Re,"H:i:S")}};Object.defineProperty(i.config,"minTime",{get:function(){return i.config._minTime},set:Ce("min")}),Object.defineProperty(i.config,"maxTime",{get:function(){return i.config._maxTime},set:Ce("max")}),N.mode==="time"&&(i.config.noCalendar=!0,i.config.enableTime=!0),Object.assign(i.config,W,N);for(var ge=0;ge<R.length;ge++)i.config[R[ge]]=i.config[R[ge]]===!0||i.config[R[ge]]==="true";Ur.filter(function(ve){return i.config[ve]!==void 0}).forEach(function(ve){i.config[ve]=$r(i.config[ve]||[]).map(v)}),i.isMobile=!i.config.disableMobile&&!i.config.inline&&i.config.mode==="single"&&!i.config.disable.length&&!i.config.enable&&!i.config.weekNumbers&&/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);for(var ge=0;ge<i.config.plugins.length;ge++){var Me=i.config.plugins[ge](i)||{};for(var ue in Me)Ur.indexOf(ue)>-1?i.config[ue]=$r(Me[ue]).map(v).concat(i.config[ue]):typeof N[ue]>"u"&&(i.config[ue]=Me[ue])}N.altInputClass||(i.config.altInputClass=Wi().className+" "+i.config.altInputClass),He("onParseConfig")}function Wi(){return i.config.wrap?n.querySelector("[data-input]"):n}function en(){typeof i.config.locale!="object"&&typeof et.l10ns[i.config.locale]>"u"&&i.config.errorHandler(new Error("flatpickr: invalid locale "+i.config.locale)),i.l10n=ct(ct({},et.l10ns.default),typeof i.config.locale=="object"?i.config.locale:i.config.locale!=="default"?et.l10ns[i.config.locale]:void 0),Pi.D="("+i.l10n.weekdays.shorthand.join("|")+")",Pi.l="("+i.l10n.weekdays.longhand.join("|")+")",Pi.M="("+i.l10n.months.shorthand.join("|")+")",Pi.F="("+i.l10n.months.longhand.join("|")+")",Pi.K="("+i.l10n.amPM[0]+"|"+i.l10n.amPM[1]+"|"+i.l10n.amPM[0].toLowerCase()+"|"+i.l10n.amPM[1].toLowerCase()+")";var R=ct(ct({},s),JSON.parse(JSON.stringify(n.dataset||{})));R.time_24hr===void 0&&et.defaultConfig.time_24hr===void 0&&(i.config.time_24hr=i.l10n.time_24hr),i.formatDate=dh(i),i.parseDate=Ms({config:i.config,l10n:i.l10n})}function Gi(R){if(typeof i.config.position=="function")return void i.config.position(i,R);if(i.calendarContainer!==void 0){He("onPreCalendarPosition");var N=R||i._positionElement,W=Array.prototype.reduce.call(i.calendarContainer.children,function(cn,wa){return cn+wa.offsetHeight},0),J=i.calendarContainer.offsetWidth,re=i.config.position.split(" "),he=re[0],Ce=re.length>1?re[1]:null,ge=N.getBoundingClientRect(),Me=window.innerHeight-ge.bottom,ue=he==="above"||he!=="below"&&Me<W&&ge.top>W,ve=window.pageYOffset+ge.top+(ue?-W-2:N.offsetHeight+2);if(gt(i.calendarContainer,"arrowTop",!ue),gt(i.calendarContainer,"arrowBottom",ue),!i.config.inline){var Re=window.pageXOffset+ge.left,It=!1,it=!1;Ce==="center"?(Re-=(J-ge.width)/2,It=!0):Ce==="right"&&(Re-=J-ge.width,it=!0),gt(i.calendarContainer,"arrowLeft",!It&&!it),gt(i.calendarContainer,"arrowCenter",It),gt(i.calendarContainer,"arrowRight",it);var ai=window.document.body.offsetWidth-(window.pageXOffset+ge.right),bt=Re+J>window.document.body.offsetWidth,qi=ai+J>window.document.body.offsetWidth;if(gt(i.calendarContainer,"rightMost",bt),!i.config.static)if(i.calendarContainer.style.top=ve+"px",!bt)i.calendarContainer.style.left=Re+"px",i.calendarContainer.style.right="auto";else if(!qi)i.calendarContainer.style.left="auto",i.calendarContainer.style.right=ai+"px";else{var ya=ur();if(ya===void 0)return;var on=window.document.body.offsetWidth,br=Math.max(0,on/2-J/2),yr=".flatpickr-calendar.centerMost:before",wr=".flatpickr-calendar.centerMost:after",Ar=ya.cssRules.length,ln="{left:"+ge.left+"px;right:auto;}";gt(i.calendarContainer,"rightMost",!1),gt(i.calendarContainer,"centerMost",!0),ya.insertRule(yr+","+wr+ln,Ar),i.calendarContainer.style.left=br+"px",i.calendarContainer.style.right="auto"}}}}function ur(){for(var R=null,N=0;N<document.styleSheets.length;N++){var W=document.styleSheets[N];if(W.cssRules){try{W.cssRules}catch{continue}R=W;break}}return R??ma()}function ma(){var R=document.createElement("style");return document.head.appendChild(R),R.sheet}function tn(){i.config.noCalendar||i.isMobile||(Ye(),Ui(),De())}function xa(){i._input.focus(),window.navigator.userAgent.indexOf("MSIE")!==-1||navigator.msMaxTouchPoints!==void 0?setTimeout(i.close,0):i.close()}function an(R){R.preventDefault(),R.stopPropagation();var N=function(ve){return ve.classList&&ve.classList.contains("flatpickr-day")&&!ve.classList.contains("flatpickr-disabled")&&!ve.classList.contains("notAllowed")},W=hh(Mt(R),N);if(W!==void 0){var J=W,re=i.latestSelectedDateObj=new Date(J.dateObj.getTime()),he=(re.getMonth()<i.currentMonth||re.getMonth()>i.currentMonth+i.config.showMonths-1)&&i.config.mode!=="range";if(i.selectedDateElem=J,i.config.mode==="single")i.selectedDates=[re];else if(i.config.mode==="multiple"){var Ce=ba(re);Ce?i.selectedDates.splice(parseInt(Ce),1):i.selectedDates.push(re)}else i.config.mode==="range"&&(i.selectedDates.length===2&&i.clear(!1,!1),i.latestSelectedDateObj=re,i.selectedDates.push(re),Pt(re,i.selectedDates[0],!0)!==0&&i.selectedDates.sort(function(ve,Re){return ve.getTime()-Re.getTime()}));if(z(),he){var ge=i.currentYear!==re.getFullYear();i.currentYear=re.getFullYear(),i.currentMonth=re.getMonth(),ge&&(He("onYearChange"),Ye()),He("onMonthChange")}if(Ui(),De(),Yt(),!he&&i.config.mode!=="range"&&i.config.showMonths===1?ce(J):i.selectedDateElem!==void 0&&i.hourElement===void 0&&i.selectedDateElem&&i.selectedDateElem.focus(),i.hourElement!==void 0&&i.hourElement!==void 0&&i.hourElement.focus(),i.config.closeOnSelect){var Me=i.config.mode==="single"&&!i.config.enableTime,ue=i.config.mode==="range"&&i.selectedDates.length===2&&!i.config.enableTime;(Me||ue)&&xa()}$()}}var Vi={locale:[en,Hi],showMonths:[Tt,k,rt],minDate:[Q],maxDate:[Q],positionElement:[va],clickOpens:[function(){i.config.clickOpens===!0?(q(i._input,"focus",i.open),q(i._input,"click",i.open)):(i._input.removeEventListener("focus",i.open),i._input.removeEventListener("click",i.open))}]};function fr(R,N){if(R!==null&&typeof R=="object"){Object.assign(i.config,R);for(var W in R)Vi[W]!==void 0&&Vi[W].forEach(function(J){return J()})}else i.config[R]=N,Vi[R]!==void 0?Vi[R].forEach(function(J){return J()}):Ur.indexOf(R)>-1&&(i.config[R]=$r(N));i.redraw(),Yt(!0)}function nn(R,N){var W=[];if(R instanceof Array)W=R.map(function(J){return i.parseDate(J,N)});else if(R instanceof Date||typeof R=="number")W=[i.parseDate(R,N)];else if(typeof R=="string")switch(i.config.mode){case"single":case"time":W=[i.parseDate(R,N)];break;case"multiple":W=R.split(i.config.conjunction).map(function(J){return i.parseDate(J,N)});break;case"range":W=R.split(i.l10n.rangeSeparator).map(function(J){return i.parseDate(J,N)});break}else i.config.errorHandler(new Error("Invalid date supplied: "+JSON.stringify(R)));i.selectedDates=i.config.allowInvalidPreload?W:W.filter(function(J){return J instanceof Date&&Ut(J,!1)}),i.config.mode==="range"&&i.selectedDates.sort(function(J,re){return J.getTime()-re.getTime()})}function gr(R,N,W){if(N===void 0&&(N=!1),W===void 0&&(W=i.config.dateFormat),R!==0&&!R||R instanceof Array&&R.length===0)return i.clear(N);nn(R,W),i.latestSelectedDateObj=i.selectedDates[i.selectedDates.length-1],i.redraw(),Q(void 0,N),G(),i.selectedDates.length===0&&i.clear(!1),Yt(N),N&&He("onChange")}function wi(R){return R.slice().map(function(N){return typeof N=="string"||typeof N=="number"||N instanceof Date?i.parseDate(N,void 0,!0):N&&typeof N=="object"&&N.from&&N.to?{from:i.parseDate(N.from,void 0),to:i.parseDate(N.to,void 0)}:N}).filter(function(N){return N})}function pr(){i.selectedDates=[],i.now=i.parseDate(i.config.now)||new Date;var R=i.config.defaultDate||((i.input.nodeName==="INPUT"||i.input.nodeName==="TEXTAREA")&&i.input.placeholder&&i.input.value===i.input.placeholder?null:i.input.value);R&&nn(R,i.config.dateFormat),i._initialDate=i.selectedDates.length>0?i.selectedDates[0]:i.config.minDate&&i.config.minDate.getTime()>i.now.getTime()?i.config.minDate:i.config.maxDate&&i.config.maxDate.getTime()<i.now.getTime()?i.config.maxDate:i.now,i.currentYear=i._initialDate.getFullYear(),i.currentMonth=i._initialDate.getMonth(),i.selectedDates.length>0&&(i.latestSelectedDateObj=i.selectedDates[0]),i.config.minTime!==void 0&&(i.config.minTime=i.parseDate(i.config.minTime,"H:i")),i.config.maxTime!==void 0&&(i.config.maxTime=i.parseDate(i.config.maxTime,"H:i")),i.minDateHasTime=!!i.config.minDate&&(i.config.minDate.getHours()>0||i.config.minDate.getMinutes()>0||i.config.minDate.getSeconds()>0),i.maxDateHasTime=!!i.config.maxDate&&(i.config.maxDate.getHours()>0||i.config.maxDate.getMinutes()>0||i.config.maxDate.getSeconds()>0)}function rn(){if(i.input=Wi(),!i.input){i.config.errorHandler(new Error("Invalid input element specified"));return}i.input._type=i.input.type,i.input.type="text",i.input.classList.add("flatpickr-input"),i._input=i.input,i.config.altInput&&(i.altInput=Oe(i.input.nodeName,i.config.altInputClass),i._input=i.altInput,i.altInput.placeholder=i.input.placeholder,i.altInput.disabled=i.input.disabled,i.altInput.required=i.input.required,i.altInput.tabIndex=i.input.tabIndex,i.altInput.type="text",i.input.setAttribute("type","hidden"),!i.config.static&&i.input.parentNode&&i.input.parentNode.insertBefore(i.altInput,i.input.nextSibling)),i.config.allowInput||i._input.setAttribute("readonly","readonly"),va()}function va(){i._positionElement=i.config.positionElement||i._input}function mr(){var R=i.config.enableTime?i.config.noCalendar?"time":"datetime-local":"date";i.mobileInput=Oe("input",i.input.className+" flatpickr-mobile"),i.mobileInput.tabIndex=1,i.mobileInput.type=R,i.mobileInput.disabled=i.input.disabled,i.mobileInput.required=i.input.required,i.mobileInput.placeholder=i.input.placeholder,i.mobileFormatStr=R==="datetime-local"?"Y-m-d\\TH:i:S":R==="date"?"Y-m-d":"H:i:S",i.selectedDates.length>0&&(i.mobileInput.defaultValue=i.mobileInput.value=i.formatDate(i.selectedDates[0],i.mobileFormatStr)),i.config.minDate&&(i.mobileInput.min=i.formatDate(i.config.minDate,"Y-m-d")),i.config.maxDate&&(i.mobileInput.max=i.formatDate(i.config.maxDate,"Y-m-d")),i.input.getAttribute("step")&&(i.mobileInput.step=String(i.input.getAttribute("step"))),i.input.type="hidden",i.altInput!==void 0&&(i.altInput.type="hidden");try{i.input.parentNode&&i.input.parentNode.insertBefore(i.mobileInput,i.input.nextSibling)}catch{}q(i.mobileInput,"change",function(N){i.setDate(Mt(N).value,!1,i.mobileFormatStr),He("onChange"),He("onClose")})}function sn(R){if(i.isOpen===!0)return i.close();i.open(R)}function He(R,N){if(i.config!==void 0){var W=i.config[R];if(W!==void 0&&W.length>0)for(var J=0;W[J]&&J<W.length;J++)W[J](i.selectedDates,i.input.value,i,N);R==="onChange"&&(i.input.dispatchEvent(ji("change")),i.input.dispatchEvent(ji("input")))}}function ji(R){var N=document.createEvent("Event");return N.initEvent(R,!0,!0),N}function ba(R){for(var N=0;N<i.selectedDates.length;N++){var W=i.selectedDates[N];if(W instanceof Date&&Pt(W,R)===0)return""+N}return!1}function xr(R){return i.config.mode!=="range"||i.selectedDates.length<2?!1:Pt(R,i.selectedDates[0])>=0&&Pt(R,i.selectedDates[1])<=0}function Ui(){i.config.noCalendar||i.isMobile||!i.monthNav||(i.yearElements.forEach(function(R,N){var W=new Date(i.currentYear,i.currentMonth,1);W.setMonth(i.currentMonth+N),i.config.showMonths>1||i.config.monthSelectorType==="static"?i.monthElements[N].textContent=Zn(W.getMonth(),i.config.shorthandCurrentMonth,i.l10n)+" ":i.monthsDropdownContainer.value=W.getMonth().toString(),R.value=W.getFullYear().toString()}),i._hidePrevMonthArrow=i.config.minDate!==void 0&&(i.currentYear===i.config.minDate.getFullYear()?i.currentMonth<=i.config.minDate.getMonth():i.currentYear<i.config.minDate.getFullYear()),i._hideNextMonthArrow=i.config.maxDate!==void 0&&(i.currentYear===i.config.maxDate.getFullYear()?i.currentMonth+1>i.config.maxDate.getMonth():i.currentYear>i.config.maxDate.getFullYear()))}function $i(R){var N=R||(i.config.altInput?i.config.altFormat:i.config.dateFormat);return i.selectedDates.map(function(W){return i.formatDate(W,N)}).filter(function(W,J,re){return i.config.mode!=="range"||i.config.enableTime||re.indexOf(W)===J}).join(i.config.mode!=="range"?i.config.conjunction:i.l10n.rangeSeparator)}function Yt(R){R===void 0&&(R=!0),i.mobileInput!==void 0&&i.mobileFormatStr&&(i.mobileInput.value=i.latestSelectedDateObj!==void 0?i.formatDate(i.latestSelectedDateObj,i.mobileFormatStr):""),i.input.value=$i(i.config.dateFormat),i.altInput!==void 0&&(i.altInput.value=$i(i.config.altFormat)),R!==!1&&He("onValueUpdate")}function vr(R){var N=Mt(R),W=i.prevMonthNav.contains(N),J=i.nextMonthNav.contains(N);W||J?jt(W?-1:1):i.yearElements.indexOf(N)>=0?N.select():N.classList.contains("arrowUp")?i.changeYear(i.currentYear+1):N.classList.contains("arrowDown")&&i.changeYear(i.currentYear-1)}function ci(R){R.preventDefault();var N=R.type==="keydown",W=Mt(R),J=W;i.amPM!==void 0&&W===i.amPM&&(i.amPM.textContent=i.l10n.amPM[Ot(i.amPM.textContent===i.l10n.amPM[0])]);var re=parseFloat(J.getAttribute("min")),he=parseFloat(J.getAttribute("max")),Ce=parseFloat(J.getAttribute("step")),ge=parseInt(J.value,10),Me=R.delta||(N?R.which===38?1:-1:0),ue=ge+Ce*Me;if(typeof J.value<"u"&&J.value.length===2){var ve=J===i.hourElement,Re=J===i.minuteElement;ue<re?(ue=he+ue+Ot(!ve)+(Ot(ve)&&Ot(!i.amPM)),Re&&pe(void 0,-1,i.hourElement)):ue>he&&(ue=J===i.hourElement?ue-he-Ot(!i.amPM):re,Re&&pe(void 0,1,i.hourElement)),i.amPM&&ve&&(Ce===1?ue+ge===23:Math.abs(ue-ge)>Ce)&&(i.amPM.textContent=i.l10n.amPM[Ot(i.amPM.textContent===i.l10n.amPM[0])]),J.value=wt(ue)}}return g(),i}function aa(n,s){for(var i=Array.prototype.slice.call(n).filter(function(v){return v instanceof HTMLElement}),h=[],g=0;g<i.length;g++){var b=i[g];try{if(b.getAttribute("data-fp-omit")!==null)continue;b._flatpickr!==void 0&&(b._flatpickr.destroy(),b._flatpickr=void 0),b._flatpickr=ym(b,s||{}),h.push(b._flatpickr)}catch(v){console.error(v)}}return h.length===1?h[0]:h}typeof HTMLElement<"u"&&typeof HTMLCollection<"u"&&typeof NodeList<"u"&&(HTMLCollection.prototype.flatpickr=NodeList.prototype.flatpickr=function(n){return aa(this,n)},HTMLElement.prototype.flatpickr=function(n){return aa([this],n)});var et=function(n,s){return typeof n=="string"?aa(window.document.querySelectorAll(n),s):n instanceof Node?aa([n],s):aa(n,s)};et.defaultConfig={};et.l10ns={en:ct({},Ba),default:ct({},Ba)};et.localize=function(n){et.l10ns.default=ct(ct({},et.l10ns.default),n)};et.setDefaults=function(n){et.defaultConfig=ct(ct({},et.defaultConfig),n)};et.parseDate=Ms({});et.formatDate=dh({});et.compareDates=Pt;typeof jQuery<"u"&&typeof jQuery.fn<"u"&&(jQuery.fn.flatpickr=function(n){return aa(this,n)});Date.prototype.fp_incr=function(n){return new Date(this.getFullYear(),this.getMonth(),this.getDate()+(typeof n=="string"?parseInt(n,10):n))};typeof window<"u"&&(window.flatpickr=et);window.Alpine=Bc;window.TomSelect=xt;window.Sortable=ye;window.ApexCharts=gm;window.flatpickr=et;Bc.start();

--- FIN DU FICHIER : ./public/build/assets/app-CNv0O1K2.js ---


////////////////////////////////////////////////////////////////
CHEMIN : ./public/build/assets/app-OWnoQ14L.css
////////////////////////////////////////////////////////////////

.ts-control{border:1px solid #d0d0d0;padding:8px;width:100%;overflow:hidden;position:relative;z-index:1;box-sizing:border-box;box-shadow:inset 0 1px 1px #0000001a;border-radius:3px;display:flex;flex-wrap:wrap}.ts-wrapper.multi.has-items .ts-control{padding:5px 8px 2px}.full .ts-control{background-color:#fff}.disabled .ts-control,.disabled .ts-control *{cursor:default!important}.focus .ts-control{box-shadow:inset 0 1px 2px #00000026}.ts-control>*{vertical-align:baseline;display:inline-block}.ts-wrapper.multi .ts-control>div{cursor:pointer;margin:0 3px 3px 0;padding:2px 6px;background:#1da7ee;color:#fff;border:1px solid #0073bb}.ts-wrapper.multi .ts-control>div.active{background:#92c836;color:#fff;border:1px solid #00578d}.ts-wrapper.multi.disabled .ts-control>div,.ts-wrapper.multi.disabled .ts-control>div.active{color:#fff;background:#d2d2d2;border:1px solid #aaaaaa}.ts-control>input{flex:1 1 auto;min-width:7rem;display:inline-block!important;padding:0!important;min-height:0!important;max-height:none!important;max-width:100%!important;margin:0!important;text-indent:0!important;border:0 none!important;background:none!important;line-height:inherit!important;-webkit-user-select:auto!important;-moz-user-select:auto!important;user-select:auto!important;box-shadow:none!important}.ts-control>input::-ms-clear{display:none}.ts-control>input:focus{outline:none!important}.has-items .ts-control>input{margin:0 4px!important}.ts-control.rtl{text-align:right}.ts-control.rtl.single .ts-control:after{left:15px;right:auto}.ts-control.rtl .ts-control>input{margin:0 4px 0 -2px!important}.disabled .ts-control{opacity:.5;background-color:#fafafa}.input-hidden .ts-control>input{opacity:0;position:absolute;left:-10000px}.ts-dropdown{position:absolute;top:100%;left:0;width:100%;z-index:10;border:1px solid #d0d0d0;background:#fff;margin:.25rem 0 0;border-top:0 none;box-sizing:border-box;box-shadow:0 1px 3px #0000001a;border-radius:0 0 3px 3px}.ts-dropdown [data-selectable]{cursor:pointer;overflow:hidden}.ts-dropdown [data-selectable] .highlight{background:#7da8d033;border-radius:1px}.ts-dropdown .option,.ts-dropdown .optgroup-header,.ts-dropdown .no-results,.ts-dropdown .create{padding:5px 8px}.ts-dropdown .option,.ts-dropdown [data-disabled],.ts-dropdown [data-disabled] [data-selectable].option{cursor:inherit;opacity:.5}.ts-dropdown [data-selectable].option{opacity:1;cursor:pointer}.ts-dropdown .optgroup:first-child .optgroup-header{border-top:0 none}.ts-dropdown .optgroup-header{color:#303030;background:#fff;cursor:default}.ts-dropdown .active{background-color:#f5fafd;color:#495c68}.ts-dropdown .active.create{color:#495c68}.ts-dropdown .create{color:#30303080}.ts-dropdown .spinner{display:inline-block;width:30px;height:30px;margin:5px 8px}.ts-dropdown .spinner:after{content:" ";display:block;width:24px;height:24px;margin:3px;border-radius:50%;border:5px solid #d0d0d0;border-color:#d0d0d0 transparent #d0d0d0 transparent;animation:lds-dual-ring 1.2s linear infinite}@keyframes lds-dual-ring{0%{transform:rotate(0)}to{transform:rotate(360deg)}}.ts-dropdown-content{overflow:hidden auto;max-height:200px;scroll-behavior:smooth}.ts-wrapper.plugin-drag_drop .ts-dragging{color:transparent!important}.ts-wrapper.plugin-drag_drop .ts-dragging>*{visibility:hidden!important}.plugin-checkbox_options:not(.rtl) .option input{margin-right:.5rem}.plugin-checkbox_options.rtl .option input{margin-left:.5rem}.plugin-clear_button{--ts-pr-clear-button: 1em}.plugin-clear_button .clear-button{opacity:0;position:absolute;top:50%;transform:translateY(-50%);right:2px;margin-right:0!important;background:transparent!important;transition:opacity .5s;cursor:pointer}.plugin-clear_button.form-select .clear-button,.plugin-clear_button.single .clear-button{right:max(var(--ts-pr-caret),8px)}.plugin-clear_button.focus.has-items .clear-button,.plugin-clear_button:not(.disabled):hover.has-items .clear-button{opacity:1}.ts-wrapper .dropdown-header{position:relative;padding:10px 8px;border-bottom:1px solid #d0d0d0;background:color-mix(#fff,#d0d0d0,85%);border-radius:3px 3px 0 0}.ts-wrapper .dropdown-header-close{position:absolute;right:8px;top:50%;color:#303030;opacity:.4;margin-top:-12px;line-height:20px;font-size:20px!important}.ts-wrapper .dropdown-header-close:hover{color:#000}.plugin-dropdown_input.focus.dropdown-active .ts-control{box-shadow:none;border:1px solid #d0d0d0}.plugin-dropdown_input .dropdown-input{border:1px solid #d0d0d0;border-width:0 0 1px;display:block;padding:8px;box-shadow:inset 0 1px 1px #0000001a;width:100%;background:transparent}.plugin-dropdown_input .items-placeholder{border:0 none!important;box-shadow:none!important;width:100%}.plugin-dropdown_input.has-items .items-placeholder,.plugin-dropdown_input.dropdown-active .items-placeholder{display:none!important}.ts-wrapper.plugin-input_autogrow.has-items .ts-control>input{min-width:0}.ts-wrapper.plugin-input_autogrow.has-items.focus .ts-control>input{flex:none;min-width:4px}.ts-wrapper.plugin-input_autogrow.has-items.focus .ts-control>input::-moz-placeholder{color:transparent}.ts-wrapper.plugin-input_autogrow.has-items.focus .ts-control>input::placeholder{color:transparent}.ts-dropdown.plugin-optgroup_columns .ts-dropdown-content{display:flex}.ts-dropdown.plugin-optgroup_columns .optgroup{border-right:1px solid #f2f2f2;border-top:0 none;flex-grow:1;flex-basis:0;min-width:0}.ts-dropdown.plugin-optgroup_columns .optgroup:last-child{border-right:0 none}.ts-dropdown.plugin-optgroup_columns .optgroup:before{display:none}.ts-dropdown.plugin-optgroup_columns .optgroup-header{border-top:0 none}.ts-wrapper.plugin-remove_button .item{display:inline-flex;align-items:center}.ts-wrapper.plugin-remove_button .item .remove{color:inherit;text-decoration:none;vertical-align:middle;display:inline-block;padding:0 6px;border-radius:0 2px 2px 0;box-sizing:border-box}.ts-wrapper.plugin-remove_button .item .remove:hover{background:#0000000d}.ts-wrapper.plugin-remove_button.disabled .item .remove:hover{background:none}.ts-wrapper.plugin-remove_button .remove-single{position:absolute;right:0;top:0;font-size:23px}.ts-wrapper.plugin-remove_button:not(.rtl) .item{padding-right:0!important}.ts-wrapper.plugin-remove_button:not(.rtl) .item .remove{border-left:1px solid #0073bb;margin-left:6px}.ts-wrapper.plugin-remove_button:not(.rtl) .item.active .remove{border-left-color:#00578d}.ts-wrapper.plugin-remove_button:not(.rtl).disabled .item .remove{border-left-color:#aaa}.ts-wrapper.plugin-remove_button.rtl .item{padding-left:0!important}.ts-wrapper.plugin-remove_button.rtl .item .remove{border-right:1px solid #0073bb;margin-right:6px}.ts-wrapper.plugin-remove_button.rtl .item.active .remove{border-right-color:#00578d}.ts-wrapper.plugin-remove_button.rtl.disabled .item .remove{border-right-color:#aaa}:root{--ts-pr-clear-button: 0px;--ts-pr-caret: 0px;--ts-pr-min: .75rem}.ts-wrapper.single .ts-control,.ts-wrapper.single .ts-control input{cursor:pointer}.ts-control:not(.rtl){padding-right:max(var(--ts-pr-min),var(--ts-pr-clear-button) + var(--ts-pr-caret))!important}.ts-control.rtl{padding-left:max(var(--ts-pr-min),var(--ts-pr-clear-button) + var(--ts-pr-caret))!important}.ts-wrapper{position:relative}.ts-dropdown,.ts-control,.ts-control input{color:#303030;font-family:inherit;font-size:13px;line-height:18px}.ts-control,.ts-wrapper.single.input-active .ts-control{background:#fff;cursor:text}.ts-hidden-accessible{border:0!important;clip:rect(0 0 0 0)!important;clip-path:inset(50%)!important;overflow:hidden!important;padding:0!important;position:absolute!important;width:1px!important;white-space:nowrap!important}.ts-wrapper.single .ts-control{--ts-pr-caret: 2rem}.ts-wrapper.single .ts-control:after{content:" ";display:block;position:absolute;top:50%;margin-top:-3px;width:0;height:0;border-style:solid;border-width:5px 5px 0 5px;border-color:#808080 transparent transparent transparent}.ts-wrapper.single .ts-control:not(.rtl):after{right:15px}.ts-wrapper.single .ts-control.rtl:after{left:15px}.ts-wrapper.single.dropdown-active .ts-control:after{margin-top:-4px;border-width:0 5px 5px 5px;border-color:transparent transparent #808080 transparent}.ts-wrapper.single.input-active .ts-control,.ts-wrapper.single.input-active .ts-control input{cursor:text}.ts-wrapper{display:flex;min-height:36px}.ts-wrapper.multi.has-items .ts-control{padding-left:5px;--ts-pr-min: $padding-x}.ts-wrapper.multi .ts-control [data-value]{text-shadow:0 1px 0 rgba(0,51,83,.3);border-radius:3px;background-color:color-mix(#1da7ee,#178ee9,60%);background-image:linear-gradient(to bottom,#1da7ee,#178ee9);background-repeat:repeat-x;box-shadow:0 1px #0003,inset 0 1px #ffffff08}.ts-wrapper.multi .ts-control [data-value].active{background-color:color-mix(#008fd8,#0075cf,60%);background-image:linear-gradient(to bottom,#008fd8,#0075cf);background-repeat:repeat-x}.ts-wrapper.multi.disabled .ts-control [data-value]{color:#999;text-shadow:none;background:none;box-shadow:none}.ts-wrapper.multi.disabled .ts-control [data-value],.ts-wrapper.multi.disabled .ts-control [data-value] .remove{border-color:#e6e6e6}.ts-wrapper.multi.disabled .ts-control [data-value] .remove{background:none}.ts-wrapper.single .ts-control{box-shadow:0 1px #0000000d,inset 0 1px #fffc;background-color:color-mix(#fefefe,#f2f2f2,60%);background-image:linear-gradient(to bottom,#fefefe,#f2f2f2);background-repeat:repeat-x}.ts-wrapper.single .ts-control,.ts-dropdown.single{border-color:#b8b8b8}.dropdown-active .ts-control{border-radius:3px 3px 0 0}.ts-dropdown .optgroup-header{padding-top:7px;font-weight:700;font-size:.85em}.ts-dropdown .optgroup{border-top:1px solid #f0f0f0}.ts-dropdown .optgroup:first-child{border-top:0 none}.flatpickr-calendar{background:transparent;opacity:0;display:none;text-align:center;visibility:hidden;padding:0;animation:none;direction:ltr;border:0;font-size:14px;line-height:24px;border-radius:5px;position:absolute;width:307.875px;box-sizing:border-box;touch-action:manipulation;background:#fff;box-shadow:1px 0 #e6e6e6,-1px 0 #e6e6e6,0 1px #e6e6e6,0 -1px #e6e6e6,0 3px 13px #00000014}.flatpickr-calendar.open,.flatpickr-calendar.inline{opacity:1;max-height:640px;visibility:visible}.flatpickr-calendar.open{display:inline-block;z-index:99999}.flatpickr-calendar.animate.open{animation:fpFadeInDown .3s cubic-bezier(.23,1,.32,1)}.flatpickr-calendar.inline{display:block;position:relative;top:2px}.flatpickr-calendar.static{position:absolute;top:calc(100% + 2px)}.flatpickr-calendar.static.open{z-index:999;display:block}.flatpickr-calendar.multiMonth .flatpickr-days .dayContainer:nth-child(n+1) .flatpickr-day.inRange:nth-child(7n+7){box-shadow:none!important}.flatpickr-calendar.multiMonth .flatpickr-days .dayContainer:nth-child(n+2) .flatpickr-day.inRange:nth-child(7n+1){box-shadow:-2px 0 #e6e6e6,5px 0 #e6e6e6}.flatpickr-calendar .hasWeeks .dayContainer,.flatpickr-calendar .hasTime .dayContainer{border-bottom:0;border-bottom-right-radius:0;border-bottom-left-radius:0}.flatpickr-calendar .hasWeeks .dayContainer{border-left:0}.flatpickr-calendar.hasTime .flatpickr-time{height:40px;border-top:1px solid #e6e6e6}.flatpickr-calendar.noCalendar.hasTime .flatpickr-time{height:auto}.flatpickr-calendar:before,.flatpickr-calendar:after{position:absolute;display:block;pointer-events:none;border:solid transparent;content:"";height:0;width:0;left:22px}.flatpickr-calendar.rightMost:before,.flatpickr-calendar.arrowRight:before,.flatpickr-calendar.rightMost:after,.flatpickr-calendar.arrowRight:after{left:auto;right:22px}.flatpickr-calendar.arrowCenter:before,.flatpickr-calendar.arrowCenter:after{left:50%;right:50%}.flatpickr-calendar:before{border-width:5px;margin:0 -5px}.flatpickr-calendar:after{border-width:4px;margin:0 -4px}.flatpickr-calendar.arrowTop:before,.flatpickr-calendar.arrowTop:after{bottom:100%}.flatpickr-calendar.arrowTop:before{border-bottom-color:#e6e6e6}.flatpickr-calendar.arrowTop:after{border-bottom-color:#fff}.flatpickr-calendar.arrowBottom:before,.flatpickr-calendar.arrowBottom:after{top:100%}.flatpickr-calendar.arrowBottom:before{border-top-color:#e6e6e6}.flatpickr-calendar.arrowBottom:after{border-top-color:#fff}.flatpickr-calendar:focus{outline:0}.flatpickr-wrapper{position:relative;display:inline-block}.flatpickr-months{display:flex}.flatpickr-months .flatpickr-month{background:transparent;color:#000000e6;fill:#000000e6;height:34px;line-height:1;text-align:center;position:relative;-webkit-user-select:none;-moz-user-select:none;user-select:none;overflow:hidden;flex:1}.flatpickr-months .flatpickr-prev-month,.flatpickr-months .flatpickr-next-month{-webkit-user-select:none;-moz-user-select:none;user-select:none;text-decoration:none;cursor:pointer;position:absolute;top:0;height:34px;padding:10px;z-index:3;color:#000000e6;fill:#000000e6}.flatpickr-months .flatpickr-prev-month.flatpickr-disabled,.flatpickr-months .flatpickr-next-month.flatpickr-disabled{display:none}.flatpickr-months .flatpickr-prev-month i,.flatpickr-months .flatpickr-next-month i{position:relative}.flatpickr-months .flatpickr-prev-month.flatpickr-prev-month,.flatpickr-months .flatpickr-next-month.flatpickr-prev-month{left:0}.flatpickr-months .flatpickr-prev-month.flatpickr-next-month,.flatpickr-months .flatpickr-next-month.flatpickr-next-month{right:0}.flatpickr-months .flatpickr-prev-month:hover,.flatpickr-months .flatpickr-next-month:hover{color:#959ea9}.flatpickr-months .flatpickr-prev-month:hover svg,.flatpickr-months .flatpickr-next-month:hover svg{fill:#f64747}.flatpickr-months .flatpickr-prev-month svg,.flatpickr-months .flatpickr-next-month svg{width:14px;height:14px}.flatpickr-months .flatpickr-prev-month svg path,.flatpickr-months .flatpickr-next-month svg path{transition:fill .1s;fill:inherit}.numInputWrapper{position:relative;height:auto}.numInputWrapper input,.numInputWrapper span{display:inline-block}.numInputWrapper input{width:100%}.numInputWrapper input::-ms-clear{display:none}.numInputWrapper input::-webkit-outer-spin-button,.numInputWrapper input::-webkit-inner-spin-button{margin:0;-webkit-appearance:none}.numInputWrapper span{position:absolute;right:0;width:14px;padding:0 4px 0 2px;height:50%;line-height:50%;opacity:0;cursor:pointer;border:1px solid rgba(57,57,57,.15);box-sizing:border-box}.numInputWrapper span:hover{background:#0000001a}.numInputWrapper span:active{background:#0003}.numInputWrapper span:after{display:block;content:"";position:absolute}.numInputWrapper span.arrowUp{top:0;border-bottom:0}.numInputWrapper span.arrowUp:after{border-left:4px solid transparent;border-right:4px solid transparent;border-bottom:4px solid rgba(57,57,57,.6);top:26%}.numInputWrapper span.arrowDown{top:50%}.numInputWrapper span.arrowDown:after{border-left:4px solid transparent;border-right:4px solid transparent;border-top:4px solid rgba(57,57,57,.6);top:40%}.numInputWrapper span svg{width:inherit;height:auto}.numInputWrapper span svg path{fill:#00000080}.numInputWrapper:hover{background:#0000000d}.numInputWrapper:hover span{opacity:1}.flatpickr-current-month{font-size:135%;line-height:inherit;font-weight:300;color:inherit;position:absolute;width:75%;left:12.5%;padding:7.48px 0 0;line-height:1;height:34px;display:inline-block;text-align:center;transform:translateZ(0)}.flatpickr-current-month span.cur-month{font-family:inherit;font-weight:700;color:inherit;display:inline-block;margin-left:.5ch;padding:0}.flatpickr-current-month span.cur-month:hover{background:#0000000d}.flatpickr-current-month .numInputWrapper{width:6ch;width:7chÔøΩ;display:inline-block}.flatpickr-current-month .numInputWrapper span.arrowUp:after{border-bottom-color:#000000e6}.flatpickr-current-month .numInputWrapper span.arrowDown:after{border-top-color:#000000e6}.flatpickr-current-month input.cur-year{background:transparent;box-sizing:border-box;color:inherit;cursor:text;padding:0 0 0 .5ch;margin:0;display:inline-block;font-size:inherit;font-family:inherit;font-weight:300;line-height:inherit;height:auto;border:0;border-radius:0;vertical-align:initial;-webkit-appearance:textfield;-moz-appearance:textfield;appearance:textfield}.flatpickr-current-month input.cur-year:focus{outline:0}.flatpickr-current-month input.cur-year[disabled],.flatpickr-current-month input.cur-year[disabled]:hover{font-size:100%;color:#00000080;background:transparent;pointer-events:none}.flatpickr-current-month .flatpickr-monthDropdown-months{appearance:menulist;background:transparent;border:none;border-radius:0;box-sizing:border-box;color:inherit;cursor:pointer;font-size:inherit;font-family:inherit;font-weight:300;height:auto;line-height:inherit;margin:-1px 0 0;outline:none;padding:0 0 0 .5ch;position:relative;vertical-align:initial;-webkit-box-sizing:border-box;-webkit-appearance:menulist;-moz-appearance:menulist;width:auto}.flatpickr-current-month .flatpickr-monthDropdown-months:focus,.flatpickr-current-month .flatpickr-monthDropdown-months:active{outline:none}.flatpickr-current-month .flatpickr-monthDropdown-months:hover{background:#0000000d}.flatpickr-current-month .flatpickr-monthDropdown-months .flatpickr-monthDropdown-month{background-color:transparent;outline:none;padding:0}.flatpickr-weekdays{background:transparent;text-align:center;overflow:hidden;width:100%;display:flex;align-items:center;height:28px}.flatpickr-weekdays .flatpickr-weekdaycontainer{display:flex;flex:1}span.flatpickr-weekday{cursor:default;font-size:90%;background:transparent;color:#0000008a;line-height:1;margin:0;text-align:center;display:block;flex:1;font-weight:bolder}.dayContainer,.flatpickr-weeks{padding:1px 0 0}.flatpickr-days{position:relative;overflow:hidden;display:flex;align-items:flex-start;width:307.875px}.flatpickr-days:focus{outline:0}.dayContainer{padding:0;outline:0;text-align:left;width:307.875px;min-width:307.875px;max-width:307.875px;box-sizing:border-box;display:inline-block;display:flex;flex-wrap:wrap;-ms-flex-wrap:wrap;justify-content:space-around;transform:translateZ(0);opacity:1}.dayContainer+.dayContainer{box-shadow:-1px 0 #e6e6e6}.flatpickr-day{background:none;border:1px solid transparent;border-radius:150px;box-sizing:border-box;color:#393939;cursor:pointer;font-weight:400;width:14.2857143%;flex-basis:14.2857143%;max-width:39px;height:39px;line-height:39px;margin:0;display:inline-block;position:relative;justify-content:center;text-align:center}.flatpickr-day.inRange,.flatpickr-day.prevMonthDay.inRange,.flatpickr-day.nextMonthDay.inRange,.flatpickr-day.today.inRange,.flatpickr-day.prevMonthDay.today.inRange,.flatpickr-day.nextMonthDay.today.inRange,.flatpickr-day:hover,.flatpickr-day.prevMonthDay:hover,.flatpickr-day.nextMonthDay:hover,.flatpickr-day:focus,.flatpickr-day.prevMonthDay:focus,.flatpickr-day.nextMonthDay:focus{cursor:pointer;outline:0;background:#e6e6e6;border-color:#e6e6e6}.flatpickr-day.today{border-color:#959ea9}.flatpickr-day.today:hover,.flatpickr-day.today:focus{border-color:#959ea9;background:#959ea9;color:#fff}.flatpickr-day.selected,.flatpickr-day.startRange,.flatpickr-day.endRange,.flatpickr-day.selected.inRange,.flatpickr-day.startRange.inRange,.flatpickr-day.endRange.inRange,.flatpickr-day.selected:focus,.flatpickr-day.startRange:focus,.flatpickr-day.endRange:focus,.flatpickr-day.selected:hover,.flatpickr-day.startRange:hover,.flatpickr-day.endRange:hover,.flatpickr-day.selected.prevMonthDay,.flatpickr-day.startRange.prevMonthDay,.flatpickr-day.endRange.prevMonthDay,.flatpickr-day.selected.nextMonthDay,.flatpickr-day.startRange.nextMonthDay,.flatpickr-day.endRange.nextMonthDay{background:#569ff7;box-shadow:none;color:#fff;border-color:#569ff7}.flatpickr-day.selected.startRange,.flatpickr-day.startRange.startRange,.flatpickr-day.endRange.startRange{border-radius:50px 0 0 50px}.flatpickr-day.selected.endRange,.flatpickr-day.startRange.endRange,.flatpickr-day.endRange.endRange{border-radius:0 50px 50px 0}.flatpickr-day.selected.startRange+.endRange:not(:nth-child(7n+1)),.flatpickr-day.startRange.startRange+.endRange:not(:nth-child(7n+1)),.flatpickr-day.endRange.startRange+.endRange:not(:nth-child(7n+1)){box-shadow:-10px 0 #569ff7}.flatpickr-day.selected.startRange.endRange,.flatpickr-day.startRange.startRange.endRange,.flatpickr-day.endRange.startRange.endRange{border-radius:50px}.flatpickr-day.inRange{border-radius:0;box-shadow:-5px 0 #e6e6e6,5px 0 #e6e6e6}.flatpickr-day.flatpickr-disabled,.flatpickr-day.flatpickr-disabled:hover,.flatpickr-day.prevMonthDay,.flatpickr-day.nextMonthDay,.flatpickr-day.notAllowed,.flatpickr-day.notAllowed.prevMonthDay,.flatpickr-day.notAllowed.nextMonthDay{color:#3939394d;background:transparent;border-color:transparent;cursor:default}.flatpickr-day.flatpickr-disabled,.flatpickr-day.flatpickr-disabled:hover{cursor:not-allowed;color:#3939391a}.flatpickr-day.week.selected{border-radius:0;box-shadow:-5px 0 #569ff7,5px 0 #569ff7}.flatpickr-day.hidden{visibility:hidden}.rangeMode .flatpickr-day{margin-top:1px}.flatpickr-weekwrapper{float:left}.flatpickr-weekwrapper .flatpickr-weeks{padding:0 12px;box-shadow:1px 0 #e6e6e6}.flatpickr-weekwrapper .flatpickr-weekday{float:none;width:100%;line-height:28px}.flatpickr-weekwrapper span.flatpickr-day,.flatpickr-weekwrapper span.flatpickr-day:hover{display:block;width:100%;max-width:none;color:#3939394d;background:transparent;cursor:default;border:none}.flatpickr-innerContainer{display:block;display:flex;box-sizing:border-box;overflow:hidden}.flatpickr-rContainer{display:inline-block;padding:0;box-sizing:border-box}.flatpickr-time{text-align:center;outline:0;display:block;height:0;line-height:40px;max-height:40px;box-sizing:border-box;overflow:hidden;display:flex}.flatpickr-time:after{content:"";display:table;clear:both}.flatpickr-time .numInputWrapper{flex:1;width:40%;height:40px;float:left}.flatpickr-time .numInputWrapper span.arrowUp:after{border-bottom-color:#393939}.flatpickr-time .numInputWrapper span.arrowDown:after{border-top-color:#393939}.flatpickr-time.hasSeconds .numInputWrapper{width:26%}.flatpickr-time.time24hr .numInputWrapper{width:49%}.flatpickr-time input{background:transparent;box-shadow:none;border:0;border-radius:0;text-align:center;margin:0;padding:0;height:inherit;line-height:inherit;color:#393939;font-size:14px;position:relative;box-sizing:border-box;-webkit-appearance:textfield;-moz-appearance:textfield;appearance:textfield}.flatpickr-time input.flatpickr-hour{font-weight:700}.flatpickr-time input.flatpickr-minute,.flatpickr-time input.flatpickr-second{font-weight:400}.flatpickr-time input:focus{outline:0;border:0}.flatpickr-time .flatpickr-time-separator,.flatpickr-time .flatpickr-am-pm{height:inherit;float:left;line-height:inherit;color:#393939;font-weight:700;width:2%;-webkit-user-select:none;-moz-user-select:none;user-select:none;align-self:center}.flatpickr-time .flatpickr-am-pm{outline:0;width:18%;cursor:pointer;text-align:center;font-weight:400}.flatpickr-time input:hover,.flatpickr-time .flatpickr-am-pm:hover,.flatpickr-time input:focus,.flatpickr-time .flatpickr-am-pm:focus{background:#eee}.flatpickr-input[readonly]{cursor:pointer}@keyframes fpFadeInDown{0%{opacity:0;transform:translate3d(0,-20px,0)}to{opacity:1;transform:translateZ(0)}}*,:before,:after{--tw-border-spacing-x: 0;--tw-border-spacing-y: 0;--tw-translate-x: 0;--tw-translate-y: 0;--tw-rotate: 0;--tw-skew-x: 0;--tw-skew-y: 0;--tw-scale-x: 1;--tw-scale-y: 1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness: proximity;--tw-gradient-from-position: ;--tw-gradient-via-position: ;--tw-gradient-to-position: ;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width: 0px;--tw-ring-offset-color: #fff;--tw-ring-color: rgb(59 130 246 / .5);--tw-ring-offset-shadow: 0 0 #0000;--tw-ring-shadow: 0 0 #0000;--tw-shadow: 0 0 #0000;--tw-shadow-colored: 0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: ;--tw-contain-size: ;--tw-contain-layout: ;--tw-contain-paint: ;--tw-contain-style: }::backdrop{--tw-border-spacing-x: 0;--tw-border-spacing-y: 0;--tw-translate-x: 0;--tw-translate-y: 0;--tw-rotate: 0;--tw-skew-x: 0;--tw-skew-y: 0;--tw-scale-x: 1;--tw-scale-y: 1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness: proximity;--tw-gradient-from-position: ;--tw-gradient-via-position: ;--tw-gradient-to-position: ;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width: 0px;--tw-ring-offset-color: #fff;--tw-ring-color: rgb(59 130 246 / .5);--tw-ring-offset-shadow: 0 0 #0000;--tw-ring-shadow: 0 0 #0000;--tw-shadow: 0 0 #0000;--tw-shadow-colored: 0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: ;--tw-contain-size: ;--tw-contain-layout: ;--tw-contain-paint: ;--tw-contain-style: }/*! tailwindcss v3.4.17 | MIT License | https://tailwindcss.com
 */*,:before,:after{box-sizing:border-box;border-width:0;border-style:solid;border-color:#e5e7eb}:before,:after{--tw-content: ""}html,:host{line-height:1.5;-webkit-text-size-adjust:100%;-moz-tab-size:4;-o-tab-size:4;tab-size:4;font-family:Inter,ui-sans-serif,system-ui,sans-serif,"Apple Color Emoji","Segoe UI Emoji",Segoe UI Symbol,"Noto Color Emoji";font-feature-settings:normal;font-variation-settings:normal;-webkit-tap-highlight-color:transparent}body{margin:0;line-height:inherit}hr{height:0;color:inherit;border-top-width:1px}abbr:where([title]){-webkit-text-decoration:underline dotted;text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,samp,pre{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace;font-feature-settings:normal;font-variation-settings:normal;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{text-indent:0;border-color:inherit;border-collapse:collapse}button,input,optgroup,select,textarea{font-family:inherit;font-feature-settings:inherit;font-variation-settings:inherit;font-size:100%;font-weight:inherit;line-height:inherit;letter-spacing:inherit;color:inherit;margin:0;padding:0}button,select{text-transform:none}button,input:where([type=button]),input:where([type=reset]),input:where([type=submit]){-webkit-appearance:button;background-color:transparent;background-image:none}:-moz-focusring{outline:auto}:-moz-ui-invalid{box-shadow:none}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dl,dd,h1,h2,h3,h4,h5,h6,hr,figure,p,pre{margin:0}fieldset{margin:0;padding:0}legend{padding:0}ol,ul,menu{list-style:none;margin:0;padding:0}dialog{padding:0}textarea{resize:vertical}input::-moz-placeholder,textarea::-moz-placeholder{opacity:1;color:#9ca3af}input::placeholder,textarea::placeholder{opacity:1;color:#9ca3af}button,[role=button]{cursor:pointer}:disabled{cursor:default}img,svg,video,canvas,audio,iframe,embed,object{display:block;vertical-align:middle}img,video{max-width:100%;height:auto}[hidden]:where(:not([hidden=until-found])){display:none}[type=text],input:where(:not([type])),[type=email],[type=url],[type=password],[type=number],[type=date],[type=datetime-local],[type=month],[type=search],[type=tel],[type=time],[type=week],[multiple],textarea,select{-webkit-appearance:none;-moz-appearance:none;appearance:none;background-color:#fff;border-color:#6b7280;border-width:1px;border-radius:0;padding:.5rem .75rem;font-size:1rem;line-height:1.5rem;--tw-shadow: 0 0 #0000}[type=text]:focus,input:where(:not([type])):focus,[type=email]:focus,[type=url]:focus,[type=password]:focus,[type=number]:focus,[type=date]:focus,[type=datetime-local]:focus,[type=month]:focus,[type=search]:focus,[type=tel]:focus,[type=time]:focus,[type=week]:focus,[multiple]:focus,textarea:focus,select:focus{outline:2px solid transparent;outline-offset:2px;--tw-ring-inset: var(--tw-empty, );--tw-ring-offset-width: 0px;--tw-ring-offset-color: #fff;--tw-ring-color: #2563eb;--tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow);border-color:#2563eb}input::-moz-placeholder,textarea::-moz-placeholder{color:#6b7280;opacity:1}input::placeholder,textarea::placeholder{color:#6b7280;opacity:1}::-webkit-datetime-edit-fields-wrapper{padding:0}::-webkit-date-and-time-value{min-height:1.5em;text-align:inherit}::-webkit-datetime-edit{display:inline-flex}::-webkit-datetime-edit,::-webkit-datetime-edit-year-field,::-webkit-datetime-edit-month-field,::-webkit-datetime-edit-day-field,::-webkit-datetime-edit-hour-field,::-webkit-datetime-edit-minute-field,::-webkit-datetime-edit-second-field,::-webkit-datetime-edit-millisecond-field,::-webkit-datetime-edit-meridiem-field{padding-top:0;padding-bottom:0}select{background-image:url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");background-position:right .5rem center;background-repeat:no-repeat;background-size:1.5em 1.5em;padding-right:2.5rem;-webkit-print-color-adjust:exact;print-color-adjust:exact}[multiple],[size]:where(select:not([size="1"])){background-image:initial;background-position:initial;background-repeat:unset;background-size:initial;padding-right:.75rem;-webkit-print-color-adjust:unset;print-color-adjust:unset}[type=checkbox],[type=radio]{-webkit-appearance:none;-moz-appearance:none;appearance:none;padding:0;-webkit-print-color-adjust:exact;print-color-adjust:exact;display:inline-block;vertical-align:middle;background-origin:border-box;-webkit-user-select:none;-moz-user-select:none;user-select:none;flex-shrink:0;height:1rem;width:1rem;color:#2563eb;background-color:#fff;border-color:#6b7280;border-width:1px;--tw-shadow: 0 0 #0000}[type=checkbox]{border-radius:0}[type=radio]{border-radius:100%}[type=checkbox]:focus,[type=radio]:focus{outline:2px solid transparent;outline-offset:2px;--tw-ring-inset: var(--tw-empty, );--tw-ring-offset-width: 2px;--tw-ring-offset-color: #fff;--tw-ring-color: #2563eb;--tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow)}[type=checkbox]:checked,[type=radio]:checked{border-color:transparent;background-color:currentColor;background-size:100% 100%;background-position:center;background-repeat:no-repeat}[type=checkbox]:checked{background-image:url("data:image/svg+xml,%3csvg viewBox='0 0 16 16' fill='white' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M12.207 4.793a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0l-2-2a1 1 0 011.414-1.414L6.5 9.086l4.293-4.293a1 1 0 011.414 0z'/%3e%3c/svg%3e")}@media (forced-colors: active){[type=checkbox]:checked{-webkit-appearance:auto;-moz-appearance:auto;appearance:auto}}[type=radio]:checked{background-image:url("data:image/svg+xml,%3csvg viewBox='0 0 16 16' fill='white' xmlns='http://www.w3.org/2000/svg'%3e%3ccircle cx='8' cy='8' r='3'/%3e%3c/svg%3e")}@media (forced-colors: active){[type=radio]:checked{-webkit-appearance:auto;-moz-appearance:auto;appearance:auto}}[type=checkbox]:checked:hover,[type=checkbox]:checked:focus,[type=radio]:checked:hover,[type=radio]:checked:focus{border-color:transparent;background-color:currentColor}[type=checkbox]:indeterminate{background-image:url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 16 16'%3e%3cpath stroke='white' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 8h8'/%3e%3c/svg%3e");border-color:transparent;background-color:currentColor;background-size:100% 100%;background-position:center;background-repeat:no-repeat}@media (forced-colors: active){[type=checkbox]:indeterminate{-webkit-appearance:auto;-moz-appearance:auto;appearance:auto}}[type=checkbox]:indeterminate:hover,[type=checkbox]:indeterminate:focus{border-color:transparent;background-color:currentColor}[type=file]{background:unset;border-color:inherit;border-width:0;border-radius:0;padding:0;font-size:unset;line-height:inherit}[type=file]:focus{outline:1px solid ButtonText;outline:1px auto -webkit-focus-ring-color}.form-input,.form-textarea,.form-select,.form-multiselect{-webkit-appearance:none;-moz-appearance:none;appearance:none;background-color:#fff;border-color:#6b7280;border-width:1px;border-radius:0;padding:.5rem .75rem;font-size:1rem;line-height:1.5rem;--tw-shadow: 0 0 #0000}.form-input:focus,.form-textarea:focus,.form-select:focus,.form-multiselect:focus{outline:2px solid transparent;outline-offset:2px;--tw-ring-inset: var(--tw-empty, );--tw-ring-offset-width: 0px;--tw-ring-offset-color: #fff;--tw-ring-color: #2563eb;--tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow);border-color:#2563eb}.form-input::-moz-placeholder,.form-textarea::-moz-placeholder{color:#6b7280;opacity:1}.form-input::placeholder,.form-textarea::placeholder{color:#6b7280;opacity:1}.form-input::-webkit-datetime-edit-fields-wrapper{padding:0}.form-input::-webkit-date-and-time-value{min-height:1.5em;text-align:inherit}.form-input::-webkit-datetime-edit{display:inline-flex}.form-input::-webkit-datetime-edit,.form-input::-webkit-datetime-edit-year-field,.form-input::-webkit-datetime-edit-month-field,.form-input::-webkit-datetime-edit-day-field,.form-input::-webkit-datetime-edit-hour-field,.form-input::-webkit-datetime-edit-minute-field,.form-input::-webkit-datetime-edit-second-field,.form-input::-webkit-datetime-edit-millisecond-field,.form-input::-webkit-datetime-edit-meridiem-field{padding-top:0;padding-bottom:0}.form-select{background-image:url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");background-position:right .5rem center;background-repeat:no-repeat;background-size:1.5em 1.5em;padding-right:2.5rem;-webkit-print-color-adjust:exact;print-color-adjust:exact}.form-select:where([size]:not([size="1"])){background-image:initial;background-position:initial;background-repeat:unset;background-size:initial;padding-right:.75rem;-webkit-print-color-adjust:unset;print-color-adjust:unset}.sr-only{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);white-space:nowrap;border-width:0}.pointer-events-none{pointer-events:none}.visible{visibility:visible}.invisible{visibility:hidden}.fixed{position:fixed}.absolute{position:absolute}.relative{position:relative}.sticky{position:sticky}.inset-0{top:0;right:0;bottom:0;left:0}.inset-y-0{top:0;bottom:0}.bottom-full{bottom:100%}.end-0{inset-inline-end:0px}.left-0{left:0}.left-3{left:.75rem}.right-0{right:0}.right-5{right:1.25rem}.start-0{inset-inline-start:0px}.top-0{top:0}.top-1\/2{top:50%}.top-5{top:1.25rem}.z-0{z-index:0}.z-10{z-index:10}.z-20{z-index:20}.z-40{z-index:40}.z-50{z-index:50}.z-\[100\]{z-index:100}.col-auto{grid-column:auto}.col-span-1{grid-column:span 1 / span 1}.m-0{margin:0}.mx-4{margin-left:1rem;margin-right:1rem}.mx-6{margin-left:1.5rem;margin-right:1.5rem}.mx-auto{margin-left:auto;margin-right:auto}.-ml-1{margin-left:-.25rem}.-ml-px{margin-left:-1px}.-mr-12{margin-right:-3rem}.-mt-px{margin-top:-1px}.mb-0{margin-bottom:0}.mb-1{margin-bottom:.25rem}.mb-2{margin-bottom:.5rem}.mb-3{margin-bottom:.75rem}.mb-4{margin-bottom:1rem}.mb-6{margin-bottom:1.5rem}.mb-8{margin-bottom:2rem}.me-1{margin-inline-end:.25rem}.me-2{margin-inline-end:.5rem}.ml-1{margin-left:.25rem}.ml-2{margin-left:.5rem}.ml-3{margin-left:.75rem}.ml-4{margin-left:1rem}.mr-1{margin-right:.25rem}.mr-1\.5{margin-right:.375rem}.mr-2{margin-right:.5rem}.mr-3{margin-right:.75rem}.ms-2{margin-inline-start:.5rem}.ms-3{margin-inline-start:.75rem}.ms-4{margin-inline-start:1rem}.mt-0\.5{margin-top:.125rem}.mt-1{margin-top:.25rem}.mt-16{margin-top:4rem}.mt-2{margin-top:.5rem}.mt-3{margin-top:.75rem}.mt-4{margin-top:1rem}.mt-5{margin-top:1.25rem}.mt-6{margin-top:1.5rem}.mt-8{margin-top:2rem}.mt-auto{margin-top:auto}.block{display:block}.inline-block{display:inline-block}.inline{display:inline}.flex{display:flex}.inline-flex{display:inline-flex}.table{display:table}.grid{display:grid}.hidden{display:none}.h-10{height:2.5rem}.h-12{height:3rem}.h-16{height:4rem}.h-2{height:.5rem}.h-2\.5{height:.625rem}.h-20{height:5rem}.h-4{height:1rem}.h-5{height:1.25rem}.h-6{height:1.5rem}.h-7{height:1.75rem}.h-8{height:2rem}.h-full{height:100%}.h-screen{height:100vh}.max-h-\[90vh\]{max-height:90vh}.min-h-\[120px\]{min-height:120px}.min-h-\[297mm\]{min-height:297mm}.min-h-screen{min-height:100vh}.w-0{width:0px}.w-1\/3{width:33.333333%}.w-10{width:2.5rem}.w-12{width:3rem}.w-16{width:4rem}.w-2{width:.5rem}.w-2\.5{width:.625rem}.w-2\/3{width:66.666667%}.w-20{width:5rem}.w-3\/4{width:75%}.w-32{width:8rem}.w-4{width:1rem}.w-48{width:12rem}.w-5{width:1.25rem}.w-6{width:1.5rem}.w-64{width:16rem}.w-7{width:1.75rem}.w-72{width:18rem}.w-8{width:2rem}.w-96{width:24rem}.w-auto{width:auto}.w-full{width:100%}.min-w-0{min-width:0px}.min-w-full{min-width:100%}.max-w-2xl{max-width:42rem}.max-w-4xl{max-width:56rem}.max-w-5xl{max-width:64rem}.max-w-7xl{max-width:80rem}.max-w-\[210mm\]{max-width:210mm}.max-w-full{max-width:100%}.max-w-lg{max-width:32rem}.max-w-md{max-width:28rem}.max-w-sm{max-width:24rem}.max-w-xl{max-width:36rem}.max-w-xs{max-width:20rem}.flex-1{flex:1 1 0%}.flex-shrink-0,.shrink-0{flex-shrink:0}.flex-grow{flex-grow:1}.origin-bottom{transform-origin:bottom}.origin-top{transform-origin:top}.-translate-y-1\/2{--tw-translate-y: -50%;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.translate-y-0{--tw-translate-y: 0px;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.translate-y-2{--tw-translate-y: .5rem;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.translate-y-4{--tw-translate-y: 1rem;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.rotate-180{--tw-rotate: 180deg;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.scale-100{--tw-scale-x: 1;--tw-scale-y: 1;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.scale-90{--tw-scale-x: .9;--tw-scale-y: .9;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.scale-95{--tw-scale-x: .95;--tw-scale-y: .95;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.transform{transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}@keyframes spin{to{transform:rotate(360deg)}}.animate-spin{animation:spin 1s linear infinite}.cursor-default{cursor:default}.cursor-pointer{cursor:pointer}.resize{resize:both}.list-inside{list-style-position:inside}.list-decimal{list-style-type:decimal}.list-disc{list-style-type:disc}.break-inside-avoid{-moz-column-break-inside:avoid;break-inside:avoid}.grid-cols-1{grid-template-columns:repeat(1,minmax(0,1fr))}.grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}.grid-cols-3{grid-template-columns:repeat(3,minmax(0,1fr))}.flex-col{flex-direction:column}.flex-wrap{flex-wrap:wrap}.items-start{align-items:flex-start}.items-center{align-items:center}.justify-end{justify-content:flex-end}.justify-center{justify-content:center}.justify-between{justify-content:space-between}.justify-items-center{justify-items:center}.gap-1{gap:.25rem}.gap-12{gap:3rem}.gap-2{gap:.5rem}.gap-3{gap:.75rem}.gap-4{gap:1rem}.gap-6{gap:1.5rem}.gap-x-8{-moz-column-gap:2rem;column-gap:2rem}.gap-y-6{row-gap:1.5rem}.space-x-1>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(.25rem * var(--tw-space-x-reverse));margin-left:calc(.25rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-2>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(.5rem * var(--tw-space-x-reverse));margin-left:calc(.5rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-3>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(.75rem * var(--tw-space-x-reverse));margin-left:calc(.75rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-4>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(1rem * var(--tw-space-x-reverse));margin-left:calc(1rem * calc(1 - var(--tw-space-x-reverse)))}.space-y-1>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(.25rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(.25rem * var(--tw-space-y-reverse))}.space-y-2>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(.5rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(.5rem * var(--tw-space-y-reverse))}.space-y-3>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(.75rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(.75rem * var(--tw-space-y-reverse))}.space-y-4>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(1rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(1rem * var(--tw-space-y-reverse))}.space-y-6>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(1.5rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(1.5rem * var(--tw-space-y-reverse))}.space-y-8>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(2rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(2rem * var(--tw-space-y-reverse))}.divide-y>:not([hidden])~:not([hidden]){--tw-divide-y-reverse: 0;border-top-width:calc(1px * calc(1 - var(--tw-divide-y-reverse)));border-bottom-width:calc(1px * var(--tw-divide-y-reverse))}.divide-gray-200>:not([hidden])~:not([hidden]){--tw-divide-opacity: 1;border-color:rgb(229 231 235 / var(--tw-divide-opacity, 1))}.self-center{align-self:center}.overflow-hidden{overflow:hidden}.overflow-x-auto{overflow-x:auto}.overflow-y-auto{overflow-y:auto}.overflow-y-hidden{overflow-y:hidden}.truncate{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.whitespace-nowrap{white-space:nowrap}.whitespace-pre-wrap{white-space:pre-wrap}.rounded{border-radius:.25rem}.rounded-full{border-radius:9999px}.rounded-lg{border-radius:.5rem}.rounded-md{border-radius:.375rem}.rounded-l-md{border-top-left-radius:.375rem;border-bottom-left-radius:.375rem}.rounded-r-md{border-top-right-radius:.375rem;border-bottom-right-radius:.375rem}.border{border-width:1px}.border-b{border-bottom-width:1px}.border-b-2{border-bottom-width:2px}.border-l-2{border-left-width:2px}.border-l-4{border-left-width:4px}.border-r{border-right-width:1px}.border-t{border-top-width:1px}.border-t-2{border-top-width:2px}.border-dotted{border-style:dotted}.border-amber-200{--tw-border-opacity: 1;border-color:rgb(253 230 138 / var(--tw-border-opacity, 1))}.border-black{--tw-border-opacity: 1;border-color:rgb(0 0 0 / var(--tw-border-opacity, 1))}.border-blue-200{--tw-border-opacity: 1;border-color:rgb(191 219 254 / var(--tw-border-opacity, 1))}.border-blue-400{--tw-border-opacity: 1;border-color:rgb(96 165 250 / var(--tw-border-opacity, 1))}.border-blue-500{--tw-border-opacity: 1;border-color:rgb(59 130 246 / var(--tw-border-opacity, 1))}.border-blue-600{--tw-border-opacity: 1;border-color:rgb(37 99 235 / var(--tw-border-opacity, 1))}.border-gray-200{--tw-border-opacity: 1;border-color:rgb(229 231 235 / var(--tw-border-opacity, 1))}.border-gray-300{--tw-border-opacity: 1;border-color:rgb(209 213 219 / var(--tw-border-opacity, 1))}.border-gray-700{--tw-border-opacity: 1;border-color:rgb(55 65 81 / var(--tw-border-opacity, 1))}.border-green-200{--tw-border-opacity: 1;border-color:rgb(187 247 208 / var(--tw-border-opacity, 1))}.border-green-400{--tw-border-opacity: 1;border-color:rgb(74 222 128 / var(--tw-border-opacity, 1))}.border-green-500{--tw-border-opacity: 1;border-color:rgb(34 197 94 / var(--tw-border-opacity, 1))}.border-indigo-400{--tw-border-opacity: 1;border-color:rgb(129 140 248 / var(--tw-border-opacity, 1))}.border-primary-200{--tw-border-opacity: 1;border-color:rgb(186 230 253 / var(--tw-border-opacity, 1))}.border-red-200{--tw-border-opacity: 1;border-color:rgb(254 202 202 / var(--tw-border-opacity, 1))}.border-red-400{--tw-border-opacity: 1;border-color:rgb(248 113 113 / var(--tw-border-opacity, 1))}.border-red-500{--tw-border-opacity: 1;border-color:rgb(239 68 68 / var(--tw-border-opacity, 1))}.border-transparent{border-color:transparent}.border-violet-600{--tw-border-opacity: 1;border-color:rgb(124 58 237 / var(--tw-border-opacity, 1))}.border-yellow-400{--tw-border-opacity: 1;border-color:rgb(250 204 21 / var(--tw-border-opacity, 1))}.border-yellow-500{--tw-border-opacity: 1;border-color:rgb(234 179 8 / var(--tw-border-opacity, 1))}.bg-amber-50{--tw-bg-opacity: 1;background-color:rgb(255 251 235 / var(--tw-bg-opacity, 1))}.bg-black{--tw-bg-opacity: 1;background-color:rgb(0 0 0 / var(--tw-bg-opacity, 1))}.bg-blue-100{--tw-bg-opacity: 1;background-color:rgb(219 234 254 / var(--tw-bg-opacity, 1))}.bg-blue-200{--tw-bg-opacity: 1;background-color:rgb(191 219 254 / var(--tw-bg-opacity, 1))}.bg-blue-50{--tw-bg-opacity: 1;background-color:rgb(239 246 255 / var(--tw-bg-opacity, 1))}.bg-blue-500{--tw-bg-opacity: 1;background-color:rgb(59 130 246 / var(--tw-bg-opacity, 1))}.bg-gray-100{--tw-bg-opacity: 1;background-color:rgb(243 244 246 / var(--tw-bg-opacity, 1))}.bg-gray-200{--tw-bg-opacity: 1;background-color:rgb(229 231 235 / var(--tw-bg-opacity, 1))}.bg-gray-300{--tw-bg-opacity: 1;background-color:rgb(209 213 219 / var(--tw-bg-opacity, 1))}.bg-gray-400{--tw-bg-opacity: 1;background-color:rgb(156 163 175 / var(--tw-bg-opacity, 1))}.bg-gray-50{--tw-bg-opacity: 1;background-color:rgb(249 250 251 / var(--tw-bg-opacity, 1))}.bg-gray-500{--tw-bg-opacity: 1;background-color:rgb(107 114 128 / var(--tw-bg-opacity, 1))}.bg-gray-600{--tw-bg-opacity: 1;background-color:rgb(75 85 99 / var(--tw-bg-opacity, 1))}.bg-gray-800{--tw-bg-opacity: 1;background-color:rgb(31 41 55 / var(--tw-bg-opacity, 1))}.bg-gray-900{--tw-bg-opacity: 1;background-color:rgb(17 24 39 / var(--tw-bg-opacity, 1))}.bg-green-100{--tw-bg-opacity: 1;background-color:rgb(220 252 231 / var(--tw-bg-opacity, 1))}.bg-green-50{--tw-bg-opacity: 1;background-color:rgb(240 253 244 / var(--tw-bg-opacity, 1))}.bg-green-500{--tw-bg-opacity: 1;background-color:rgb(34 197 94 / var(--tw-bg-opacity, 1))}.bg-green-600{--tw-bg-opacity: 1;background-color:rgb(22 163 74 / var(--tw-bg-opacity, 1))}.bg-indigo-100{--tw-bg-opacity: 1;background-color:rgb(224 231 255 / var(--tw-bg-opacity, 1))}.bg-indigo-50{--tw-bg-opacity: 1;background-color:rgb(238 242 255 / var(--tw-bg-opacity, 1))}.bg-indigo-600{--tw-bg-opacity: 1;background-color:rgb(79 70 229 / var(--tw-bg-opacity, 1))}.bg-orange-500{--tw-bg-opacity: 1;background-color:rgb(249 115 22 / var(--tw-bg-opacity, 1))}.bg-primary-100{--tw-bg-opacity: 1;background-color:rgb(224 242 254 / var(--tw-bg-opacity, 1))}.bg-primary-50{--tw-bg-opacity: 1;background-color:rgb(240 249 255 / var(--tw-bg-opacity, 1))}.bg-primary-50\/50{background-color:#f0f9ff80}.bg-primary-600{--tw-bg-opacity: 1;background-color:rgb(2 132 199 / var(--tw-bg-opacity, 1))}.bg-red-100{--tw-bg-opacity: 1;background-color:rgb(254 226 226 / var(--tw-bg-opacity, 1))}.bg-red-50{--tw-bg-opacity: 1;background-color:rgb(254 242 242 / var(--tw-bg-opacity, 1))}.bg-red-500{--tw-bg-opacity: 1;background-color:rgb(239 68 68 / var(--tw-bg-opacity, 1))}.bg-red-600{--tw-bg-opacity: 1;background-color:rgb(220 38 38 / var(--tw-bg-opacity, 1))}.bg-red-800{--tw-bg-opacity: 1;background-color:rgb(153 27 27 / var(--tw-bg-opacity, 1))}.bg-transparent{background-color:transparent}.bg-violet-50{--tw-bg-opacity: 1;background-color:rgb(245 243 255 / var(--tw-bg-opacity, 1))}.bg-violet-600{--tw-bg-opacity: 1;background-color:rgb(124 58 237 / var(--tw-bg-opacity, 1))}.bg-white{--tw-bg-opacity: 1;background-color:rgb(255 255 255 / var(--tw-bg-opacity, 1))}.bg-yellow-100{--tw-bg-opacity: 1;background-color:rgb(254 249 195 / var(--tw-bg-opacity, 1))}.bg-yellow-50{--tw-bg-opacity: 1;background-color:rgb(254 252 232 / var(--tw-bg-opacity, 1))}.bg-yellow-500{--tw-bg-opacity: 1;background-color:rgb(234 179 8 / var(--tw-bg-opacity, 1))}.bg-yellow-600{--tw-bg-opacity: 1;background-color:rgb(202 138 4 / var(--tw-bg-opacity, 1))}.bg-opacity-50{--tw-bg-opacity: .5}.bg-opacity-60{--tw-bg-opacity: .6}.bg-opacity-75{--tw-bg-opacity: .75}.bg-gradient-to-br{background-image:linear-gradient(to bottom right,var(--tw-gradient-stops))}.from-blue-50{--tw-gradient-from: #eff6ff var(--tw-gradient-from-position);--tw-gradient-to: rgb(239 246 255 / 0) var(--tw-gradient-to-position);--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to)}.from-gray-700{--tw-gradient-from: #374151 var(--tw-gradient-from-position);--tw-gradient-to: rgb(55 65 81 / 0) var(--tw-gradient-to-position);--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to)}.from-gray-700\/50{--tw-gradient-from: rgb(55 65 81 / .5) var(--tw-gradient-from-position);--tw-gradient-to: rgb(55 65 81 / 0) var(--tw-gradient-to-position);--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to)}.from-green-50{--tw-gradient-from: #f0fdf4 var(--tw-gradient-from-position);--tw-gradient-to: rgb(240 253 244 / 0) var(--tw-gradient-to-position);--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to)}.from-red-50{--tw-gradient-from: #fef2f2 var(--tw-gradient-from-position);--tw-gradient-to: rgb(254 242 242 / 0) var(--tw-gradient-to-position);--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to)}.via-transparent{--tw-gradient-to: rgb(0 0 0 / 0) var(--tw-gradient-to-position);--tw-gradient-stops: var(--tw-gradient-from), transparent var(--tw-gradient-via-position), var(--tw-gradient-to)}.to-blue-100{--tw-gradient-to: #dbeafe var(--tw-gradient-to-position)}.to-green-100{--tw-gradient-to: #dcfce7 var(--tw-gradient-to-position)}.to-red-100{--tw-gradient-to: #fee2e2 var(--tw-gradient-to-position)}.bg-center{background-position:center}.fill-current{fill:currentColor}.stroke-gray-400{stroke:#9ca3af}.stroke-gray-600{stroke:#4b5563}.stroke-red-500{stroke:#ef4444}.object-cover{-o-object-fit:cover;object-fit:cover}.p-0{padding:0}.p-0\.5{padding:.125rem}.p-1{padding:.25rem}.p-1\.5{padding:.375rem}.p-10{padding:2.5rem}.p-2{padding:.5rem}.p-3{padding:.75rem}.p-4{padding:1rem}.p-5{padding:1.25rem}.p-6{padding:1.5rem}.p-8{padding:2rem}.px-0{padding-left:0;padding-right:0}.px-1{padding-left:.25rem;padding-right:.25rem}.px-2{padding-left:.5rem;padding-right:.5rem}.px-2\.5{padding-left:.625rem;padding-right:.625rem}.px-3{padding-left:.75rem;padding-right:.75rem}.px-4{padding-left:1rem;padding-right:1rem}.px-6{padding-left:1.5rem;padding-right:1.5rem}.py-0\.5{padding-top:.125rem;padding-bottom:.125rem}.py-1{padding-top:.25rem;padding-bottom:.25rem}.py-1\.5{padding-top:.375rem;padding-bottom:.375rem}.py-12{padding-top:3rem;padding-bottom:3rem}.py-2{padding-top:.5rem;padding-bottom:.5rem}.py-3{padding-top:.75rem;padding-bottom:.75rem}.py-4{padding-top:1rem;padding-bottom:1rem}.py-5{padding-top:1.25rem;padding-bottom:1.25rem}.py-6{padding-top:1.5rem;padding-bottom:1.5rem}.py-8{padding-top:2rem;padding-bottom:2rem}.pb-1{padding-bottom:.25rem}.pb-4{padding-bottom:1rem}.pb-6{padding-bottom:1.5rem}.pl-10{padding-left:2.5rem}.pl-3{padding-left:.75rem}.pl-4{padding-left:1rem}.pr-3{padding-right:.75rem}.pr-4{padding-right:1rem}.pt-0\.5{padding-top:.125rem}.pt-1{padding-top:.25rem}.pt-12{padding-top:3rem}.pt-2{padding-top:.5rem}.pt-4{padding-top:1rem}.pt-6{padding-top:1.5rem}.pt-8{padding-top:2rem}.text-left{text-align:left}.text-center{text-align:center}.text-right{text-align:right}.text-start{text-align:start}.font-mono{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace}.font-sans{font-family:Inter,ui-sans-serif,system-ui,sans-serif,"Apple Color Emoji","Segoe UI Emoji",Segoe UI Symbol,"Noto Color Emoji"}.text-2xl{font-size:1.5rem;line-height:2rem}.text-3xl{font-size:1.875rem;line-height:2.25rem}.text-base{font-size:1rem;line-height:1.5rem}.text-lg{font-size:1.125rem;line-height:1.75rem}.text-sm{font-size:.875rem;line-height:1.25rem}.text-xl{font-size:1.25rem;line-height:1.75rem}.text-xs{font-size:.75rem;line-height:1rem}.font-bold{font-weight:700}.font-medium{font-weight:500}.font-normal{font-weight:400}.font-semibold{font-weight:600}.uppercase{text-transform:uppercase}.capitalize{text-transform:capitalize}.italic{font-style:italic}.leading-5{line-height:1.25rem}.leading-6{line-height:1.5rem}.leading-relaxed{line-height:1.625}.leading-tight{line-height:1.25}.tracking-wider{letter-spacing:.05em}.tracking-widest{letter-spacing:.1em}.text-amber-500{--tw-text-opacity: 1;color:rgb(245 158 11 / var(--tw-text-opacity, 1))}.text-amber-700{--tw-text-opacity: 1;color:rgb(180 83 9 / var(--tw-text-opacity, 1))}.text-amber-800{--tw-text-opacity: 1;color:rgb(146 64 14 / var(--tw-text-opacity, 1))}.text-black{--tw-text-opacity: 1;color:rgb(0 0 0 / var(--tw-text-opacity, 1))}.text-blue-500{--tw-text-opacity: 1;color:rgb(59 130 246 / var(--tw-text-opacity, 1))}.text-blue-600{--tw-text-opacity: 1;color:rgb(37 99 235 / var(--tw-text-opacity, 1))}.text-blue-700{--tw-text-opacity: 1;color:rgb(29 78 216 / var(--tw-text-opacity, 1))}.text-blue-800{--tw-text-opacity: 1;color:rgb(30 64 175 / var(--tw-text-opacity, 1))}.text-blue-900{--tw-text-opacity: 1;color:rgb(30 58 138 / var(--tw-text-opacity, 1))}.text-gray-200{--tw-text-opacity: 1;color:rgb(229 231 235 / var(--tw-text-opacity, 1))}.text-gray-300{--tw-text-opacity: 1;color:rgb(209 213 219 / var(--tw-text-opacity, 1))}.text-gray-400{--tw-text-opacity: 1;color:rgb(156 163 175 / var(--tw-text-opacity, 1))}.text-gray-500{--tw-text-opacity: 1;color:rgb(107 114 128 / var(--tw-text-opacity, 1))}.text-gray-600{--tw-text-opacity: 1;color:rgb(75 85 99 / var(--tw-text-opacity, 1))}.text-gray-700{--tw-text-opacity: 1;color:rgb(55 65 81 / var(--tw-text-opacity, 1))}.text-gray-800{--tw-text-opacity: 1;color:rgb(31 41 55 / var(--tw-text-opacity, 1))}.text-gray-900{--tw-text-opacity: 1;color:rgb(17 24 39 / var(--tw-text-opacity, 1))}.text-green-500{--tw-text-opacity: 1;color:rgb(34 197 94 / var(--tw-text-opacity, 1))}.text-green-600{--tw-text-opacity: 1;color:rgb(22 163 74 / var(--tw-text-opacity, 1))}.text-green-700{--tw-text-opacity: 1;color:rgb(21 128 61 / var(--tw-text-opacity, 1))}.text-green-800{--tw-text-opacity: 1;color:rgb(22 101 52 / var(--tw-text-opacity, 1))}.text-green-900{--tw-text-opacity: 1;color:rgb(20 83 45 / var(--tw-text-opacity, 1))}.text-indigo-600{--tw-text-opacity: 1;color:rgb(79 70 229 / var(--tw-text-opacity, 1))}.text-indigo-800{--tw-text-opacity: 1;color:rgb(55 48 163 / var(--tw-text-opacity, 1))}.text-orange-600{--tw-text-opacity: 1;color:rgb(234 88 12 / var(--tw-text-opacity, 1))}.text-primary-500{--tw-text-opacity: 1;color:rgb(14 165 233 / var(--tw-text-opacity, 1))}.text-primary-600{--tw-text-opacity: 1;color:rgb(2 132 199 / var(--tw-text-opacity, 1))}.text-primary-700{--tw-text-opacity: 1;color:rgb(3 105 161 / var(--tw-text-opacity, 1))}.text-primary-800{--tw-text-opacity: 1;color:rgb(7 89 133 / var(--tw-text-opacity, 1))}.text-red-500{--tw-text-opacity: 1;color:rgb(239 68 68 / var(--tw-text-opacity, 1))}.text-red-600{--tw-text-opacity: 1;color:rgb(220 38 38 / var(--tw-text-opacity, 1))}.text-red-700{--tw-text-opacity: 1;color:rgb(185 28 28 / var(--tw-text-opacity, 1))}.text-red-800{--tw-text-opacity: 1;color:rgb(153 27 27 / var(--tw-text-opacity, 1))}.text-violet-600{--tw-text-opacity: 1;color:rgb(124 58 237 / var(--tw-text-opacity, 1))}.text-violet-700{--tw-text-opacity: 1;color:rgb(109 40 217 / var(--tw-text-opacity, 1))}.text-white{--tw-text-opacity: 1;color:rgb(255 255 255 / var(--tw-text-opacity, 1))}.text-yellow-500{--tw-text-opacity: 1;color:rgb(234 179 8 / var(--tw-text-opacity, 1))}.text-yellow-600{--tw-text-opacity: 1;color:rgb(202 138 4 / var(--tw-text-opacity, 1))}.text-yellow-700{--tw-text-opacity: 1;color:rgb(161 98 7 / var(--tw-text-opacity, 1))}.text-yellow-800{--tw-text-opacity: 1;color:rgb(133 77 14 / var(--tw-text-opacity, 1))}.underline{text-decoration-line:underline}.antialiased{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.opacity-0{opacity:0}.opacity-100{opacity:1}.opacity-25{opacity:.25}.opacity-75{opacity:.75}.shadow{--tw-shadow: 0 1px 3px 0 rgb(0 0 0 / .1), 0 1px 2px -1px rgb(0 0 0 / .1);--tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}.shadow-2xl{--tw-shadow: 0 25px 50px -12px rgb(0 0 0 / .25);--tw-shadow-colored: 0 25px 50px -12px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}.shadow-inner{--tw-shadow: inset 0 2px 4px 0 rgb(0 0 0 / .05);--tw-shadow-colored: inset 0 2px 4px 0 var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}.shadow-lg{--tw-shadow: 0 10px 15px -3px rgb(0 0 0 / .1), 0 4px 6px -4px rgb(0 0 0 / .1);--tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}.shadow-md{--tw-shadow: 0 4px 6px -1px rgb(0 0 0 / .1), 0 2px 4px -2px rgb(0 0 0 / .1);--tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}.shadow-sm{--tw-shadow: 0 1px 2px 0 rgb(0 0 0 / .05);--tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}.shadow-xl{--tw-shadow: 0 20px 25px -5px rgb(0 0 0 / .1), 0 8px 10px -6px rgb(0 0 0 / .1);--tw-shadow-colored: 0 20px 25px -5px var(--tw-shadow-color), 0 8px 10px -6px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}.shadow-gray-500{--tw-shadow-color: #6b7280;--tw-shadow: var(--tw-shadow-colored)}.shadow-gray-500\/20{--tw-shadow-color: rgb(107 114 128 / .2);--tw-shadow: var(--tw-shadow-colored)}.ring-1{--tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow, 0 0 #0000)}.ring-inset{--tw-ring-inset: inset}.ring-black{--tw-ring-opacity: 1;--tw-ring-color: rgb(0 0 0 / var(--tw-ring-opacity, 1))}.ring-gray-300{--tw-ring-opacity: 1;--tw-ring-color: rgb(209 213 219 / var(--tw-ring-opacity, 1))}.ring-gray-400{--tw-ring-opacity: 1;--tw-ring-color: rgb(156 163 175 / var(--tw-ring-opacity, 1))}.ring-white{--tw-ring-opacity: 1;--tw-ring-color: rgb(255 255 255 / var(--tw-ring-opacity, 1))}.ring-opacity-5{--tw-ring-opacity: .05}.filter{filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}.backdrop-blur-sm{--tw-backdrop-blur: blur(4px);-webkit-backdrop-filter:var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);backdrop-filter:var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia)}.transition{transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,-webkit-backdrop-filter;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter,-webkit-backdrop-filter;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.transition-all{transition-property:all;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.transition-colors{transition-property:color,background-color,border-color,text-decoration-color,fill,stroke;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.transition-opacity{transition-property:opacity;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.transition-transform{transition-property:transform;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.duration-100{transition-duration:.1s}.duration-150{transition-duration:.15s}.duration-200{transition-duration:.2s}.duration-300{transition-duration:.3s}.duration-75{transition-duration:75ms}.ease-in{transition-timing-function:cubic-bezier(.4,0,1,1)}.ease-in-out{transition-timing-function:cubic-bezier(.4,0,.2,1)}.ease-linear{transition-timing-function:linear}.ease-out{transition-timing-function:cubic-bezier(0,0,.2,1)}nav[x-data]{font-size:.925rem}nav[x-data] a svg,nav[x-data] button svg{height:1.25rem;width:1.25rem}nav[x-data] .group .mr-3 svg{color:#6b7280}nav[x-data] .group:hover .mr-3 svg{color:#374151}nav[x-data] .sub-link-icon svg{color:inherit}.sub-link-icon-wrapper{display:inline-flex;align-items:center;justify-content:center;height:1.5rem;width:1.5rem;border-radius:9999px;border:1px solid #d1d5db;transition:all .2s ease-in-out}.sub-link-icon-wrapper svg{height:inherit!important;width:inherit!important;color:#6b7280;transition:color .2s ease-in-out}a.active .sub-link-icon-wrapper{background-color:#0284c7;border-color:#0284c7}a.active .sub-link-icon-wrapper svg{color:#fff}@media print{body *{visibility:hidden}#print-area,#print-area *{visibility:visible}#print-area{position:absolute;left:0;top:0;width:100%;box-shadow:none!important;border:none!important}.print\:hidden{display:none!important}body,#print-area{font-size:10pt;background-color:#fff!important;-webkit-print-color-adjust:exact;print-color-adjust:exact}}.selection\:bg-red-500 *::-moz-selection{--tw-bg-opacity: 1;background-color:rgb(239 68 68 / var(--tw-bg-opacity, 1))}.selection\:bg-red-500 *::selection{--tw-bg-opacity: 1;background-color:rgb(239 68 68 / var(--tw-bg-opacity, 1))}.selection\:text-white *::-moz-selection{--tw-text-opacity: 1;color:rgb(255 255 255 / var(--tw-text-opacity, 1))}.selection\:text-white *::selection{--tw-text-opacity: 1;color:rgb(255 255 255 / var(--tw-text-opacity, 1))}.selection\:bg-red-500::-moz-selection{--tw-bg-opacity: 1;background-color:rgb(239 68 68 / var(--tw-bg-opacity, 1))}.selection\:bg-red-500::selection{--tw-bg-opacity: 1;background-color:rgb(239 68 68 / var(--tw-bg-opacity, 1))}.selection\:text-white::-moz-selection{--tw-text-opacity: 1;color:rgb(255 255 255 / var(--tw-text-opacity, 1))}.selection\:text-white::selection{--tw-text-opacity: 1;color:rgb(255 255 255 / var(--tw-text-opacity, 1))}.file\:mr-4::file-selector-button{margin-right:1rem}.file\:rounded-full::file-selector-button{border-radius:9999px}.file\:border-0::file-selector-button{border-width:0px}.file\:bg-primary-50::file-selector-button{--tw-bg-opacity: 1;background-color:rgb(240 249 255 / var(--tw-bg-opacity, 1))}.file\:bg-violet-50::file-selector-button{--tw-bg-opacity: 1;background-color:rgb(245 243 255 / var(--tw-bg-opacity, 1))}.file\:px-4::file-selector-button{padding-left:1rem;padding-right:1rem}.file\:py-2::file-selector-button{padding-top:.5rem;padding-bottom:.5rem}.file\:text-sm::file-selector-button{font-size:.875rem;line-height:1.25rem}.file\:font-semibold::file-selector-button{font-weight:600}.file\:text-primary-700::file-selector-button{--tw-text-opacity: 1;color:rgb(3 105 161 / var(--tw-text-opacity, 1))}.file\:text-violet-700::file-selector-button{--tw-text-opacity: 1;color:rgb(109 40 217 / var(--tw-text-opacity, 1))}.after\:inline-block:after{content:var(--tw-content);display:inline-block}.after\:h-1:after{content:var(--tw-content);height:.25rem}.after\:w-full:after{content:var(--tw-content);width:100%}.after\:border-4:after{content:var(--tw-content);border-width:4px}.after\:border-b:after{content:var(--tw-content);border-bottom-width:1px}.after\:border-gray-200:after{content:var(--tw-content);--tw-border-opacity: 1;border-color:rgb(229 231 235 / var(--tw-border-opacity, 1))}.after\:border-primary-600:after{content:var(--tw-content);--tw-border-opacity: 1;border-color:rgb(2 132 199 / var(--tw-border-opacity, 1))}.after\:content-\[\'\'\]:after{--tw-content: "";content:var(--tw-content)}.first\:ml-0:first-child{margin-left:0}.hover\:border-gray-300:hover{--tw-border-opacity: 1;border-color:rgb(209 213 219 / var(--tw-border-opacity, 1))}.hover\:bg-blue-100:hover{--tw-bg-opacity: 1;background-color:rgb(219 234 254 / var(--tw-bg-opacity, 1))}.hover\:bg-gray-100:hover{--tw-bg-opacity: 1;background-color:rgb(243 244 246 / var(--tw-bg-opacity, 1))}.hover\:bg-gray-200:hover{--tw-bg-opacity: 1;background-color:rgb(229 231 235 / var(--tw-bg-opacity, 1))}.hover\:bg-gray-300:hover{--tw-bg-opacity: 1;background-color:rgb(209 213 219 / var(--tw-bg-opacity, 1))}.hover\:bg-gray-50:hover{--tw-bg-opacity: 1;background-color:rgb(249 250 251 / var(--tw-bg-opacity, 1))}.hover\:bg-gray-700:hover{--tw-bg-opacity: 1;background-color:rgb(55 65 81 / var(--tw-bg-opacity, 1))}.hover\:bg-green-100:hover{--tw-bg-opacity: 1;background-color:rgb(220 252 231 / var(--tw-bg-opacity, 1))}.hover\:bg-green-700:hover{--tw-bg-opacity: 1;background-color:rgb(21 128 61 / var(--tw-bg-opacity, 1))}.hover\:bg-primary-100:hover{--tw-bg-opacity: 1;background-color:rgb(224 242 254 / var(--tw-bg-opacity, 1))}.hover\:bg-primary-200:hover{--tw-bg-opacity: 1;background-color:rgb(186 230 253 / var(--tw-bg-opacity, 1))}.hover\:bg-primary-700:hover{--tw-bg-opacity: 1;background-color:rgb(3 105 161 / var(--tw-bg-opacity, 1))}.hover\:bg-red-100:hover{--tw-bg-opacity: 1;background-color:rgb(254 226 226 / var(--tw-bg-opacity, 1))}.hover\:bg-red-50:hover{--tw-bg-opacity: 1;background-color:rgb(254 242 242 / var(--tw-bg-opacity, 1))}.hover\:bg-red-500:hover{--tw-bg-opacity: 1;background-color:rgb(239 68 68 / var(--tw-bg-opacity, 1))}.hover\:bg-red-700:hover{--tw-bg-opacity: 1;background-color:rgb(185 28 28 / var(--tw-bg-opacity, 1))}.hover\:bg-violet-100:hover{--tw-bg-opacity: 1;background-color:rgb(237 233 254 / var(--tw-bg-opacity, 1))}.hover\:bg-violet-700:hover{--tw-bg-opacity: 1;background-color:rgb(109 40 217 / var(--tw-bg-opacity, 1))}.hover\:bg-white:hover{--tw-bg-opacity: 1;background-color:rgb(255 255 255 / var(--tw-bg-opacity, 1))}.hover\:bg-yellow-100:hover{--tw-bg-opacity: 1;background-color:rgb(254 249 195 / var(--tw-bg-opacity, 1))}.hover\:bg-yellow-700:hover{--tw-bg-opacity: 1;background-color:rgb(161 98 7 / var(--tw-bg-opacity, 1))}.hover\:text-blue-600:hover{--tw-text-opacity: 1;color:rgb(37 99 235 / var(--tw-text-opacity, 1))}.hover\:text-gray-400:hover{--tw-text-opacity: 1;color:rgb(156 163 175 / var(--tw-text-opacity, 1))}.hover\:text-gray-500:hover{--tw-text-opacity: 1;color:rgb(107 114 128 / var(--tw-text-opacity, 1))}.hover\:text-gray-600:hover{--tw-text-opacity: 1;color:rgb(75 85 99 / var(--tw-text-opacity, 1))}.hover\:text-gray-700:hover{--tw-text-opacity: 1;color:rgb(55 65 81 / var(--tw-text-opacity, 1))}.hover\:text-gray-800:hover{--tw-text-opacity: 1;color:rgb(31 41 55 / var(--tw-text-opacity, 1))}.hover\:text-gray-900:hover{--tw-text-opacity: 1;color:rgb(17 24 39 / var(--tw-text-opacity, 1))}.hover\:text-green-600:hover{--tw-text-opacity: 1;color:rgb(22 163 74 / var(--tw-text-opacity, 1))}.hover\:text-primary-600:hover{--tw-text-opacity: 1;color:rgb(2 132 199 / var(--tw-text-opacity, 1))}.hover\:text-primary-800:hover{--tw-text-opacity: 1;color:rgb(7 89 133 / var(--tw-text-opacity, 1))}.hover\:text-red-600:hover{--tw-text-opacity: 1;color:rgb(220 38 38 / var(--tw-text-opacity, 1))}.hover\:text-red-700:hover{--tw-text-opacity: 1;color:rgb(185 28 28 / var(--tw-text-opacity, 1))}.hover\:text-violet-600:hover{--tw-text-opacity: 1;color:rgb(124 58 237 / var(--tw-text-opacity, 1))}.hover\:text-violet-900:hover{--tw-text-opacity: 1;color:rgb(76 29 149 / var(--tw-text-opacity, 1))}.hover\:text-yellow-600:hover{--tw-text-opacity: 1;color:rgb(202 138 4 / var(--tw-text-opacity, 1))}.hover\:underline:hover{text-decoration-line:underline}.hover\:ring-2:hover{--tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow, 0 0 #0000)}.hover\:ring-blue-500:hover{--tw-ring-opacity: 1;--tw-ring-color: rgb(59 130 246 / var(--tw-ring-opacity, 1))}.hover\:file\:bg-primary-100::file-selector-button:hover{--tw-bg-opacity: 1;background-color:rgb(224 242 254 / var(--tw-bg-opacity, 1))}.hover\:file\:bg-violet-100::file-selector-button:hover{--tw-bg-opacity: 1;background-color:rgb(237 233 254 / var(--tw-bg-opacity, 1))}.focus\:z-10:focus{z-index:10}.focus\:rounded-sm:focus{border-radius:.125rem}.focus\:border-blue-300:focus{--tw-border-opacity: 1;border-color:rgb(147 197 253 / var(--tw-border-opacity, 1))}.focus\:border-gray-300:focus{--tw-border-opacity: 1;border-color:rgb(209 213 219 / var(--tw-border-opacity, 1))}.focus\:border-indigo-500:focus{--tw-border-opacity: 1;border-color:rgb(99 102 241 / var(--tw-border-opacity, 1))}.focus\:border-indigo-700:focus{--tw-border-opacity: 1;border-color:rgb(67 56 202 / var(--tw-border-opacity, 1))}.focus\:border-primary-500:focus{--tw-border-opacity: 1;border-color:rgb(14 165 233 / var(--tw-border-opacity, 1))}.focus\:border-violet-500:focus{--tw-border-opacity: 1;border-color:rgb(139 92 246 / var(--tw-border-opacity, 1))}.focus\:bg-gray-100:focus{--tw-bg-opacity: 1;background-color:rgb(243 244 246 / var(--tw-bg-opacity, 1))}.focus\:bg-gray-700:focus{--tw-bg-opacity: 1;background-color:rgb(55 65 81 / var(--tw-bg-opacity, 1))}.focus\:text-gray-700:focus{--tw-text-opacity: 1;color:rgb(55 65 81 / var(--tw-text-opacity, 1))}.focus\:outline-none:focus{outline:2px solid transparent;outline-offset:2px}.focus\:outline:focus{outline-style:solid}.focus\:outline-2:focus{outline-width:2px}.focus\:outline-red-500:focus{outline-color:#ef4444}.focus\:ring:focus{--tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow, 0 0 #0000)}.focus\:ring-2:focus{--tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow, 0 0 #0000)}.focus\:ring-inset:focus{--tw-ring-inset: inset}.focus\:ring-indigo-500:focus{--tw-ring-opacity: 1;--tw-ring-color: rgb(99 102 241 / var(--tw-ring-opacity, 1))}.focus\:ring-primary-200:focus{--tw-ring-opacity: 1;--tw-ring-color: rgb(186 230 253 / var(--tw-ring-opacity, 1))}.focus\:ring-primary-500:focus{--tw-ring-opacity: 1;--tw-ring-color: rgb(14 165 233 / var(--tw-ring-opacity, 1))}.focus\:ring-red-500:focus{--tw-ring-opacity: 1;--tw-ring-color: rgb(239 68 68 / var(--tw-ring-opacity, 1))}.focus\:ring-red-600:focus{--tw-ring-opacity: 1;--tw-ring-color: rgb(220 38 38 / var(--tw-ring-opacity, 1))}.focus\:ring-violet-500:focus{--tw-ring-opacity: 1;--tw-ring-color: rgb(139 92 246 / var(--tw-ring-opacity, 1))}.focus\:ring-white:focus{--tw-ring-opacity: 1;--tw-ring-color: rgb(255 255 255 / var(--tw-ring-opacity, 1))}.focus\:ring-opacity-50:focus{--tw-ring-opacity: .5}.focus\:ring-offset-2:focus{--tw-ring-offset-width: 2px}.active\:bg-gray-100:active{--tw-bg-opacity: 1;background-color:rgb(243 244 246 / var(--tw-bg-opacity, 1))}.active\:bg-gray-900:active{--tw-bg-opacity: 1;background-color:rgb(17 24 39 / var(--tw-bg-opacity, 1))}.active\:bg-red-700:active{--tw-bg-opacity: 1;background-color:rgb(185 28 28 / var(--tw-bg-opacity, 1))}.active\:text-gray-500:active{--tw-text-opacity: 1;color:rgb(107 114 128 / var(--tw-text-opacity, 1))}.active\:text-gray-700:active{--tw-text-opacity: 1;color:rgb(55 65 81 / var(--tw-text-opacity, 1))}.disabled\:opacity-25:disabled{opacity:.25}.disabled\:opacity-50:disabled{opacity:.5}.group:hover .group-hover\:text-gray-700{--tw-text-opacity: 1;color:rgb(55 65 81 / var(--tw-text-opacity, 1))}.group:hover .group-hover\:text-gray-900{--tw-text-opacity: 1;color:rgb(17 24 39 / var(--tw-text-opacity, 1))}.group:hover .group-hover\:ring-gray-500{--tw-ring-opacity: 1;--tw-ring-color: rgb(107 114 128 / var(--tw-ring-opacity, 1))}@media (prefers-reduced-motion: no-preference){.motion-safe\:hover\:scale-\[1\.01\]:hover{--tw-scale-x: 1.01;--tw-scale-y: 1.01;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}}@media (min-width: 640px){.sm\:fixed{position:fixed}.sm\:right-0{right:0}.sm\:top-0{top:0}.sm\:mx-0{margin-left:0;margin-right:0}.sm\:mx-auto{margin-left:auto;margin-right:auto}.sm\:ml-0{margin-left:0}.sm\:ml-3{margin-left:.75rem}.sm\:ml-4{margin-left:1rem}.sm\:mt-0{margin-top:0}.sm\:mt-4{margin-top:1rem}.sm\:flex{display:flex}.sm\:hidden{display:none}.sm\:h-10{height:2.5rem}.sm\:w-10{width:2.5rem}.sm\:w-auto{width:auto}.sm\:w-full{width:100%}.sm\:max-w-2xl{max-width:42rem}.sm\:max-w-lg{max-width:32rem}.sm\:max-w-md{max-width:28rem}.sm\:max-w-sm{max-width:24rem}.sm\:max-w-xl{max-width:36rem}.sm\:flex-1{flex:1 1 0%}.sm\:translate-x-0{--tw-translate-x: 0px;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.sm\:translate-x-2{--tw-translate-x: .5rem;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.sm\:translate-y-0{--tw-translate-y: 0px;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.sm\:scale-100{--tw-scale-x: 1;--tw-scale-y: 1;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.sm\:scale-95{--tw-scale-x: .95;--tw-scale-y: .95;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.sm\:grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}.sm\:flex-row{flex-direction:row}.sm\:flex-row-reverse{flex-direction:row-reverse}.sm\:items-start{align-items:flex-start}.sm\:items-center{align-items:center}.sm\:justify-center{justify-content:center}.sm\:justify-between{justify-content:space-between}.sm\:rounded-lg{border-radius:.5rem}.sm\:p-6{padding:1.5rem}.sm\:p-8{padding:2rem}.sm\:px-0{padding-left:0;padding-right:0}.sm\:px-6{padding-left:1.5rem;padding-right:1.5rem}.sm\:pt-0{padding-top:0}.sm\:text-left{text-align:left}.sm\:text-right{text-align:right}}@media (min-width: 768px){.md\:col-span-2{grid-column:span 2 / span 2}.md\:mt-0{margin-top:0}.md\:block{display:block}.md\:hidden{display:none}.md\:w-1\/3{width:33.333333%}.md\:grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}.md\:grid-cols-3{grid-template-columns:repeat(3,minmax(0,1fr))}.md\:flex-row{flex-direction:row}.md\:items-end{align-items:flex-end}.md\:space-x-4>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(1rem * var(--tw-space-x-reverse));margin-left:calc(1rem * calc(1 - var(--tw-space-x-reverse)))}.md\:space-y-0>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(0px * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(0px * var(--tw-space-y-reverse))}.md\:p-8{padding:2rem}.md\:px-8{padding-left:2rem;padding-right:2rem}}@media (min-width: 1024px){.lg\:col-span-3{grid-column:span 3 / span 3}.lg\:grid-cols-3{grid-template-columns:repeat(3,minmax(0,1fr))}.lg\:grid-cols-4{grid-template-columns:repeat(4,minmax(0,1fr))}.lg\:gap-8{gap:2rem}.lg\:p-8{padding:2rem}.lg\:px-8{padding-left:2rem;padding-right:2rem}}.ltr\:origin-top-left:where([dir=ltr],[dir=ltr] *){transform-origin:top left}.ltr\:origin-top-right:where([dir=ltr],[dir=ltr] *){transform-origin:top right}.rtl\:origin-top-left:where([dir=rtl],[dir=rtl] *){transform-origin:top left}.rtl\:origin-top-right:where([dir=rtl],[dir=rtl] *){transform-origin:top right}.rtl\:flex-row-reverse:where([dir=rtl],[dir=rtl] *){flex-direction:row-reverse}@media (prefers-color-scheme: dark){.dark\:border-gray-600{--tw-border-opacity: 1;border-color:rgb(75 85 99 / var(--tw-border-opacity, 1))}.dark\:bg-gray-800{--tw-bg-opacity: 1;background-color:rgb(31 41 55 / var(--tw-bg-opacity, 1))}.dark\:bg-gray-800\/50{background-color:#1f293780}.dark\:bg-gray-900{--tw-bg-opacity: 1;background-color:rgb(17 24 39 / var(--tw-bg-opacity, 1))}.dark\:bg-red-800\/20{background-color:#991b1b33}.dark\:bg-gradient-to-bl{background-image:linear-gradient(to bottom left,var(--tw-gradient-stops))}.dark\:text-gray-100{--tw-text-opacity: 1;color:rgb(243 244 246 / var(--tw-text-opacity, 1))}.dark\:text-gray-200{--tw-text-opacity: 1;color:rgb(229 231 235 / var(--tw-text-opacity, 1))}.dark\:text-gray-300{--tw-text-opacity: 1;color:rgb(209 213 219 / var(--tw-text-opacity, 1))}.dark\:text-gray-400{--tw-text-opacity: 1;color:rgb(156 163 175 / var(--tw-text-opacity, 1))}.dark\:text-gray-600{--tw-text-opacity: 1;color:rgb(75 85 99 / var(--tw-text-opacity, 1))}.dark\:text-green-400{--tw-text-opacity: 1;color:rgb(74 222 128 / var(--tw-text-opacity, 1))}.dark\:text-white{--tw-text-opacity: 1;color:rgb(255 255 255 / var(--tw-text-opacity, 1))}.dark\:shadow-none{--tw-shadow: 0 0 #0000;--tw-shadow-colored: 0 0 #0000;box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}.dark\:ring-1{--tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow, 0 0 #0000)}.dark\:ring-inset{--tw-ring-inset: inset}.dark\:ring-white\/5{--tw-ring-color: rgb(255 255 255 / .05)}.dark\:hover\:text-gray-100:hover{--tw-text-opacity: 1;color:rgb(243 244 246 / var(--tw-text-opacity, 1))}.dark\:hover\:text-gray-300:hover{--tw-text-opacity: 1;color:rgb(209 213 219 / var(--tw-text-opacity, 1))}.dark\:hover\:text-white:hover{--tw-text-opacity: 1;color:rgb(255 255 255 / var(--tw-text-opacity, 1))}.dark\:focus\:border-blue-700:focus{--tw-border-opacity: 1;border-color:rgb(29 78 216 / var(--tw-border-opacity, 1))}.dark\:focus\:border-blue-800:focus{--tw-border-opacity: 1;border-color:rgb(30 64 175 / var(--tw-border-opacity, 1))}.dark\:focus\:ring-offset-gray-800:focus{--tw-ring-offset-color: #1f2937}.dark\:active\:bg-gray-700:active{--tw-bg-opacity: 1;background-color:rgb(55 65 81 / var(--tw-bg-opacity, 1))}.dark\:active\:text-gray-300:active{--tw-text-opacity: 1;color:rgb(209 213 219 / var(--tw-text-opacity, 1))}}@media print{.print\:bg-white{--tw-bg-opacity: 1;background-color:rgb(255 255 255 / var(--tw-bg-opacity, 1))}.print\:p-0{padding:0}.print\:shadow-none{--tw-shadow: 0 0 #0000;--tw-shadow-colored: 0 0 #0000;box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}}

--- FIN DU FICHIER : ./public/build/assets/app-OWnoQ14L.css ---


////////////////////////////////////////////////////////////////
CHEMIN : ./public/build/manifest.json
////////////////////////////////////////////////////////////////

{
  "resources/css/app.css": {
    "file": "assets/app-OWnoQ14L.css",
    "src": "resources/css/app.css",
    "isEntry": true
  },
  "resources/js/app.js": {
    "file": "assets/app-CNv0O1K2.js",
    "name": "app",
    "src": "resources/js/app.js",
    "isEntry": true
  }
}
--- FIN DU FICHIER : ./public/build/manifest.json ---


////////////////////////////////////////////////////////////////
CHEMIN : ./public/css/tomselect-users.css
////////////////////////////////////////////////////////////////

/* Styles personnalis√©s pour TomSelect - S√©lection d'utilisateurs */

/* Conteneur principal */
.tomselect-users .ts-control {
    border: 1px solid #d1d5db;
    border-radius: 0.375rem;
    box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
    min-height: 42px;
    padding: 0.5rem;
    background-color: white;
    transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
}

.tomselect-users .ts-control:focus-within {
    border-color: #3b82f6;
    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
    outline: none;
}

/* Dropdown */
.tomselect-users .ts-dropdown {
    border: 1px solid #e5e7eb;
    border-radius: 0.375rem;
    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
    background-color: white;
    z-index: 1000;
    max-height: 300px;
    overflow-y: auto;
}

/* Options dans le dropdown */
.tomselect-users .ts-dropdown .option {
    padding: 0.75rem;
    cursor: pointer;
    border-bottom: 1px solid #f3f4f6;
    transition: background-color 0.15s ease-in-out;
}

.tomselect-users .ts-dropdown .option:hover {
    background-color: #f9fafb;
}

.tomselect-users .ts-dropdown .option.selected {
    background-color: #eff6ff;
    color: #1d4ed8;
}

.tomselect-users .ts-dropdown .option:last-child {
    border-bottom: none;
}

/* Cases √† cocher dans les options */
.tomselect-users .ts-dropdown .option input[type="checkbox"] {
    margin-right: 0.75rem;
    width: 1rem;
    height: 1rem;
    border-radius: 0.25rem;
    border: 1px solid #d1d5db;
    color: #3b82f6;
}

.tomselect-users .ts-dropdown .option input[type="checkbox"]:focus {
    ring: 2px;
    ring-color: #3b82f6;
    ring-opacity: 0.5;
}

/* Items s√©lectionn√©s */
.tomselect-users .ts-control .item {
    background-color: #dbeafe;
    color: #1e40af;
    border: 1px solid #bfdbfe;
    border-radius: 9999px;
    padding: 0.25rem 0.75rem;
    margin: 0.125rem;
    font-size: 0.75rem;
    font-weight: 500;
    display: inline-flex;
    align-items: center;
    gap: 0.25rem;
}

/* Bouton de suppression des items */
.tomselect-users .ts-control .item .remove {
    color: #1e40af;
    margin-left: 0.25rem;
    cursor: pointer;
    font-weight: bold;
    opacity: 0.7;
    transition: opacity 0.15s ease-in-out;
}

.tomselect-users .ts-control .item .remove:hover {
    opacity: 1;
}

/* Input de recherche */
.tomselect-users .ts-control input {
    border: none;
    outline: none;
    background: transparent;
    font-size: 0.875rem;
    min-width: 200px;
}

.tomselect-users .ts-control input::placeholder {
    color: #9ca3af;
}

/* Fl√®che dropdown */
.tomselect-users .ts-control .ts-control-arrow {
    color: #6b7280;
    transition: transform 0.15s ease-in-out;
}

.tomselect-users .ts-control.dropdown-active .ts-control-arrow {
    transform: rotate(180deg);
}

/* √âtat d√©sactiv√© */
.tomselect-users .ts-control.disabled {
    background-color: #f9fafb;
    color: #6b7280;
    cursor: not-allowed;
}

/* Responsive */
@media (max-width: 640px) {
    .tomselect-users .ts-dropdown {
        max-height: 200px;
    }
    
    .tomselect-users .ts-control input {
        min-width: 150px;
    }
}

/* Animation d'apparition du dropdown */
.tomselect-users .ts-dropdown {
    animation: fadeIn 0.15s ease-out;
}

@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translateY(-4px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

/* Am√©lioration de l'accessibilit√© */
.tomselect-users .ts-dropdown .option:focus {
    background-color: #eff6ff;
    outline: 2px solid #3b82f6;
    outline-offset: -2px;
}

/* Indicateur de chargement */
.tomselect-users .ts-control.loading::after {
    content: '';
    position: absolute;
    right: 12px;
    top: 50%;
    transform: translateY(-50%);
    width: 16px;
    height: 16px;
    border: 2px solid #e5e7eb;
    border-top: 2px solid #3b82f6;
    border-radius: 50%;
    animation: spin 1s linear infinite;
}

@keyframes spin {
    0% { transform: translateY(-50%) rotate(0deg); }
    100% { transform: translateY(-50%) rotate(360deg); }
}

/* Message "Aucun r√©sultat" */
.tomselect-users .ts-dropdown .no-results {
    padding: 1rem;
    text-align: center;
    color: #6b7280;
    font-style: italic;
}

/* Am√©lioration du contraste pour l'accessibilit√© */
.tomselect-users .ts-dropdown .option.active {
    background-color: #3b82f6;
    color: white;
}

.tomselect-users .ts-dropdown .option.active input[type="checkbox"] {
    border-color: white;
    background-color: white;
}


--- FIN DU FICHIER : ./public/css/tomselect-users.css ---


////////////////////////////////////////////////////////////////
CHEMIN : ./public/css/vehicle_handover_form.css
////////////////////////////////////////////////////////////////

/* Styles pour la fiche de remise de v√©hicule */
@page {
    size: A4;
    margin: 1cm;
}

body {
    font-family: Arial, sans-serif;
    font-size: 12px;
    line-height: 1.5;
    color: #333;
}

.header {
    text-align: center;
    margin-bottom: 20px;
    border-bottom: 2px solid #333;
    padding-bottom: 10px;
}

.header h1 {
    font-size: 18px;
    font-weight: bold;
    margin: 0;
    padding: 0;
}

.header .logo {
    max-height: 60px;
    margin-bottom: 10px;
}

.info-section {
    margin-bottom: 20px;
}

.info-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 10px;
}

.info-item {
    display: flex;
    margin-bottom: 5px;
}

.info-label {
    font-weight: bold;
    width: 150px;
}

.info-value {
    flex: 1;
}

.vehicle-sketch {
    border: 1px solid #ccc;
    padding: 10px;
    margin-bottom: 20px;
    display: flex;
}

.sketch-image {
    width: 60%;
    border: 1px dashed #999;
    height: 200px;
    background-color: #f9f9f9;
}

.observations {
    width: 40%;
    padding-left: 10px;
}

.observations textarea {
    width: 100%;
    height: 180px;
    border: 1px solid #ccc;
    padding: 5px;
}

.control-section {
    margin-bottom: 20px;
}

.control-section h2 {
    font-size: 14px;
    font-weight: bold;
    background-color: #eee;
    padding: 5px;
    margin-bottom: 10px;
}

.control-grid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 10px;
}

.control-item {
    display: flex;
    align-items: center;
    margin-bottom: 5px;
}

.control-label {
    flex: 1;
}

.control-options {
    display: flex;
    gap: 10px;
}

.control-option {
    display: flex;
    align-items: center;
    gap: 3px;
}

.signatures {
    margin-top: 30px;
    display: flex;
    justify-content: space-between;
}

.signature-box {
    width: 45%;
}

.signature-line {
    border-top: 1px solid #333;
    margin-top: 50px;
    padding-top: 5px;
    text-align: center;
    font-weight: bold;
}

.form-actions {
    margin-top: 20px;
    text-align: center;
    display: flex;
    gap: 10px;
    justify-content: center;
}

.btn {
    padding: 8px 15px;
    background-color: #4a6fdc;
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    font-weight: bold;
}

.btn-secondary {
    background-color: #6c757d;
}

@media print {
    .form-actions {
        display: none;
    }
    
    input, select, textarea {
        border: none !important;
        background: transparent !important;
    }
    
    .control-option input[type="radio"] {
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
        width: 12px;
        height: 12px;
        border: 1px solid #333;
        border-radius: 50%;
    }
    
    .control-option input[type="radio"]:checked {
        background-color: #333;
    }
    
    .signature-upload {
        display: none;
    }
}

--- FIN DU FICHIER : ./public/css/vehicle_handover_form.css ---


////////////////////////////////////////////////////////////////
CHEMIN : ./public/css/vehicle_handover_form.css:Zone.Identifier
////////////////////////////////////////////////////////////////

[ZoneTransfer]
ZoneId=3
ReferrerUrl=D:\GESTION DE FLOTTE\DÈfinir la Structure de Base de DonnÈes pour ZENFLEET.zip

--- FIN DU FICHIER : ./public/css/vehicle_handover_form.css:Zone.Identifier ---


////////////////////////////////////////////////////////////////
CHEMIN : ./public/favicon.ico
////////////////////////////////////////////////////////////////


--- FIN DU FICHIER : ./public/favicon.ico ---


////////////////////////////////////////////////////////////////
CHEMIN : ./public/images/car_sketch.png
////////////////////////////////////////////////////////////////

âPNG

   IHDR  r  Ô   –>2ï   gAMA  ±è¸a  
IiCCPsRGB IEC61966-2.1  HâùSwXì˜>ﬂ˜eVBÿ±ólÅ "#¨»Y¢í aÑ@≈Öà
VúHUƒÇ’
Hùà‚†(∏gAäàZãU\8Ó‹ßµ}zÔÌÌ˚◊˚ºÁúÁ¸ŒyœÄ&ëÊ¢j 9RÖ<:ÿèOHƒ…ΩÄH‡ ÊÀ¬g≈  yx~t∞?¸Øo  p’.$«·ˇÉ∫P&W  ë ‡"ÁêR ».T» » ∞S≥d
 î  ly|B" ™ ÏÙI> ÿ©ì‹ ÿ¢© ç ô(G$@ª `UÅR,¿¬ †¨@".¿ÆÄY∂2GÄΩ véXê@` ÄôB,Ã  8 CÕ L†0“ø‡©_pÖ∏H ¿ÀïÕóK“3∏ï–wÚ‡‚!‚¬l±Ba)f	‰"úóõ#HÁLŒ  ˘—¡˛8?êÁÊ‰·ÊfÁlÔÙ≈¢˛ko">!Òﬂ˛ºå NœÔ⁄_ÂÂ÷p«∞uøk©[ ⁄V hﬂ˘]3€	†Z
–z˘ãy8¸@û°P»<
Ì%b°Ω0„ã>ˇ3·o‡ã~ˆ¸@˛€z qö@ô≠¿£É˝qanvÆRéÁÀB1n˜Á#˛«Ö˝é)—‚4±\,äÒXâ∏P"M«yπRëD!…ï‚È2Òñ˝	ìw ¨ÜO¿N∂µÀl¿~ÓãX“v @~Û-åë g42y˜  ìø˘è@+ Õó§„  ºË\®îL∆  D†Å*∞A¡¨¿ú¡º¿aD@$¿<B‰Ä
°ñAT¿:ÿµ∞†ö·¥¡18Á‡\ÅÎp`û¬ºÜ	A»a!:àbéÿ"Œôé"aH4íÄ§ ÈàQ"≈»r§©Bjë]H#Ú-r9ç\@˙ê€» 2ä¸äºG1îÅ≤Q‘u@π®ä∆†s—t4]Äñ¢k—¥=Ä∂¢ß—KËut }äécÄ—1fåŸa\åáE`âX&«cÂX5Vè5cX7v¿ûaÔ$ãÄÏ^Ñ¬lÇêêGXLXC®%Ï#¥∫W	ÉÑ1¬'"ì®O¥%z˘ƒxb:±êXF¨&Ó!!û%^'_ìH$…í‰N
!%ê2IIkH€H-§S§>“iúL&Îêm…ﬁ‰≤Ä¨ óë∑êêOí˚…√‰∑:≈à‚L	¢$R§îJ5e?Â•ü2Bô†™QÕ©û‘™à:üZIm†vP/Sá©4uö%ÕõCÀ§-£’–öigi˜h/Èt∫	›ÉEó–ó“kËÈÁÈÉÙwÜÉ«Hb(k{ß∑/ôL¶”óô»T0◊2ôgòòoUX*ˆ*|ë ï:ïVï~ïÁ™TUsU?’y™T´U´^V}¶FU≥P„©	‘´’©Uª©6ÆŒRwRèPœQ_£æ_˝Ç˙c≤ÜÖF†ÜH£Tc∑∆ç!∆2eÒXB÷rVÎ,kòMb[≤˘ÏLv˚v/{LSCs™f¨fëfùÊqÕ∆±‡9ŸúJŒ!ŒŒ{--?-±÷j≠f≠~≠7⁄z⁄æ⁄bÌrÌÌÎ⁄Ôupù@ù,ùı:m:˜u	∫6∫Q∫Ö∫€uœÍ>”cÎyÈ	ı ıÈ›—GımÙ£ıÍÔ÷Ô—7046êl18cÃêcËkòi∏—Ñ·®Àh∫ëƒh£—I£'∏&Óág„5x>f¨ob¨4ﬁe‹k<abi2€§ƒ§≈‰æ)Õîköf∫—¥”tÃÃ»,‹¨ÿ¨…Ïé9’úkûaæŸº€¸çÖ•Eú≈Jã6ã«ñ⁄ñ|ÀñMñ˜¨òV>VyVıV◊¨I÷\Î,Îm÷WlPWõõ:õÀ∂®≠õ≠ƒvõmﬂ‚è)“)ıSn⁄1Ï¸Ï
ÏöÏÌ9ˆaˆ%ˆmˆœÃ÷;t;|rtuÃvlpºÎ§·4√©ƒ©√ÈWgg°sùÛ5¶KêÀóvóSmßäßnüzÀïÂÓ∫“µ”ı£õªõ‹≠Ÿm‘›Ã=≈}´˚M.õ…]√=ÔAÙ˜X‚qÃ„ùßõß¬ÛêÁ/^v^Y^˚ΩO≥ú&û÷0m»€ƒ[‡ΩÀ{`:>=e˙ŒÈ>∆>üzüáæ¶æ"ﬂ=æ#~÷~ô~¸û˚;˙À˝è¯ø·yÚÒN`¡ÂΩÅÅ≥kô•5çª/>B	Yrìo¿Ú˘c3‹g,ö— ùZ˙0Ã&L÷éÜœﬂ~o¶˘LÈÃ∂à‡Glà∏iô˘})*2™.ÍQ¥Stqt˜,÷¨‰Y˚gΩéÒè©åπ;€j∂rvg¨jlRlcÏõ∏Ä∏™∏Åxá¯EÒót$	Ìâ‰ƒÿƒ=â„sÁlö3ú‰öTñtcÆÂ‹¢πÊÈŒÀûw<Y5Yê|8Öòó≤?ÂÉ BP/OÂßnMÚÑõÖOEæ¢ç¢Q±∑∏J<íÊùVïˆ8›;}C˙hÜOFu∆3	OR+yëíπ#ÛMVD÷ﬁ¨œŸqŸ-9îúîú£Riñ¥+◊0∑(∑Of++ì‰yÊm ìá ˜‰#˘sÛ€lÖL—£¥RÆPL/®+x[[x∏HΩHZ‘3ﬂf˛Í˘#Ç|Ωê∞P∏∞≥ÿ∏xYÒ‡"øEª#ãSw.1]R∫dxi“}ÀhÀ≤ñ˝P‚XRUÚjy‹ÚéRÉ“••C+ÇW4ï©î…ÀnÆÙZπcaïdUÔjó’[V*ï_¨p¨®Æ¯∞F∏Ê‚WN_’|ıym⁄⁄ﬁJ∑ ÌÎHÎ§În¨˜YøØJΩjA’–Ü≠ÒçÂ_mJﬁt°zjıéÕ¥Õ Õ5a5Ì[Ã∂¨€Ú°6£ˆzù]ÀV˝≠´∑æŸ&⁄÷ø›w{ÛÉ;ﬁÔîÏºµ+xWkΩE}ın“ÓÇ›èb∫øÊ~›∏GwO≈ûè{•{ˆEÔÎjtol‹Øøø≤	mR6çH:pÂõÄo⁄õÌöwµpZ*¬AÂ¡'ﬂ¶|{„PË°Œ√‹√Õﬂô∑ıÎHy+“:øu¨-£m†=°ΩÔËå£ù^Gæ∑ˇ~Ô1„cu«5èWû†ù(=Ò˘‰Çì„ßdßûùN?=‘ô‹y˜L¸ôk]Q]ΩgCœû?tÓL∑_˜…ÛﬁÁè]ºpÙ"˜b€%∑K≠=Æ=G~p˝·HØ[oÎe˜ÀÌW<ÆtÙMÎ;—Ô”˙j¿’s◊¯◊.]üyΩÔ∆Ï∑n&›∏%∫ı¯vˆÌw
ÓL‹]zèxØ¸æ⁄˝Í˙Í¥˛±e¿m‡¯`¿`œ√YÔ	áû˛îˇ”á·“GÃG’#F#çèùΩÚdŒì·ß≤ßœ ~VˇyÎs´Áﬂ˝‚˚KœX¸ÿ˘ãœøÆy©ÛrÔ´©Ø:«#«ºŒy=Ò¶¸≠Œ€}Ô∏Ô∫ﬂ«Ωô(¸@˛PÛ—˙c«ß–O˜>Á|˛¸/˜ÑÛ˚-G8œ    cHRM  z&  ÄÑ  ˙   ÄË  u0  Í`  :ò  pú∫Q<   	pHYs     öú  Ã-IDATxúÏ›yXîı˛ˇÒ'300Ä´¢ ÇÇäª¶(JÓπñejv4=ie«K[<ÂÈ€ﬁ)5=ô∂ÿr:û,Mm±Ãr%W‹˜QTQ`````f~¯ªÔ3*(Ô«uÕ‹sœ=üañ˚5ü’≈n∑€B!ÑNGS›B!Ñ7GÇúB!Ñìí 'ÑB·§$»	!ÑB8)	rB!ÑNJÇúB!Ñìí 'ÑB·§$»	!ÑB8)	rB!ÑNJÇúB!Ñìí 'ÑB·§$»	!ÑB8)	rB!ÑNJÇúB!Ñìí 'ÑB·§$»	!ÑB8)	rB!ÑNJÇúB!Ñìí 'ÑB·§$»	!ÑB8)	rB!ÑNJÇúB!Ñìí 'ÑB·§$»	!ÑB8)	rB!ÑNJÇúB!Ñìí 'ÑB·§$»	!ÑB8)	rB!ÑNJÇúB!Ñìr≠ÓÁc4´ªBà€¿jµñπ›ﬂﬂˇ6óDq-‰DÖlﬂæù	&X›EBT1õÕvÕÎncIÑ◊"ANTX`` ?ˇ¸suCQ≈ÆU#7lÿ0233•fNà@Çú®ê¸¸|ﬁﬁﬁ hµ⁄j.ë‚v2õÕx{{´üBàÍ%ÉÑB!úî9!ÑB'%AN!Ñ¬IIêB!ÑpR‰ÑB!úî9!ÑB'%AN!Ñ¬IIêB!ÑpR‰ÑB!úî9!ÑB'%AN!Ñ¬IIêB!ÑpR‰ÑB!úî9!ÑB'%AN!Ñ¬IIêB!ÑpR‰ÑB!úî9!ÑB'%AN!Ñ¬IIêB!ÑpR‰ÑB!úî9!ÑB'%AN!Ñ¬IIêB!ÑpR‰ÑB!úîku@!ÑˇcµZ’üéø+¥Zmô?ùÅ3ï’YHêB!™à…d‚ÏŸ≥ú>}ösÁŒëûûŒÂÀó1ôL‰ÂÂQPPÄŸl∆l6STTÑ›n«≈≈ õÕÜ›n/uLÂ˙´÷$Jô¨V+EEE∏∫∫‚ÌÌç∑∑7nnnh4||| 44î∞∞05jD˝˙ı1x{{KË+'	rB!ƒ-0ôLú8qÇCáq¸¯q.\∏@nn.©©©∏∫∫¢◊Î©WØÉÉ¡@@@ !!!DFF‚ÊÊÜªª;^^^xzz‚ÂÂÖ^ØGØ◊£”È 3W◊“9÷÷U5«Z¿Î’jµZ,&ì	ì…DNN˘˘˘‰ÊÊíüüè…d‚‚≈ãdffr‡A»œœ«jµb≥Ÿ∞Z≠—®Q#BBBàää¢EãÑÑÑ®˜q≠ˇO]#AN!Ñ®ÄuÎ÷±m€6.^ºHrr2πππ∏∫∫‚„„CPPAAADDD–Ø_?äãã±Z≠´õÕF~~>+WÆPØWöRÌv{âﬂŸl6 Ïvªzq‹^’4ö+]Î]\\Æ[#®‘&jµZt:]âãªª;ÓÓÓ<==	G£—®«vuuE£—êôôIff&{ˆÏ·œ?ˇ$++ ???BCCiŸ≤%={ˆ$::˙∂<ˆöJÇúBqÎ÷≠c˘ÚÂ§••qÈ“%	Fß”—ºysäãã’⁄¶åå“””Å+Åƒ’’OOO<<<‘⁄6OOO|}}Èﬂø?Z≠www<==’9<<<ÆY„‰}‰¨V+f≥ôºº<µ	9//è¸¸|Ãf3˘˘˘Í6ì…Dnn.999PPP@qq±h]\\pww',,777
…ÃÃ$>>û+V HØ^ΩÍd∞ì 'ÑB\E	oÀó/ßeÀñ4à––P Œù;GZZöZ@≥fÕh÷¨QQQ4j‘ooÔﬁ«ˆÌ€)**"??£—»ô3g»ÕÕ•†† ã≈BAAAU?Ã*Â··°T___¸¸¸

¬◊◊//ØÕ§eÖQ≥Ÿå—h$++ãÛÁœs‚ƒ	íììπxÒ"F£OOO’Á%))âŸ≥g0|¯p&LòP'Bù9!Ñuñ≈bAß”p‡Añ,Y¬ö5k8~¸8≈≈≈4i“Ñ:p‰»Œú9CXX:t`¬Ñ	¥n›Ω^ØˆS(}ÂíììIMMÂ“•KòL&Ãf3ÖÖÖÿl6<<<®WØ>>>ËızºººpssSkÒt:>>>∏∫:Ái⁄f≥QPP@NN$%%aµZ’øM&ì⁄<´†Q£FÑÜÜL´V≠‘m———ÙÔﬂ_=æ’je„∆çú8qÇÌ€∑ìëëAÀñ-π„é;ÿ∞aˇ˙◊øX∏p!]∫ta¬Ñ	å3¶ˇUÀ≈^÷ê!Æa„∆çÃô3á¸®ôU˙Bà™c6õ>|8+WÆTê≥2çŒü?œoº¡ˆÌ€…œœ«««wwwÙz=6õç˙ıÎ3n‹8Ñ…d¬`0 ®}∑>Ã≈ã’∞ÊÂÂÖèèç7¶q„∆4k÷å––PÙz=X≠V≤≥≥±X,‰ÁÁ´µr ÌÕfsâ`Ë¨t:^^^∏ªª„ÊÊ¶˙®WØÍ~EEE‰ÂÂqÈ“%Œù;Gjj™˛¥Z≠:‚µQ£F¥j’än›∫çNß√b±®ó~¯Åµk◊íööä’j•††ÄKó.°—h˜˜Wùøø?Áœü/Q#ËÃ$»â
ë 'D›VõÇ¿ºyÛ¯œ˛É^Ø'((àÙÙt,ÅÅÅ‹{ÔΩå=íììŸºy3{ˆÏ·¿Å‰ÂÂ·ÎÎKì&Mhﬁº9ëëë4n‹ò––P.]∫Dvv6'Nú %%Ö‘‘T233…ÕÕ•∞∞ê‚‚b‹‹‹pssCß”©ø{yy·ÌÌ≠éXU:ˇ;#õÕFqq1ÖÖÖX,¨V+ÈÈÈ‰ÂÂ©3îﬁﬁﬁ‘´Wè¿¿@5jDDD¡¡¡DDD`±X‘æáIII9rÑ‰‰d._æåØØ/¡¡¡ÙÌ€óòòö7o@rr2ˇ˘œXªv-6õ777¥Z-999X,-ZD«ékMòì '*DÇúu[m
r˝Î_9tË;v$''á£Gè‚ÔÔœC=ƒ#è<¬…ì'˘◊ø˛≈˛˝˚—jµ4j‘à;Ó∏Éû={Rø~}Ùz=áÊ·√=zî3gŒpÈ“%µ©4  Ä–®Q#ö5kFpp0ıÎ◊«ﬂﬂø‘@≥Ÿ¨étúÿô9NQr-ôôô§¶¶íööJRRÁœüÁ¬ÖòL&“””qss√€€õ∆ç”∫uk⁄µkGpp0ﬁﬁﬁÏ€∑è≥gœ≤a√íììqss£]ªvå5ä∏∏8 ﬁx„V¨XÅ’j%**
≠VKbb"ÛÊÕcÿ∞aú?û‡‡`ß>óIê"ANà∫≠∂πˇ˚øˇ„∑ﬂ~£Mõ6Ïÿ±´’ =˜‹√Ñ	XΩz5Àñ-√√√É~˝˙1vÏXÇÉÉ9zÙ(;vÏ`Î÷≠ú?û¸¸|uB€∂m€“∂m[Z¥hÅNßS˚Œ¡ïœI%ò…gÊµ)V˘_)Û–•§§p‡A8¿πsÁ0ôL—¥iSZ∑nÕÄh‘®'Nú`˝˙ıl‹∏ë‹‹\¿oºÅŸlÊëGa˚ˆÌ…¸A||<ëëëòL&ı˘*kçöŒ9{Q
!Ñ7)11ëeÀñG||<>>>|¯·áú;wéázàŒù;≥|˘rÇÇÇ¯Ûœ?yÛÕ79yÚ$ﬁﬁﬁDGG3j‘(Z¥h°ÆT†◊ÎÅˇù¯…’·@\€’5xzΩÉ¡@HH±±±@…ˇÌ ï+âèèÁßü~B´’Eﬂæ}ô:u*III|¯·á¥j’äW_}ïØæ˙äˇ˛˜øº˜ﬁ{ÏﬁΩõààFç≈û={0ôLx{{;ÌÛ$5r¢B§FNà∫≠6‘»2Äc«éÃ∑ﬂ~À˚ÔøOBBÒÒÒËt:&Möƒ…ì'16å{ÔΩó†††Î~Ê9Ü7˘l¨zJﬂ;Ω^OFF+WÆ‰ó_~!55ïvÌ⁄1m⁄44hù;wÊ£è>‚¯Ò„ÙÎ◊WWW¥Z-œ=˜c∆åQ˚%:rñÁ–y{R
!ÑîòòHrr2………≤q„Fﬁ~˚m>Ã÷≠[yÂïWËÿ±#:tPÁë?~|â~T&ìâÃÃLåF£:“Te*ÀF›éÀìY≠V¸˝˝3f?¸k÷¨°uÎ÷å9í7ﬂ|ìÑÑ._æÃ§IìÁªÔæ„ÚÂÀdeeÒﬂˇ˛W≠çs÷9iZBQg¨\πí¨¨,≤≤≤¯Ì∑ﬂ¯Ûœ?ŸΩ{7;wÓTÁ);tË–uèQû…~E’Rj=k—î&nÉ¡¿≥œ>À£è> „è?ŒùwﬁIbb"]ªvÂÎØøÊ±«c∆åÃò1É√ás˛¸yÇÇÇ™Î°‹2©ëBQg$&&íûûN˚ˆÌÈ”ß/æ¯"3gŒ§ˇ˛tÎ÷çuÎ÷UwE%Pö∏?ˇ¸sÜBœû=ô9s&_|ÒãÖ©SßÜ…db√ÜÍ˛ŒHÇúBà:·‰…ìú<yÄGyÑç7“°C÷Ø_ODDoΩıV5óPT&≠Vã^ØÁç7ﬁ‡é;Ó‡õoæ°U´V,^ºùN«‡¡É¯Ì∑ﬂ‘Iûùë9!Ñu¬ÂÀóIJJ†]ªv¨_øÄm€∂ÒŸgüUg—D%”jµòÕfıÔπsÁ™kŸ9r≠VK˚ˆÌÿπsß”ˆè	rB!Íà˝˚˜„ÎÎKTTæææ§ßß≥wÔ^∫uÎV›EU¿qre´’ à#8tË/^†a√Ü·‚‚Ç…d™Ê“ﬁ<Ï Ñ¢N8sÊ'N‰Ë—£xyyêïïEø~˝™πd¢*\=ùHdd$πππÍ:Øﬁﬁﬁ4k÷åzıÍëôôÈ¥ÉX$»	!Ñ®.]∫DNNûûûÑÖÖ—†AÉÍ.í∏ç|}}…ÕÕUCºááÉÅåå


™πt7OöVÎ8«jggÓ# Ñ7‚ÂÂÖãã4 --∏ÓD›p˘Úe
qww«jµRTTDPPó/_v⁄´ 5rµ&º‹Ï„∏˙≈ÎÃC∞ÖBq‡A6lÿÄøø?EEEÿl6ˆÏŸCPP°°° tÓ‹ª›Œæ}˚ËŸ≥ß|ˆ’bV´ï¥¥4äããi’™ DEE±fÕ>ˇ¸sö5kÜÕf√`0‡ÈÈ…=˜‹sK˜yª^Ou>»›åöˆføïı¸ ∫çcò´ièU! „ùwﬁ!33ì&Mö‡ÈÈâõõ«è'**JÌ#’∞aC‹››IMMï/±µòr~<zÙ(çÜ®®(¨V+6õç‚‚bºººÿ±cÖÖÖÿÌv<<<Xæ|9°°°tÏÿ±∫ãC‰ °¨7∑≈b¡b±‘®ÂXlæï€;í7!Ñ≥˙«?˛A\\pÂ≥lœû=\ºxën›∫aµZ	EØ◊sÙËQıÛ\‘NãÖ={ˆ‡ÂÂE”¶M—Èt—æ}{6m⁄ƒ¥i”∏ÎÆª∞X,Ík¬YHêª≥Ÿ¨^≤≤≤àèè'??ì…Daa!6õç¶ˆt5Ïÿ±#qqqÑÑÑTwQÑ‚ñú>}ö;Ó∏C˝¬}Ò‚EBBB‘>RÉNù:Â‘£≈çeddêííBxx8˛˛˛Íˆ‚‚bÍ’´«ﬁΩ{6lò∫ÏWNNN5ñ∂b$»]«ö5kX≤d	©©©·ÂÂEpp0æææËı˙5‚…f≥›‘Ì4çZΩ\\\L||<_˝5Áœüg…í%4oﬁºíK*Ñ∑áªªª˙ª“îÊÌÌ≠6µÈızZ¥h¡¶Mõ∏|˘2¡¡¡R+WK˘˚˚s˛¸yz˜Ó]bªF£¡≈≈•TÖåããÀm,›≠ë wï5k÷üˇ¸á£Gè“≤eKÜB∑n›h÷¨ô˙ÊØåéÕï5•È“b±®èÔ_ˇ˙˚€ﬂ¯Ì∑ﬂ‘ÖàÖ¬ô∏ππ©µqV´WWW
Å+¡Nß”—¶M÷Æ]À…ì'iŸ≤e5óXT6Â¸∫eÀÚÛÛÈﬁΩ{âsÆF£Q+4œÔ5Âº\‰å;ñ£Gè2d»/^¨nøï'ÙÙÈ”◊Ω^y·QPP†^
),,§®®HqUçFÉV´U_åéø´ﬂBØ«œœè&Mö–∏qc&ìâó^zâuÎ÷±wÔ^bbbúÍE-Ñ®ù<»gü}∆ﬁΩ{K]˜√3a¬Ñ€‹‹‹J|vÈt:ÚÛÛÅˇµbDGG„‚‚¬æ}˚0`Ä|q≠•vÓ‹â›n/±ä«’µp7™®yˇ˝˜YΩzu©Ìm€∂e¸¯Ò’60BÇWj·^zÈ•R(5T˘PHKK„‚≈ã$&&r˘Úe≤≥≥’j{oooµπÚ¬Ö%Bñ´´´z—h4ï“<ÎÊÊÜªª;nnn%.ø†w≠ ñùùMZZ˚ˆÌ#++ã«{LmNÌŸ≥'ﬂˇ=w‹qGâÅ7€å+Ñ7Îôgûa›∫uÙÔﬂüî∫˛…'üdÌ⁄µ|ÛÕ7Í6777ıÛ[©ë≥X,ÍıV´ï-Z†◊Î9q‚Ñ⁄*QÚ%∑Ê3ôL$%%©A;RûÔ.]∫îÿ~ıyÆˇ˛ Ãö5´‘Ò-Zƒ∏q„ò0aœ=˜\eΩ\Í|ê€±c/ΩÙ¸1111•Æwµôêê¿Å∏|˘24n‹òvÌ⁄°—h¿ÀÀÉ¡Ä∑∑∑˙≠Æ¶œSßU≥Ÿå≈b·ı◊_Á·á¶c«é:îøˇ˝Ô%˙åa∑€´±ƒBà∫¶WØ^¯¯¯pË–°kÓœƒâi”¶_}ıZ≠∂D9 É¡@^^………ÑÑÑNÛÊÕ	

‚ƒâÜ
óÕ1:*o˜«sDyŒ5=8÷ƒÚiµZˆÓ›K£FçV∑€l6vÓ‹©Ü6emV@=œÌŸ≥ÁÜ!M©âÎ‹π3[∂la≈ä¿çüœ ˙_’È ∑uÎVz˜ÓÕsœ=WfàÉ+o“˝˚˜ÛÛœ?£—hàããc¯·%^µ…≥œ>À{ÔΩ«kØΩFÎ÷≠qqqaœû=ÍU´’:U'P!ÑÛ:x O>˘$ÉÊÔˇ˚˜ü7oá‚’W_eÔﬁΩ<˛¯„eûLœù;W‚Ô:∞vÌZvÏÿqÕs¡µ\Îd|≠Èúî©´ ÙzΩ˙EŸl6´_™ïü‰ÂÂëóóGaa°⁄Ì∆d2a±X(**Æ%å‹Œì‡‡`µE»√√77∑?=<<–ÎıÍEy¨∑;Ïeffr˙ÙiÓæ˚ÓkfQ §\ÔÎÎÀ[oΩ\yñGbb"SßNeƒàjòªÍtêõ8q"‰‡¡ÉÙË—ÉπsÁñz¡dgg3p‡@zˆÏâŸlVk€î7”’/J«…tùeb]•¨4oﬁúÕõ7sˇ˝˜”∞aC‚„„’ ÁÿT[”kÖŒÎõoæa“§I‹q«¿ï¶’…œœ'((àfÕöœ§IìX∏pa©œıSßN±d…u{ÛÊÕYªv-			7re’¥)}´îœFã≈BZZ¡¡¡dffrÈ“%≤≥≥…ÃÃTª‚‰‰‰pÓ‹9rss1õÕÍO•u§∞∞êºº<µkéF£¡n∑cµZ)...ÿ™£•ƒÕÕM-õãããzQæª∏∏‡ÁÁáßß'çooo5jD`` :ùé‡„„ÉüüÉ???ººº‘V≠ :&$$`±X‘◊íbﬁºytÎ÷M}ä’´W≥fÕºΩΩ=z4SßN-˜}ÖÜÜ≤yÛfY∫t)˝˙ıª•≤óGùrO=ıßNù¬h4“πsgRRR1bù;wV˜πxÒ"ôôô¥lŸí§§$µmº®®órΩq~˚Ì∑*{ïMy≥0ÄÔøˇ∏“¯‰…ì¿ˇ™â]]ÎÏÀFQ˛¸ÛœÓ£àÙÙtddd\sˇÂÀó3gŒ ‚‚‚X∞`«è/µﬂçBDff&©©©§¶¶r˛¸y“””’KJJ
%ö˙l6õZK•’j—Îı∏ªª„ÌÌçªª;^^^xzz‚ÌÌçèèıÍ’√√√CéO˘Ç≠lw¸YUäãã’«§L_ïóóßÜ‘‹‹\äãã»ÀÀ#++ãÇÇ<à’jUÛπ∫∫¢”È‘Z<///|||0‘Ø_ü‡‡`7nLxx8ç7&((®¬M‡[∂l¡››ù>}˙îË.µ}˚v‚‚‚J˝Øî ⁄™U+RRR0çÂæœîîî
ï≠2‘…3Ú÷≠[˘Ï≥œàçç•††ÄîîÍ◊Ø\y<<<(((¿√√ÉÄÄ “““‘7ãßß'ÓÓÓX,\\\pssSGïöL&äããÒÛÛ#77ó‰‰dFè]Í˛gÃòAªvÌn˜√æ&Â[§Ú‚n‘®ëz]tt4{˜ÓUCúÚ8Ö¢*ç3ÜvÌ⁄ÒÀ/øp·¬Ö2˜YΩz5ﬁﬁﬁjs£›nßMõ6l‹∏ë¿¿@ñ/_^f[”¶MŸΩ{∑⁄îCPPê:∂¨ñññ∆πsÁ8}˙4III$''sÊÃ233………°∞∞PjJiª›NΩzı%((à†† ¸˝˝	¿œœè––P<<<–Ètxxx®5QŒ8rV	®JÛ±2±ÆcàUBmnn.F£ì…ƒŸ≥gπp·ÇZqíõõKff&ÁŒùcÀñ-¿ïêÓÍÍäááÉ___¸˝˝È‘©Mö4!<<ú¶Mõb0‘~né≠e˛˘'ıÎ◊ßc«éj´⁄_|°N ùìì£÷pZ≠V@\\Õõ7gÈ“•ƒ∆∆≤uÎV u2·‡‡`⁄∂m[Êˇ¢{˜Ó∑u–Cùr'N$66Äæ}˚rœ=˜œ˛ìã/Pø~}^zÈ•∑…ŒŒ&%%ÖCáqˆÏYäää0ôL`µZ1ôL\∫t	<<<(**BØ◊≥i”¶«…  ‚ÙÈ”ÑááWæ©T%eÙ*@õ6mhŸ≤%c«é-µ_Y\Z≠ñV≠Za2ô0ôLËı˙ﬂ¸Ñ¢*µi”Ü6m⁄\Û˙ó^zâá~ò∏∏8vÌ⁄Öüü:ùéÓ›ªÛœ˛Û∫«Ó‘©_~˘•Ùî~rsÊÃa⁄¥iÏÿ±Éîî<»æ}˚8{ˆ,πππÍä>nnn‘´W???ZµjEXXÕõ7ßyÛÊxzz‚ÂÂE@@@â>bµ˘≥”±2¿1àÍt:µ6À1Ï)◊9˛OÃf≥zæ)((‡¸˘Û§••ëññFzz:©©©jËKJJbÀñ-Íl^^^DFF“¶M:tË@ó.]

‚„è?Ê‰…ìLò0£—®Ü∑6´N”u5ã≈¬⁄µkyÓπÁÿ≤e£Gè&%%ÖÓ›ª≥zıj÷≠[WeˇÀä™sAÓ©ßû¬h4“†A˛˘œ™obÂ√‚◊_Â•ó^R∑ˇ¸Ûœ¨^ΩöSßN°”Èh‘®Ì€∑'00êî ¨∏—à%«!ÒPuTï†òöö —£GYæ|9ü~˙)Ωzı‚Õ7ﬂºfï™ÊFçaµZ…»» ""BùßN!™õøø?›∫u„Ãô3hµZ˙˜Ôœ∆ç9|¯0&L` î)l€∂≠Ã€ˆÏŸ≥ƒÌâ'≤wÔ^,X¿wﬂ}@zz:V´5jDó.]h—¢Õõ7'22Rmºô—Æu—µ¶¬rv ÃÄZ··ÿQ©›3õÕ$&&rË–!íííHKK„‡¡ÉÏÿ±≠V´6—^∏póˆNû<IVV:t†∞∞∞‘D¿V´ï¬/∞zıj⁄∂mKhh(p•ôv‡¡U˙™®:‰î&’¶Mõã’je«éÍ®î!CÜ√é;ò:u*ﬁﬁﬁÙÔﬂü^xÅ»»»
ﬂgM0|¯pzˆÏ©ˆ=Q˙\]^Âõ’ÂÀóâåå,’)T!™ÉÚôı⁄kØ—∑o_˙ˆÌÀG}ƒoø˝∆å3HOOÁÅ†Cáexàããc”¶M%öW;tË@ZZö∫Oü>}àââ!66ñ∞∞0u¥ÈıÊÊWﬁäè´ˇÔaaa‹ˇ˝hµZL&©©©Ï€∑èm€∂q‰»rrràââaË–°<xê|´’ û={		°c«é$$$î8Ô≠Zµägü}ñ˜ﬂüˇ˚ﬂ<òÁû{é˛˝˚3x`RRR™eÆ∏Î©ANyí^~˘ebcc’’,:ùéÔæ˚éÜr¸¯qû|ÚIåF#O?˝4è<Úì&M*qú;vp¯aŒú9¿˘ÛÁK‹ó›nWk◊îﬂˇæö2ï«µ¬—≠Ü&ex:\˘v£‘¬˝√<˝Ù”>úoæ˘¶ƒêÏ´ﬂTæææú8qÇÆ]ªRTTTc√©¢Óp¸‚˘Ë£è≤h—":uÍƒSO=≈W_}E˜Ó›Ÿø?„«èg“§I•VÉP∫≠Y≥Üòòé?Nhh(ü|ÚIô˜wı|qŒ∏îì≥*œú|ﬁﬁﬁj”ˆ®Q£‘ÌJ‡ü2eäz˚’´W”•Krrr‘Ûr£FçX∂loºÒ”¶M„’W_eÚ‰…jàªÛŒ;YΩzuâ	Åk s_ÎÉú2gœ˜ﬂè›nÁÈßüÊ•ó^¢a√ÜËt:é?Œ±c«®_ø>ù;w∆ﬂﬂü~˝˙Ò√3yÚd¨V+_}ıï:'LPPMö4Qèﬂ¨Y≥a´¨EéC≈û¸[ré}∂m€FßNùxˇ˝˜È”ß~¯!˝˚˜Áè?˛†_ø~ÂöRƒf≥…Ñ¿Bàjß,–Ètå3Ü-[∂‡ÈÈ…˛˝˚9x ±±±9rÑ_˝ïÒ„«”ø.]∫§6◊<¿º¯‚ã%F2ä⁄K©ºIII·À/ød˛¸˘ÍË·~¯ÅuÎ÷ÒƒOŸgüQTTƒsœ=«¢Eã0ú;wé;Ôº≥⁄ñ·∫ûZ‰oºÒ'Oû,5Iﬂ¸˘Û	#))â9sÊ˙ÎØ”†A&OûLFF˝Î_1b gŒúQk„‡ ‡ÖäR¬ô2œé„∂´›Í‰ª `á¥¥4∫uÎ∆˚Ôøœsœ=«Ó›ª<x0ü~˙i©πn§˘TQì]=±Î|@∑n›>|8ØºÚ
˛˛˛<˘‰ì º˜ﬁ{ 9rÑæ}˚™∑âéé.u\ÂmyÇùÑ?Á·‡ó.]B´’‚ÈÈ…7ﬂ|Éèè_|Ò_|ÒØæ˙*{ˆÏa—¢E<ò’´WÛŸgü›˛ÇóC≠r:ùéIì&¸oÏ‚‚b,_˝5˛˛˛<ı‘SòÕfæˇ˛{∂m€Ü’jeÏÿ±tÎ÷ç&Mö—G—¶Mö4iBœû=i’™@©~sWO\÷§¿∑ÛÕÔX√6n‹8æˇ˛{Ü ”O?Õá~»≥œ>ÀØø˛z€ #ÑUA´’ÚË£è≤rÂJZ∂l…G}ƒ˝˜ﬂœ]w›†.v~Í‘)µü4¸ÔÀ≤V´•a√Ü∑ø‡‚∂äèèW/..∆’’ïã/Úè¸Ém€∂1zÙhZ∑nç’jÂÖ^(≥Iµ¶©ıAÓ«dÀñ-9r§ƒˆp{Ï1≤≤≤(,,§ˇ˛Lû<ôIì&·ÌÌÕK/ΩDdd§‚vÏÿQie™H≥ }ˇ˝ÔπÎÆªx¯·á˘Í´ØJ\˜«0`¿ÄJª/!Ñ∏›¸q~˙È'4h†Œ
p◊]wq◊]w1m⁄4Nù:¿Å4h Gè≈ÀÀ´Z ,™_QQ›∫uc¸¯Ò¿ïiP“““ÒÒ ""¢F6©*j}êõ3gˇ¯«?0õÕx{{´}’vÓ‹IVV±±±ÑÑÑ0}˙tµCdRRÒÒÒÃö5ãÁüæRC\uÎ÷≠Gè%88òç7“≥gOZ¥h¡ﬁΩ{%»	!úﬁÇ=z4„∆çSõT8 \ô;Ã±âÕÒã≤t'©é=ZÊ¥aÔæ˚.Ì⁄µ√b±Lvv6£GèÆqs∆ï•VºrØU√5oﬁ< Óøˇ˛€6lHrr2˜›wΩ{˜¶®®àç7Ú‹sœ°”Èò>}:„«ègŒú9<ÒƒU^˛€©eÀñdgg„ÎÎKjjjô˚»®T!Ñ≥QÊãàà‡˛˚ÔÁ‘©Sx{{Û¬/TË8euçπ÷E‘.ó.]¬’’ïó_~ôªÓ∫ã-[∂®µt5Y≠Æë[∞`ÔΩ˜^âëõ6õç√Çò2e
F£ëé;“´W/ñ-[FQQnnnçF~¯·Í{ U†Q£FdggŒ—£G’ÌJsÉB8#eÉ≈b·Ôˇ;=zÙ‡û{Ó`⁄¥i ú;wÆÃœ:˘Ú*˛˛˜ø”ºysŒü?œ¸AXXiiiN‰jeçú…d‚o˚;v‰æ˚Ó+±üÕf#;;õoø˝ùNá´´+vªù∆çW¬ﬂ»ë#Y∫t©Z-_õïö)$$§ƒﬂÚ°&ÑpV ®”∑ﬁzã_˝ï¶Mõ™ÁÅ≤B\Ωzı‘€â∫…f≥©s¬>¸√tÍ‘âU´V1sÊÃj.Y˘‘ä9%x(sƒ§••±yÛfñ/_^bÈ∏≤◊∏q„		)±=00P]Æ,à´¨«Z◊HêB8+%êıÏŸìvÌ⁄©€◊Æ]K”¶MŸøâ˝•oú∞X,Ñáá3oﬁ<ººº8r‰˜ﬁ{/Õö5´Ó¢ïK≠y;.1ı˜øˇù>}˙îò#H	tIIIºÚ +eÜï>¯Äq„∆Òﬂˇ˛ógûyÊv_!D%“jµÃô3á˝˚˜”≥gO,XpÕ}ÂÀk›¶”È8zÙ(+V¨†sÁŒ\æ|ôßü~∫∫ãUnµ&»)Èn›∫ïì'OÚÓªÔb±XJtL˝·á‘âp°‰õ◊qaÂ∫\Ú°&Ñ®=¶OüŒ¶MõËŸ≥'_˝µ∫ ˚’§iµnRñ°|Ìµ◊∏ÛŒ;˘„è?xÒ≈KÙ≠ØÈjEê”Îıj≥Í+Øº¬C=Ñ∑∑∑⁄˘U´’¢”ÈX∏p°˙∑£‡‡`ˆÏŸ√]w›%µqBQã(√ï¡^&ìÈö˚^∏p·vI‘ŸŸŸh4é=äßß'ôôô¥lŸí®®®Í.ZÖ‘ä g4—Îı¸¸ÛœçF¶Nù
î\‰xÂ ï∏∫∫“µk◊RC«”““∏ÛŒ;©çBà⁄Ê«T◊\ΩtÈRuG‘çÜ¢¢"|||:t(áfŒú9•˙–◊tN‰¨V+ÉùN«;Ôº£Æ≠ß,¶¨ò?>Õõ7Á–°CeV°∑i”Fj„Ñ¢ñ2dõ6m¢oﬂæ|˝ı◊’]Qç¸¸¸Ä+7_}ı˘À_ÿ∞aO?˝4:ùùNÁTMÌN‰sÁŒ≈ÀÀãq„∆WÇúRÖæzıj¥Z-ßNù¬≈≈•Ã'h€∂mR'ÑµàcÎÀ¥i”0ôLÑÜÜ–∂m[ ÷Ø_œä+™≠å‚ˆ8}˙4 +V¨`’™U §ßß„ÍÍäNß√œœè#FTc	o^≠ô~‰´Øæ‚√?,1+∑^Ø«l6≥p·B6lHjjj©ı“l6ææælﬁºôˇ˚øˇ´é‚ﬂV………c6õi’™Z≠V]∂˛˜¡'CÚÖµÖr^Ë÷≠sÊÃa î)|ˆŸg4m⁄∏2ø‹≈ã´≥à¢
(Õ£V´777Nü>MFFzΩ´’ Æ]ªxÊôg¯¯„èŸπsg©€;K≠\≠8[œù;ó∞∞0zˆÏYÍ∫µk◊R\\LVV˜ﬁ{o©…pãää0ç¥h—¢Dßÿ⁄*??≠VãŸl∆››Ω∫ã#Ñ∑M`` çF\\\xË°áh◊ÆıÎ◊ØÓ¢â€$<<úp:wÓLtt4˛˘'©©©N’'Ójµ"»}ı’W◊\OÔßü~"((´’ §Iì(,,,qΩõõÙÓ›€©Üﬂ¨Kó.°◊Î’ıVÖ¢Æ∞X,DDD∞fÕ:vÏHjj*„∆ç„‚≈ã4lÿ∞∫ã'nÉ‹‹\˙ıÎGZZ4‡‰…ì4k÷å¨¨¨Í.⁄Ms˙ ˜ˆ€o_≥6n”¶M§§§PTTD∑n›∞Z≠óÿ«ÕÕ≠VK^^^©⁄∫⁄(55___.]∫DÉ™ª8Bq[y{{„ÎÎÀ‹πsâää¢Iì&•V µ[ÔﬁΩ	fﬁºyDFF‚ÊÊÜááGuÎ¶9}ê˚ÓªÔÆY∑yÛfÇÉÉπtÈO>˘$˚˜ÔØÛã√_ºx???≤≥≥Â®¢NquuU€ÿ±cŸ¥iaaaòÕf	ruHtt4âââ‹{ÔΩÿÌväääú¶?\Yú:»Ωı÷[◊¨çÉ+#Q5QQQÊŒùÎ‘’ßï!77çFCAA˛˛˛’]!Ñ∏m<<<(..&""Ç+V0uÍTNú8ÅááGâÈ™DÌv‰»Fé…™U´‘©HÇÇÇ™πT7œ©É‹“•KØY7wÓ\»»»`Ïÿ±òÕfé;FXXÿm.eÕbµZ…ÕÕ≈n∑◊â>ÅB°∞ŸlX≠VBCCyÊôg»  ‚ùwﬁ°^Ωz‰ÍàzıÍ1n‹8ö6m ∏q„®WØzΩﬁ©œáN‰nT∑a√ <==È⁄µ+Kñ,!((Hn^Wi4L&ìL/"Ñ®ì‹››±€Ì¯˘˘ÒÍ´ØíííBnn.F£õÕV›≈ULôOnÊÃôÍÚûãÖåååÍ-ÿ-p⁄≥˘“•KyÒ≈KµkkµZ6n‹àããF£ëÒ„«c4˘˛˚Ôy¸Ò«ÒÙÙ‰ÿ±cÍæuÅ’jE´’≤xÒb9vÏç7VøF£ë0!D≠£Ããyı¸ò≈≈≈Ü…d",,åààµ∆N´’JüπZ∆d2M@@ yyy¿ïÈ«îô,ºΩΩ´≥x∑ƒ)É‹¢EãÒÒ°WØ^eæŸñ/_NPPvªù°Cáb2ô∏|˘2CÜ°a√Ü|ˇ˝˜u&ƒ9⁄ºy3ëëëÏﬁΩõ6m⁄TwqÑ¢⁄(_^˚ÙÈ£ŒËÔÃ#E˘‹wﬂ}‹sœ=’]åJÂîAn÷¨Y<˛¯„•∂kµZíìì9{ˆ,EEE¥n›´’ _|Axx8:ùéâ'≤zıj<Xfm^m§,WvÊÃö4iBZZÉVCpqq1ÆÆµbë!Ñ∏&çFÉãã@ô≠˘˘˘∑ªH¢(Àw÷N‰î⁄∏Ò„«óy˝‚≈ãÒˆˆ&33ìâ'b±X¯„è?7nã///Nú8¡/ºÄŸlæÕ•ØZ≠ñï+W™è]Ø◊Æ^_\\\kC¨B(n‰<==owëƒm‚ÃMß7‚t’0ü~˙iôµqp%eoﬂæù†† |}}i‹∏1{˜Ó≈b±0`¿ Ãf3sÁŒ≈««á]ªvÒœ˛Ω^èááG≠2Z≠ñ˝˚˜Û÷[oÒÔˇõ«{å˚Ôøü‡‡`µà‘»	!Í«~r“/X‘Nuˆéèè'''ßDmú≤n®^ØgÀñ-hµZ.\∏¿£è>äV´ÂªÔæ£Mõ6X,¨V+;wÓ$$$ÑzıÍÒÈßüäF£!44¥Y’˘˜øˇÕ‹πsô5k.ƒ’’ï¡Éój-5rBà∫‡F5r¢ÓrÊs†S5≠Œú9ì—£GóÿfµZ—ÈtX≠V÷Æ]ã¡`@£—0d»åF#PoìêêÄªª;AAAhµZÊœüœ°Cá8|¯0<ÄS?ëeπÔæ˚X¥h_~˘%ﬂ|Û«é£ˇ˛:¥ƒí4vª]¶#B‘zJê≥Ÿl‰Í0«Áﬁn∑WcI*áS’»•§§∞j’™€233Ò˜˜'33ìÉ‚ÔÔOó.]–ÈtòL&,}˙Ù¡b±∞fÕ‚‚‚8x ŸŸŸDGGÛ›wﬂëùùM„∆ç±X,Í0ugˆ‘SOëòò»ò1c‰ŸgüEØ◊”≥gO^~˘ÂR√Îm6ÓÓÓ’\j!Ñ®ZÆÆÆh4Ïvªπ:§<S…8ÛyﬂiÇ‹‘©Sπ„é;Jl≥Z≠j∆ï+W‚„„CFF/ΩÙãÖœ>˚LΩçNßcˇ˛˝<ÛÃ3¨_øÚÚÚ6lV´U]kØ¢Û’î'ˇ»ë#,X∞ÄCáÀ+Øº¬è?˛»ﬁΩ{âää¢{˜ÓLû<πƒmÀÆªØ)èG!*õõõÆÆÆÿl∂2[!§e¢v≤Z≠ÍR\P≤FŒf≥9}?yßx’Z,÷Ø__*à(ÅK´’Ú«‡ÂÂE`` Õõ7«jµíòò»√?¿Í’´1Ïﬂøüì'O‚ÍÍ ˛˝˚’„(M¥ŒÙdöÕf∂n› _ˇ˙W&Núà∑∑7&L†∞∞ê◊_ù‘‘TÓπÁûx‚	Féâ≈b k2ÿAQ€96≠*Æ˛]&Æ}îs_Y§iı6Y∏p!˛˛˛tÌ⁄µƒvùNáŸlfﬂæ}§••@\\:ùé§§$,Ì€∑‡œ?ˇ$**äã/çõõ_|ÒCÜ!$$D]gØ¶øâï⁄√≈ã≥rÂJäää5j#Få`Õö5|˙Èß∏ªª√Äàãã√ﬂﬂˇÜ«ï 'Ñ®Ìî/±◊˙úw\ŸA‘^eÖ7g~Œù‚ÏΩlŸ2ûx‚â2Ø”Îı|ı’W`47nf≥ôˇ˚ﬂÙÓ›ã≈ÇNß„ÿ±c4à%KñO˜Ó›i–†c«éÂó_~¡€€õååårÖûÍr‡A>˙Ë#Nû<âøø?c«é%//èuÎ÷qÓ‹9ºººË÷≠§c«éhµZu \ˇÖ*ANQ(˝„îö8Âo≠V+˝Êj)´’zÕÁ∂6<Á5˛ÏΩgœ≤≤≤9rdô}ÿíííÿæ};———4lÿP]w«éj«˛‰‰d
…ÕÕ%,,≥ŸÃ+Øº¬ã/æHdd$wﬂ}7ø¸ÚAAA5.Ãù?ûœ>˚å;v‡‚‚Bü>}àãã„‰…ì|˝ı◊çF∏ÛŒ;È€∑/›ªw«€€´’™ﬁÄ€ê 'Ñ®ÌîÅé_n•iµˆ´Ìœiç?{œô3á!CÜ®Û¿Èt:uD*¿¯Ò„Èﬂø?Î÷≠c”¶MÍ†ã≈B˜Ó›—Îı¨X±ÇààˆÏŸ√¿Å	

b‘®Q1c∆åÊé9¬O?˝ƒÆ]ª0ç¥oﬂû|êúú~ˇ˝w222–Èt¥h—Ç!CÜ–£G¢¢¢JÕ\]ë>nnnUÒPÑ¢FQÇ\Y51‰jßÎ’»’5>»Ì›ªóÈ”ß´}ÿ‡J„í%KHHH†ˇ˛¨]ªñßü~Z›ÁªÔæ£SßNj∞ŸΩ{7wﬁy'+WÆd–†Adff0h– Äjs d∆ãÖ/æ¯Çµk◊íììCDDwﬁy'nnn:tàEãëùùMxx8wﬂ}7Ω{˜&22RùO°‘ZV¥Ω_Fk	!j;çFÉÕf£∏∏∏D”™¢6üÏÎ≤kv®-œwçrÛÁœßAÉDGG≥tÈR∂lŸBZZãwwwZ∂l…ö5kò0aÇZkg±XÿΩ{7oø˝6V´ïÛÁœc4ÒÚÚBØ◊ó
g’Ê>˛¯cvÌ⁄≈≈ãâääb‡¿ÅËt:vÌ⁄≈œ?ˇLff&¡¡¡tÎ÷çˆÌ€”µkW¬¬¬J√Ò‰Õvÿî¶U!Dmß’jK4≠^Mj‰jßÎ’»…®’*∂yÛfŒû=Àò1c‘mZ≠V]^*++ãœ>˚åpµ h4R\\Lì&M–jµ¨^Ωö&Mö∞oﬂ>:wÓ\Í>¸˝˝ØÊ¸˝˝o8Øúrù2öT)ü®îo €˝˚˜œÅ»»»†q„∆tÈ“Öêê∂lŸ¬≤eÀ0ç¯˙˙E˚ˆÌâââ°]ªv◊i∑:⁄&++KöVÖµûR#Áxbw<ë◊Üì∫(≠®®ËöMÈ≈≈≈Nˇº◊Ë ∑wÔ^:tËPbõnFç\YŸ¡`0®˚ˇ˝Ô”æ}{ÇÉÉ8|¯0ıÎ◊'99ô˛˝˚óy?éaÓµ◊^£a√Ü0Ä-[∂îÎ€ôrﬂÉ@ù\ÿ€€ùN«û={Xµj{˜Ó•∞∞ê‡‡`:vÏHì&Mÿµkøˇ˛;.\¿œœè-Z–•K∫vÌJttt©êVµoWª÷‰òBQ€ÿÌˆM´éäãã•FÆ∫^ç\mxæklêãèèÁ“•K å9RnWª∫ÈÛè?˛‡µ◊^Æ¨îîZµj≈Ó›ªÈ◊Øﬂ5Ôœ1ÃΩÛŒ;ÿÌvûyÊÊÃôsÕ€8ˆGsÏ√ß’j˘Ûœ?Y∑nGè≈f≥¡]w›Ö´´+áÊ◊_Â‚≈ã≈}˜›GÎ÷≠ÀÏ˜¶‹órÏ ÊÏﬂFÑ¢<îQ™◊Ï jükÖ5%‘;{EFçr}Ùì'OÊ≠∑ﬁ*◊˛Z≠ñ}˚ˆQ\\LLLãÖ”ßO„ÍÍä—hƒﬂﬂøDÿ*ãøø?c∆å·‡¡É¨Y≥Üù;w◊QJ≥´Nß###É6œŸ≥gÒ†Eã<¿≥oﬂ>V¨XAVV^^^¥h—ÇªÔæõV≠ZUbR‚k=æ™R\\\e«Bàö‚ÍÈG@˙≈’◊jZUÆì WE“””Ø9	’îö±ﬂˇùpµ?Zbb"6‰ÙÈ”¥j’™\«1õÕº¸ÚÀl‹∏ë¢¢"Èÿ±#p•…T	õôô…Ÿ≥gY¥h.\ ;;???Z∑nMØ^Ω»»»`˜Ó›l⁄¥âºº<|||h›∫5}˙Ù°Gèï9¬¥*öNÀÛ∏Ö¢.∞€ÌÍ$¿WSñkµÀıöV%»Uë¯¯x zıÍUÆ˝ï7ﬂﬁΩ{2dàêvÓ‹I”¶MâèèÁØ˝kπé£4ìzxxêûûNJJ
ù;wF´’íññ∆ ï+Ÿ∏q#ó.]¬’’ïfÕö—πsgÍ’´«˘ÛÁILL‰ßü~¬n∑Hó.]Ëÿ±#:t†Y≥fÍ@(;®U«2!7˙‡∫∫È’≈≈•*ã#ÑUBµz£Ó$7‰&úÀıûK	rUdÌ⁄µƒ≈≈ï{≠VKJJ
.\PÉú≤,◊w‹AAA]ªv-˜zZ≠ooo“””Ÿ≤egŒúa˜Ó›dddFTTù;w&//è}˚ˆq¯aåF#Z≠ñ∆ç3zÙhÓ∏„"""˜˜/1QØ2Eäk¬˙n≤∂†¢.ë~¡˛◊¨.AÆ
$$$˙ÎØó{≠VÀö5kP?ddd†’j9wÓ°°°Í4 ◊,:ù£—»◊_Õ±c«0$$$0x`ÓºÛN
1ôLÏﬂøüÃÃLäãã©WØ6§oﬂæ¥oﬂûfÕöa0–ÎıeˆySV¶®In4j’q]Bê9!ÑÛ∫z≠UG2ÿ°Ó©52»A≈öUÕf3[∂l)1O‹•Kó ??_≠&◊jµ%ñ˙“jµòL&∂lŸ¬ÜHJJ"??üFç·ÂÂÖ›nW◊f]ªv≠zÏfÕöB√Üi◊ÆÌ€∑'((H-ècŸú·rΩ™e•)B°—h‘}ù·±	!ÑB£—®_DÀ™ï´IÎlã U÷§˜ <r’P¢ S„Ç‹ÏŸ≥i◊Æù˙˜’aHY“
`›∫uçFíííÿæ};˚€ﬂ‘˝ººº»œœß∏∏WWWı6F£ë‘‘T˛¯„HOO'00ê»»HÄŸlfﬂæ}‰ÂÂ·ÎÎKzz:Õö5£Y≥f4lÿÄvÌ⁄—ßO‡})úπ?Ö›nøn(ìf!Dm‡ÊÊÜããç¶Ã—˙Œﬁƒ&ÆÌZœmmòGµ∆πù;w2r‰Hıo«~¯·6oﬁLJJ
/^ƒ◊◊ó†† ±Ÿlj≠\˘fïóóG∑n›xÛÕ7Y¥hGèÂ¿ÅÍ ±±±¿ï⁄ª≥gœr¯aÇÉÉiﬂæ=«é 66ñÅ®·Õë38Ö›nø·ŸÒqJ”™¬yxx‡‚‚ÇããKôü›Œ~B◊v≠9	rU ))©ƒ‰ø≥gœfÀñ-§ßß”§I:wÓÃ®Q£àââQõG333Ÿ∂mõ∫≤Ä∑∑7111,^ºòŸ≥gÛÕ7ﬂ–∏qcÜFnn.ßNùbÛÊÕ¯˙˙b0h›∫5ÅÅÅ§§§Èßür·¬<==±€Ì8∞ÃW[îU„ÊÿWD˙ç!j≠V´~-´FN÷úÆΩÆı‹ñß"£¶´QØ⁄eÀñ—¨Y3 FèMRR———‹wﬂ}<¯‡ÉËt∫M≠F£oooL&V´Ω^è…d‚ƒâ$&&∞gœ¶OüNÁŒù9sÊ˚ˆÌ£AÉ¥lŸíêëë¡ÂÀó1¥oﬂûúúÙz=———ú9sÄW_}ı¶Çú≥Ù!≥Ÿl4n‹∏ÃÎî’)ÆuΩB8•i’≈≈•Ã/®‰jØk=∑Œ“ó˝zj‘´vÛÊÕl⁄¥âﬁΩ{s˜›w≥tÈ“R˚8˛√ï5VL&Àñ-„»ë#\∫tâ¢¢"t:ì&M"""É¡@VVÅÅÅú>}ö.∞ˇ~¢££:t®∫6kFF≠[∑V;å1ÇÑÑÑ
=éö¢HKK‡»ë#=z¥ƒu-[∂,LÀ™ëÛ`ıÍ’<ÛÃ3|Ù—G◊\ßV!úÖ„gsYü{‰jØk=∑6õ≠Fú≥oEçz’nŸ≤ÖQ£F1oﬁºrﬂF´’LAA?˝Ù4†U´VtË–Å.]∫êôôIRRGè%55ï¿¿@:vÏ»Ω˜ﬁ[Ê•¸¸|\\\»œœß∞∞∞BÂ®NKó.eÊÃô§ßßìõõã…d¬f≥©Õé/‚¢¢":uÍƒÆ]ªÄ≤?–ºººÿπs'<ÄÑ8!D≠‡ÿ¥z≠π⁄–ÔYît£~pŒﬁÔªF9†B!`«é¸√dgg3q‚Du"·ÑÑfÕöENN···ƒƒƒ√´£WØº
’iIääänxˇ’‡ ¸q.\HßNù0` ~~~4oﬁú`0J5¸Ò«<Òƒ|¸Ò«Lö4I≈ˇ[%Cß”a2ôj‹úwBq≥?ØÀ
rçFÇ\-u≠ g∑€%»U&oooˆÏŸ£Æm™P⁄∞ï©GV¨X¡è?˛HJJ
çÜ&Mö–∞aC._æÃ'ü|ÇÕf£AÉ:TôZÓÓÓËız˛¯„ rss´-∞›ËCÂ€oøe·¬Ö<Ù–C<ı‘S•Æ∑Ÿl$$$®«—ÈttÈ“ùNGFFÜ˙øıÚÚ*1çäÕfìf!D≠g4’Æ5P;f"%Y≠VÍ◊Ø\ô—"%%E›Ó‚‚‚Ù5˛L≠L¯ªn›:~¯·:D„∆çâççÂôgûQ'n€∂-πππ<∏T¨e¬€˘ÛÁ3˛| VØ^])è•*<˜‹s4j‘ùN«kØΩV™ô‘f≥ïX$ZØ◊c6õ’æÖpÂ1{{{óò8YŸ.Ñµï≈b°∏∏///uõπ⁄-$$D˝›jµ‚ÍÍ*W•={ˆ¡p‚ƒ	‹››πÔæ˚ò1cç5¬€€[}√•••¿î)S ‘’‡JU∫r)ØﬂˇùŸ≥gs˙Ùiu·öh˘ÚÂ\ºxë–ºysÄRèıÍï&î†ÊÌÌ≠Æ˘Í‚‚¢ﬁFπΩheÍ!Dm·ÁÁáNß√√√£D+Ñci˘Ã´}œÉéÎ∏+5rnnn’Q¨JS#É‹ÏŸ≥˘Âó_ Ë›ª7œ?ˇ<m⁄¥)±^Í’≈≈≈Ö¥¥4uÅ˙õm
1b……… Ñáá£—h¯Î_ˇz+ß ,Z¥àÄÄ ¬√√…»» Æ¨|·¯AîííBZZŸŸŸ∞gœ~˚Ì7Ïv;£FçRCõ¢&Ù˘Bà™†|>`4?~<=zÙPœ¢n`Ãò1Ët:4ç”ü˜jTêªxÒ"c«é•ˇ˛Ãù;∑T©c;ˆµ™ø+„˘¸ÛœﬂÚ1náÊÕõÛÎØøî\ZiNU:qjµZ\]]Òˆˆ¶c«é<˛¯„¥oﬂ^≠ΩT˛ü ﬂ◊ZTZ!úôøø?ù:u‚˚ÔøÁ¬Ö|˛˘Á%N‰)))já®ùûx‚	&Lò@LLëëëTwënIç
rıÎ◊/3¿ïÂÍZπ∫hˆÏŸƒ≈≈ëóóß^ÛÛ£a√Ü¯˘˘·ÊÊÜ^Ø«€€[]	√1¥)€îê¨”È–Èt∏ππ·ÍÍZÊÏÁB·Ã&OûL€∂mâååTg2uG\\'Nú --ç+V‘ÿÓSÂU£Ç\E9{uË≠≤X,8∞T@ì…ƒ•Kó»  ¢††Ä¸¸|ÚÛÛ)..V˚æ)<==9sÊø˝ˆÅÅÅX≠V≤≤≤ÿ±c©©©¥j’™∫ûBT	ã≈R¢Øî®õÇÉÉÒ˜˜Á¯Ò„NΩ¬ÉSπ∫bˇ˛˝ ?~\›ñúúå´´´Zkf2ô∞X,∏∫∫‚ÈÈâááÆÆÆX,rrrÄ+£P]]]KÑ9çFCvv6Gè≈◊◊õÕFNN)))\∫tIÇú¢÷1õÕ'ú◊˘ÛÁÀ‹Æ’jqwww˙nD‰™ô’j≈b±`2ôHOOÁÚÂÀ\∫tâKó.a4Åˇ5ÅÍt:rrr   ÄÀó/´MüxzzíëëAvv6x{{„ÌÌçèèOâ˚<{ˆ, ç7&!!OOOl6ôôôÍ>Ì⁄µc˘ÚÂ‹sœ=∑È?!ÑU+,,å‹‹\Cô◊{yy©Së(só:∫ôYDıQûß¬¬B‹‹‹ |ﬁ.\∏Äªª˚Ì.Z•í wõ9∑sÁŒ±c«ÚÚÚ∞X,•ñ)..∆’’ï¸¸|._æL@@ xxx‡ÎÎãøø?˛˛˛¯˙˙‚ÂÂÖõõõ⁄◊Mπü∞∞∞ÎñÁ˚Ôøg˙ÙÈå;∂‘u¸ÒG©(ÑŒÓ‡¡É¥i”¶‘vÂKÆ2ëºÙüs>eıùØ_ø>ÁŒù+uùV´ÂÏŸ≥N?˘Ωsóﬁ…ú?ûıÎ◊ìôôINNé⁄‘	PPP†6yzzzL˝˙ı	Pg§VF‰û={ñåå‹‹‹HOOÁ¯Ò„‰ÊÊ™AP£—êüüØ.3VVµq„∆çY∏p!ÅÅÅ$%%Ò∆o®◊>|ò{Óπá˙ıÎ„ÁÁw˛3Bq{qË–°2É‹ë#G xÌµ◊Ä+üì¡¡¡ÑÜÜ“†AÇÇÇ‘Z«È∞ä™•Ñ1«’äØÀÃÃ$++ãúúvÌ⁄Ezz:/^‰‹πs<˙Ë£•éw‡AfÃò·‘œüπ*v‡Aé;Frr2999jS®∏ÇÇÇhÿ∞!ç7∆◊◊≠VKAAßOüÊÚÂÀ>|ò¸¸|l6YYY∏ªª„ÔÔè´´+zΩ___"""‘~qJ”Ä^ØWG£ñ’0˛|Ÿ∞aC©2/^ºò§§$@æë
!jóázàπsÁ“∫uk∂oﬂ\˘r|‰»û}ˆYµ6nÎ÷≠dffrÓ‹9vÌ⁄U¢’ƒﬂﬂü‡‡`BBBÚÚR[JºΩΩ’Yú9‘J´í≈b)µëbÁŒùdggìõõ´ËS˙ék4¢££ÈŸ≥'ç5">>ûø˝ÌoExx8‡ÚÂÀN?EÇ‹-∫z§ã—hdÔﬁΩÏ€∑OÌ´ñüüOAA:ùéààBCCi‹∏1πππh4Nü>Õ˙ıÎ’A	:ùé†† |}}ÈﬁΩ;QQQıÖÌ8]»ç V÷Ô .TQ\ãüüü|	!jï—£G3wÓ\ÜFó.]àéé¶q„∆8∞ƒ⁄‹111 %j‡233IOO'==ù¨¨,ˆÏŸCqq±zQ¬ûrQñ?Ùˆˆ∆ÀÀKÌX_TTT-èΩ¶Q∫)ˇcÂóõõKAAF£Qù¥ﬁf≥aµZ’%’î
ç¿¿@"##			!((Ω^_Ê˘qÿ∞aq¯aˆÏŸ√œ?ˇÃ˙ıÎyÛÕ7oÎcÆ
‰në…dBØ◊ìëë¡°Cá8~¸8ôôôjpÀÃÃ$""Ç:Pø~}Nú8¡ô3gÿæ}ª˙-.<<úªÓ∫ã†◊Î’⁄4«%¿UFYﬂæ}ô4i“5ØOJJ‚¬Ö4lÿñÔK!jöm€∂±tÈRé9¬ë#G¯Ûœ?’Î¸˝˝âééÆ¨·›®Q#ÇÉÉÒˆˆVk‚ ı3Y°L¨ÓXÉd±X(((†®®àÇÇ,ÖÖÖQTTƒÂÀóoÔØaîQ£JU£Fç®WØZ≠Vù’Ò|xı`« hµZ1çú={ñ¥¥4.^º»…ì'’f’ÏÏläää‘’êbbbò6mö”◊∆ArŒ∂P{jj*			§ßßc≥Ÿ((( †Iì&¥lŸíÜíîîƒÊÕõπxÒ"°°°Ñáá3p‡@ı€¸o8º„7	eƒî“<Z¶OüN˝˙ıyÍ©ßÆπO≥fÕ∏p·Õö5ì9!D	µ•OÿË—£K¸ΩuÎV‡J·5k÷∞sÁN:tË@ff&˘˘˘jÕê´´+~~~„ÍÍäøø?ÅÅÅ4h– ???‹››’n.ç5*3Ñ8˚ˇÆ™çFL&yyy\ºxëºº<ÚÛÛ9{ˆ,ÈÈÈ‰‰‰®É 322»ÕÕPW4ÚÚÚ¢~˝˙Ïÿ±ÉfÕöÒÏ≥œ“§I5jÑNßS√amQ„Çú≥HLLd”¶M‰‰‰®ﬂ∏ºººhﬂæ=Õö5#==ù}˚ˆÒÁüJø~˝àää*1™‘jµñòœH´’™˝ îÈF‡Ê?0èÁü≤zıÍ6©&%%ëïïExx∏ZV!Ñ®ÕîfUÂgtt4ØºÚä˙˘´4´^ºxQ≠ıQ¶â:wÓπππòL&Ãf3ÖÖÖj∑«ı¨ïÅg ˙û...ÍÚâ ¨  : ÚäŒ n∑´ˇª›Æ6ã*ÕŒV´ï¢¢"uYH@≠ÃPñõ4ç∏ªª„„„É^ØWóô§~˝˙ÙË—Í’´GΩzıÒÒ¡`0`0–jµº˚Óªx{{”∑oﬂ2◊hW8{®´QANyQó◊ë#Gÿ≥g'Oû‰“•KUX≤ˇ5onﬁºô={ˆ`2ô‘…xï~oÉÅSßN±fÕ¸¸¸∏ÛŒ;i◊Æ]ô«S^Té/`Gé}Ô*+HMù:ïè?˛¯∫˚?~\êç7Æî˚B‘Œ~“+/•ñBôÓIiv-«Œ˙JS^^%fPöZïã“èŒl6;ÂdµJS©X›››’∞Í8üõrΩ2™óóó:`§<˝¿ØE©¿HMM%44¯_H¨MNQ£Ç‹ı9rÑıÎ◊s¸¯q8†n˜ıı•AÉdeeU…˝fdd†◊ÎŸºy3˚ˆÌSøq¬√√i—¢))):tàÏÏl⁄∑oœcè=FPPp˝VV˚’}.*ÀÉ>Hü>}Ë—£«u˜;{ˆ,6õ777µ/à‘»	!ÆV[NÇUI©aÛˆˆVœ	BT∂‰ ö&cÕö5ú;wé––P¿‰…ìK}+j—¢Eïîg√ÜÏ€∑è¢¢"äãã1ÙÍ’Œú9√ä+ÂÆªÓ¢c«é¿ˇöMo•I¥≤X≠VÊœüœ≈ãY≤d…˜7ôL‰ÁÁ´CËÀÚ-Ñ®ª$¿	Q≥‘∏ ßò2e
			jxª^Á¸‰‰‰[æ?«9k,[∑neÀñ-∏∫∫RTTÑüüù;wF£—êòòHqq1———º¬Í7-ì…TbÓ∂Ú™Í∆Eã±c«érÌ[XXHaa!ûûû%˙.Ä|Ä!Ñ5Mç
rıÍ’c˝˙ıå;ñ∏∏8/^\°˛∑B´’íôô…ñ-[HNN&;;≥ŸLHH›ªw«h4™¡Æ_ø~%ÊÇõk~T˙…çF8¿°Cáÿ∑oü⁄èB©Ÿ≥€Ìeﬁ^È<™Ù1–Èt∏∏∏®k¥Ä+M´WSé´”È‘¡Gé·¬Öº¬≤∞¥¬))#Po÷¡É9yÚ‰M«qı•èõtQπ˝Nú8Aqq1{˜Ó-Û˙='Œ25Iç
rÁŒù„À/øº≠Æ,ùµfÕŒû=´÷»”ªwoÚÛÛ˘ı◊_	dÙË—• ÂXkUë!Õk÷¨a›∫uƒ««ìôôâ^ØWG‚¯˙˙“∞aCÍ◊ØØNgr=«é„á~†∞∞êÅ2tËPäãã)(( &&FmÚ-ÀÏŸ≥qwwÁ›wﬂÂ¬Ö¯¯¯‡ÂÂÖüü_âöE	sBg1uÍTÄÆ}≠/…äÁû{Æ“ $n/Âπ=x ØºÚ
nnnh4öœ˘ıûe}Û’´WWyYoUç
r¿mq_˝5ßOüV14i“Ñé;rˆÏYVØ^MDDè=ˆX,åF£:ÕÕÃÛˆ‚ã/≤zıjÚÚÚàããc î)tÔﬁùêêêRì˝ﬁ®ö„Ñ¡_~˘%?˛¯#ü˛9+WÆ‰Ω˜ﬁ£c«é7<∆ÊÕõŸºy3ßOüÊÃô3•ÊÒSæM*?˜ÏŸ√—£GY¥h©©©Í˙ØBîó„à5Âıv≠˘#ız=F£ëì'Or¸¯qŒú9CFFÜ∫èõõvªt:ÉÅ––P¢££	ªfs«◊um¨1q¸;˛¨,ïzº Ê„„√ÎØø^™ÂDàÚJHH‡Ì∑ﬂÆÓbîKç
rÉ·ñèQﬁAKó.Â¿Åÿl6L&···ƒ∆∆íööJ||<ç7ÊÂó_∆`0®C«ïÖ¢"Ûºç?ûÑÑö6m ˚ÔøœÄJ‹÷b±®˜°∑º√Øız=V´ï#F0d»V¨X¡Ë—£âåå‰«ºÓm◊Ø_œ˘ÛÁyÁùw‘fZ«}õÕ¶ŒÈ£|{	

‚”O?-WŸÑ∏ö2?ñF£Qwú3+99ôîî‡ îQQQPTTDdd$———ïöìQôõ jµíúúÃ©Sß8~¸∏⁄á6""B]vIy-;æÆùqöáÚÿ∏q#}˙Ù)◊æó.]‚¯Ò„tÔﬁ˝∫˚<∏2ä&Ñ®5*»UÜ´Éúêîò€∂mcˇ˛˝§••QPP@dd$QQQú;wéµk◊ŒC=Dpp∞zú´@vúËQ˘˚ZfÕö≈˚ÔøOè=X±b≈5õ9ï…{322∏|˘2ŸŸŸ‰ÁÁ„··Åªª;¯˘˘·ÔÔÕ’ ,zΩûázàxÄô3g“Æ];&Möt›¡"_}ıï”Ù5Ke‘b)Ô£•KóÚ≈_ _˛ÚLlllâ◊˜ıéq≠πè9¬™U´X∑n.\†_ø~¸˝Ô/5AËı Ê¨¥Z-qqq|ˇ˝˜Â⁄„∆çÃô3ß‹˚!™_≠rW”jµ¯˚˚≥j’*vÓ‹©Œ,JTT)))lﬂæù»»H∆çGPPPô#OØ5zÛZ'Ç={ˆ®ÎôÆ^Ω∫Ã ∑gœ÷≠[«È”ß9˛<ôôôÿÌv<==©WØûZÜÇÇL&EEE∏∏∏‡ÂÂEdd$]∫t!66ñêêµÃ »Y≥ŸÃ?˛ÒzÙË¡‰…ìIHH(◊Ù#B‹NF£ëô3gÚÛœ?„ÎÎÀìO>…∞a√ l≤w|ﬂôL&µyœf≥···Å¡`(Ò•K˘M≥fÕx˛˘ÁŸ∫u+ˇ¸Á?i◊Æ›ªwÁìO>πè≤˙(5õBà⁄´÷9e•âeÛÊÕ¸˘Áüj_:vÏHVV˛˘'≠Zµ‚ÓªÔ∆ﬂﬂ(ŸúÈXªWëoÊJ-‹sœ=«/ºP‚:%ºm€∂çîî:vÏHTT˜ﬁ{/Ì⁄µ#$$D›Wx°Ñ4£—Hjj*'Oûd€∂m|˚Ì∑,X∞ ˛ÚóøpÔΩ˜™}ä¸˝˝1çÙË—É˝˚˜Û‡É“∑o_6lÿp+ˇ^!*Õ¢Eãx˚Ì∑	eˆÏŸ<£—à—hTk–M&			$&&íîîDNN&ìI}_86œ⁄Ìv4˛˛˛DDD…˝˜ﬂèøø?:ùã≈BáXæ|9iiiÃù;óV≠Z1h– ÊÃôsSè¡ŸkÏÑŒœÈÉú’j-æî& £Gè≤oﬂ>ˆÔﬂèF£¡ÀÀãé;b≥Ÿÿ∏q#aaaLû<πDÄ´åÂßü~öeÀñï™Ö€≥goΩı)))tÎ÷ç¸„tÏÿ±ƒ}öÕfÃf≥Z•øúRÎÁ∏DÃê!C–Èt?~ú={ˆ∞xÒb,X@∑n›x„ç7–jµµ9j…í%Lü>ùvÌ⁄›p≠U!™Zˇ˛˝IKK„ç7ﬁ`Ãò1§••ëëëAPPﬁﬁﬁ|˝ı◊¸˙ÎØú>}ö¿¿@¬√√âãã#**äp"""‘cY≠VL&&ìâÀó/s¸¯q˘Ì∑ﬂX¥hıÎ◊ß_ø~å7N}OËızfœûÕ{ÔΩ«–°Ci’™sÊÃa–†A’¯_Bàäs˙ WBòóóó∫>€¬ÖIJJ¬ÀÀÉ¡@Î÷≠—ÎıÏﬁΩ___¶MõFpp∞:∏‡Íæn7ËFå°ˆøS8∏xÄ+Vî∏çc≠ü“˜ÕjµíëëÅŸl∆€€[] Xa6õ±X,Ët:ö7oNÛÊÕ=z4«èÁΩ˜ﬁ£oﬂæÙÎ◊èô3gñ∏Ø˜ﬁ{@¬ú®6õ6mb¸¯Ò‹ˇ˝¨[∑´’Jff&¡¡¡X,^~˘e˛¯„<<<∏Ôæ˚xÌµ◊hﬁº9P≤O®Ÿl∆h4ñò˙'$$Ñ∞∞0:vÏ»»ë#—jµ§§§∞sÁNñ,Y¬˛ÛZ∑nÕ?˛Ò"##…»»¿`0∞j’*~˚Ì7¶Mõ∆¡Éy˛˘Á´Û_$ÑR+ÇúV´≈d2Òüˇ¸áKó.©∑j’
wwwvÌ⁄Öáá#Gé§Mõ6ÍÌÆû˜ÌVj‰FåAJJ
'NúP∑Õö5ãÔæ˚ÆÃ ßHNNf«éÏŸ≥á'Nêùù≠éU∏∏∏‡ÍÍäNß#88òÿÿXzıÍEÛÊÕKú‹ö7oŒ_|¡ë#GxÌµ◊h€∂-ÛÊÕ+±æ™Ñ9Q]¶Mõ∆˜ﬂœ¢EãËŸ≥'pÂKòøø?/æ¯"6l†Mõ6Ãù;óÆ]ª™∑KII!!!ÅΩ{˜rË–!äää‘˘GΩ∫∏∏‡ÓÓNpp0:t†k◊Æƒ∆∆¶æ?Áœüœ˝˜ﬂO€∂mK|—4hÉ"66ñç7≤j’™€¯ü©YjÎË]!j+ßrJ8•iµ∏∏ò‡ÈÈI„∆çi“§	¿√√É1c∆®Nô˚M©Ì™¨Ê‘˝˚˜óq]∫t!,,åù;wñyõY≥f±m€6åF#6§eÀñ<¸√DFF‚ÁÁßÜ3´’ä^Ø'33ìîîvÔﬁÕ÷≠[Y±bÖ:·Ô¯Ò„i”¶ç::7::ö/æ¯Ç¯¯x&OûÃ‡¡É’ W¬‹ô3gx¡©_ø˛-?~!ndÙË—:tà”ßOóÿæfÕ˛Ôˇ˛è∆çÛŸgü©›222¯Ò«˘Ò«1çÑÖÖ—¶M¶NùJPP4(1G\ff&YYY\æ|ô£Gè≤m€6~˙È'Ïv;w‹q„«èß}˚ˆÃò1É3f∆o–Ø_?∆è_¢nÎ÷≠Lõ6çÿÿÿ[^@!nßr t'Oûd˘ÚÂdff“§IÓ∏„ˆÌ€«Œù;>|8±±±j3å^ØWõ/Øû|˜fÕö5ãeÀñ©Õ©{ˆÏ·Å`“§I•:¿ï–∑m€6¬¬¬ Ï'ßPöåîAAAÑÑÑ®\fffíûûŒG}ƒcè=FÉxÊôgJÃ5tËPÓ∫ÎÆ2:,Y≤Ñæ}˚≤wÔ^ÓºÛŒJ˘_à∫£¨—⁄◊™…y„ç7Ä+3¨;ö6mÒÒÒºÚ +å1≥ŸLrr2≥fÕ"11ë»»H{Ï1µ?®ŸlVø∏)Sá\›¥q„∆tË–Å	& œ∑ﬂ~[‚=“øfŒú…£è> î)SJ’¿Õô3ái”¶—™U+>¯‡É2ì„\ã5y¿√•Kó*|õ≠v Ñ®Y™=»9û


¯˝˜ﬂ’>1e—jµlﬂæùoæ˘ÜƒƒDÚÛÛ	∆””∏Ú‡¡ÍÑª@â w+Âª⁄˛˝˚ô={6ﬂ|Ûper›©SßÚ…'ü–Ø_ø˚æ˙Í´¸√>ºT-›ıÓ√qÇ`G˛˛˛Ò·áb6õY∏p!”ßO'$$Ñ9sÊ°WË–µkW∂oﬂÆc√Ü¯˚˚Û…'ü\s|†‘Ñ¿ï…q"X≈Ò„«	   ÄCá—∫uÎJøﬂ⁄Ï¬Öÿl6¬¬¬8r‰zΩûR˚Ut"‹´W(k2ﬂ´üœ¯¯xzıÍ≈∫uÎJlÔﬂø?Ï⁄µ∏Ú¯˚ﬂˇŒö5k0`@©⁄∞´5%ÊPT\˝>Ô’´Ωzı`˛¸˘Lõ6ç¶Mõ2{ˆl¢££Yµj3gŒ‰é;Ó(1Q˜¨Y≥ÊÓªÔ¶[∑n•˛◊{Ã’Â¬Ö‰‰‰–¢Eu[NNNÖéQTT$ANgcØf≈≈≈%.———ˆπsÁ⁄Oú8a?q‚Ñ}√Üˆˇ˛˜øˆY≥fŸ_x·{ÁŒùÌ:t∞Oò0¡æ|˘r{aa°›n∑€ÉÉÉÌ|ÅΩ∞∞–^\\\eÂsº¥j’ >c∆{qq±˝˜ﬂ∑∑j’™‘> ˆë#G^˜X∑rQ˛≈≈≈ˆ∑ﬂ~€ﬁ¨Y3˚€oø≠^ß\ﬁˇ}{ã-Jl˚‡ÉÏ={ˆ¨¥ˇWe∏˜ﬁ{Ì?¸É›n∑€{ÙËa?uÍTı»…Ãù;◊˛Êõo⁄Ìvª}Ú‰…ˆ≈ãWŸ}]Ôu9e {ÔﬁΩKl;sÊåΩeÀñˆ)S¶®€÷Æ]koŸ≤•}ƒà~Ìﬂå◊_›ﬁ∂m[˚á~®n˚„è?Ïˆ/ø¸“ûüüo?q‚Ñ›n∑€ﬂˇ}{∑n›Jºgîœò[)CU¯Âó_Ïè?˛xâmŸŸŸˆ=zî˚øˇ˛ª}‡¿Åï]¥€ÓÆªÓ≤oŸ≤•∫ã!úÿÊÕõÌÉ™ÓbîKµ◊»)íìì˘Âó_ xÎ≠∑X∫t) ^^^‘´W|}}ô={6±±±hµZu›”¥¥4ºººxÏ±« Ω¨’≠zı’Wx˝ı◊’ö∏πsÁñ⁄Áá~`Ó‹π•jË*ì„2_S¶L·o˚˜›wâââ%&VVwp¨ôõ2e
+V¨`ﬁºyLô2•  (nüÇÇrrr∞X,‰ÂÂQ\\|√5wo÷µö-Zƒö5kJ4ßû?ûÅÚ‚ã/2~¸x‡JÛÍö5k¯√ÀΩå‘≠˙øˇ˚?∆å√√?¨NîÀ¢Eãò8q"ÓÓÓ6åÃÃLûzÍ)x¡ùbBÌÏÏÏç∆Í)à‚∂©1Anÿ∞a¥lŸí◊_ù˚Ôøø‘ıWØ¶†PÿÌvÃfs•ı}ªëO>˘Ñµk◊®!Œ1¨=¯‡É\ºxÒ∂çulz“Ètl⁄¥â)S¶îjN}Í©ß8{ˆ,˜ﬁ{/?˝Ù oø˝6ì&Mí WKh4Ïv;ãWWWäää‘ w≠	Æ+≥ü◊˘ÛÁô9s&øˇ˛{âmWá∏—£Gs˘ÚÂR}Áná»»Hx˘Âói◊Æ´WØ¶Cál‹∏ë;ÔºwwwFåÅ≈ba…í%ÙÍ’ã˘ÛÁ_w©ªö@Èb¢0ç∆r-¡ÁÈÈ…Öhÿ∞aUOQjLê3,[∂¨‘v%¥]=◊õcø≤sÁŒëóóßÆhP’|A˙ÙÈCªvÌË€∑/√á/‚˙ˆÌK˝˙ı´me¥Î;Ôº√¬ÖKM5Úﬁ{ÔqÔΩ˜™}Ü‚‚‚h›∫µ‘ ’BW˜kJM†}+ Íﬂ©6«UJÆqJπ´˚Œ›n”ßO'00êÅÚ„è?©ˆem“§	Ì⁄µ‡≥œ>„˛˚Ôg¿Ä4oﬁ\}‹∑´†º‹‹‹J¸≠ÃìóïïUÓc¥oﬂæ≤ã%Ñ®B5&»]ã„•2ÅoRRÎ◊ØÁ¿Å=zîÇÇ4¡¡¡ï≤à˜çl‹∏ëÙÙÙÕ´
eJèÍlÜqú$U©A∏:Ã˝Ù”O¥k◊éòò‚‚‚xÊôgò1cÜπZÆ¨≈Â+”¥i”h›∫5„«èÁ¸˘ÛÑÑÑ0zÙhP¢&.  @Ì>Qù”¶M√`00lÿ0>Lõ6m¯‰ìO¯Î_ˇ û={ hﬁº9˚€ﬂxÏ±«àèèØÊR_[aaa©maaaÑÖÖUCiÑ∑Cç	rF£ëQ£F]ÛzçFÉNß„‹πs∏∏∏Ntt4œ>˚,Õö5£i”¶<∏“j‰k2G•>|XÌÀÛ√?îGJ∞´i}i Í0i“$fÃòA||º⁄ÙíêêPÆfQs)Îè*ÅÕf≥›‘ö¡u˛¸y÷¨Y£6©ÜÑÑ∞h—"._æ¨Ü∂i”¶‘àˇ[%ÂëG·¬ÖÙË—ÉMõ6qÁùw2`¿Ä}„ûzÍ)ñ-[VcõXßcql≈B‘n5"»%''c0¯À_˛RÍ:õÕFQQë˙wáhﬁºy©≈Ì5„∆ç√››ΩRÀvu”‘∆ç˘˙ÎØyı’W>|∏∫}˝˙ılﬁºπ∆.JØÙçª˙ƒÙ”O?©·mƒà|¡‰jô€5Sˇ_ˇ˙W†6©^›WÆ¨’M˘…»»‡≈_$99ô1c∆’W_1{ˆl‚‚‚J7•âı©ßû™ëA©¶5ı
!™^µ9≠Vã∑∑7æææÍƒ¥¡¡¡ÂæΩÚ‘››ùá~∏*ä®Zµjï⁄oÊ—Ge«éÍu/ΩÙRâøo∆ó_~IBB•Æ

¢}˚ˆÙË—ÉŒù;ó˚òé'õŸ≥g√˛Û&Nú\µ˙ +Ø∞n›:Ü¬ó_~…Ò„«’π¸™∫©∫¨ìaQQë†5Õmi.ØM4ç≠VãF£°®®®“B«’œÖ21obb"ó/_ÊÉ>¿d2©Õ˙„∆çSÉ›ÏŸ≥o:ƒ)Âˇ˜øˇÕÜ»»»(5[£Fçh—¢]∫tQó +œqïe¬ .\Hó.]X∂lc«éÂùwﬁaÍ‘©Lû<ùNGxx8-Z¥‡≠∑ﬁRk‡k
«π•FNà∫£tOËj4lÿ0:vÏXb—˘äHJJ™‰ï¥tÈRzˆÏ…|P‚Dqœ=˜0vÏÿõ:fbb"'N$&&ÜÑÑ⁄∑oœ´Øæ ´Øæ œ?ˇÃœ?ˇÃ´ØæJ\\˚ˆÌ„â'û‡û{Ó!11Ò¶ÓÔ£è>bˆÏŸÍﬂ}˙Ù¡’’ïç7™ÀÉ)«Æ™)+ƒÌqu”jeúÿï„8>“jµº˝ˆ€<¯‡ÉX,t:7n$##ÉÈ”ß7ˇ—jµ$''3n‹8:wÓÃ ï+Èÿ±#œ?ˇ<}Ùø¸Úø¸Ú/æ¯"-Z¥‡ÿ±cº¸ÚÀ‹}˜›l⁄¥ÈÜ«/ÎK¬wﬂ}«ø˛ı/‡ ˚£Cá¸„ˇPCﬂ¥i”‘©íjY'Uà∫ß⁄k‰TwÆÎË—£å=∫ƒËŒU´VëûûŒ3œ<S·„=ˇ¸Ûl⁄¥â±c«ÚÂó_^søŒù;”πsgµÌÀ/ø‰â'û†AÉ¸¸Ûœ∫œŒù;3lÿ0&Nú»ó_~âøø?±±±,]∫î˛˝˚”µkW3fLÖè®k‰ 4hP%µ3 19{ˆ,ﬂ|Ûç:–;Ôº£nX∫t)F£QuÒè¸Éü˛ô·√á3˛¸RÎ#+A¨gœû%æ\m⁄¥âó_~__ﬂ
áÆàà‚‚‚ò:u*ÛÊÕ„˘ÁüÁ·á&##˙ÙÈÉèèã-Ró´	C©‘bQw‘® ÁLÜ
\ôOÓföXbbbh–†¡M5«Nú8ëâ'Ú¡–™U+-ZT°Ê÷wﬂ}óòòÈ⁄µ+=Ù˝Î_Å+SßÃö5∏2Jÿ`0T®lè<ÚÈÈÈ7‹ÔzKÌ‹πìsÁŒÒÈßü≤ˇ~&NúHΩzı*Té∫,))	≥ŸÃô3gXø~=ÒÒÒ,Z¥ËñèkˇˇKµY≠VﬁzÎ-∫vÌäŸlÊ«§}˚ˆÍrr7n$//è…ì'cµZY∞`¡MΩGzˆÏIhh(Î÷≠#((®BÕÖ={ˆ$!!Å˜ﬂüñ-[≤p·¬r7∑Ãù;ó.]∫®ÅZ¥h¡«Ãﬂˇ˛w }ÙQ/^\£Çú¢ní WN´V≠¬œœèì'O“∂m[u¸/‘ïWLLc«éΩ©Z<Gœ<Û=zÙ`¸¯Ò<ˇ¸Ûjç]yÙÌ€óè>˙àÆ]ª“¨Y3ºººHHH†c«éòL&Œü?_°æääuÎ÷ïòéÂF öÁÏÒ«ÁÚÂÀ å9≤¬eˇ”øˇJ=û∑∑7Ôæ˚.k◊Æ•k◊ÆX≠V6oﬁÃkØΩ¶v¥_∫t)#Få¿jµ≤tÈRCÖW6π„é;x‡Å‘Z<%ƒU¥¶ÈπÁû£Kó.Lö4©¬a...éoø˝ñ^Ωz©#º_x·¨V+˜‹sˇ˙◊øÿ∑o_çûwÌ»ë#‹}˜›%ÊÙ¯Ù”OâééÆ¶R	!*S≠rJ?9«a¯ Ôé˝GØW∂óuí»ÃÃÆúú≤≤≤¯ı◊_’f’yÛÊ1d»ê
ïØ≤Bú¢sÁŒ,Z¥àÒ„«”Æ]ªr◊Ãç9í'ûxÇîî¬¬¬ààà`›∫uƒ≈≈·‚‚¬Ò„«			©â3((®BÉN§C∂Û˘Ì∑ﬂ‘n†∞∞ê6m⁄`µZIKK„‡¡ÉºÚ +òÕfæ˛˙kzË°
ˇé;Ó‡≈_dÙË—%∂ﬂlsaœû=Y∏paÖ√‹î)S7nôôôƒƒƒ‡··¡é;Ë–°ÉÅfÕöÒÛœ?◊Ë ˜Ûœ?sÁùwÚ’W_q‰»¢££+fÖ5_ç
ró/_ÊÏŸ≥7u€úúú5c999¯¯¯‡··Å›nWõÖîë]6õMùkKÈS‰xqqq¡≈≈ª›éüü†m€∂¥m€VΩü¨¨¨
≤{Óπáû={VZàS8Üπ√áó˚6m⁄¥aıÍ’å;ñ-Z∞{˜n‡ ÏF£Q}XtÓ‹Y≠ÕÀœœøÓ˛ (;·t:ªwÔ¶uÎ÷¿ïÅ≠Zµ¬ﬂﬂüÃÃL∂lŸÇ^Ø«ﬂﬂü≥gœb4K≤Î9r$®–m √1Ã=z¥\∑âàà†AÉ¸Ù”OLò0ÅˆÌ€ÛÕ7ﬂ¿†AÉ¯ˆ€o+µú∑jÕö5‹sœ=ÍﬂáVgê8!jß‰îŒ—i“KJJ‚ó_~¡««áU´V—¨Y3‡ ˜øˇ˝oıÔ[ı¸Ûœ”ßO5ƒ}¡¥lŸ≤‹∑WETtpBy]=à°<‚‚‚¯ı◊_y¸Ò«âééÊ◊_¿««ásÁŒa±X*‰ÇÇÇ¯‰ìO‘øΩºº ‹ÔÍ	jÀjb5è¡``‹∏q pˆÏYÓªÔ>222f’™U:≠VÀwﬂ}Gã- }Ï•KórÒ‚Eñ/_^%eWD(5sÂ1r‰Hæˇ˛{∆èœ»ë#yÈ•ó‘˜Dó.]¯¯„è´§¨·∏∆ÙÄ¯Í´Ø‘m3gŒ,˜ó;!Ñs™A.88òÇÇÇ2gK∑Z≠çF.]∫ƒ˘ÛÁ9~¸8áÊ‘©Sddd‡ÎÎKÛÊÕ………)Ûÿïµñ‰≈ãKlﬂµkWÖjÊÕõWfáÔ \ÎRƒ∞fÕp√€Nú8ëˇ¸Á?X,BCC’≤‡„„S·ÅääºŒ«`0‡„„@ZZ=zÙ 88£—Hjj*è>˙(:ùéƒƒDx‡År˜m[∞`ÔΩ˜^ïñ}·¬Öƒ≈≈ëúúLDDƒ˜2d, ##ÉÿÿX\]]Ÿ≥g;v§AÉ ’ﬁOŒÒÀñÚûU∂5k÷åÛÁœWKπÑ∑Gçrp•ôr≈ä :tÄc«éqÓ‹9u*Ω^Opp0QQQ‹sœ=¥i”Ü†† ¶NùJ«éÀ¨}´™a¯ÈÈÈÂ‰p≥É"n∆ﬂ˛ˆ7æ¸ÚÀr9 vÌ⁄ELLYYY$&&rÚ‰IŸ≤eπππ◊ΩΩ„"›ÈÈÈeNf,jeπØæ˙äıÎ◊c6õ’éÙ&ìâúúbbb0õÕ§¶¶2zÙËrΩó.]J˝˙ıâçç≠Íá¿·√˘Á?ˇYÆZ9ùNáØØ/˚˜Ô'88ò¿¿@:D«é—Îı¥h—Ç«{¨B5èï…Òã‡Ò„«KçWBß¢ˆ™1AÓïW^·—G•CáÍÌ˜ﬂ?Mõ6%  Ä‡‡‡ÀœX,Ãf≥⁄q˜ZìVfçóB	fÂµtÈ“
ä∏Y'N,—¥y#l‹∏ëÿÿXºººË›ª7———<˝Ù”ÂZÓÁÍ	Hov2g·<<<<Ë÷≠zΩùNßN|‰»5jÑNßcÎ÷≠¯˚˚óª6nŸ≤e◊]kπ2›ˇ˝å7Æ‹˚7j‘à˝˚˜´Àèù<y∏ÚZ¥hAzz:}˚ˆ≠™‚^ì„{œf≥—£GèR˚§§§î⁄V”ÁÎBTLç	r#Få‡Õ7ﬂd„∆ç•Æ≥Z≠òÕf222»ÀÀcﬂæ}¸√Ï‹πì¡É3wÓ‹k˜VW'∏VTöU „f'æYMõ6-wÛjTT«é√jµÀ˘ÛÁyÒ≈5j‘M’fæ˙Í´%;à⁄≈ÕÕç-[∂∞d…L&j‡ﬂΩ{7ıÎ◊Æ¨ü¨Ã˝V/^¨Ù◊App0?˛¯#˜›wﬂu˜’jµDDDp˙Ùi ö7o^bUïêê⁄∂m[cÁìÛ˜˜Á≈_,±mˇ˛˝’T!DU®1A¿œœè:‡ÁÁßns\f»f≥QTTÑßß']ªvÂç7ﬁ∏f?óºº<x‡+•lPO4 7ÚÚ®hÌ]eg√ÜÂ
r]∫taÛÊÕïvﬂWvµãüüœ?ˇ<6õç√á”®Q#¨V+ãã≈ÇóóV´ïSßNïx_œ÷≠[’ xª¯˚˚ókI?≠VKªvÌÿªw/ °°°Í{Z	©®≤rﬁ™V≠Z1sÊÃ€zˆÏ)#XÖ®EjTê+´6ÓFÆ˜çˇªÔæ£q„∆∑R$µ∂AQWFÍU‰ƒSë⁄ª –ºys÷¨YSÓ˝ãää*ı˛<Hõ6m ∏tÈR•[T/õÕFzz∫˙º*Ét:………4i“ã≈¬≈ãÒˆˆ.◊1SRRn{êS÷eΩ≠Vãßß'ã´’™6õÕft:ù:u™qSê8äééñ–&D-W£Ç\U®™	gÀ+R{WYBCCÀΩØF£QßíP‹ ¬€Ì€∑g˘ÚÂÍéÉ!ÑÛ”jµ¯˘˘—±cG∂m€∆â'@£—pÙËQ:wÓ¨éòÙıı-◊1ïfÀ€©Y≥fl›∫ıÜ˚iµZ<<<(((@´’ƒô3gX≤d	ﬁﬁﬁl€∂çÏÏÏ™/∞B\C≠r&L∏ÂéΩ˘˘˘4h–ÄuÎ÷›∂><∑õR#ß∏[©°˚‚ã/*•L¢fRæôÕfLjj*¸Ò ëëëÙÓ›õÃÃLl6ûûû’X“ £å‘5õÕ¯˚˚”ø^˝u._æLll,ì'OÆÓ"
!Í0ßr âÂÍ&÷U´V±m€∂[>æR£4zÙhu˙???L&Sπnªõå Œù;WÓ}µZmâZ3«Ö—Ö∏öÚ∫–Èt0Ä¡ÉóπüõõôôôÂ™ÁÃô3UR{~≠◊Ò≈ãÀ=O¢≈bA£—`µZ1º˛˙Î\∫tâMõ61k÷¨ΩDó¢ˆs˙ ßp<	X≠VÇÉÉo8"ÌVdeeïkø®®®€ﬁáÊ¯Ò„Ñááók_•π˛∑\Ve˜ôª—˝ã⁄«œœØ‹ÔÉ¡Pj¬Ì™ñúú\Ó.ÖÖÖ∏ππï9œçÊYBà™V+◊ERöB™Já }‚È‹πÛmÔ˙Ùiö7o^Æ}<Xj€≠ÙëÆLÅSﬁ 7tË–
’"WÜ„«èók´’™N•"_:Ñ5Q≠r
%–› •,4(5É˙ıﬁ÷Zπåå&NúXÆ}+R{'DyÖááW(ú9NÎQïî¶÷ååudııhµZé=JTT‘-œI)ÑU°Vπ™R—µDªvÌ Í’´´®4%}˘Âó⁄ø"µwBîW\\\ÖˆÔ“•+WÆ¨¢“îÙÂó_@dddπˆ?}˙4-[∂¨‚R	!ƒÕë w [É0c∆u˝“™∂xÒb¶Oü^Ó˝322h◊Æ]ñH‘e			Â⁄ÔÂó_f˜Ó›U\ö+É4˛˝ÔÛ‘SOïk@Off&YYYƒƒƒTyŸÑ‚fHêªI={ˆ¨–∆CáÂç7ﬁ®¬˝Ø6Æ<+: j∞¨h£Â—∂m[V¨XQÓ˝áŒ·√´¨<Z≠ñ˘ÛÁ„ÌÌÕÄ0ç7ºÕ¶Mõıı-±÷≥V´ï~§BàCÇ‹M8p`ÖñÊô1có.]™“ærü|ÚIÖj„ñ/_Nó.]™¨<¢n1bDÖﬁ#/ø¸2ÁŒù´“ær,`˛¸˘ Ëı˙÷ ˝˘ÁütÍ‘©‘veÑ∑BT7	r7I©≈™HsÈºyÛxÌµ◊J‹∆jµVËrım111¸Ìo+wm¿Ü9rdπ˜‚j◊{≠∆∆∆íììSÓÊUÄEãÒÏ≥œr‰»ëJ)ü„¿•Nù:1yÚdµO®^Øø·`ßMõ6ïöW©ëìZ9!DM AÓÙÏŸì˜ﬁ{Ø‹˚wÓ‹ô≈ã3vÏÿ[Ó/Á8™∂_ø~ÙÌ€∑‹#U·J3l”¶MK5´ﬁÓ˘ºDÌˆ‡ÉÚ—Gï{ˇËËh˛ıØ1lÿ∞Js ù:u¢ˇ˛Lô2•ƒˆÎM)2oﬁ<ö5k¶Œ≥Ë»f≥…“\BàAÇ‹-ò1cÁœüØP(ss∑“Ãöëë¡ˆÌ€âââ°Kó.º˚Óª∫˝‚≈ãy˛˘ÁKl{˜›wY∑n]Ö°◊3m⁄4Nû<Y°Zπ°Cá™aÓ”O?ΩÈ˚6õÕ$&&™!nÊÃô∫˝‚≈ãKºkÍ˛ıØqÏÿ1Z¥hq”ÂBà  AÓ:¥Bµrp%Ã;vå?¸êæ}˚V∏v.99ô∑ﬁzã«{å∑ﬁz´¬!NQ÷ ¯ *€}˜›W°Z9∏ÚæZπr%ã/¶gœûÓ7óëë¡ÙÈ”ô4iˇ˜ˇW·7oﬁ<6lHˇ˛˝…»»(u}PPêzBàÍTkñË™.3fÃ†{˜Ó$&&V8mŸ≤Öoø˝ñ_|ooo˙ÙÈ√ùwﬁYÍ8Z≠ñ‰‰dvÔﬁÕí%K8uÍΩ{˜Êó_~!$$§¬e˛‰ìO*|b‚fΩ¸ÚÀƒƒƒêêêP°˘Â¢££Ÿ¥iü~˙)ÔΩ˜ü˛9É¢gœûDGG´˚Y≠VL&f≥ôÕõ7≥tÈRŒû=Kø~˝nzJìO>˘ÑEãHXB‘h.v~u]Âôk*11ë)S¶∞eÀñõæüoø˝ñ’´W´≥·{{{´◊)Î9÷´Wè.]∫0r‰HuV˙ä.nˇ‡É^·Zº™"À9∑Ω˛îÁ7!!Åi”¶±c«éõæØU´VÒ˘Áüs˘Úe –jµX≠VÚÚÚ(((   Ä·√á”ªwo¸˝˝Kºè Îæ˚Ó£yÛÊÆ≈5«Äx˝ı◊âçç≠Ó¢'ïêê¿€oø}€&ÛøR#W	:wÓL˜Ó›5jÀñ-ª©c¸Â/·/˘Pr$¨áá>>>ÍII9qU4¿¡ï&’SßN±d…íõ*£7+..é=z0fÃæ˘Êõõ:∆–°C:t( Gé¡b±PTTÑV´≈◊◊∑ƒ{‰fÕõ7è.„è?ﬁÙ1Ñ‚ví WIfœûM˜Ó›y˚Ì∑ô1c∆-ÎzM¥7‡‡J8î&UQùÊŒùKLLÔºÛ/ø¸Ú-KiZµX,X≠VuN∏[	q {‰·√∑T6!Ñ∏ù$»›¿çNé¡jÀñ-tÈ“ÖË£èﬁñ˚/èì'OÚóø¸Ö–µk◊J(ïWTÙıπc«¢££	

‚±«ªÂ˚WV[∏ô≤8JLL‰¡‰√?ºÂ2	!ƒÌ$AÆíÌ‹πS]-°≤¬‹≠8~¸8Éb¡Ç<∏∫ã#øˇ˛;®î0w´CúºGÑŒF¶©;wÓ‰”O?-5O€Ì∂zıj	q¢∆	„˜ﬂgŒú9∑‹ƒz´VØ^-!N·‘$»Uëù;wr‡¿µÊ·v{·Öò>}:ﬂ~˚≠ú†Dç∆ë#GHHH`¯·’RÜ_|ëÁû{é%Kñ»{D·¥$»U°ﬂˇù∂m€“•K>ˇ¸Û€rü´WØ¶wÔﬁú>}ö˝˚˜Kü8Q£m⁄¥âËËh¢££oz4kE)´=:tà√áÀ$ÿBß&AÆäÕû=õè?˛òeÀñ1p‡¿[^cızFç≈ÙÈ”;vÏMOÉ"ƒÌˆŒ;Ô…'ü…'ü–≥gO‚„„´‰~ô8q"ì&M‚Ò«ØjBQ…`á€†sÁŒ¸˛˚Ô|˛˘ÁLû<Fç≈£è>™é¥ªŸiEVØ^Õó_~…±c«8p†8·îzıÍ≈¶Mõ¯ÊõoxÂïW`‘®Qå3Êñèùòò»´Øæ ÖËﬂøˇMØˆ Ñ5ë¨Ïpãn&Ä}˛˘Á¸˛˚Ôú>}öÊÕõ”≠[7Óæ˚n"""n8Ö¬ë#Gÿπs'ÒÒÒ$%%0vÏÿ1˙Oà ÚÕ7ﬂ∞lŸ2RSSi‘®É¢eÀñÙÍ’ÎÜ∑=x ˛˘'€∑ogÔﬁΩ4lÿêa√ÜÒ¯„èﬂÜíãö@Vv∑ ôVvê WÕÊÕõ«Å8{ˆ,V´ ‹››©WØ6õçÃÃÃ∑Ò˜˜ßsÁŒ:¥ƒöìB‘6«ègÛÊÕl⁄¥â3gŒ`±XÙÙƒ€€www\\\∞X,STTD^^V´ï&Mö–©S'Ó∫Î.⁄∑o_‚ó,W˚Iê∑ ôÇú4≠V≥)S¶ WjˆåF#ÈÈÈú={ñ¥¥4rrrÒÒPÁ¶ì‡&ÍíÊÕõ”ºysy‰ 222HOO'--ì…Dzz:zΩ¸¸¸hÿ∞!4¿`0®«PBú8!Dm$AÆÜ–jµ¯˚˚„ÔÔ/aMàˇÔÍÆÂ}èHú¢ÆêQ´BàZKBú¢∂ì9!Dç%AL!ÆOj‰ÑB!úî9!ÑB'%AN!Ñ¬IIêB!ÑpR‰ÑB!úî9!ÑB'%AN!Ñ¬IIêB!ÑpR‰ÑB!úî9!ÑB'%AN!Ñ¬IIêB!ÑpR‰ÑB!úî9!ÑB'%AN!Ñ¬IIêB!ÑpR‰ÑB!úî9!ÑB'%AN!Ñ¬IπVwÑ®NV´ıñnØ’j+©$B!D≈IçúB!Ñìí 'ÑB·§j}”Í∏q„™ª¢≤ŸlÿÌˆ?ØÁôgû!66ˆ6ïN!Ñ(üZ‰~¸ÒG∂oﬂŒsœ=Wb{rr2M… HÂÔ‡‡‡€V>q{iµZ4ç⁄.\∏PfÄ´_øæ˙{`` .$%%EÇúBàßV9 ___Z∂l…—£GiŸ≤%/ºÅÅÅ êõõãáá©©©∏ªª3i“§j.±®Jç>¯‡,AAA•ˆYªv-œ<Û aaa∑ªà∑Ãjµ  !Ñ®#j}ê§WØ^ÙÍ’K›6}˙tzıÍÖ≈b¡l6p‡¿ﬁyÁÓøˇ˛Í*™∏M¨V+~¯!˜ﬂ?O>˘d©ÎªwÔŒË—£’ø€∑o;ãwÀ¨V+ÔΩ˜YYY’]·‰˙ˆÌÀ‡¡É´ªBàÎ®ıAÓj-Z¥‡Ω˜ﬁ„Ω˜ﬁ¿≈≈777ÚÚÚàää™Ê“â™§’j±Z≠òÕf:wÓÃwﬂ}«ÊÕõKÌÁåµpé¨V+ü}ˆè=ˆXuE‘pWw1q¥i”&._æ,ANàÆŒπO?˝îÑÑ µY’±TΩzı»œœg“§I∏∫∫™˝©Íö∫Ùò;uÍÑ—hÆz∏Ú¯]\\ò:u*ëëëe÷ÿ’tV´ïFçÒÚÀ/WwQÑkﬂæ=Àñ-´Ób!n†Œπ/æ¯¢D3Å‚¨VkâﬂÎöîîºººˆˆ∆””≥ƒ`Ä∫H	≤{˜ÓeÒ‚≈N‰ 222 Ï(Dy‰‰‰TwÑÂPgÇ\`` ÉÊË—£jÕÄNß´∆RUøázOOOÊœüèNß√’’U≠ù™ã4°°°º¸ÚÀl⁄¥©∫ãsSÍ‚!Ñ®´ÍLêS|Ò≈<Ú»#¥lŸ≤∫ãr€iµZu4c^^ﬂ|Ûø¸Ú^^^dffÚ¡p˛¸˘j.eı:uÍ}ÙëS˜í 'ÑuGùrÅÅÅ<˛¯„’]å€Œb±`µZ—ÎıÍﬂ˚˜Ôß†† çFC˚ˆÌâåå$88ooÔj.mıâââ·á~†^Ωz’]!Ñ‚ÜÍNœvÒÒÒ’]!ÑBà[VÁj‰Í™´'àï	cÖBÁW'k‰ÑB!jÉ:‰◊“¨K§N!Ñ®]ÍdêB!Ñ®§è\!}‰ÑBà⁄Gj‰ÑB!úî9!ÑB'%ANàr®ÀÎœ
!Ñ®π$»	!ÑB8)	rB\•¨µJ•FN!DMTÎG≠Ó⁄µãæ}˚r‰»ëÍ.ä®7ªÄº∑∑7Gèe‡¿Å<xê:†’j±Z≠2‚W!DçQÎk‰zˆÏIÔﬁΩ…ŒŒ&$$ 77∑2˜µZ≠X≠VuÅ˘õ¬ππππ·ÔÔœÂÀóÈ‘©„«èó9!Ñ5R≠ØëÛÚÚ¢q„∆Ò¬/p‚ƒ	ﬁ|ÛM<<<pqq¡’’çFÉãã :ùéÄÄ ZµjE\\˛˛˛’¸De˘Ò«IJJ %%Âö˚;vå	&`2ônW—ÑBàõRÎÉ‹¡ÉIKK#""Ç‚‚b¢¢¢»ÃÃƒf≥a∑€’ãR„íïïEhh(ã-bÒ‚≈‰jëwﬁyá‡‡`“““æÊ~6$##Éêê÷¨YC`` QQQ∑±§B!D˘‘˙¶’]ªvqÍ‘)˙ıÎááá>>>¯˙˙‚ÎÎãáá~~~¯˚˚H`` ≈≈≈¥h—ÇﬁΩ{ìììS›≈ï(66ñ^ΩzëùùMDD ıÍ’+q1H∑n› Xø~}u[!Ñ∏¶Z_#âøø?k◊Æ%$$DÌ˚¶—h(..∆f≥©Õ™ f≥ôÑÑ222x‚â'™±‰¢≤m›∫ï‰‰dıwÄ¥¥¥R˚πªªc±X»……¡””ìˆÌ€ﬂ÷r
!ÑÂUÎÉ\è=Ë⁄µ+O>˘$Ω{˜f”¶MƒƒƒPØ^=äääpuuUG!j4Ùz=zΩûñ-[^ΩÖïÍÂó_f„∆çjm\YÚÛÛIHH`–†A,\∏ê)S¶‹∆
!ÑSÎÉúF£¡ﬂﬂùN«Ûœ?œ©Sßò9s¶Z;'Íé˚Óªè˚ÓªÔ∫˚hµZFç≈;Ôº√‚≈ã’Ì2jU!DMTÎÉ‹∂m€8{ˆ¨:ò´´+YYYÑÑÑ»|`u@yûc«@o2ô»œœ'--ùN«ö5k x˙Èß´¨åB!ƒÕ™ıÉ ¶MõF˜Ó›9{ˆluE‘@Wá=çFCAAQQQº¯‚ã Ëı˙Í(öBq]µ>»µlŸí¡ÉWw1DßÑ9ÂgQQıÎ◊gÃò1ÙÏŸìºººÍ,ûBQ¶Z‰
´ª¬IhµZÙz=ÆÆÆ∏ππIxBQ„’˙ 'DE9NG#ÑB‘d‰ÑB!úî9!ÑB'%AN!Ñ¬IIêB!ÑpR‰ÑB!úî9!ÑB'%AN!Ñ¬IIêB!ÑpR‰ÑB!úî9!ÑB'%AN!Ñ¬IIêB!ÑpR‰ÑB!úî9!ÑB'%AN!Ñ¬IIêB!ÑpR‰ÑB!úî9!ÑB'%AN!Ñ¬IπVwÑ¢.≥Z≠7}[≠V[â%B8#	rBà*c±X∞X,hµZ5t‘ı·¯¯≠V´‰›’ˇ´∫˛?B\õ9!ƒM≥Z≠òL&åF#yyy‰‰‰êõõK~~>&ìâÃÃLäãã±Ÿl•.é€-ÖÖÖòÕf,EEEÿl∂2Ô”n∑`≥Ÿ∞€ÌÍ~ ˆö¬≈≈<<<pss√››777t:∏∫^˘¯U˛ :ùOOO|||–Îı‘Ø_≠Vãáá^^^xyy·ÌÌç^ØGß”I¿BHêB‹ÿÒ„«Ÿ±c{ˆÏ·‘©S‰ÊÊêìì£÷∂π∫∫™≠VãõõÆÆÆËt:5¿8%Ã∏∫∫‚ÈÈYÍˆçÛw·-**¬b±P\\\‚gNNV´õÕ¶÷ƒŸl6RSSK√l6ìóóáŸl∆f≥·ÍÍäªª;:ùéÇÇö5kFÎ÷≠È–°∏›QQÕ$»	!ÆÈÎØøÊ´Øæ"++ã∞∞0ö6m à# àââ¡««Gre] "µH7œjµíëë¡•Kó»ÀÀ√h4≤wÔ^:ƒ ï+y„ç7àãã„›wﬂ≠Ó¢
!n	rBà2ıÔﬂü¨¨,¶Nù C=T›≈\	¡¡¡¡´€k·÷¨Y√‚≈ãâääb¡ÇRC'D‡¸mBàJ◊∫uk∫uÎ∆Æ]ª$ƒ9ëüˇ¸á‰ìO2sÊÃÍ.í¢äIçú∏“lß’ji›∫5√áÁ≠∑ﬁ™Ó"â
pı:`¿ Nú8ATTîÙù¢ñ´uA.33ì^xÅºº<RSS©WØ^uI‘~¯!€∂m√n∑3{ˆl¸˝˝´ªH@ŸsêçF\\\˜˜Ø–eãÖ˜ﬁ{è®®(fÃò°ªäŒsVY}‡Ææﬂ⁄⁄∑NyúïÒ¯îÈLîcæÚ +º˙Í´ÙÎ◊Ø¬«*,,¨µˇs!jìZ‰Ãf3F£ëúú∆åC∑n›h‹∏1ÈÈÈ’]4QKËızBBB»ŒŒ¶wÔﬁÃô3á˛˝˚Ww±*ï≈baÌ⁄µº¸ÚÀÍ‘7
qÂ=—[≠VuN9ã≈¢ÜçsÁŒ©#7ãääJ\îQù6õMùöƒl6SPP†é uú¬JNM¢lªzöí´)£c]\\J¸≠—h–h4%∂;é§’h4ÍÙ":ùNI™åÃUFÁ*#xïãNßC£—†’ji‘®ë:0D˘üWFxRé1vÏX>˛¯c/^Ãÿ±c+tå⁄0jXà∫¿ÈÉú’jEØ◊£◊Îô0awﬂ}7ªvÌ"??ww˜Í.û®%¸˝˝1õÕ?~úa√Ü1sÊL∫tÈÇ¡`®Ó¢ïqS∑SÊp:t(ôôôe÷:Óÿ±É‰‰dRRRÄ+”èQ\\Laa!ÖÖÖóòvC£—®JN…q-Z≠5Hi45êï.ï}îﬂÅ∑ΩzÖ„ﬂW?«ﬂÀö´Œf≥ï
zé˜°Ãèw≠ ©îÈÍ«™<~e*«˘Áîi[t::ùéËËhÇÉÉi⁄¥)ﬁﬁﬁeﬁG«éŸ∂m[ÖÉ‹µé'Ñ®Yú>»)ﬂ<è?éóó………¥n›öwﬂ}ó¯¯xÈÏ+*≈√?ÃË—£ô9s&˚ˆÌ√””ìÙÙÙ‰fÃòAFFF£ëSßN1zÙË
›~«étÓ‹∏R©ò5k{˜ÓUÁé‘.éÅß¨øïP£‘ƒ)Ïv;Z≠ˆö!I	y^^^Í6%*î–„x?JMóããÆÆÆÍO«ê•\''V °\ÁxSÆS∂)Â‘jµ% ^TT§^ßNÂq(ÅMôO˘‹Rj&ØÉ ˆ¬¬BL&ì˙8Ôœjµ≤q„Fu¬`wwwzˆÏ…#è<\	Ê ›∫u„©ßû*sé∫Î…ÃÃ$//è«{ÄG}îÆ]ªVËBà™ÁÙAÆ,Ì⁄µ(Ò(Deh€∂-[∑n≈’’ïúúúÍ. ………<¸√¥h— É¡¿¯Ò„…»»∏·m]]]…œœßoﬂæ$&&“®Q#µ∆Îç7ﬁ`˚ˆÌjh´WØ^â0®5CJs¢c£Nß+Q´‰··Åßß'zΩ4Mâ¶G«âÉï∞\"Tﬁ ∫§UAi~VöéõêÕf≥⁄D¨‘B^›l|˛¸yµ6ÛÍIÉïüéÕÕÖÖÖ%nÔ‚‚R¢6Ôßü~‚€oøeÍ‘©:´’ ÿ±cyÍ©ß∏ˇ˛˚Ÿ∂m[π[hh(zΩûÏÏl|}}y‚â';v,”¶M´¬ˇ®¢¢jeê¢.y¯·áâãã„‰…ì¿ï ∑h—"|√€jµZŒú9√˜ﬂOdd$w‹q&ìâIì&ëõõKxx8gŒú°Iì&ƒ≈≈ALLÃèYôjZxs‰8PA	ú∑˙¯+(µxWˇî–xˆÏYrrrÿ∫u+{ˆÏ!77ó=z0c∆åF£Z+€∫uk∂m€∆oø˝∆†AÉ Uéc«éëôôIﬂæ}Ÿ∞ac«éeÒ‚≈ÙË—CjÊÑ®Aj]êslnÅö∑˛¢ï)99ô‡‡`2220,\∏Ä^Ωz©ø_èV´Â»ë#‹{ÔΩ§••ÒØ˝ãoæ˘Ü¸¸|5ƒ≠\π≤Be™…¡Îv∏’«_÷Äá´ˇVBctt4Ä¨6n‹»ÙÈ”πÔæ˚ò5kñ‰4h¿◊_Õ¸˘ÛÀ›Wn„∆ç,]∫îY≥f±}˚v^zÈ%:uÍƒÚÂÀ%»	QÉ‘∫aIWwfvr2î^îWQQQu°‹F£Q≠iINN.˜m”““àééÊ˜ﬂßU´V4n‹òÔæ˚é˙ıÎìëëQ·'nù„"e]ÆßGè¨]ªñÑÑ:uÍƒ”O?≠^˜–CUh¿CVVñ˙{◊Æ]i÷¨Y≈å¢ ’¯π}p˝¯„è ¨]ªñºº<¸¸¸¯Ôˇãªª;k◊Æ≈n∑ìôôâ’jï·Ù¢‹


‘⁄›¬¬B‚„„—Îı|ı’W¸øˆÓ<∫©:˝¯;πYõtIW(--Hi,ñEdé¬å,£àÚgï¡q@ADıÎú¡/~áqdd–Í bµÏeìR∂J)•4i∫•Õû¸˛Ëπ◊§M⁄¥Mõ‹‰yù”ì6πÀ'Kì'üÂy^˝uÃü? 0}˙tè«Èç/ã≈mYgh4 @yy9êóóáÿÿX\ø~[∑nıg3âü∏æ'zÍπìÀÂò1c<à¶¶&0É‹‹\\ΩzµÕ±⁄{}ÚÈÀ!·,Ë9OvÔﬁçMõ6°∏∏&ìâª˛°áÇ”ÈDqq1/^å∫∫:å?*ï
J•íﬁòàœƒb1˜⁄R*ïxÁùw∞{˜nà≈bLù:ÕÕÕÿªw/>åÊÊfDDD`–†AX∂lô◊†.òïîî && ÄÿÿXJ?¡SâCá≈∑ﬂ~ôLÜ˝˚˜cƒà8r‰åFcóÉ~BHp‚] ∑{˜n,X∞ YYYò7oÓæ˚n¸ÚóøÙ∫Ì¢Eã√£∏∏2ô¨wKx+&&UUUò={6é=ä’´Wc˘ÚÂêH$n€1Éºº<aﬂæ}ò?>∂m€∆õ`Œh4B©T¢¥¥±±±\Ì‘‘Töä¿C√¿b±`ƒà
ÖêJ•8uÍ/^åó^zâ€¶´Û¯‚„„π˜QV§ ÑtÔπì'OB•R·–°C>müõõ•Râõ7o"99πá[GBÖR©ÑNßÉÕf√∏q„êòòπ\ÓÒp˙ÙÈò>}:V≠ZÖ¨¨,¸Î_ˇÍÒ@nˇ˛˝®¨¨ƒ7ﬂ|„ÛˇB{™™™êööä““R ¿–°C√~—∞e‘ZìÀÂàââASS¥Z-îJ%W£3=≠•••ÿ±cnﬁºâ¸¸| -ˇ)))Ë◊Ø&Lò‡∑˚BÈﬁrßOü∆ê!C|ﬁæˇ˛»ÕÕ≈á~àç7¢™™
|“””€$ZÚj%$$‡ÆªÓÇJ•¢aà≥sÁN ZæÕd2·“•K¯À_˛ÇÜÜ8R©ııı>ı<‹u◊]ùNºÍ´˝˚˜c„∆ç®´´–íÁ+99ø˙’Ø∏mæ¯‚TTT†≤≤˜ﬂ?/^åô3gz=&€ÉS[[ãAÉqy ≤≤≤®ßÖßÿÁ-!!WÆ\AYYÄñ‰ %%%‹ºHoäää∆o†∞∞b±ˇ˘œÉ  ÍÍÍ›wﬂ°±±Øæ˙* ‡¡§¸rÑÔπ⁄⁄Zƒ∆∆˙º˝ï+W–––Ä>}˙‡·√ê…d(((@AAÅ«Ìèää
Ï⁄µCáıW”É[fà ﬁ999ààà@ss≥«€ùN'd2ÚÛÛÉ'N 66÷ÁûáÏÏlú9s∆è≠n±ˇ~<ÛÃ3Xµj∑¿h1–Æ]ª∞a√ú<yÎ÷≠Û∏ç\.á—hÑ¡`ÄH$‚Õ≤=êÑÿˇ·ÙÙt\æ|áÉqqq∏rÂ
ÓπÁØ˚a÷¨Yò7oV≠ZÖÏÏÏœ«¶&9}˙4>˙Ë#ø›Bàox»›∫u'NÙy˚¸¸|§ßßcÍ‘©hjjBcc#ó©ﬁì+WÆ‡Á?ˇ9~¸ÒG∑ÖÑˇÓ∏„å3Î◊Ø˜ö‘÷l6√d2!::			∏zı*ÚÛÛ1c∆üœ√ˆò˘”÷≠[€qô9s&rrr∏ûo™™™ ã°◊Î!ã!
°R©º€ë‡g∑€1d»ÏŸ≥6õıııË€∑/ó4⁄€<π]ªv!77óõOÁãë#G‚€oøÌ‘˚2!ƒx»¿›wﬂÌÛ∂ç√‡ÏŸ≥‹‹ê¶¶&Ø€744‡Ë—£®®®h∑ÿu(`ÎJ∫
ÂÓ7np=±7n‹hs;[£”f≥q)kåF#bcc}~\|È¡Ë
É¡Ä§§$ø◊n∑£¶¶"ëV´F£ë+ Ns‰¯¡[¿¡•–ijj¬ÄPTT‘Ó±.]∫ƒïzÎäc«éQ≤`BzØ9∂~°NßÛyü	&‡ÓªÔ∆ ï+1q‚D\ºxÉˆ∫˝¿Å!óÀ1vÏÿvá B;¥ ØÜr 7a¬ú={YYY^∑1ôL∏rÂ
≤≤≤p‡AÃü?			0õÕ ⁄>>≠Éùàà8hµ⁄Á"uÜ^Ø˜∏Xß£Á+!!√‡ÙÈ”»……isª›n«µk◊†T*a≥Ÿ â–∑o_Ó∂éé Ø>`_ûÇÓÏÏlÿÌvàD"?~ÿøª«´©©qÎYÛ%ò∑€ÌêH$HLLDYYrÑÙ2^rÏõJW˚ä≈bº˘ÊõXπr%ﬁ|ÛM‰ÊÊ˙ªyºÍΩéÆ^{Ìµ∑©ØØ«„è?éwﬂ}YYYHHH  ÿl6üŒ!ïJ·p8P[[ÀÌ€]F£B°–Î‹Pv5·¯Ò„€‹∆§o]ÏﬁıˆÎ◊ØC°Pp≈ÿŸ îÜV˘O°P¿b±†∫∫£FçÇ…dj˜ye{dΩŸΩ{wõtOl≈	ôLÉ¡‡v=Ω~Èyº
‰,ÄŒr5558yÚdO5â◊<q·˛∆+óÀaµZ°”È âpÙËQ @ø~˝|⁄_&ì¡Èt∂;|ﬂYÉ√xÏ·{˝ı◊Ò≈_¿d2·ïW^i3óèaH$ívπ7n **
uuu∞Ÿl–h4Ù!"¢££°◊ÎQUUÖåå‘‘‘†ææ*ï cÔ≤—hÙ∏ö x‡ ¿˚ÔøèØæ˙
¿OÔvªQQQneΩË5DHÔ‡UÕ*6êÛˆF„…≈ãq˜›wcÏÿ±=’,^ß9_∞ÂÆ
“””1j‘(.}É/ÜÅ”ÈÙk∂ó√”á‚ﬁΩ{ëóóágü}õ6mÚÿ©T
£—Ëı¯Z≠ëëë∞X,∞€Ìàèèß˘q!"**
¿OuS
Ö◊©)ãNß”„je∂"¿±≥Ïv;¢££{d°!§}º‰D"ﬂ;ÔΩ˜^¨X±¢ßöDB√00õÕ`jµØø˛:ÓªÔæÄ∂©©©©√°›‰‰dH•“6◊≥ÅúÎêWkÉâV´NßIII»Övı1€C,ì…pÎ÷-è€≤s›:˙¢Ôˆ7√0`QQQ^{~	!=áóC´ùÈë´©©q˚[ Pw?Ò u®(X455q´ª"""Ç+ûﬁ˙~ÿÌvÖBnb|\\\wõLÇDll,Ïv;˜ﬁ…•{b±X ïJ;ï?ê˛ÿKvû%´“{x»±√Äù	‰\”á≥?ÌŸ≥«ßÌ¶Mõ÷#«Õ  BJJJßéM|◊‹‹‹Â◊<–RD›[‰˙˙z ?-Ê6èSü>}∏!sÉ¡ÄÏÏlîóó{‹ñˆZ◊n∞±?ÏqÏv{ßJÅB∫éWÅ–í}ø;AóVΩ´%Kñ¯D}ı’W¯Î_ˇÍ”∂/æ¯"ÄüÊÿ¥'//+WÆ§`ŒÖ?_c&ì©[ΩâƒkrÎ⁄⁄Z.ü €#«V{ ¸ßV´¥WeeeË◊Øn‹∏·±«å¿∫Z—#Tø(Ïx»±+kjjºf&oÕu>õ3-T∫¸ø¯‚§§§¯<Ω˜ﬁ√{ÔΩá'ü|≤›ÌNü>ïJÖ%Kñ¯îGlœû=8˛<rh	|ùN'
Ö_è€ù/0lícOn‹∏ÅÿÿXn¢{{UOHÈËˇ3&&√@$°≤≤jµ?˛¯£«m%	$â«cÍt:DDDtÿá√A…§	Èeº
‰‰r9ÑBaóS;Ñ‚õKtt¥◊€.\∏  »ÃÃ‰ÆÎÃ∞	–≤¢ë›œu•≥«	555
Ö~}|ƒbq∑W{Î!¨®®@dd$l6úNgªØ'¬?jµ√@&ì·ÊÕõ0` *++π/¬ÆA[{A°/=ÃÏóÊP˘¢L_*êcK(±s9∫"\;<Ú»#∏~˝:Äñ`ÔÎØøÓ“q˛Ùß?!??±±±0õÕ8~¸∏?õrÙz=óÑ◊_¸y¨÷ÿrV´áÉπ£R© â¿0¥Z-∆éÀÕãÙÑ]—˙ãà/ÅúP(ÏTFBàj≤€‘’7ãPÏëÛ¶ÆÆõ7o∆ÊÕõ€}„ÓHMMV≠ZÖ-[∂ÑE ‹]ııı~Ô±Ï…ﬁœ€∑o#::öÎëãââÈ±sëﬁ«¶–ÎıHHHÄÕfÛ:“·px¸¢ÏÀó	á√AÔÑ Ø9_rˇãââAjj*}€ˆ»˘Û≠ªØ˘  J®T*è∑’’’A©Tr	åŸ…Ò$t(
8ùN477C©TB(rS&ZÛ»˘Úøo4È=Çê ˙@é˝@d?e2t:Â)
ÄPZÌÎ/≠_ÉıııâD~ü#◊]ﬁV"çFH•RòÕfÙÈ”'¨zÆCù≈bAdd$◊—&ø& nﬁ\W{‰Ë=ôê ‡≈'≥k0ßP(p˝˙u˙∞Ò;Ø–
Ã¸Ø°°¡ÔÅ[ˆ´;º≠FµZ≠êH$∞Ÿl\9˙í:ÿ@ óÇF°PxÏëc_gûﬁ[}‰Ë=Öêﬁ«´ˇ:Üa óÀΩñò!$–ƒb±ﬂπÓ~qÒñú’l6C,√l6 ªu|bbb‡t:π’˛
Ö’’’∑ı»˘¬d2Q GH Óø.11ë+¸4‰ÍÈá˝p
el"WWvª›k∫
ˆz∂,Èò∑d∫¿Ohÿ¨+WÆ@£—¯-ê≥€ÌHJJÇ”ÈÙ8A›Èt¢∏∏ê…d\y$◊ü€∑o#22“„4˚p:ù¥j5ƒ∞£ã6õçÎ°+++„æ ∞?ârπZ≠ñªéè≤≤2 ¿πsÁêîîƒü›∂¶¶iii‹~4jBHÔ‡›'˘ÄPUUËfÜP(ÏVùN“9∑n›¬Ä¸v<Üaá√Ω^ﬂÊˆW_}Kó.≈wﬂ}áﬂ¸Ê7^è„)h/((‡Íc≤+iH5¥H$ƒƒƒpUÄñ≤]m∂e}˙ÙÒxú#F`ÙË—>|8Fèç#FÙhª	!æ„›£ªÓ∫Ôæ˚.fœûçô3g‚—Gtìxãz‰∫èaTUUaœû=»œœGii)û~˙iøüùØ∆N)HNNvª}Ãò18q‚Dóè/ïJπ™R©¥ªÕ%AÜa$%%qÛﬂÙz=˙˜Ôè”ßO{›Áá~®mÿ∞°√Ûeggw´ΩÑêŒ„] «nØæ˙*ˆÓ›ãÂÀó Ó∏„> p‚ƒ	TUU·˙ıÎ7n\¿⁄JBÉZ≠∆˛l‹∏			2d †∏∏%%%0õÕ0ôLP´’xÓπÁ:,ÅÊ+v»ä‰<ı»˘jÃò1Øw≠´*ã©G.±C˝f≥∑n›BZZé;ã≈‚±≤ÉNßÎ“yhÓ2!Å¡ª@h	ÊÿÄn˚ˆÌ8sÊNú8Å'N†Oü>®™™¬ÙÈ”qıÍUÜ ∑ñÑÇY≥faÏÿ±ÿ∏q£€ıO<ÒRSS1|¯p∑Rh˛‚∫bª∫∫∫”Ûé


ºﬁv‚ƒ	»ÂrX,8
‰Bê›náJ•Ç”ÈÑ”ÈD]]T*ï«Ù# 0|¯.r h»ïê ‡˝ÿ⁄£è>ä∑ﬁz‰Êw¨Y≥oΩıfŒú‡÷ëP1vÏX<˝Ù”¯Á?ˇâ∏∏8ƒ≈≈·/˘VÆ\âGy©©©0ç^3ÊwTY,å7Ôøˇ~õÖŸ¥iì◊d¿@ÀjVì…ß”IÅ\bÀmY≠VÖBËız»d2Ø’^∆éãºººNó‚€ºy≥?öKÈ^ˆ»µg¿Ä8sÊÕùÎvÓ}®∑u¯a∑øŸ«®ß h±´-ZÑííå=âââ:t(ÓºÛN$$$¥ŸÁ¿Å∏vÌŒü?èîî|ˆŸg^è/óÀπÚ\T5%Ù»ÂrÿÌvH•RÖBËt:>‹ÎóÄ#F`·¬Öx‚â'êòòà!CÜ`Ë–°mÊæ æ˚Ó;nHu›∫u={g!Ö\ †[ìøIoÈK∫ª-ﬂ}ˆŸg2däãã1tË–6Ûåz√0∞X,x˚Ì∑qÌ⁄5·‘©Sÿ≥gÆ^Ωä´WØ ‚‚‚êïï 8x ˛˘œzù gœûEzz:ó_å;Ñ&Üa	Å@Ä[∑n!%%B°É¡c∫ôÁû{œ=˜V≠ZÖù;w >˘‰\ªvç€ÊÅ  ‹wﬂ}»ŒŒ¶!UB(§π‹‹\b¯·ò={6.\Ë&=6s∆®'Æ-µZçﬂˇ˛˜àããÉNß„<Ù∆c≈0$	ÜAFF222À_˛ PRRÇµk◊ ¶MõÜá~ 0a¬ÑvÉ8 hllÑL&Cmm-˙ˆÌ†mn<¬Ïp™…dÇ›ná@ @}}}ªyGéâ⁄⁄ZnµÍSO=†eÒƒ´Øæ⁄+Ì&Ñtå˜s‰\≠\π pıÍU‰ÊÊb—¢Enø—˘O~ˇ˚ﬂh	Ë™´´ÒŒ;Ô @ØÂ^ÎÃ–≠kœIG¢££aµZ!â†V´ª“4¬#lítÅ@¿ıƒ˙™∂∂∂'öDÈ¶ê
‰ ‡ﬂˇ˛7 †∞∞£Gèpk¯âaòNó˙:ÒûØt:&Lò ùNá‚‚bÏﬂø?–M‚§••·˙ıÎHKK√û={:Ω\\Gõ<rƒá&´’ ˝ﬁ^≈í÷ÿ≈µµµò>}∫ﬂ€EÈ∫ê‰Äñ`.77∑ÕƒtB∫B≠V„‡¡ÉP´’Aƒ±ÓªÔ>ÆnÌ⁄µHKKÛi?Ω^œ•¶`À∫Ör@éZ?üÆ_–\É:o4é?éwﬁy?ˇ˘œ°◊Îi>!A&§Ê»πZπr%Ùz=~¸Ò«@7% ˝˜ﬂC$ÍﬁSl2ôPVVÜì'O¢æææÕC8Ù‹Ët:Ãô3áN6/ø¸2&Lò¿t&Ly_±X´’
ª›é““R∑Á◊”sKÅ∏÷<µZ≠êJ•P*ï Ä»»H‘’’uxåºº<=zøˇ˝ÔÒŒ;Ô‡ˇ¯GO6ô“!Ÿ#«?~|†õ0˜›w∂lŸÇÕõ7c“§I]>Œ·√Òüˇ¸k÷¨¡∞a√¸ÿB˛P´’;vl†õ—ÆÉ‚ªÔæ–Ú‹ü>}∫√πrÉqqq`B°ê´ø…Œ«Û4dŒŒ	§∫¨¸¡0¥Z-πﬁZÖB—·ú∑Øø˛ 0wÓ\.à£ﬁ8BÇOHr·‡˙ıÎØ_∑né9ÇCá·ïW^ÈÙqŸoÎ/ΩÙˆÓ›ã˝˚˜cÎ÷≠êH$n? P^^ﬁÂˆÛEw≤›˜ñÉhYÏ∞tÈR¸ÍWøj∑≤ 4˝˙ıÉB°Ä^Ø«|  \b„÷¡Zgíì¿bÎ ˇøˇ˜ˇêññÜ∫∫:6vªΩ√íoì'OFii©[OqÑßêZ3fÃ¿·√á±zıjÖB.ëØÕf–íÿóZu8p8x‚â':<nff&bbb¬/p¡öP(Dmm-
∑{Lá√Åáz»ﬂwèt¡ñ-[∞vÌZ|˘Âóx¡±tÈR,_æúKK¬÷neçF¸ÒèƒƒâÒ≥ü˝ﬂ|ÛˆÏŸÉæ}˚B,£Oü>àèèG||<—øèIàI‡;v¿O_®.\∏  (--Eee%~ˆ≥ü·¬ÖHNNFNNÏv;ƒb1öõõ=oÚ‰…HOO ºÛŒ;8sÊLœﬂ	BHóQ «soæ˘&¥Z≠O€j4Ó˜éV¶ÆX±¬ß„Z,$''˚t~“;^~˘el⁄¥	ü}ˆû|ÚIº˝ˆ€hllƒìO>…ïl*))Å\.ÁÜH

»#èpkµZ8ùN‹ºyì;Æ@ ÄP(Ñ@ ‡Æcb±b±R©îªîH$ê…dàààÄT*ÖH$rªã≈àààÄL&ÉX,ÜD"ÅP(‰ÚÂâ≈b»Âr»Ârè©W\k–∫^ˆ◊˘gÆó≠∑±X,0hjjBSSL&öõõ—‹‹Ã-6p8hnnvª›b±¿b±pÛ€l6Ãf3wù≈b”s¬.V¿ï3É‘‘Tú={É¬ﬂ˛ˆ7Ó˘óH$∏}˚võ64≥fÕBEEé;Üâ'∂˚8–:!ÅGÅ\p–¯p\“≥Æ]ªÜåå¨]ªKó.≈cè=Ü≠[∑¢∏∏ò+£d2ô·ˆA¸Ø˝ﬂˇ=<à.@ ¿Èt¯iµ£Õf„9°Pß”	õÕì…ƒÂ%s˝Ç‡∫ø”È‰.YÉ"ëB°b±òªdÅÄ\ºÈ…ﬁA∂áhπﬂÆ√ lOt{πÿÅ€„À>.Ï˝‹}u}\Z?F≠π&Òfk®≤èóÎ¸E©Tä‹‹\º¬HKK„zcŸ€ÿû{ ÿΩ{7V¨XÅgûy€∂m√˝˜ﬂèY≥fqÛ‰!¡ã9BB‘∏q„Ì∑ﬂb¸¯Òx¯·áÒﬂˇ˛õ6m¬3œ<„5áÿ∏q„0n‹8ÓÔ˙˙z‘◊◊£°°uuu0®ØØá—hDSSÍÍÍ∏ﬁ#≥Ÿì…´’
≥Ÿª›ŒiÏ X6’â›náP(Ddd$0±
€€xN∏Ãn/∏πúÆΩÑΩÅ¥d2Yõ`◊ıv◊†ådÖB!w…ñxsÌÌîH$âD{;]Áß d2§§§@©T"22QQQàääÇR©ÑR©l∑∑,66’’’‹ﬂÎ÷≠„Ç∏˘ÛÁ„ôgû¡Ó›ª˝˝∞Bz rÑÑ0•Râ#Gé‡û{Ó¡¨Y≥∞c«.êÛ6G Utttõ2Næß±õ—h‰ÜŸK´’ ˝m2ô`2ô∏@–h4¬l6√l6w∏≤Rß”q€k∆^v∑∞P(ÑT*√0\`%â∏‡îùÉ ^≤?lœ¢P(DBBå±?âb±2ôå:nΩ∏ΩU¡˛ŒT©T∏q„ `’™U<x0ˆÓ›ÀqÑ˛†@éê∆0îJ%/^åºº<DFF‚»ë#0ôL]:Z±Í:oç≠ÎÎÒºÂ)§πX]◊z√0àåå‰z>œù;á;Ôº (à#Ñá(˝!!å˝æÎÆª ì… ì…`µZπ±¡¶3=Sƒª÷ibZ?ñR©‘mª¢¢}˚ˆH[	!›C=rÑ¯¿u‚;ü∞‹çNßëëë‹0&õÂüóé™k¯≤_G˚3”¶DWRRíœÁ"Ñ
‰	a√¿n∑C"ë¿f≥!""f≥V´rπ<–Õ‡l¥Œs◊_áy{J0%FÓÏ„÷›9ÑÑê‡@Å!aÜ]Q*ì…∫},Jù=^†á]}˛Œ`Ézª›éîîüªBÇ?«ãÈe|Zıƒn∑#--GèEQQQ†õCzâÎ*‚Mõ6°°°!–M"Ñ¯ı»Ü***†’j1sÊLƒƒƒ`Ó‹πò<y2≤≥≥=nœßûßpg∑€a0`0∏™+ÖÖÖ8zÙ(ˆÓ›ã€∑oÉaDDD∏•Ñ†@éêVZ-QQQjIœ˘·á∞p·BºÒ∆x˚Ì∑Ò’W_·›wﬂ §§§‡é;Ó@FFÓΩ˜^h4h4ö6˘‰Hp±X,–jµ(//Gqq1Æ_øésÁŒqe÷íìì1i“$,\∏ïïïX∞`A`LÒãê‰.\∏ÄW^y∑n›ÇŸltsOòL&‘÷÷‚≈_ƒŒù;±|˘Ú@7©[™´´QUUá√Å+V¿·p`˛¸˘ Ä•KóbÈ“• Ä¢¢"|ÛÕ7())¡W_}Öè>˙àKr+óÀã~˝˙°ˇ˛Ëﬂø?ól–†Aªo|‚Î‚à÷iCX.\  ¸¯„è ÄKó.·∆ç®¨¨‰jµ:ùNƒ««#))	SßN≈Ñ	êûûŒW"ë‡‚≈ã∏q„rrr–ÿÿà¥¥4∑í]Ñ˛˘@N£—‡ÙÈ”∏vÌ-Ø'>±ŸlË◊Ø._æ±X‹£ı<{ÀÊÕõq˚ˆmÿÌvƒ««c‚ƒâ\y+WŸŸŸmÜWÀÀÀQUUÖÚÚr\ø~ÂÂÂ(((¿_|¡ï∆“jµ\m^µZ†%ùEbb"wú!CÜ  Ã]óîî–úqÆ…r['Œ⁄Ê_ÎÓπÿrflUã[∑n°±±ÕÕÕ0∏}˚6ÍÍÍ‹ †±=j555 Ä>}˙p«Ã……Aff&Óøˇ~§§§ ##çÜª?≠€Œ˛Óp80tËPå;Î◊Øá—hƒñ-[∏Äû¬!»Â‰‰‡˛˚Ô«Áüé#Gé@´’‚¿ÅhhhÄ^ØáJ•Ú∏ﬂ»ë#{π•§7v∏ÕÌ€∑qÏÿ1å; ø;∞Eÿ]SyX≠V¨]ªsÊÃ¡cè= àããÛÈx)))HKK√=˜‹√]Á⁄c ó/_ l‹∏¿ÎØøé‚‚b ¿≠[∑PYYâì'Or˚Ît:Ó8l9+ˆ1âD\ÌQ∂Ó([÷ä≠9*ïJ!ïJ›nw›éΩã≈\è"[†ﬁıwª›Œ%Hn˝„Z;ñ-f±X∏ﬂŸø]‹≥µgõõõa6õa≥Ÿ‹j≠≤[ÉU©T∫ïÔäââALLâ√á£¶¶€∑o dff˙¸h|∫w)))êJ•hnn∆ ï+±tÈRLù:’ßcBÇK»rµµµ8zÙ(4ÚÚÚÖ/ø¸_|ÒúN'Wß—ıÕòıÈßürΩÑˇ&Oûå⁄⁄Zƒ∆∆z›ÜMö˚ˆ€o#::EEEHIIÈ≈Vˆ∂¶iee%Ãf3,Nü>›©˝€√≠nÿ∞&L  ¨\π≤√„çF∑´’
ì…ƒöÕf.(b€m4π^≠öö.0≤Z≠\`Êö'ÕµV™@ p´õZSS”Êﬂ5ø√0
Ö\`ƒÓÀû111ê…dP*ïP(êÀÂnT\\"""ÖB·V∂Ãıí›ßuEÜù;wb˚ˆÌ>pæ˙˙ÎØ—–– õÕÉ¡‡±«ëÚÃ¬!»ÂÂÂ!))	√ÜÉ’jÖL&É”È√0‹8˚-] ‡˙ıÎò0aJKKqÈ“%Ø=v,ZÕ«rπ< >¸CÙÔﬂü{˛Ÿ,°PÅ@ õÕôLÜååú;wˇ˝ÔπÖ |¿æ∂]{ÕÃf3“””1h– 8ùNhµZ\∫t	£Fç¬¿ÅëõõãeÀñ˘Â¸oæ˘&ñ,YÇ3ft∏≠\.˜911;4È⁄≥$ëH:¨ÂÃ⁄Œ]±bbcc1h–†.'fﬂüÙz=Æ\πÇœ?ˇ˚ˆÌ„Ê 9$&&∫èÑ~	˘@hÈe©©©Å@ Ä@ pÍ`øm≥C9∑n›Byy9CÄ[Mz¬˘ÛÁQQQÖB¡ıƒ≤Ø∂óE ¥È©·”–™'Nß´WØ∆ñ-[∏Îñ.]äeÀñ·•ó^¬æ}˚…'ü  ÿeggc î)ù>◊»ë#1p‡@ºÙ“KxÂïW¸u¿0L–T£ËiEEE8p‡ ∂n›⁄Â˝/^ºà”ßO„Ãô3®≠≠ÖX,Fzz:ﬁ|ÛMdggc—¢Ep:ùÿ±cJJJPYYÈvÍë#ÑB>êõ?>>˛¯c‰‰‰†∫∫⁄m∏‘·p∏≠™’jTVVB•RaÃò1Ù-5Ñƒ««„¸˘ÛË€∑/ööö†P(‹ÍM≤√q555P´’8˛<¶LôÇô3g∞’ù◊∫G ,XÄ¢¢"rìÊYÆ¡÷æ}˚PPPÄ¬¬B|Ú…'XΩz5Äñ	ˆ*ï
àââ·DxÙ∂oﬂé·√á˚5ê'ØΩˆ,X‡5Øõ»˘‚≈ã‹J÷ÛÁœCß”q_BïJ%ÓºÛN,\∏ÉFjj*îJ%ÜA}}=™´´—‘‘ »»»†ÖÑT»r 0{ˆl|¸Ò«xÌµ◊∞fÕ¨]ª£Gèn≥ähyÛc=◊!¬Ôøˇ>˜;˚‹∫’@}}=,XÄuÎ÷a⁄¥i»»»Ts˝j î)\–µ~˝z¸ÈOÚÑπnÁÍ—G≈ï+WêëëÅ}˚ˆaﬂæ}®©©¡Í’´›VQ∫{@KÔ‹™U´†T*	âDÇúúÓ±⁄NOËËˇ-˛;Ûœ”∞iÎÎ]+l<xƒΩ˜ﬁã+V hY9Ã.¿ÕıdWgee·¯Ò„xÎ≠∑0{ˆl∑Ûµ^ôÀû_´’B°P‡õoæÒ˘æBÇO»rÿµk ‡ﬁ{ÔÖJ•¬»ë#π7∏é3√áÒ?◊IÁÆT*îJ%RRR ëHPRR‡ß‘°`Ÿ≤e>≠ﬁuïõõãååè=l«é :t@À Õ¬¬B8V´[∑nÂ.8∑Ïs‡me*ª¿ ""2ô
Ö2ô‹vB°ê[ı…É]ê–]Æ(\ÿﬁ[ª›≥Ÿå¶¶&455°ππ&ìâªøB°ê[€‹‹Ã-Íp},\±ÅŸÑ	pË–!§§§†_ø~Ë◊Ø∑àƒ[/]~~æ[jó÷Ü·Çg†%—5qÑ_»r'OûÑ@ @BB~¯·á6ì¿€„˙mñÑ°Pª›Œ%Q=r‰àO˜Côßús,6UO{){<ÂP≥€Ì\ ƒAçççn´X´´´a±XP[[ÀDÆõÑ™ÿ ã˝Ò∑÷)[\Sá∞?R©2ôQQQàââ·tDDDp´[Ÿ†î}çBHWÖ| óõõã›ªwª}˚»ë„:Ãèˇ¸Á?¯„ˇ‡V^LLLª¡\GÿÖ
˛Z¨l´,=Ωó¯Ú˛L˜Å¬O!»	∑·≥ŒÙ»ëc∑€π·.ì…‡÷oQÇBÇQ»r≠Á…∞ÅúØ°¸a¡˜î=¡u":üÛì~Ëâ˜óŒ≥ºº<$^Œ¬ÚìúÜ3à7Æµ(	!Ñê`ñÅ˘	ı B!¸ÚC´≠π.˜ßq-ÿﬁ'O=ïÙ¯B!¡+‰96Ha/Nú8ÅÈ”ß≤YA≈f≥q)7ZsÕ;Jÿ µı%!Ñ¬'!»-=Ml	.Å@Ä{ÔΩóªû¥ØÚΩ¯8Èú÷âh	!ÑSÿr@K¿R[[ãx 			!=°ù˝†f/=ÕÖ+**¬¬Ö!ì…∞~˝zú?f≥Ÿß„≥è á“cYUUË&¯E{Ωå47íBBC»rl†¡˙·áêóóáËËh∑ÇÈ°™£^«¨¨,h4‰‰‰tÈ∏ÌÕØ„´p»∂OÅ\hh=œó}O≥X,îkèê0Åú≈bÅH$¬Ô~˜;0¿Ø«f˘ªG ıÉ6òá¡Z ˛‰˙òˆ‰yX√@ ¿f≥°∫∫*ïäküz ¥_bé}M˘Ä≥€iALp±X,êH$`\ Á˙<π>?leÜa ì…⁄‹Óä}¢Áóê‡ÚÅ–ÚF¥~˝zø◊Nu=VOÙHπ°‘„Â◊Í=Ú?°Pà.‡©ßû dff ¶Lô‚ˆ7K≠Vs¡\kﬁ^õ ¯è∑«ò]å$óÀ›˛OÿÄM´’‚˙ıÎ∏vÌt:¥Z-é=ä—£G˜|£	!Ω"‰πÿÿX @jj*»˘cÿ¡uﬂû¸¿¢C“UÌΩvŒü? ò={6.\∏Ä7n`ﬂæ}hhh  DEE ÜÜÔæ˚QQQ∏p· ˜@œı<≠éÓ~·˚Îﬂ__¿º=ã∑oﬂFmm-.^ºà6`”¶M®¨¨ÑŸlÜNßÉ\.Gtt4¢¢¢0j‘(ƒ∆∆‚¿Å\è!ÑﬂB>ê;uÍ^|ÒE8ÖB8Æûfw{zzcË/òáU√ÅH$B~~>ÜË¶¯˚⁄œ  ¬≥œ>€Êv6`€∑o∑›ç7∞|˘r444pAûJ•ÇF£Abb"à!CÜ`–†A‹q¯àuWwÔø≈bAii)   PVVÜ[∑nAß”AØ◊£±±ãÅ 
Ö#Få@ll,rrrêêêÄ˛˝˚#33vªù(Âr9é;Ü?˛Òè»"B>êÄ˛˝˚√·p@$¡f≥qsÊÄñj¡8ˇâ˝†m}…äããÎı6yR]]êÛ∫Êlù+∞;«âD‹èT*ÖD"A~~~∑€l233Ò√?¥{ªÎekl†wÈ“%.–(,,ÑNßCSS
bcc°V´ëôôâ	&x\Pc∑€QZZä+WÆ†¢¢Z≠÷˜.8∞ØGâD•R	π\é°Cáb‡¿Åàéé‡æX·⁄µk8~¸8é=ä““R‘◊◊√jµB°P 22±±±–h42dRRR0`¿ Øœè´÷£ççç∞Ÿlã≈HKKÎÅ{NÈM!»›}˜›xÍ©ß∏"ËvªÛÊÕÉ¡`‡Ü]ª£uèôV´ÖF£¡∂m€∫}l¿Û7˙¬¬B\ºx—/«ÔÆq„∆!77∑◊Œ7yÚdÙÎ◊è˚€◊t)æ®®®¿¥i”∞tÈRËızh4 @qq±ﬂŒ*ÿ ";;ªÕmF£ó/_∆µk◊PVVÜÛÁœ„øˇ˝/öööêùùçeÀñ!55¸1æ˙Í+TTT@Ø◊˜ˆ]òÑÑ$%%·πÁû√ê!C∞a√|ˇ˝˜∞ŸlHJJBFFÊÕõá¨¨,§ßßÉa∑èÆ=l]Ât:!ãª{W!A ‰π∫∫:nn{YVVÜ˛ÛüHMMÌˆÒ[ZEEEX¥hQ∑è€û5k÷ Ä€V†¨Y≥gŒú·zz“Ÿ≥ga0∞yÛÊ9˛ˆÌ€ÒÈßür=|.·¶◊ÎπÖû∞Û„∫´ıcƒ~a ÃÃDff&˜XZ,\æ|€∂m√¢EãP]]ëHÑÜÜÿl6ÙÈ”ç111~iW0`ø‰Y,ÓG´’¢®®MMMò1c‘j5ÜÜ+V`“§I>Ωﬁ\{ÿ∫–]ø~›Î{ïR©ƒÒ„«˝ÚIÈY!»y“”=}|ÖBÅï+WˆjOò7ÖÖÖΩz>•RŸc«ñJ•âD0\Íæ˙Ìo€·6Ì≠vF{)I\eff‚≠∑ﬁÇ›n«ˇ¸œˇ‡£è>√0ã≈»ÕÕÖ\.˘’Ÿf≥J•uuu?~<VØ^çæ}˚B£—¿b±@Ø◊Éa(ï ´¥¬>7Å Ù∫›/~ÒÃô3ßG⁄@Òü∞‰B-1fSS.^ºÅ\®!LxZ¿‡™†† @sss/µ®˚ÿ>ˇ¸Ûx˛˘Á1yÚdîïï··√<x0L&ì€ˆ|_Ï£P(`0 óÀQVVì…π\é^x,‡∂c{6Ÿ/ÏiGÔ[]}_ª}˚6¶Nùä+VtiBH˘@érêëŒ
•†?–\á©=˘ˆ€o1m⁄4ú;w.\põºœ÷HÓçd–=≈`0@°P†≤≤:ù———¯Î_ˇä±c«∂ª_OæŸ`Y*ïˆÿ9!Ω'Ï¢úP˘ê<xp†õí(ÔÌ˝ﬂm€∂ÈÈÈ∞Ÿl(..ÊzEŸTA|∆0n›∫Öää
(ïJ¨^Ω˜›w‰r9ÍÎÎ“¶ÜÜÿÌv(äÄúü‚_!ﬂ#™ÿ°’k◊Æ∫)Ñá∆å ®©©	Xÿ·CçFÉ-[∂‡ÅÄ’jEuu5"##¥B|Æ-ÍÎÎ!ì…0sÊL<ˆÿc0êH$P©T	T™´´)è!!",9v®ÜœΩs6l¿Ó›ªπ=ÅRYY–Û˚[kïÙâDã≈£—à¥¥4,]∫k◊ÆEmm-ÜÜ¶¶¶@7±Kÿ◊êL&CII	0x`º¸ÚÀniê≈f≥π’Z%Ñ[Xr ‹rë˘ìßºZ˛¶”È0zÙh>º«œ’ësÁŒ∫	~”ì+bÉUyyy¿ŒÕNÊgF£ã-¬ßü~äã/‚«Dvv6WûÿûC∂äL]]JKK°P( +Øp´r˝R´’¬Èt")))†Ì Ñ¯GXrµµµ¯ıØç‰‰dÆÆdg∞ﬂ∏ÖBaõ 555®´´Û[[=ô;w.æ˘Ê‹ºy≥Gœ„ã3fÙJ9÷ÂÀóÒƒOp˚3E√≈ã·∑„ªååTTT†††ÄjâD£—àó_~ÛÊÕÉV´ÖNß„’Ñ|ˆ˝¿f≥A(¢ººV´πππ3f◊{»@Œn∑„–°CHOOX!˛ñÅ‹{ÔΩáÇÇàD"»ÂÚnÀSY®û^“ølŸ2,[∂¨GœåÜä/æ¯‡ÆÛGu÷·√{•G5ò¸Ê7ø¡™U´¸ñSÆ;$	∆åÉ¨¨,ú<yZ≠÷Øœooê…dhnn√0\ ∫d…n^\†{„˛Ôˇ˛)))àèèö2ÑêÓ	È@n¿Ä8sÊ∆èœ]«ñ–ÍI¸1˜{mmmª€⁄Ìv$&&ˆh{¯¿jµ˙T¶â-÷Ó/≠Áƒ566∫˝ùòòà.`›∫u~=Øøt¥7Àb±††† •••8p VØ^ç«‹Ác˜ª›éW^yè=ˆäããÉ¢zIWTWW£©©	3gŒt{ˇÈmÏÇí#Gé`˚ˆÌ¯‰ìO0fÃú={O?˝t¿⁄EÒüê‰233±oﬂ>ÓÔY≥f˘îÒæª\á[ŸCo+ÔﬁyÁù†z”Ûœ?èªÓ∫´SC|lz
OΩ¢æjoE‰˚ÔøèQ£F·ÎØøÓÚÒÉôZ≠∆≈ãÒ⁄kØa–†Aÿºy3∂n›
©T yDâ&Ω^É¡Ä‹‹\ﬁM»óJ•0ôLHJJ¬˘ÛÁqÍ‘)º¬=r.á√¡Õ«âD‹∞Æ—hÑ—hÑ≈b¡Ì€∑a∑€!
q◊]wa…í%8tË‰r9ı»"B:ê‡ñ`T£—‡¯C‡„¡Œù;ëòòàîîî@7%†ÄG}£FçÚi{6@n}ŸYÌÌ˜√? ##£K«ÂùNáıÎ◊„Ë—£∏uÎÊÕõá~˝˙°©©	zΩçççΩ^Ã^$· ï+êJ•X∫tiØŒøÙß∏∏8,^ºR©iiikGnn.¥Z-ÍÎÎq·¬ƒƒƒ ??,¿πsÁ⁄6BàÑ| ◊ZÎÏÒÅËÙ!¡¬l6£∫∫∫€sIÁLô2#Géƒô3gpÓ‹9Ï›ª
Ö*ï
———àèèÔ’ˆçF¸¸Á?GCCzË!ﬁæl6Ä?˝ÈOmG^^L&˙ıÎáGyIII\ÓæÇÇÃò1#†Ì#Ñt_ÿr$8ÒπÂÂÂA≠V√b±@©Tb¸¯Ò?~<åF#nﬁºâ´WØ¢™™™◊Á…)ïJ<¿ò1cƒb±€>p≠J—˙≤∑≠\π“≠]@Àó«úú¸Î_ˇÍıˆB¸è9(oÔ*))ÅNßÉ—h√0êÀÂ‹eFFFH)áv°Ékæ>6 Œ……¡¶Mõ‹¬ûC_I8°@éê0TRRµZç7ﬁxJ•ø˙’Ø0h– çF p˚–']»«–”sx˘Úeîóó„·√–jµ(//˚˘πÑrÑÑ!ùNá«{˜ﬂ?>åè?˛ãIIIàèèGjj*y[&+∏•™$WEEjjjPYY	Ω^°Pàæ}˚bÙË—ÿªwo@⁄‘®GéÑì∞‰Çi°Àd2∫	a+ê5/I≠V£§§”ßO«§Iì0i“$Ëız„ƒâ8{ˆ¨O«È®ÃS{µx√≠Dõ&G,√n∑√d2y]úêê–Ó±™™™:<_BBT*˙ÙÈÉ;Ó∏˝˚˜GBBåF#$	÷≠[≤ΩqlZB¬Aÿr¡∆·pÙX›WBº…»»@IIâ€u*ï
c∆åÈT.ø]ªv·ˆÌ€^oü>}:Få—Ê˙„«è„‰…ìæ78D∞eºÏv;,^}ıUè€m‹∏±›„x€Ø5Üa∏/+Ï9Âr9Œû=±X‹π∆Ûı»ëpvÅ‹|Ë&∏πyÛ&ﬁ}˜]ﬁÊÀÍ.±Xåòò\πr˘˘˘ ZÇ[´’äàààD¢n%¸Ì,á√É¡ÄG}4§`ddd‡Ë—£›:∆ö5kêüüèÒ„«{≠Y¸˜øˇO=ıî[Å„«èc—¢Eò1cFójÛ˚:ñJ•∞€Ì®©©¡¥i”∞gœ∑ÌFçÖ ==›kê<lÿ0ú:u™√szﬁ=uÍTÿæÁj¬*êS©Tÿ∂m¥Z-Ó∏„é@7 êùùç#Gé¿f≥∫)ïúúåÍÍjÏ‹π3†ÌêÀÂ(,,ƒ…ì'°R©⁄ñû4}˙t¸Ôˇ˛/Ùz}óÔg~~>∂n›⁄nRŸwﬂ}«ékS*::⁄Á^•P¡Râ@ÀÇì≈ãªms‡¿ƒ∆∆b˚ˆÌÌÎ∑ø˝-6n‹àﬂ˝Ów>üﬂµ÷kqq1“””;”|^°9N¬*êc=˜‹s¯ıØËfê d∑€±i”&\ªvÕÕÕÅnNè+..Ó‘P™?∞C≠«è˜8ÏÍ,$	˛¸Á?#77∑À«<xpó˜-))¡o~Ûõ.ÔO	a»BZú8q¢◊9 ?~<ÚÚÚ¬*êsMb∑€qÚ‰Iº˛˙ÎΩﬁΩ^èöööÄ<ÔΩÕ`0∫	ÑÙ8
‰iÖ-F ‰Wæuwû\WkuNü>Àó/Ô÷π˘àMŒªk◊.h4Lö4©◊€pÍ‘)8éêû#ßV´Ò¸Ûœ#"""–M!§«Q GH+l6¸ppÊÃô.Ôõòòàá~?¸∞«I˘ÒÒÒ¯‰ìO0wÓ‹6∑±=q˚ˆÌ√î)S∫‹æ—Îı–h4¯Ï≥œ<÷9ù4iVØ^›·™’¬¬B<¸√ù>ø≈bAQQ‰r97ƒävÏÿ¿˝9\˛ßâú9sÜ7Ω÷a»Qëz‚ ”õ;€#Áp8‹“7x¬ÁÍjµgŒúA}}=T*¥Zmßˆ˜›wÒ‚ã/bˇ˛˝∞Ÿln%°ÿ«lÓ‹πm:∞ÊŒùãó^z	c«éÌˆ}	6ÏÎ¢ı•J•¬Ó›ªÒ„è?‚o˚õ«}◊≠[◊·Í˙µk◊v©7œn∑„õoæ	˘≈U≠wB:ã/AÜÅú´õ7oÏ‹ﬁﬁË√M æ%ªŒUr]…«^™¿yoS´’HNN∆ÁüéÖB£—t˙ÔΩ˜^ª∑∑˜8>˝Ù”®®®¿§Iì’ÈsÛY{)áÿÕ=Åa=z£FçÍë„Bz_ÿr			¯À_˛Çm€∂EÔ\MM‘ju†õ0lRR∂7®+¡DW∞È	ÿπpÆÈ
n›∫Ö%Kñ‡Í’´!?G.33[∂lÅ≈bÈ“õér¸ut{BBrrr:}^>KJJB~~>ÚÛÛR’≈b±ÑtjB¬MXrzΩæ√¸LΩm¬Ñ	¯ÚÀ/›åÄ±€Ì–h4?~<ÊÃôÉ%KñtzàØ≥:Íëcueﬂå3;vÏ¿ú9sz§“€1]ÎpÌçÑø˛ıØHIIAdddHœë#$úÑU «JNNt8lo\∏Céãã„~Ô≠^9 º'@Ît::_~˘%nﬂæçÃÃLø˜RªiûÙPüZ‡ÈıÂzü]øT¯˚14…ˇ‘©S;vlXøÓ		5a»BZ»d2§ßß„√?ƒK/Ω•RÈ◊„≥√Çp˙Ùi$%%π› C◊Æ√ æT®ÆÆ∆üˇ¸gøÕèsız=t:fœûç/ø¸rπ‹/Á!ÑrÑÑ1°Pàßûz
è?˛8ﬁx„ç9«¥i”  gœûms[®ˆƒ±:”Ûïóóá'ü|%%%~o√0ÿ∂mÓ∏„86õ-‰{B¬rÑÑ±˙˙zLö4	É∆ÿ±cÒ‹sœaÿ∞aHKKÛÀ0ÎÉ> m
√ì∂¶Oü »»»¿€oøÕ˝›zΩWØ^≈˚Ôøè‡ÎØøFQQD"Õë#$DP nﬂæˆs‰H`∞ôÔwÏÿÅ6‡Ì∑ﬂvª]£—@$A,ªÕÈâD∞€Ìp8êÀÂ\Ó=ª›éõ7o¢≤≤„«è«˙ıÎq◊ÇBGΩ^≠{Ï¶Oüéàà¨^ΩÎ÷≠√ÄÎÛ˘,P__è¶¶&ÆÁÌÓªÔ∆gü}ÜååÖÙê6!·Ü9B ‡Ÿgü≈≥œ> 8r‰ ¿d2°∂∂zΩıııhnnÊÊ~9|˙ÈßHMM≈à# 
!ì… ëH0}˙tLú8ëÊauõGÓ¿Å8~¸∏€mü˛9 ‡ø¯Ö«}SSS!óÀÖBÅ;Ôº≥«€K	,
‰Ç@|||†õ@àõ{Óπá˚ΩıÍG◊KùNáë#GbŒú9n=vÆ≈·I◊xK\QQÅU´V†EÑê`DÅ\ÄÈt:<¯‡Éàââ	tS¢©©	qqq8tËê_ÊˇkØ
I]],ã[œM¢'ÑêﬁVÅ\0Trpe0†V´;¨´ ÿ<zã/ÓÙælMOâD‚VﬂìÌ2ç^˜•Ñ¥]◊^n4◊ÁÅBHœ´@N"ë`Ú‰…àééÓ÷j-É¡  ] π% `4—ÿÿàËËhƒ««”b +WÆÏtPk≥Ÿ ã·p8–––  àääÇP(Ñ’jÌr[qÍ‘©∞®Ó‡ºBH`ÑU óüüèáz>¯ ¶Nù⁄•c®T*<˝Ù” Z
_WUUujˇ‰‰dËız|˛˘Á¯ˆ€o±c«Ëı˙.µ%‘º¬ùú,åF#RRR‘SO ˛˛˜ø£ºº‹ßâˆ			noÿ∞á∆é;:’épEΩôÑXa»πÍNô.6;Ω\.GZZZß˜◊h4Ë€∑oõ,˜·.**™[ÂπRRR ¥Ùºfdd¯¥OÎû§~˝˙µ	Óàwî∆¢˜±U"Ü°ûPBH¯rÅ÷‹‹≥ŸÄÍ¨˙S}}}ß∂o›£‰p8–‹‹Lí>b9ÍôÎöŒ>nlÍó˙˙zDGGwÈ]=7!$8Q GÈ2Å@Ä◊_ˇ˛˜ø›î∞pÈ“%¸ÚóøÑJ•Ç—htKıB	O»B∫åa‹ˇ˝ò?~†õ∂m€†•GN©TRG°@é“=#Få¿¯Ò„›å∞p‰»hµZn≈º›nß`éê0G3ï	!Ñg(x#Ñ∞(ê#ÑB·)
‰HP†4ÑBHÁ—ß'!ÑBO—bPlÆ6Å@ °PHπ€Ò[gòﬁ®GéB!Ñß(ê#AÅÊ»B!ù÷C´æ‰`jo®Ø≥√Äî2Ä?Ïv;ÂË"ÑÙ¬.êìJ•P*ï∞X, ¿]z”ﬁyg960∞X,0õÕhnnÓ‘˛ƒ;Üa¸2_àùßÁ˙∫†`éBH∞
ª@Æ_ø~ÿπs'¶NùÍ”¥ß`Ì´Øæ º¬ù>?{ºè?˛S¶LÈÙ˛°j–†AÿµkÊŒù€Âc|˛˘Á∞Z≠∞X,(++CjjjßèÒ—Ga‹∏q∞X,\	$ZÄA!$XÖ] ˜Êõob÷¨Yò<y2""":Ωø¡`¿ƒâ ˜›wT*Ußˆw:ùhjj¬œ~ˆ3,[∂¨”ÁUk÷¨¡ú9s∫\Í©±±S¶LÅ√·¿=˜‹É®®(àDùyk4,_æÉ°KÌ ÑBzSXrlœ 'ü|“≠„»Âr Ä—hÏ‘~l ıx∂sÁŒ6◊UUU˘¥oBBÇ_á@Âr9Õì#ÑÙ¬*êcá…ÿ@¨ª¸uúp÷Qêîúú‹K-qÁ⁄.>rû⁄Œß"ëﬂˇ=∆å”Â„—Å^‘ßO|˝ı◊ –Â9°ÖÖÖº~]B~"p:ùŒ@7Ç“{ÿ@ÓÚÂÀx¸Ò«›•„‘◊◊#++õ7oˆsI{ÊÕõáõ7ovÎˇ¯«?0h– ?µàH»Ê._æ‹Â})zŒ!,
‰!ÑBxä“ÈB!ÑrÑB!<EÅ!ÑBOQ G!Ñ¬S»B!ÑrÑB!<EÅ!ÑBOQ G!Ñ¬S»B!ÑrÑB!<EÅ!ÑBOQ G!Ñ¬S»B!ÑrÑB!<EÅ!ÑBOQ G!Ñ¬S»B!ÑrÑB!<EÅ!ÑBOQ G!Ñ¬S»B!ÑrÑB!<EÅ!ÑBOQ G!Ñ¬S»B!Ñ‘ˇª”ô±QW2    IENDÆB`Ç
--- FIN DU FICHIER : ./public/images/car_sketch.png ---


////////////////////////////////////////////////////////////////
CHEMIN : ./public/images/scooter_sketch.png
////////////////////////////////////////////////////////////////

âPNG

   IHDR  r  Ô   –>2ï   gAMA  ±è¸a  
IiCCPsRGB IEC61966-2.1  HâùSwXì˜>ﬂ˜eVBÿ±ólÅ "#¨»Y¢í aÑ@≈Öà
VúHUƒÇ’
Hùà‚†(∏gAäàZãU\8Ó‹ßµ}zÔÌÌ˚◊˚ºÁúÁ¸ŒyœÄ&ëÊ¢j 9RÖ<:ÿèOHƒ…ΩÄH‡ ÊÀ¬g≈  yx~t∞?¸Øo  p’.$«·ˇÉ∫P&W  ë ‡"ÁêR ».T» » ∞S≥d
 î  ly|B" ™ ÏÙI> ÿ©ì‹ ÿ¢© ç ô(G$@ª `UÅR,¿¬ †¨@".¿ÆÄY∂2GÄΩ véXê@` ÄôB,Ã  8 CÕ L†0“ø‡©_pÖ∏H ¿ÀïÕóK“3∏ï–wÚ‡‚!‚¬l±Ba)f	‰"úóõ#HÁLŒ  ˘—¡˛8?êÁÊ‰·ÊfÁlÔÙ≈¢˛ko">!Òﬂ˛ºå NœÔ⁄_ÂÂ÷p«∞uøk©[ ⁄V hﬂ˘]3€	†Z
–z˘ãy8¸@û°P»<
Ì%b°Ω0„ã>ˇ3·o‡ã~ˆ¸@˛€z qö@ô≠¿£É˝qanvÆRéÁÀB1n˜Á#˛«Ö˝é)—‚4±\,äÒXâ∏P"M«yπRëD!…ï‚È2Òñ˝	ìw ¨ÜO¿N∂µÀl¿~ÓãX“v @~Û-åë g42y˜  ìø˘è@+ Õó§„  ºË\®îL∆  D†Å*∞A¡¨¿ú¡º¿aD@$¿<B‰Ä
°ñAT¿:ÿµ∞†ö·¥¡18Á‡\ÅÎp`û¬ºÜ	A»a!:àbéÿ"Œôé"aH4íÄ§ ÈàQ"≈»r§©Bjë]H#Ú-r9ç\@˙ê€» 2ä¸äºG1îÅ≤Q‘u@π®ä∆†s—t4]Äñ¢k—¥=Ä∂¢ß—KËut }äécÄ—1fåŸa\åáE`âX&«cÂX5Vè5cX7v¿ûaÔ$ãÄÏ^Ñ¬lÇêêGXLXC®%Ï#¥∫W	ÉÑ1¬'"ì®O¥%z˘ƒxb:±êXF¨&Ó!!û%^'_ìH$…í‰N
!%ê2IIkH€H-§S§>“iúL&Îêm…ﬁ‰≤Ä¨ óë∑êêOí˚…√‰∑:≈à‚L	¢$R§îJ5e?Â•ü2Bô†™QÕ©û‘™à:üZIm†vP/Sá©4uö%ÕõCÀ§-£’–öigi˜h/Èt∫	›ÉEó–ó“kËÈÁÈÉÙwÜÉ«Hb(k{ß∑/ôL¶”óô»T0◊2ôgòòoUX*ˆ*|ë ï:ïVï~ïÁ™TUsU?’y™T´U´^V}¶FU≥P„©	‘´’©Uª©6ÆŒRwRèPœQ_£æ_˝Ç˙c≤ÜÖF†ÜH£Tc∑∆ç!∆2eÒXB÷rVÎ,kòMb[≤˘ÏLv˚v/{LSCs™f¨fëfùÊqÕ∆±‡9ŸúJŒ!ŒŒ{--?-±÷j≠f≠~≠7⁄z⁄æ⁄bÌrÌÌÎ⁄Ôupù@ù,ùı:m:˜u	∫6∫Q∫Ö∫€uœÍ>”cÎyÈ	ı ıÈ›—GımÙ£ıÍÔ÷Ô—7046êl18cÃêcËkòi∏—Ñ·®Àh∫ëƒh£—I£'∏&Óág„5x>f¨ob¨4ﬁe‹k<abi2€§ƒ§≈‰æ)Õîköf∫—¥”tÃÃ»,‹¨ÿ¨…Ïé9’úkûaæŸº€¸çÖ•Eú≈Jã6ã«ñ⁄ñ|ÀñMñ˜¨òV>VyVıV◊¨I÷\Î,Îm÷WlPWõõ:õÀ∂®≠õ≠ƒvõmﬂ‚è)“)ıSn⁄1Ï¸Ï
ÏöÏÌ9ˆaˆ%ˆmˆœÃ÷;t;|rtuÃvlpºÎ§·4√©ƒ©√ÈWgg°sùÛ5¶KêÀóvóSmßäßnüzÀïÂÓ∫“µ”ı£õªõ‹≠Ÿm‘›Ã=≈}´˚M.õ…]√=ÔAÙ˜X‚qÃ„ùßõß¬ÛêÁ/^v^Y^˚ΩO≥ú&û÷0m»€ƒ[‡ΩÀ{`:>=e˙ŒÈ>∆>üzüáæ¶æ"ﬂ=æ#~÷~ô~¸û˚;˙À˝è¯ø·yÚÒN`¡ÂΩÅÅ≥kô•5çª/>B	Yrìo¿Ú˘c3‹g,ö— ùZ˙0Ã&L÷éÜœﬂ~o¶˘LÈÃ∂à‡Glà∏iô˘})*2™.ÍQ¥Stqt˜,÷¨‰Y˚gΩéÒè©åπ;€j∂rvg¨jlRlcÏõ∏Ä∏™∏Åxá¯EÒót$	Ìâ‰ƒÿƒ=â„sÁlö3ú‰öTñtcÆÂ‹¢πÊÈŒÀûw<Y5Yê|8Öòó≤?ÂÉ BP/OÂßnMÚÑõÖOEæ¢ç¢Q±∑∏J<íÊùVïˆ8›;}C˙hÜOFu∆3	OR+yëíπ#ÛMVD÷ﬁ¨œŸqŸ-9îúîú£Riñ¥+◊0∑(∑Of++ì‰yÊm ìá ˜‰#˘sÛ€lÖL—£¥RÆPL/®+x[[x∏HΩHZ‘3ﬂf˛Í˘#Ç|Ωê∞P∏∞≥ÿ∏xYÒ‡"øEª#ãSw.1]R∫dxi“}ÀhÀ≤ñ˝P‚XRUÚjy‹ÚéRÉ“••C+ÇW4ï©î…ÀnÆÙZπcaïdUÔjó’[V*ï_¨p¨®Æ¯∞F∏Ê‚WN_’|ıym⁄⁄ﬁJ∑ ÌÎHÎ§În¨˜YøØJΩjA’–Ü≠ÒçÂ_mJﬁt°zjıéÕ¥Õ Õ5a5Ì[Ã∂¨€Ú°6£ˆzù]ÀV˝≠´∑æŸ&⁄÷ø›w{ÛÉ;ﬁÔîÏºµ+xWkΩE}ın“ÓÇ›èb∫øÊ~›∏GwO≈ûè{•{ˆEÔÎjtol‹Øøø≤	mR6çH:pÂõÄo⁄õÌöwµpZ*¬AÂ¡'ﬂ¶|{„PË°Œ√‹√Õﬂô∑ıÎHy+“:øu¨-£m†=°ΩÔËå£ù^Gæ∑ˇ~Ô1„cu«5èWû†ù(=Ò˘‰Çì„ßdßûùN?=‘ô‹y˜L¸ôk]Q]ΩgCœû?tÓL∑_˜…ÛﬁÁè]ºpÙ"˜b€%∑K≠=Æ=G~p˝·HØ[oÎe˜ÀÌW<ÆtÙMÎ;—Ô”˙j¿’s◊¯◊.]üyΩÔ∆Ï∑n&›∏%∫ı¯vˆÌw
ÓL‹]zèxØ¸æ⁄˝Í˙Í¥˛±e¿m‡¯`¿`œ√YÔ	áû˛îˇ”á·“GÃG’#F#çèùΩÚdŒì·ß≤ßœ ~VˇyÎs´Áﬂ˝‚˚KœX¸ÿ˘ãœøÆy©ÛrÔ´©Ø:«#«ºŒy=Ò¶¸≠Œ€}Ô∏Ô∫ﬂ«Ωô(¸@˛PÛ—˙c«ß–O˜>Á|˛¸/˜ÑÛ˚-G8œ    cHRM  z&  ÄÑ  ˙   ÄË  u0  Í`  :ò  pú∫Q<   	pHYs     öú :„IDATxúÏùy|˜ˇ«üd7±"+Ç,VA‹˜Qq6uk)˙ç*--Uzh´™≠jUO-J›wQ˜Ÿ∫œJ%â$í`#ld7≤ë›d¯Õt7gú˝<è<»fvÊ≥≥3üy}ﬁg1õÕfC Å@‘Q¸q@ Å@p!'Å@î"Ñú@ ¡SärÅ@ O)B»	Å@ <•!'Å@î"Ñú@ ¡SärÅ@ O)B»	Å@ <•!'Å@î"Ñú@ ¡SärÅ@ O)B»	Å@ <•!'Å@î"Ñú@ ¡SärÅ@ O)B»	Å@ <•!'Å@î¢x‹Å@ ∞«b±»ˇW*ïèq$O>≈l6õÌqB Å E\AaÁà∞»	Å‡â«b±`µZoy»€?‘
EÅØûÃf3ã•RÈ]Z≠÷∑ﬂÒMÑENÃa4IKK„ ï+¨_øûû={ÇŸlnNˆbû>Ãf3ÉÅKó.qÌ⁄5Z∑nÌ˜¸|Ià˚˝…∆b±`6õe'}_ëëë€U≠ZïJ%æœ|!'x¶¯‡Éÿ∫u+©©©(
Jî(¡ï+Wÿæ};U´Vï'vïJÂ>11Of≥Ÿ·˛<vÏSßNÂ»ë#€9;;ìõõK^^ÓÓÓ¥j’ä◊^{???yb—ˆ‰"-¨%úJ•b˛¸˘¨]ªñ3gŒ`6õqrr¢X±bÿl6ä/éŸl∆««áÓ›ª3bƒ<<<Ûßx2BNTc49q‚oæ˘&zΩwwwzˆÏIì&MË⁄µ+ãÖ7ﬁxÉÌ€∑s‚ƒ	yR+uÅ‡…C≤Ã®’j ∫tÈ¬·√á©[∑.Ωzı‚µ◊^sÿ>66ñÃÃLVØ^Õû={HNN∆ÀÀãè>˙à∞∞0Y$û<åF#f≥çF√–°CŸ∫u+yyy4h–ÄV≠Z—Ω{wﬁ≥{˜n˛¯„÷≠[Gnn..§Mõ6èÁ<IÿÇßò¶Mõ⁄ ï+g{˛˘ÁmâââÚÎYYY∂ååõÕf≥%&&⁄¥Z≠m î)∂úú[NNŒc≠@ ∏222lµk◊∂iµZá˚Z∫•{8''Gæœm6õÌÃô3∂˛˝˚€‹››mç5≤Ÿl7Á¡ì≈ô3gl6õÕ6k÷,[˘ÚÂm’™U≥≠X±¬a˚Ô∫†y{“§I6ïJe[Ωzu°€¸W9¡SÉŸl∆h4¢R©ò3gì'O&88òØø˛öêê‡ﬂÄh˚ˇ+
¬√√…»»`˚ˆÌèÛ#Çª‡ˇ˚;wÓîc§Ú[–Ì·Ìë˛n6õÈ—£˚ˆÌcÍ‘©tÎ÷__ﬂá>n¡›a6õi“§	/^d î)ÙÓ›[vìﬁ)c’ûµk◊2tËPˆÓ›KppCÌìèrÇßéÔøˇû	&˝˜ﬂ”≠[74oÃÖÑ}Ï≈‚≈ã˘‰ìOàèèCwÅ≈b!--ç⁄µks‡A¸¸¸Ä⁄Ω<‰·ÊÉ˛’W_e–†A¸¯„èE>^¡›c˚X±bEººº8zÙ(É¡A®&“B©T Æ’›ªwıêüD˘¡S≈¸˘Ûô0a;wÓ§n›∫A—“ Y‰Ïcc î)sœÅ@ËY¥h*T¿««Áñ¯∂¬‚›
ª∑ªwÔŒû={xÓπÁ»ÀÀc∆åE>^¡›!}Gæææ‘´Wè≠[∑7ÁmïJ%{OÓ5¶Òı◊_gÙË—^ˇï¯H!‰O#Gé‰è?˛†Iì&è{(Å†àQ*ïú<yµZ}œñ{ÏkŒU≠ZïCáL˝˙ı	«h4 	ÇGÉJ•¢n›∫∞vÌZåF#J•R˛ÓGtôÕfö7o.¿ˇÍb]ÙZ<±X,á≥zıÍÙÌ€óFç›v;ÖBqOÅ@‰‡ÍÍJ^^ﬁYS§ê
È«««áﬂ~˚ç˜ﬁ{ã≈"D‹c‡Ì∑ﬂ∆h4≤j’*T*jµ˙ñ2P˜äJ•"==ÖBÒüq Ñú‡)¿h42}˙t222ò5kñºÚ /‡¡”OΩzıHOO/í}Ÿã¡=zPµjU˛˜øˇˇñø<V¨X¡‹πsÒ¿h4Ÿ‹Ω}˚vl6€˙ªBNDcµZQ´’Lõ6ç©Sß ÒoV´µ–∂-˘±X,ƒ∆∆R™T©á9TÅ@P¥m€ì…DttÙlˆ/Ë'?ﬂ|Û˛˘Á-Ô<§Û˚˝˜ﬂS∂lYBCCQ*ïÚœùæøª˘˘„è?∏Îx g!‰O,í{‰ÎØø∆f≥1d»ê[∂π[Aw¸¯q<==¬(AQH€∂m	«d2a00˜-∏ÏË-Z¥ ++ãa√Ü°V´Q*ïòL¶¢∫† L&ì&M¢GèÚkÍRµﬂ˜…ì'˘Ï≥œ˛”·4B»	ûx.\HXXÿm∑ëùΩ®ìbÂîJ%ßOü¶fÕö{®Å†¯Ì∑ﬂàèègÈ“•xxxêûû^$≥ŸL•Jïò;w.Ôæ˚ÆC˜ BQP8ÉÅö5kíëëAıÍ’ã|ˇç7¶Cá‘™UÀ·ıˇí5Ñê<·$%%ëöö »ë#ÂâˆNnAV∫Àó/”¢Eãá6NÅ@P¥H…	Gé¡««áòòòﬁßB° 77óQ£F±tÈRZµj%˜d-Î÷≠√œœè>}˙PØ^=Œü?G◊˜›@ﬂæ}±X,|˜›wEf·{ZBNDsÙËQ\\\

¬l6c6õb+ná$Ê>å’jÂ≈_|CàB°¿œœè7ﬁxÉ––P¢¢¢HÃI1YV´Ω^O´V≠∏p·âââ¥j’JŒbVπ¢a€∂m8ê#F„è?‚‰‰ƒÒ„«hü“=$$ÑÓ›ªs‡¿ííí–jµ€˝◊¨q Ñú‡	Á‹πsî)SùNáŸl&--ïJ≈â'‰í∑C©T≤zıj ó/ˇàF,•Râüüü}ˆì'O¶m€∂,]∫ÙÅ-sÔøˇ>ûûûÙÏŸì§§$1ßT*ˇ”ôèEÅ—h$&&Üû={ÚŸgüÒ≈_`0¯Êõoÿ∑oüC¢√Ω
.iÆØY≥&ßOüvË“Û_‡B»	ûh:uÍDBBëëëh4|||x˜›w	%((à6m⁄«8‘åR©TòÕfÙz=ÉÅ+V–´W/1IO&ìâ!CÜ∞a√∆èOÛÊÕπrÂ =Ô«l6≥sÁN~¯·T*ÒÒÒrÔ’.≈◊_çZ≠∆h4Òß¯Ô†V´È⁄µ+:t†ˇ˛≤˜$""Çk◊ÆQßN‡¶‡ãééæ„˛ÏEﬂî)S–h4∏ªªs˛¸˘k˛≠q Ñú‡	'33Äó^zâ‡‡`ÇÇÇ¯ı◊_Ÿ≥gÎ◊Øß\πrºÛŒ;x{{”ßOé;Ü≈bA°P†V´3fps%˛_/)<M(
‹‹‹P©TtË–Å∏∏8¥Z-›∫u£U´Vl€∂ÌÆ˜5j‘(^x·Fèçøø?Õõ7«€€õØø˛∏9?Lù:£—(/ÉX¸›ã≥Ÿå—hd‹∏qdee1{ˆl<<<h‹∏15j‘‡ÁüÊ˝˜ﬂ«f≥·ÎÎKZZAAAw‹∑—hd¯·T™TâY≥fÒ√?∞uÎV±-Êt(f≥Ÿlè{AaÃû=õü˛ô≈ãÛ€oøÒÎØøÚ˙ÎØ3uÍT ˘Üﬁ∫u+ø¸ÚgŒú¡≈≈ÖˆÌ€„ÍÍ ¢Eãÿø?AAAÚˇ_]µ	O+“Ωk6õ±Z≠ÑááÕç7®X±"Mõ6•m€∂î-[´’ä¡`¿h4≤h—"Nù:Eâ%Xºx14ê„˙È'ﬁ{Ô=V¨XA◊Æ]i‘®nnnl‹∏É¡ ‹,ì···Òÿ>˜”Ä4õL&ÇÇÇXæ|9°°°¥lŸΩ^œ©SßP*ï≤H2dõ6m¢j’™4oﬁú‡‡`j’™Evv6iii$''sÏÿ1‚„„INNF´’Ú¸Ûœ3fÃ‹‹‹Äõ◊ÅJ•s˘ˇ#Ñú‡âf‘®QÏŸ≥á'N†◊Îi“§	ø˛˙+:t¿b±`0ZΩËızñ/_Œ“•KIKKcﬁºy‘©SÉ¡Äøøˇc˛4Å‡Aë,@V´ïù;w≤vÌZ‚‚‚∏q„r{/ïJEΩzı1b-Z¥ê˚Ø⁄7f>|8[∂l!99É¡@ï*U‰rGRI!
AöÉ5’™U£ZµjlﬁºôπsÁ2vÏXÆ]ªÊ∞≠t˛#""ÿΩ{7Î◊ØÁÚÂÀ\ø~ùb≈ä·ÏÏL…í%ÒÒÒ!88òAÉ·ÁÁÁøhˇ˝	n"Ñú‡âÊ≈_ƒd2±q„Fé;∆Ûœ?œˆÌ€	ê'â¸7˚UºË≠(<[ÿª‘ÚﬂÛÖ5P/H ¯¯¯–πsgfŒú…O?˝ƒƒââããsÿó∞ ›ä˝˘ô>}:SßNÂÃô3(
¸˝˝yÎ≠∑ò0aBÅÔëÇ¨h1rÇ'öã/R°Bá‡ÿJï*°T*—h4r,ã^ØóWÈˆÃΩ¥ÚO˘≥%Kù…drà°∫Sñ‰ó_~…ä+0çå9íJï*—´W/˘=f≥YƒaÄt>£££ô4i≥gœF•R1~¸x ñ-{ãà<<Ñê<±X,Æ\πB@@ jµöƒƒD ï+Á∞:ñbX$Àú˝D.ô‚ˇÎ≈"Çˇí;’>vÍN≥ŸÃã/æH’™UÂÓ1‡¯Ò„Ï‹πQ,¯6(ïJH˝˙ı	#!!Å+V„è? ¯A ÓårÇ'ì…ÑŸl¶^Ωz 9rÑ ï+»Ò+ˆìÉZ≠∆√√√! Ñê˛+$ÊÓÜ˝˚˜sÚ‰I"##Q´’º˛˙Îå1ùNÁ`Òbƒëwﬂ}óKó.±n›: L√Üi›∫µòw!B»	ûX$´ö¥"ætÈ:t ˛xµü¨Ì]™í®ìâ@ (ïJÖNßC•RÒ¸Ûœ”ªwo &MöÑßß'··· ≤ãUÑi82{ˆl¶NùäZ≠fˆÏŸú;wé~¯A^hã∏GÉrÇ'ñÃÃLúúúhﬁº9 WÆ\ëJ¬M°g4o	p+gÅ@p7òÕf¥Z-:ùé3fêìì√ƒâ±Z≠ú8qÇ√áÛ˜ﬂÀ€ﬁmøÁg)C5>>£—H£Fçh—¢CÜ‡£è>b‡¿Åàÿ¬Gàp˛+“™M˙wˇ˛˝ÙÌ€ó7ﬁxÉˆÌ€À€Èız ‹››Å[≥“
ö0ƒäP ‹©H∏ááf≥ôâ'ÚŒ;Ô·á¢T*5j‡“•Ks…›ZÊÓu˛±X,9rÑ+VGJJ
999‹∏qC>¶B°¿≈≈gggJó.-«˜’Ø_çFÉJ•*0£˜AëJá¯˚˚Û˝˜ﬂìòò»÷≠[x„ç7prr‚«îèy?m∏˜á(?"x¨HbKØ◊Û‹sœëííBhh({˜Ó•Lô28;;sË–!6lÿ¿ªÔæÀñ-[˜˜w®It;ƒD"ná4T*ç7∆««á6 PΩzuºººXªv≠‹ıAä¡ªã”›$\lŸ≤Ö~¯Å‰‰d¨V+eÀñ•V≠Z£R©pwwócM&◊Æ]√l6ìêê¿È”ßILLƒb±P∫tiö7oŒ«,∑ {⁄≤eÀÚ’W_é≈bA£—∞rÂJ:tËÄ^ØøØ8E¡˝#,rÇ«äNß„≥œ>c’™UÑÑÑ∞c«<<<HKK√€€õŒù;£T*9r‰e îq»XŸdÅ‡Aë‚ﬂ‹‹‹∞Z≠9rçF√±c«®U´gœûE≠V≥~˝zzıÍÂ∏Û<t;!ı∆o˚Ôø„‚‚B„∆çyˇ˝˜	n&tI≠Ôfø:ùéπsÁ≤|˘r7nåüü_}ı-Z¥ê€çπππ=pMÕFç—∏qcÑ—hd‡¡róΩ^/,qè#'xdX,πæì—hd”¶M¥lŸí?ˇ¸ìyÛÊÒÁü¢R©0ôLxxx–∞aCy¬<wÓÓÓÓ"yA 9íì˛m›∫5√áG•R°◊Î1boø˝∂liÇ{ÀbÕª;˛| ï+«Üò:u*———Ãö5ã¶Mõ ı§Ñ.≥ŸÏP C˙]™°)≈	{xx0n‹8Nü>Õí%Kpuu•{˜ÓtÏÿQ.”$µ/ª€±K«ì¯Ù”OâèègıÍ’X≠Vé= Æ]ªÿ∑oü,:
ÖXd?bÑê<R‘j5f≥ô=z‚ã/ÚÚÀ/sˆÏYzˆÏ	 Oî
ÖΩ^O∑n›∞X,ƒ∆∆“∏qc—¯^ 9ˆuÁ
,‡‹πs¸Ù”Oh4>˘‰*U™D´V≠P*ïƒ««;¥º€c(ïJzÙË¡Ë—£ô<y2ëëë2ƒa_%UHnJ©ºJ~ÏcˆÃf3≠[∑fÛÊÕDGGìêêÄøø?ÉAˆhòL¶;éW
_±ÀÙÈ”ô7oû,÷∆éK≥fÕP©TÚÑ5Ó—#d≥‡ë°T*âåå‰πÁû√√√ÉıÎ◊Sø~}¿±tà˝*¥BÖ
®’jRRR–h4r,ã/"EÅ}Ãõáá£GèÊõoæ!<<ïJEdd$e îaÓ‹πÑáá£”ÈÙÙºßc‘Ø_ü‘‘TŒü?Ô ‹Úªi•øŸã"˚∫ò“è}¬ÇÙÙ$&&Üæ}˚RΩzu"""$>>˛Æ⁄éŸªok‘®A£FçËÿ±#&ìâ•Kóííí¬·√á∂^ìGè∞»		f≥ô°Cá“≤eK^˝ubcciﬁºπ√J˛uAú:u
 ≠Vã¡` ++ã	&`4EﬂCÅ@P1ç|¸Ò«‰ÂÂÒÂó_ ØÒ≈å3F.[r'îJ%iiiËt:j◊ÆÕç7HIIë§íõ”ÕÕ777◊m~
˙õ¥U´’≤UOxíÎ`Ì⁄µ|Ù—G4h–Äï+W‚„„sWcW*ïçFÜ ıÎ◊Ÿæ};
ÖïJ≈W_}E˜Ó›Â„â*èaë)í9>ˇÑDnn.á"  †P˜®îv˛¸yä/é∑∑7ªwÔ¶\πrtÈ“çF√ÇË—£«£¯8Å‡?Ñdïìﬁ~˚mæ¯‚ÜÜ≈baƒà¨\πízıÍqÙËQÀô4ßŸ/L≠V+ûûûÙÓ›õÙÙt.^º(◊c{ÌøÏ]ƒˆ^Ä±c«íìì√kØΩFﬂæ}Ô ¢®R©ÿªw/+V¨ 99Yéqû3gπππÃö5K˛úBƒ=>ÑENP‰çFt:ãÖuÎ÷·ÓÓN’™Uâãã√€€[ﬁNjhoﬂ•AöfÃòÅóóp3ÆŒb±0sÊLZ∑nMø~˝hŸ≤%iiièÎ#
Çgê¸Ãa√ÜQ∫tifŒúâØØ/ÉÅyÛÊëïï≈´Øæ*œ[â8…Õ¯◊_q‡AÂm§3˚zk˝<˘˜°T*˘¯„è	†q„∆weQ¥X,ÙÎ◊èIì&…ûµZÕ¥i”xÈ•ó‰m§œ#íB»	
Z≠ñq„∆1`¿ >˚Ï3vÏÿ!ã4I¿Âœú≤èØàééñ+Üªªªc6õŸ¥i[∑n•n›∫9rÑ5j0j‘(yüRo÷¸àNÅ‡^1ç(
ÜŒÚÂÀÅõ±sjµöËËh∂n› ≤eÀÄõ•BÏö‰~‘ÈtÑááÛ˙ÎØÀ%@‡ÒÙñ‹≠õ7o&>>ûÈ”ßﬂQHV≠Zï&Möˆ€oÀ•EVÆ\âìì_˝ı#ˇÇÇÅEÜΩ)?,,å›ªws‰»|||P(Ú$&≠•’õŸlv®m4{ˆl>˛¯cRSSÂ…ØfÕö‰ÊÊR¨X1˙ıÎ«¡Éπp·nnn899±c«—Îı1t˘ãv
Ûø@ ()ŒÀæ«≥R©D£—∞n›:ö4i‹¨ŸñûûN£Fçò?>ù:u¬jµ≤{˜nˆÔﬂœ¡ÉIMM%;;õÙÙtNù:uKÔg…"˜(?õˆRßN‚‚‚(_æ<T´Vç¿¿@Z¥h!◊±k’™.\‡ÙÈ”$''„ÁÁáR©§m€∂®’j÷≠[w«≤òo¬*x 
I5k÷$33ìåå9¶n¶ºKŸ¶ˆ&x©V”ÖX∞`ø¸Úêu=<<®[∑.e î!//èÛÁœApp0%Jî‡˘ÁüßAÉ4h–Ä?ˇ¸Sé?1õÕ∑L$˘„FÅ ˛ù,ã,\§öñ*T`Ì⁄µ‘≠[@NN¯Ï≥œxÌµ◊(_æ<:ùéÚÂÀS°Bö5kFã-Ë‹π3aaaÑÖÖ…	\ˆ"ÒQ"YŸ~˙È'.^ºà¡``Àñ-?~úøˇ˛õıÎ◊Û”O?…÷DïJEbb"ÒÒÒî)S≥Ÿå’j%!!ÅÒ„«?ÚÒ
G9¡}#≠§É¡@√Ü)S¶±±±∑§‘KˇJ.T£—»æ}˚Xªv-◊Ø_ÁË—£ú?FçÖááá\›<''á‚≈ãìööJ›∫uQ(ƒ∆∆R≠Z5∂oﬂŒ¶Mõ;v,çÜeÀñ—∞aCŸï†—hnY9ä+Å@`èdΩó§yÕb±PßNvÔﬁ-o+Y÷∫tÈ¬ßü~JBBÆÆÆƒ≈≈›≤œÌ€∑S∫tiÊœüœê!C0˜\∂§(ô4ií\Ï∏gœûrOÄâ'Ú˘Áüc0Ë€∑/ã9ˆ/**
ã≈"◊˜ÃÔeë±rè#'∏o§âOö5jDù:uXΩz5ps≤S´’ÚJP™,n2ôx˜›w0` ≥gœ¶Jï*ºÒ∆‰‰‰∞p·B\]]—ÎıDFF≤b≈
⁄µkGLL«é√b±0m⁄4îJ%———Lò0Åøˇ˛õˆÌ€”≠[7>¸C@ªvÌ‰„Ít∫«/‚ÊA~§9m˝˙ıÙÌ€ó∆ç≥lŸ2Œù;'ªàà∫vÌJÕö5π~˝:~~~¸√ÖÓo¸¯Òå=É¡Ä…dzlYûRπê7ﬁx£—Ë–%¬l6Û÷[oÜõõ+V¨†lŸ≤|˜›w≤ïÓ¸˘Û§¶¶ «Ò„«≥sÁNëò1rÇ˚F™@ÆV´—h41wÓ\‘j5nnn(ïJííí‰ÊÕÎ÷≠cÕö5ú;wé‡‡`¬√√	êQW™TâW^yÖòò:‹t«+Vö5k∆‰…ì˘Ì∑ﬂàéé&33///7nÃ«åªª;NNNº˜ﬁ{lÿ∞ÅCá1tËPæ¯‚íìì—jµ¢X•@ ∏˚Eù’j≈ÀÀwwwZµjEbb"á"77órÂ qıÍUy{www^zÈ%fÃòQ`ÔU{±åõõ˚ˆÌ{dã≈"ªáWÆ\…À/øÃë#G®U´V°«7õÕlÿ∞Å_~˘ÖΩ{˜íóóG±b≈(S¶≈äìCdBCC9˛<'Nú`¯·Lù:ıñ≈±z<Ñê‹íŒl6S´V-*WÆÃﬁΩ{oŸŒb±Ûœ?≥c«Ãf3/ΩÙ}˙ÙA≠Vc4Q´’Ët:¥Z-sÁŒÂ”O?•xÒ‚‰‰‰‡ÏÏL≈äÒÒÒ°xÒ‚dggìììÉüü$$$Dé¡ÛııeÛÊÕÏ€∑èœ>˚å˙ıÎ”Ω{wæˇ˛{4;wÓî' {1'&Å@ 	+É¡¿î)SXΩz5ÁŒùnñ ë≤V•∆ÛÕö5„ˇ˚üÉ[≤0!'πkız=ıÍ’cƒàLö4…°Ù“›éQ⁄Á›b41ôL(
™U´∆|¿+ØºÇŸlñÿÖù≥Ÿå^Øg…í%,^ºòƒƒDrssqww«f≥qÏÿ14„«èg„∆ç$&&
!˜òBNpœH‚…l6”Æ];\\\ÿπs')))…€,Y≤ÑuÎ÷°T*y·ÖxÈ•ó‰ÿ∏€â)É¡@ZZ◊Æ]c∆ådffR£F:vÏHõ6m‰∏πoæ˘ÜÉÉZ≠fﬂæ}ríCﬂæ}9p‡ ”ßOg◊Æ]¨ZµäπsÁ“µkW!‰Çˇ ˆ=L•ﬁ•íxi–†«èßU´VÏﬁΩ[ûãÆ\πBâ%ÚÚí≥‚•∏1I∏ÂˇΩ†„=zîn›∫±n›:ö6mzÀ8Ó4~iÏwã^ØG£—P©R%j’™≈/ø¸ÇJ•∫%Éˆn1ú8qÄ:uÍ`4âää¢gœûî+Wéã/:lüø≈ò˝1k+è>£˜iG8≥˜Ñ≈b!--˙˜ÔOnn.ˇ¸Ûf≥Yqø¸Ú6l†Lô2ÙÔﬂü!CÜ8∆J•FÏ˚™T*ííí–h4ú8qÇoø˝ã≈B´V≠xÔΩ˜‰˛™oø˝6k÷¨ë≠yç7∆’’ï‹‹\:tËÄ≈b¡◊◊ó6∞m€6˙ÙÈ√_|Åììì'O¶wÔﬁèÁƒ	Ç«Ç}RñîhUòHpss£T©RrvΩ≈b¡œœè¿¿@áÌ§≈Ï›äiª:¡–£GRSSÂqŸó_*å˚^jµö5j‡‚‚¬é;–Îı∑mv'<<<h”¶ç√ÔIIIî*UäR•J9D∂G xÖ[ìﬂé8ìÇ{Bß”·ÔÔœˇ˛˜?é;F||<psíY∂l≥gœ∆››ù∑ﬁzKÆG$â∞¸ìUAÌdFçEBB√Ü£wÔﬁ(ïJvÔﬁÕªÔæÀ©Sß–h4ºÙ“K4∫uÎFâ%pss√`0‡ÂÂEff&Z≠ñ3gŒ†◊Î—jµº¬bÖ'<cHã√7ﬁxÖB¡ó_~ÈPGRZ@Z≠VRRR∏vÌiiideeqÌ⁄5˛˛˚o≤≥≥π~˝:7n‹ **äºº<*V¨‹*‘$ó1
∑&ˆã÷è?˛ò§§$*T®¿_˝Eì&M‰í¢¶}˚ˆòL&π‹à˝ÿãä%JêõõÀ•KóË÷≠...∏∫∫R¢D	 ñ-ã∑∑7ûûûî)S≠VK˘ÚÂJúHn\ïJ≈◊_Mtt4#Fåêkˆ	ÓårÇ€bî+YªvÓ‹… ï+Ÿπs'jµöï+W≤d…n‹∏¡{ÔΩG”¶MÂfÀJ•RN|(i2~ı’Wi“§	sÊÃAØ◊c6õi—¢ßNù"((à»»H¸˝˝Â˜uÍ‘âÙÙtºººHJJ¢Kó.¸√rçß¿¿@¢££;v,ü˛9-Z¥x∏'K <RZ≠ñ’´Wìïï≈?ˇ¸Cô2e∏p·YYYÚvyyy/~≥HÉîÕÓ‚‚BNNe î¡ÀÀã5jêííB\\Â ï√b±‹"
%K÷˝fºKbo⁄¥i‹∏qÉ∂m€r¸¯q(BOBB>>>r—ﬂKó.q˘ÚeŸiˇy…“YΩzu9ﬁØfÕö≤;⁄d2qÊÃ≤≤≤,r“˜`≥Ÿpvv¶X±bT®P777vÔﬁMvv6≠ZµBÓBNP(˘'+)eæˇ˛|˙Èß4i“Ñ_|ùNGﬂæ}9r‰-˚∏S¨ÉŸl&99ôp˙ˆÌ+[ÒvÏÿ¡à#ıı%66≠V+∑⁄R*ïDFFÕã/æ»≤eÀ∏xÒ"ÅÅÅP©R%t:IIIÏﬁΩõ^ΩzÒ·á‚ÍÍ*¨r¡3Ñd≈ÚÒÒ·¬Öî.]öfÕö…1`Â ï£fÕöT™TIÓŸ,ë?FŒl6ìëë¡È”ß©^Ω:&ì	ïJuã•-ˇ˚Ó777FåA’™U©_ø>S¶L·≠∑ﬁ∫e·ú?∆
w±öL&πpoıÍ’qqqëõ⁄ﬂ…•|?H≠ä+Ü´´+?˛¯£¸˜Ç∆/âø¥¥4RSS9{ˆ,III(ïJ‚„„)Y≤$eÀñ≈œœØ»∆˘_@9A°H7°}êjßNù   Äêê⁄∂mÀ≤eÀ∞X,rÉÙæªâ√P©T¨\πí÷≠[Û÷[oa0x„ç7X∞`ﬂˇ=Ì€∑gÙË—T≠ZïO>˘DﬁÁô3gÒÒaﬂæ}ºÚ +tÈ“Öºº<vÏÿÅF£†rÂ ¸ˆ€o¨Zµ
Ä∞∞∞"?GÅ‡ÒIll,≈ãÁœ?ˇ≥Íu:ßOü&&&Ü‘‘Tt:◊Ø_«d2qÌ⁄5É‹WUØ◊7≥‡%k_~·ˆ†ı'%Å”∏qcj÷¨IÕö56l+V¨`È“•¯˙˙ 5ﬁ‘jµ¸9Ïèõnï∆8m⁄4~˛˘gö5k∆é; nôóãÖBÅáá≈ä√`0PΩzu
%Jî@©T¢V´ÒÙÙî[ÅU≠Z___ ï+Gµj’‰x;…e]ΩzuRRR8sÊåC,û‡ˆ!'∏#“§±tÈRvÔﬁM´V≠¯Ì∑ﬂXºx±,π+Ó£—à¡` ))âÊõo ì‰ä+ÛÛ„•ó^¢WØ^ƒ∆∆Úœ?ˇp˘Úe~˚Ì7yŸŸŸ4lÿêm€∂q„∆ﬁ|ÛMyF£ëpÈ“%VØ^ç≥≥3ù;w.¬≥"7111ÑÜÜ“∏qc"""ˆˆ¶BÖ
òL&L&≈ã«……I˛W°P‡ÏÏLâ%dãùßß'nnnxxx–ºys¿¯Ò„È”ßuÍ‘°tÈ“î+WN∂ÚIV%†@ã›› â9^|ÒEBCCi—¢uÍ‘°GèÃú9SéìD©€f6õÂx7)ŒlÒ‚≈|¯·á§ßßÛ√?.ä&;ﬂæn®‘ïÁÙÈ”DGGìõõÀ€oøçìì&ì	£—Hvv6ŸŸŸ≤0À  "//∏È›…ÕÕ≈……	∏Yè/;;[ÓÙ…'ü‡ÊÊ∆¿Åx‹ˇD˘¡ëÍ	ÖÑÑ‡ÍÍ ◊_Mﬂæ}∂π€	„˚ÔøÁü˛AØ◊£P(puu•\πrDDD0~¸xö7oé’j•~˝˙î.]É¡¿Ç¯Ûœ?Ÿ∞aÉú˙KªvÌ¯ÎØøË◊Øqqq6LŒvµZ≠x{{”πsgÆ_øNJJ
Àó/ø%˚L <Ω|˘Âó|˚Ì∑Ëız∫uÎ∆∂m€®\π2ŒŒŒ≤en∆cÂÊÊ‡‰‰Ñ≥≥3NNN‰‰‰`0»ÃÃ$77óÙÙtL&„«è«’’ï£GèíóóáR©§b≈ä‘≠[óÜRµj’˚qV´’aﬁ¥X,Ï€∑è7ﬂ|ìÙÙtö4i¬_|ÅªªªÉe–b±†”È∏vÌ3gŒd„∆çòL&∫tÈ¬≤eÀ‰^ÆˆbÛA0çr	©æûŸl∆’’OOO∫tÈ¬À/øå—h§b≈äî(QµZçZ≠v(ÕíõõãÕf£X±bÿl6rrr∞Ÿl(ïJ._æÃ˘ÛÁquuÂ‚≈ãÑÜÜR™T)6oﬁ¸@cˇØ Ñú‡éòÕfé9Bü>}¯˚Ôøe”ødÆóÑSAqIII¨Y≥ÜCáq˝˙uJó.MPPÌ€∑ßAÉÚ∂k÷¨aÍ‘©¯˙˙≤b≈
Ùz=„«ègÒ‚≈‰ÂÂQÆ\9V≠ZE˝˙ıHKKc¬Ñ	<xê.–¶M:ƒÑ	7n}˙Ùaœû=$''„ÔÔœ ï+È–°√c9Å‡·`6õ	 nf‘{zz@VVñ,d≤≤≤∏~˝:ŸŸŸbÆxÒ‚‹∏q'''ŸZg6õπvÌ+V¨†oﬂæçF¨V+ÁŒù„¿Å=zîåå *T®@Ì⁄µ	$88ÿA8Js‚ÌÑûΩê≥∑∂Y,÷¨Y√¢Eã8q‚ÑlEtvv ''áúú¨V+*T†ˇ˛:±'a_†0ÏÁlΩ^O\\IIIú<yí”ßOìïï%ªFk‘®Aõ6m‰Ç¬ÉÅÄÄ Æ]ªÜßß'V´´’*[ﬂä+ [E]\\(Y≤$•Jï"//èÎ◊Ø£R©prr"**
çFÉŸlfŒú9óÖ#Ñú‡éòÕfVØ^Õ§Iìni
møç—hD£—œÔøˇŒﬂˇç…d¬€€õ6m⁄–∂m[989Ãáà<j‘("##yÓπÁò<y2p3.Ô–°CtÍ‘â+V8∑~˝˙§¶¶Ú≈_êòò»∑ﬂ~Kff&•Jïb÷¨Yå3oooé=˙êŒé@ xHÌß:t‡ ï+∏ªªS∂lY,yyyrM8WWWJó.çõõÂÀóß\πr¯˙˙r„∆<<<(WÆÂÀó'11ëñ-[≤zıj∫wÔ.+úúNß#55ïµk◊íîîDZZ
ÖOOO|||¶j’™î+WNésÉª´ùf,É¡¿πsÁàääí{FkµZÍ÷≠K’™UÂ2yBÏÓ⁄WêV´U.ËEBBó/_Ê∆ç®T*Jó.çøø?m€∂•Nù:∑dºJÁ¡◊◊óí%K2|¯p>¸CåF#WÆ\!33ìÎ◊ØìòòHJJ
ÉÅåå233Âø›∏qC”ôôôr·Â={ˆ‡ÌÌ]‰•RûUÑê‹≥ŸÃó_~…∆çŸµkó√Ínﬁ–ªvÌbœû=ú<yíºº<j◊ÆM€∂mÈÿ±£¨+≠náí$ˆ¡ºjµö˝˚˜3c∆¢££	

b¬Ñ	ú>}öó^zâ˘ÛÁ„ÊÊÜF£¡››ù2e ˛˚Ô≥~˝z≤≥≥…ÀÀ£d…í4i“ÑÃÃL8¿≈ãÔ™ä@ xz∞ü3Ü oø˝∆∏q„x˘ÂóÒÛÛª/ó¢≈bA£—–†A÷Ø_/ø^ò ì¨]ÉÅƒƒDNù:EBBâââ\πr´’äããnnnî.]ö*U™PµjUŸ)%HÛ“˝t4∞Øï'π{•ÿ∫ÙÙt.^º»≈ãIMMÂÍ’´§ßßs˝˙u233e—¶—h®SßÅÅÅTÆ\OOO<<<‚•s`ÔÖ8r‰ù;wf¡Ç!7˘ﬂ[Pñ0‹úˇk÷¨·ı◊_ßNù:DEE=≤~¥œB»	ÓàŸlÊùwﬁ·¿ÅDFF7„&Nú8¡≤eÀ8yÚ$•Kó¶yÛÊtÍ‘â‡‡`˘}“|;”æ¥BîÇhÌﬁ¸˘Ûy˜›wπvÌï+W¶uÎ÷òÕfypvv¶Nù:dggS¢D	ö7oNpp06‰Âó_f¬Ñ	®T™{Óm(ût:ó.]"$$∏µÙ≈›b±X8r‰}˚ˆ•xÒ‚î)SFv°6lÿêvÌ⁄….TiÆ≤åπ4£¢¢àééñ„¿“““∏~˝:f≥Yv/ÊÊÊ µÓT*ï‹)A™πVJ•í%Jêùùç—h$//è¯¯xyLNNNrYï*UP*ï≤HµZ≠¥lŸ≥Ÿ\hªÆ¸üœ`0p˙Ùi"""ÿø?ââârΩœÆ]ª2sÊL˘Ωˆ¢Ø∞Ûlé‡Ês‡»ë#r¯å∞∆›=B»	ÓàŸlf»ê!∏ππÒ„è?Úı◊_≥k◊.l6ç7Ê’W_ïıﬁKj~˛`\…U"ôøˇ˛{fŒú…ıÎ◊È◊Ø_˝µ√˚Ì' 	I®5i“Ñºº<~˛˘gÍ÷≠+ˇ]à8Å‡Ÿ#U∏ø{]ÄF£ëU´Vëêê@\\ÁŒù#==≥ŸL±b≈ˆˆ¶Zµj‘´Wè:uÍPø~}◊c~∑fA˝§›‹‹∞Z≠“””\éYYYdee…Ó‘¬†lŸ≤T¨XëR•J…•?§Ú“±Ìˇ«93øà3çú;wé‰‰dvÌ⁄≈—£GπtÈ7n‹¿f≥°R©˜˜'$$Ñ⁄µkSØ^=*U™t[ËÌæÈúK•b§ö°B»›=B»	ÓàŸl¶ˇ˛Ï€∑èÍ’´SßN&Oû,O\iiir¢É}¶“› M(R+-•R…‹πs˘Ù”O…ÃÃ‰•ó^b˙ÙÈ(ïJ√-+Ì¸«R©TtÏÿëƒƒDNú8!O.í€A <{î\ BN˙˛}Èızé;∆÷≠[âãã#11ë7nêõõã´´+æææ4n‹òÓ›ª"˜¶ÙÙƒl6ìññ&ˇ?øó¿ﬁíuøﬁÉ¸‹;Y«‚„„Ÿ±c{˜ÓÂÙÈ”9õ‘””ì¿¿@Í◊ØOÉh‹∏±lE3ôL∑ç—ªó±¬ø˝X•>∑b—}˜!'∏#ãÖÕõ7éããeÀñE•RQ©R%⁄∑oOßNùÒÒπ´Ï®¸ÿ[‡~˘Â¶MõFFFœ=˜Àñ-ìèüø≥î^üˇx„«ègÌ⁄µú9s∆!^D¨ÓAQ ≈ƒ•ßß„ÁÁ'wëâää‚·√ú9sÜåån‹∏A•Jï¯¸ÛœÂé5p”‚UTÛë}≈ †PQ#:…{2tËPvÓ‹Inn.ŒŒŒhµZö6mJ´V≠®U´Z≠÷AÁﬂoQ≈∞ˆÃBÓÓBNpGÏ„‚„„9q‚«é„ƒâ$''s˘Úe<<<xÂïW=z¥√{•Ã®ƒƒD‚„„INNñõWgeeQºxqÆ^Ω È”ß…ÀÀ£k◊Æ,X∞ ptOÿèEZ≠J-t‡Ê‰¯Œ;Ô«Éßßß||'“¸h6õÂπ…`0pÈ“%>¸CˆÓ›À‡¡É©]ª6áÊ˙ıÎr¢ÉîZπre9ÅKr3¬›eπ⁄≥eÀ233IOO'++ãKó.a2ô‰‰WWW\\\8|¯0Z≠ñ>¯Äj’™Q´V≠«Ê±BÓ¡BNpGnÁnêLÏü}ˆsÊÃaÍ‘©∏ππ±wÔ^.^ºÄãã•JïB•RëóóG£FçË⁄µ+3fÃ`ˆÏŸ\ø~ù-Z»-e
≤¿Ÿ[*UíññÜááf≥ô∑ﬁzãç7##eUsÅ@ ∏¢££i‹∏1ŒŒŒÏ⁄µãsÁŒp·¬‚„„±X,dddêëëAVVñ‹Ò@©T ≈sùúú(]∫4999X,πñú≈b¡……âí%K‚‚‚BıÍ’IOOG≠VS´V-®\π2ŸŸŸ¯˘˘±a√^zÈ%^˝u¶Oü˛òœå#bææÑê‹ëª1°õÕfñ.] õoæ…ÎØøéõõ≠Zµ¢Nù:€yxxœK/ΩD||<°°°∑u°ÊG•R…Ö?çÜ∞∞0ˆÏŸ√˛˝˚	

ràóìÇ@ x‹Ët:ö7oNıÍ’Yæ|˘ÎøŸœπf≥ô≥gœíííÇ’j≈’’üª™≥&Ì«`0∞m€6¬√√ô4i“-ûì'aûBÓ˛BN@l⁄¥âÛÁœÛ˜ﬂÛÁü‚‚‚¬Ÿ≥go1óK-eÃπsÁhﬁº9k◊ÆïEóŸlF´’ËNÖÇ]J•íÁû{é»»HRRR‰◊ÖàO"Z≠___8@LLå‹ÛU˙…?gÕû=õ]ªvaµZ©V≠ö\∫nŒâ!!!¥oﬂ^^¿⁄#Öµ ú9sÜÓ›ª≥xÒb¬¬¬Õá<2Ñê‹ñÇ¨qÉf€∂mçF*T®ÄZ≠¶d…íT©RÖW_}ï∆ç;‘ÖKII°ˇ˛ƒ≈≈—¨Y3÷Ø_èB°ê€gŸßüÁ?6 ◊Ä≥œîR*ï¥i”Ü´WØ¢”ÈV±Bƒ	Ç')1¬æ}ñüü5j‘`„∆çåF#©©©<x≥ŸLç5Xªv-6l¿……	≠Vãüüü√¸&ï(πxÒ"4k÷åoæ˘FÓú#°R©8|¯0›∫uc˜Ó›ëîîÑZ≠.¥@∫(ƒ˚Ùqˇœ<ˆÆN≥ŸÃ˚Ôøœ“•KÒÚÚ‚á~`ıÍ’ddd–πsgÜÜJ•í')pˆ•ó^b€∂m<ˇ¸Û,_æ???yˇ>>> ä∏¸H˚Û@°PH…í%—Èt&y!‚¡ìÄ4/i4,«écÊÃôxyy±i”&4hÄªª;*ï
Ÿ:wÌ⁄5j’™Eõ6m»ÕÕ•d…íX≠Vt:sÁŒe¬Ñ	î,Yí‹‹\*WÆÃô3gàçç-0,Âÿ±c4oﬁRSS

BØ◊:ﬁ¸ˇ·Ó|“9¡m±X,|ÛÕ7|˚Ì∑î,YíÔæ˚é∞∞0Ãf3*ïä¯¯x&OûÃπsÁh–†#Géƒ««G˛˚gü}∆¥i”ˆˆf√Ür6©DaD~WjTT!!!ÏﬂøüÆ]ªRø~}/^,◊c"N <NÏcsu:V´ïÔøˇûø˛˙ãÙÙtúúú®X±"6§a√ÜS±b≈B›™“>•◊„„„yÂïWÿæ}ªºhæQQQÏ‹πìm€∂ëêê@vv6jµö–±cG˙ÙÈ¸;ﬂ©Êú‡…D9Åå}ÔB£—»æ}˚9r$YYYå3Ü±c« ¢IB∫Òccc˘¸ÛœINN¶_ø~ºı÷[-^4iii¥h—ÇyÛÊ·ÔÔ/«o‹IÃIì„ä+x˝ı◊È›ª7ø˝ˆõ√˚Öàè≥ŸÃÑ	ÿ≤eó/_∆◊◊óŒù;”∫ukj◊Æ}K„yâÇj¥ÂÔ|√·√Ÿ±c«]œu˘íííX≥f[∂l!99ô¨¨,4h¿ò1ch”¶Õ˝|d¡ÄrˇaÚﬂ‰R<áŸlÊ•ó^‚ÙÈ”0Ä)S¶8ƒ©Ârˆøœü?ü†V´Yæ|π‹À†Iì&9rOOOÿ∏qcÅíΩÄì&¥˜ﬁ{è•KóÚ€oø—∑oﬂ[ö.'%“¬W §2dßNù¢|˘ÚrMÕ¸ΩDÔßÎçΩê1bªvÌ∫„{Ô∂6€∫uÎ¯·áàää¬√√Éoø˝ññ-[:ÙΩqû|
Ô»+¯O Mí0=z4ıÎ◊«››ùKó.1c∆‘jµlıí∫%H?˘2dªvÌ¢b≈ätÓ‹Yn⁄l±X8|¯0AAAr≥Áä+2p‡@åFcÅìÖTX≥Oü>¨Y≥Ü˝˚˜”∑o_˘ÔbíèïJÖ…d",,åzıÍı◊_s˙ÙiFéyKÁô{-Ó{Ø€Ú\[Ra`Èßm€∂¨ZµäKó.—≠[7¬√√©_ø>Î÷≠+∞v®‡…Dπˇ8“d1k÷,¸˝˝9q‚dÛÊÕámïJ•|sKˇœø¬ìœú9ì°Cáé¡`êÉuOû<…ç7		!""Çàà™WØŒoº!«}ÿO4≠Zµ‚“•K\πrÖ‡‡`˘Ôˆ%FÑ5N <*$aÛ”O?Q≥fMRRRÿµkªwÔf¿Är|„XdJs°’j-ß†Ì•qNü>ù.–πsgLó.]<.wâÇ«árˇaîJ%†vÌ⁄Lû<ô∑ﬂ~õSßNàNß+t"*L8Y,
ÖúÄ–´W/T*´V≠rŒ]∂lﬂ~˚-
ÖÇ§§$fÃò¡Í’´Ò`·¬Ö®’jvÌ⁄EÂ ïiŸ≤%QQQröæ}#h!‡¡£∆jµ“æ}{>˘‰>¸C"##	ñòè€K â≥ª˘…∆˘Áüs˘ÚeL&ï*U‚ÿ±cr<2›ìàrˇ1‚„„Åõñ≥Ó›ªÜóózΩû˜ﬁ{∏y£jµZπ·¸›R–™œŸŸôúúåF£‹:´Cá¥oﬂû∂m€b±X8p .\`ÙË—ºı÷[h4Få¡ò1c¯Âó_HNNvnBƒ	ÇGÖΩpâéé∆◊◊óîî.]∫ƒ∏q„dK’„∞¬Ÿ{0åF£¸˚êñ€˝ a2V´Uû[è;∆ˇ˛˜?⁄µk«‰…ìºBÃ=Y!˜¿˛∆U©TÃû=///bcc9r‰õ7ovXq’1ˇ˙Î/t:oø˝∂C–ÔÓ›ªŸΩ{7°°° ÚJv‹∏qå5ä¥¥4ﬁ|ÛM&MöÑ¡`¿””Sà8Å@XŸ¥iç7¶SßNú9s¯∑<Hasí} √ú∑§πı~V˛Ú#ps^~ÛÕ7˘ÎØøò;w.›∫u#22Ràπ'õ‡ô$''«ñïïeÀ»»∞]Ωz’ñööjKMMµ’©S«¶V´m?ˇ¸≥º›≈ãÂÌã‚∏999∂}˚ˆŸj◊Æm;yÚ§¸∑∏∏8€á~h+Q¢Ñm î)6õÕfÀ  r¯±Ÿl∂]ªvŸ‘jµÌè?˛∞eeeŸÿÅ‡^8~¸∏-++À∂k◊.õõõõmÈ“•∂úú[bb¢-''ßHè%Õùˆ?ˆÛﬁô3glm⁄¥)“cÊ?n˛◊222lâââ6õÕf´X±¢m–†A6õÕ&Ê„'Q~‰?¬∞a√¯˝˜ﬂi“§	Àó/G•R…5·Ï›R;ô˚≈b±∞b≈
æ˛˙kÊŒùKHHà¸;`¿ ˛¯„VÆ\I◊Æ]IJJí›≠“{≠V+nnn2ÑƒƒD˛¸ÛOaÖè…UÈÎÎKÕö59|¯0É·ë∏Q•˘^ÀèçFπï·ù∆i?Ø⁄[ÿÏ_OJJ¬◊◊óm€∂—πsg÷Æ]KXXòhrˇ!Zt=„$%%∆ï+WX≥fçC—G…›)≈Wh4YƒI5Ñ$ÏMÓ∑ªq'Nú»Œù;Ÿºy3Z≠Ω^èF£°Iì&ƒ∆∆rÍ‘)‘jµC}9iˇˆ«HOOßlŸ≤Bƒ	Ç«ÜJ•b¬Ñ	X≠V9‰^ú4øöL&:uÍDvv6•Kó∆ÀÀãJï*Q©R%™V≠Jµj’®^Ω:jµZ~ÔΩŒ{f≥Ω^Ojj*WØ^Â˙ıÎlÿ∞Ω^œ•Kó0ôLh4ˆÔﬂè¡`∏ÂXÖeßzxx`6õ—h4hµZFçEXXò‹+[¯BÓ)Êv+"≥ŸÃ_|¡¥i”h‹∏±ú∫n›: ππr©R•nyÔÌ&ÖB·PXÉ…d"<<ã≈¬—£GâééF´’¢—hıı≈……âîîÃf≥º©»0 Ø<•¢ƒdÁŒùpvÇ'üç3ãúáKRRKñ,°]ªvT©REŒÃ/®8zA(ïJ¨V+ûûû§••1d»ÚÚÚ∏xÒ"ÁœüÁØø˛¬jµíììÉÕf£xÒ‚8;;„‚‚ÇR©§Zµj˚ãççÂÉ> ..éÏÏl,.\‡˙ıÎÿl6l6≈ä√ŸŸÖBA•Jï®R•
!!!òL&VØ^ /§~+ù‰Ω)U™°°°Ïﬂøü°CáÚÀ/ø‹’9<|Ñê{ä…Èt:y¬h‹∏1iiiî*Uäã/“ºysrssqvv&//''',≈ä√……IÓX¢D	"""ºÎ1Ïﬂøü±c«“¶M¶NùJRRﬁﬁﬁ¿ÕÜ—ûûûú<yRû$
™kdµZ<x0ç5¢V≠ZpvÅ‡¡5j4†zıÍdffﬁ◊>§™ìì}˙Ùq7…œ·√á9˛<qqq\æ|ôÙÙtÉla´T©ªwÔF•R·‚‚BÂ ï©[∑.~~~hµZ⁄µkÁ∞?Ω^èØØ/ ;wÓºßˆ^íı ##Éa√ÜÒ’W_1gŒú[Z6
B»=ÂÿØà¥Z-√Üc…í%4oﬁúã/¢◊Îo˚~çFÉ≈b¡œœ÷¨YC`` F£—¡Ù^ü~˙)Î◊Øg¸¯Òr◊___bbbÚÚ¢n›∫Ï›ª˜Wm~$∑jTTá"11Q∏U¡c%**äﬂ~˚çuÎ÷Q©R%˘ı˚È∫†T*πzı*F£ë¥¥4‹‹‹n±ä5i“Ñ&Mö…ÿ·_œ‹ó)V¨@°÷∏Ç∆»Òv©©©º˝ˆ€Lõ6ç˘ÛÁ”≥gOYê
Î‹„Cπß˚.zΩû:êëë¡û={®U´F£Òéâ'N‰€oø•U´Vl‹∏Qﬁß‘’A≠V;Ù
¥èmÎ”ßyyy;vÉ¡¿Œù;âââ!''áO>˘Ñæ}˚2gŒ,À-˚)å±c«“¥iS9.„I(∞)¯Ôaﬂ¥<ˇC[<¨ûmÏInn.:t`Í‘©|¯·á¥_ÖB¡ıÎ◊Q*ï∏ππ°V´Ì∏†HÓ_)Y√ÕÕçÑÑ§‹∆˚ùSKî(Å—h§uÎ÷,X∞Ä!CÜ·®˜ãrO1í…˚ßü~‚ìO>°Y≥fÏÿ±Éòò

íM¯“‰§”È‰UZHHÁŒùcŸ≤etÌ⁄UŒXµZ≠≤9>Ø@ÖB¡∂m€¯¯„èy˘Âó9r$/ø¸2;vÏ@•RëùùMjj*Øæ˙*≥gœvòõ∞§Â¶Mõ8sÊå\£I ∏W§ƒ•Râ¡`êøØ\πBFFÈÈÈòL&åF#◊Ø_Á ï+‰ÊÊíõõ+ã7´’Jnn.yyy∏∏∏†R©puuE£— Ûœ?W÷j¡”Õã/æHµj’0§ßßÀ¬˛ù≥Ó%s≥lŸ≤E^Ø≥0§q∫ππ·ÊÊÜR©$33á"¬w{KœöJï*q‚ƒ	^{Ì5^|ÒE@X‚ûÑê{ iﬁº9±±±Ãò1É!CÜ`6õ	î'iÂïññ&wlêÑüØØ/gŒúëKÄHñ6ÖB!∑√ üæ>j‘(bccY≥f|ÓÓÓ‘™UãP∂lY⁄∂m+ã8)m∏má•RâŸlÊ˝˜ﬂß}˚ˆh4y¬÷∏ˇ˘4………\ºxë‰‰dRSSIMMÂ⁄µkdffíññ∆µk◊dÎ≠R©$''≥ŸLnn.ÓÓÓ+VL˛ë Ìî*UäR•JQÆ\9
...8;;S¢D	îJ%%Jîê≠ÈÈÈddd`4=z4ﬂ~˚-≤`◊Ë≥Ö$Ê#""<x0ãÖ
*â`—ÈtE4 ;#âMÈ^“ÎıÚı}?±m“}≤c«&MöDÒ‚≈9vÏµj’íÖûtè!‰û"§÷+jµöc«é—°C4ó.]íÕËRˇRI@I=S%∆˛˝˚˘‚ã/9rdÅ«)®ã^Øßˇ˛x{{≥}˚vj÷¨â’jÂ‹πsxxx`0–jµ0ÄŸ≥gÀøK„.i≤˘ÎØøHMMe˝˙ıËızaÒx
∞X,òL&‡ﬂ˚Î∆d2›≤0çú?ùNá¡` 99ôSßNëûû.∑rKOO';;õ‚≈ãÀV≤b≈ä·ÍÍäãã
ÖÇ“•K£’j	¶tÈ“î+WOOO¸˝˝)U™e îë{IÊ∏‹)æÈN£j’™—§I÷≠['Æ”g)Ò+33ì°CárÈ“•"(.\ Óﬁ=?±xˆÿá¶‰‰‰P∫ti˘¯˜∫ Q*ïíêê Äªª;ã/f î)˜‘ QPÙ!˜!=áŒ¬Ö8p ”¶Mnö–·ÊÕÊÎÎ+ªT%1uË–!Z∂lâZ≠&..Ó∂†¸U≥gœfŒú9ÙÏŸìW^yE~Änﬂæ∏ŸøµNù:º¬¸¯„èr¡L…JRˆî≈ba“§I¥lŸ___9>Od£T*Í&$$êêê¿È”ß9sÊ/^î≠e◊Ø_Á∆çÿl6úúúpvvF©TR∫ti‘j5jµö
*‡ÈÈâóóU´V%  ¿!([∫fÓˆ!XîÇ Éú>}ö
*◊_…Ó%¡≥ÅtÕ\πrõÕÜáá ==›°\“˝rıÍ’"È›ë!#	π˚µ"WÆ\ô≠[∑Pø~}:ÑJ•íÁ|¡„Aπß)~≠q„∆ƒ∆∆≤j’*⁄µk'µJ≈}Ì<“§4x`VØ^Õò1c3få3Qí[Kö FçE\\”ßOßEãT™Tâ¿¿@6m⁄$øß~˝˙tÔﬁùﬂ~˚MÆ≥î˘ë&DïJ≈∂m€HLLdœû=∑ºˇøŒùÍå›ãP)h_R=,©|AŸlˆñ`ã≈BDD«éCØ◊IRRÒÒÒ/^ú‚≈ãS£F<<<([∂,T®P≠VKÂ ïÒ˜˜ó≠≈õ¢∞¢‰∑LKøøˆ⁄kå;ñÆ]ª
´‹3»Ãô3©R•ä,Íö5kˆ¿˚Ù†xÒõÌÕÛœq{Œ≥X,ƒƒƒ‹uY©€Q∂lY ⁄¥i√û={ÄÇ«/bÁ‚â˘Ñ#πñ“““®Q£nnn\ªvÉ¡‡∞⁄ ˇêñn,ä/Œ˛˝˚	æ´c*
L&Ωzı¢rÂ ¸˘ÁüËız™T©Çßß'˛˘ß|LçFCÉXºxÒ-„æõõÿb±Œ;Ô–©S'á§¡MäÚ\H˚2ç÷R¥Z-F£—!·%99ôœ?ˇp˙ÙiÙzΩ\∏T°Pêõõã—h$//è-Z0`¿ ~ˇ˝wV≠Z<[ÒçˆﬂCLL}ÙÛÊÕ„ÁüÊΩ˜ﬁ{å#ˆsœÒ„«©Y≥&p≥âüüﬂÌ[©T¢—hHNNæÂoèb·jµZ…ŒŒ∆’’ıÅˆ”®Q#ÊÃô@ßNù¯¯„èÂ˙•Rxètﬂãy¸—!Ñ‹é…d‚˜ﬂgÃò1tÈ“ÖÖ:ƒ¿f±ô2e
_˝5:t`Ì⁄µw√`µZYæ|9≥fÕ‚”O?ï≈_ÁŒù)^º∏lâS*ïxyyQ°BvÌ⁄ÖNßì›lw#∆$KbDD©©©Lõ6Mà∏áådYS©T≤Iß”¡…ì'âãã„‰…ì$''À≠Lô2T¨XëZµj1p‡@ 8sÊV´ï.]∫0d»T*ü˛9ï+W~Í-™ˆerÏ?ã…d¬b±P©R%
˝˙ıc˛¸˘º¸ÚÀı∫O?WØ^•Y≥fX,πåì–øx{{Û˜ﬂÀ!2w™≠	E'Ü
YYY∏ªª?–~|}}…ŒŒñ≠{ŒŒŒl›∫ïáRFEpw<›3Ó3ä˝™fƒà¨[∑éô3g“≥gO
Z≠É¡Äõõ€-ÈV´ïzıÍa0ÿ∑o¡¡¡≤ıNzàKnX	˚…‚≠∑ﬁ‚‚≈ãÏ⁄µKàm”¶ÉÅ§§$9õ¥Q£Fÿl6Nü>ç≈b¡√√„ÆSÒÌé#Gé§{˜Óxxx8îFy)LàÊØIˆ(≈™$‡ız=IIIDEEE\\iii‰‰‰p„∆Jî(AπrÂÛÛ#,,å:»Ö°SRRÿ∂mÎ◊Ø'##ÜNhh®|≠&%%±a√>˙Ë£gBåÙP ü∏1e ñ,YB\\‹S}›
˛E
3»ÀÀ£gœû ∏∫∫Ræ|˘ﬁw@@ YYYÚq5999î)SÊÅˆ!yaNü>çüü+Vd˚ˆÌ4®àF)∏Ñê{¬ê‚‹
≠[∑Ê‘©S$$$8XQÏ˝JÉ¡¿ºyÛ¯Ï≥œe˘ÚÂÚ∂Ø∏í‚È§ÙsIT≈ƒƒN≥fÕò1cÜ‹TπOü>DFFrÍ‘)‚„„Ò˜˜ßOü>ƒ≈≈ëûû~OüÕ^l*
"""8wÓ«énÆˆ«WîH1÷≠[«ô3g»ÕÕ%''áºº<‡Ê˜‡ÏÏåJ•íÉ˛ùúú‰Ú...î(QBnõV™T)πFAÖi-ŸŸŸ\ªvç´WØr˛¸yŒù;GJJä\?MlŒŒŒî.]OOOÍ‘©Cç5§yÛÊ≈`0∞vÌZæ˙Í+Nù:ÖZ≠&00ê1c∆–∏qcY∞⁄[yø¯‚|||Ë⁄µÎ£9—ëÇ≤∂¡—U,-äºººò;w.Õõ7&Ï•R…¸˘Û)Y≤§¸}«∆∆2|¯ﬁ∑õõõ#óˇ˛yXÿ/.srrh’™’ÔS*O–æ}{˛¯„è[û'ÇGã8ÎOí˘ﬁœœèúúÆ\πÇR©t($iˇ@ë‚ :vÏ»ÖX±b-[∂î¢&7H7ûR©d›∫u|˙Èßº˛˙ÎÑááÀbdÿ∞al€∂ç´WØ ÔˇÚÀ/Ÿ∏q#'Oû˛µ6›ç5NùR•Òë#G“πsg˘Ôí´·iùîJ•\àŸjµR±bE
Ö,÷ÚÚÚ»……ë≠`πππdggﬂvüR%ˆ¸ˇ(V¨ò¸`»ÕÕï« ’G+WÆ5k÷§~˝˙¥h—¬!…@≤“öÕfíìì9vÏá‚ÙÈ”òL&*V¨Hì&M?~<~~~≤h¥Z≠
µZÕÏŸ≥âååîüˇH◊˘‡¡Éô;w.&ìâîît:ƒ√√ÉW^yEæûÖ»{≤±<ˇ˝7^^^Ú\,-®î“•KÍ	yXÿ#;;˚Å]´RWäÀó/–µkWÊÕõ'gÙäZrèáßÛâ˘c0§Jï*9rÄ§§$Ÿu£”Èdaf±X¯Êõoò:u*!!!Ï⁄µÀ°%WaÌπ$¶¡``Ó‹π¨_øû’´W£’jâèè«””ìŸ≥g≥tÈR>,ã¬≥gœ2q‚DVÆ\âøøøºø¸≈áÌ±wQIÕÕÕç‰‰dííí¯ÎØø‰ø?mÄ≈b¡`0p˘Úeò7o£Gè¶Gè,Y≤ƒ!÷ ˛Aq/v©òÁÌ,ïÖïÁ»©»ÛŸ≥gŸΩ{7'Oûî{?j4Í’´«ã/æHã-‰cK±<Rq^iÉ≥ŸÃŸ≥g˘˘ÁüYºxÒ3ë‹`_åX
-∞ˇ\:ùé»»Hππ˘Ò„«9sÊ¡¡¡‹∏qWWWúùù………·Ûœ?óK 5j‘àﬁΩ{S≥fÕ;∂Õ<^Œû=Kó.]‰ê''ß"π∂›››±X,å=ö)S¶¡HÔåO˝ˆ€oÀΩ]îä+ ÖçÎ÷≠ã’j%66VÓ$$xÙ!˜ÑQπre5jƒÓ›ªÅõS___Ùz=rèæ˝˚˜Û⁄kØqÈ“%¶Mõ∆†AÉHKKì˜sªx-…ä7q‚DX¥hë‹€‘ﬂﬂü˘ÛÁ3a¬V¨XAPPê¸ûˆÌ€3vÏX⁄∂m+g*I‹ç0ëV∑J•í–¢Eπ˛<öÏ≠¢D*∂ƒG}ƒW_}≈¢EãË‘©ìC]%˚π{´RQ€¬é/}œˆ«JKK„ÚÂÀ\ªvçã/Úœ?ˇp·¬Æ\π"ãÇÉÉ©Y≥&!!!r0∑$d‡Ê˜!	∂¸≈iiiƒ∆∆Úﬁ{Ô±h—" ÷<≠òÕfRRRHMM%##ÉMõ6ëòòHrr2‰‰‰P¢D	‹››)]∫4ç5¢_ø~4n‹òFç›≤ø%Kñ∞ˇ~ˆÓ›Àö5k»……¡””S.*<zÙËGˇ!Öb±X∏rÂ
Ωzı¬l6sÂ 
nnnr»À˝ıó/_ûÂÀó”∑o_233˘Ò«∫/<åÖêØØ/;v‰ü˛aÁŒùÛÌ˝ ñèèè˛ç›æ};AAAE1d¡}PÃñﬂ_#x§HŸ?Àñ-cË–°º¸ÚÀLö4	≥ŸåV´≈l6c2ôdã‹˛˝˚yÎ≠∑8wÓç7ÊÀ/ø$88X∂"ñt`±XHNN∆ﬂﬂùNGxx8~~~Ãò1C~põÕf:Dﬂæ}ô7o}˚ˆÂÿ±cÑÑÑPÆ\95j$õ—ÛO:˘(nGDDù;w&&&çFÛ@qqèS4HÁmÀñ-ÙÎ◊è%Kñ–∑o_"##Y∏p!111\Ωzgggä+Ü’j%''ÖBÅªª;e î!##ïJE…í%quu•tÈ“î)S ï+«ï+Wn;Ü]ªv9¸ã≥≥≥‹°Lô2h4*V¨àüü5k÷º•ñîΩ–¥'ã{+’ßü~ ¡É9p‡Äº}˛,œª·q~F£ëù;wrÏÿ1πòqZZö\SOÍQ°B¸¸¸h÷¨≠Zµz†ƒÜ›ªwÛÁü≤gœ.]∫ƒıÎ◊Q´’xyyQªvm∫tÈBá
}˛{ÂiÕO"áÊÖ^‡ÙÈ”®T*V¨X¡ÜXºx±Éà≥øŒÔ•@5‹Ã~n‹∏1ps>óZîàñü€%SŸ« KﬁÇvÌ⁄QºxqNû<Y$B—b±≈‘©SY∏p!*ïä.]∫`µZŸæ}˚C§Ç€Ûtô@ûA|||ÿ∂m···å=ö/æ¯BvuIÓ¨sÁŒÒﬁ{Ôq‡AÃf36d∆å4i“Dﬁèî9
ﬂÏ&ì	"##	',,Ã!”H°Pp˛¸y˙ıÎ«'ü|Bè=–Èt‘™Uãj’™°—h¯Í´Ø‰¯(˚	Á^&J•í—£G”¥i”qèi‹f≥ô¡ÉÛˆ€o”Ω{wzÙËAJJ
ÅÅÅÙÍ’ãˆÌ€ﬂv?á¬d2ëëëAff&ŸŸŸ§••°”È∞X,Ët:πÅ{Ò‚≈Â>°eÀñ≈’’ï∫uÎ ø´’jpssì˚ÁﬁÈ3‰pˆ(©÷úˇ¢—hÿ¥i_~˘%ﬁﬁﬁ=z‘·˚{‘’€µÉãhGGGÀbÌ¯Ò„$''c0»……°xÒ‚î)SOOOÇÉÉ	¶Mõ6î*UJ^∞‹©ù—Ω\√Õõ7ßyÛÊÚÔ………ú8qÇ≠[∑≤c«/^L±b≈–h4T´VçﬁΩ{s„∆ÜrÔ'Hpœl⁄¥I^H§¶¶R∂lŸ"π∂•k”ÕÕç∏∏8LıÍ’È‘©+V¨∏e>ΩõÎ*ËÖF£¡jµÚ +Ø∞sÁN˙ÙÈ√ú9sdJQˇR•Ja0–Îı¯˙˙“ºys-ZÙ¿˚‹?B»=f¢¢¢Ëﬂø?≥gœf‡¿ÅòÕfˆÌ€«ﬁΩ{9zÙ(âââdggS©R%˛˜øˇ1tËPáá¥tvÉJÈ,^ºòoø˝VNj–Îı rãïÁû{éa√Ü1n‹8åF#ãÖAÉëûûŒπsÁ∫1$‚
[-⁄≥sÁNbccŸµkóÏä{ëDvPP!!!ºÚ +‘Ø_üÅ2bƒàªéE…_PZM€üÎ€ù£¸V◊Ç∞˝vñ∑Çˆ-âùN«[oΩ≈ÖxÁùwª˝{Dÿ_ã:ùéSßNq¯aé9"ªì•`ïJEÂ ïi”¶4†sÁŒ∑$#‹…5\–9~êá£V´≈√√É:»ã§§§$.\»“•KY≥f+Vd»ê!O}2–”¿ë#G®R•ä¸{zz:Â ïª'è√ùêˆı’W_1bƒ^}ıU4√Ü„„è?v®0 Öﬂüí´◊>ôÌˇ˚Î◊Øß|˘ÚDDD»È∏E1v777úúúHMME´’“∫ukfÕö%[E=–Gèò3Õõ7ßtÈ“Ãû=õè>˙àÏÏlT*e î¡ﬂﬂüÅ“≠[74çúÖö?¯=ã I®T*“““P*ï8pÄ_~˘ÖO?˝îvÌ⁄éıö5k“¶M¶Oü.ó˘¸ÛœŸºy3QQQ≤UF™G˜71Lü>ù⁄µk è·i{0I‚822£—H˜Ó›È€∑/´V≠ràë\Øw„jêŒÂù¨?ˆÿ«≥IÿªC‚vÁ:ˇw°P(HHH`∆åDDD–¶M~˚Ì79ã∫(D≈Ω∏
Ìc˜¢¢¢ÿπs'ÁŒù#**
ùN«ç7prr¬’’???:wÓLhh(>>>rÊm˛c$ÑÔ’µı (

jµΩ^œñ-[ÿ¥iQQQ≤•µFç‚·¯à∏xÒ¢Éß"33ì∫uÎ˘qî õ}ä=<<8zÙ(ÛÁœÁõoæa÷¨YºÙ“KLô2Âé˜ñ˝ı0j‘(VØ^çJ•bÚ‰…å1É¡ [•ã“›)Y¸ız=V´U.It˛¸yy^<ZûÆ'Ë3Ä}¨Z@@ AAAtÏÿwwwBBBÒÒ°R•J∑∏â 9!¡û¸+ Èˇ“™œﬂﬂü5k÷0i“$V¨X·@Û¿h4@pp0Kó.ïì*÷≠[«ÙÈ”˘Ë£è˜˜óW˜∫2µﬂ^ä¡€∞aÉÉ%Âi¬æ‹Jó.]®X±"6l`ˇ˛˝ÇZ˙lí}·¸ïÊö¯Ôˆa ’/îz™FGGÛ√?Cï*UXµjïClò‘wıAêÑc~+°4&I,∆∆∆≤~˝z"""8uÍ&ìâ‹‹\T*çÜÄÄ ^~˘eö4iB≠Zµ
}h$Ì%˜˙›À˜jo9óæÉ¡¿∫uÎÿ∂mëëëdff‡ÂÂ≈ò1c:t(¡¡¡r<ï‡·`_—d29ƒ(^πrÖ™U´é_i°¸ ÿ/ﬁÜBΩzı8r‰ﬂˇ=Àñ-√««áû={“ªwoá* ÒÒÒÏÿ±É•KóÉááü|Ú	√Üp∞éuÃö4Ô‹∏qC~≠b≈ä¨Zµä˜ﬁ{Ô©[ò?à3˛ëZ≠ñâ'íïï≈ﬁΩ{oœdÔr≥ß óf˛ã…db˛¸˘l⁄¥âÌ€∑£V´IKKì›u*ïä5j‡ÌÌÕ÷≠[1õÕÚX@xx8¸±C0Ì˝X„§±è5äj’™Q≠Z5‡ﬁ,VO¸ÚÀ/¸¸¸Xºx±¸ ∞/Ú(,(ÖMöw;ô⁄•R…Œù;ô7oÁœüßa√Ü¸¸Ûœ∑d£ôÕfá∂E˜+Ë§1Ê_∑nKó.ÂÙÈ”\∫tâ‹‹\‹‹‹ÒÒa–†AtÈ“≈¡Jí?¶(ø≈∫∞Ú,˘ˇ_π¶ÌÔâÇ]ˆHµ˙bccY∑nQQQ§¶¶íïïÖZ≠∆€€õ¡É”™U+Í‘©#/ÿíìì—ÈttÈ“≈aq&x8ú:uä‹‹\BBB‰◊222nQïJEì&Mh“§	ØºÚ
gœûeÊÃô¸¸ÛœÃò1CviÊ‰‰p˝˙u‡f«â‡‡`~¸ÒGÇÉÉeΩ}Ò¯á5∑zxxpÈ“%T*f≥???"""‰ø‡—"Œ¯#ƒæº√∑ﬂ~À˙ıÎÂ`U˚ÚëˇÊê(ˆÌˇœ_˝≈Í’´Ÿ≤ejµ≥Ÿåßß'&ì	ïJEÎ÷≠)Q¢ªwÔñèk0®[∑.Ãú9”¡M{?"N™A¶—hÿ∫u+ì'Oñ„«L&ìC	ì'˚s4q‚Dúúú¯Âó_‰t|©<Ã”‚ìÆGÉ¡¿˜ﬂœ˛˝˚qwwßKó.ÑááÀ˝sÉúL#≈JıÂ‘5nµZô?>k÷¨!11Q.T\±bEö6mJXXMõ6ï€—Ÿã±¬,lí∏z§Î>ø%M˙∑∞˝;våΩ{˜Ebb")))\ø~ùºº<πΩ^Õö5yÌµ◊ìN“1§VjçÜEã·ÍÍJã-˙+k÷¨°\πr∫Çb&§…ù0çòL&BBB¯Âó_Äõ±ü€∑oÁË—£¸˘ÁüLù:ïﬁΩ{À„2õÕrÿç}lÓÉÑ¿‹ÖBÅóó/^îf≈ä¢ cBπáLAnœ˙ıÎJõ6m‰◊Ì]¶wÛ`¥ﬂ∆˛A#eÚÌÿ±ÉuÎ÷q‡¿‚„„≤M•˛©)))ƒ≈≈…´OOO:vÏàììªvÌí][ÚPîVá£Gè∆’’ïa√Ü…qZ≠ˆ©±0HÁÿh4Ú˜ﬂs˘Úe&MöDPPIII¯¯¯<Ó! ÿ?d$W©T_Näó—ÈtÏ⁄µã’´WsıÍUj◊ÆÕ7ﬂ|#ØÏÉ,≤ÌkOŸ˙˚qØÍt:ñ/_ŒÜ∏p·YYY∏∏∏‡ÎÎÀã/æH˚ˆÌ©_øæ|Ω⁄Ëµ˛ñÓó¸=lÔµéù$‘Ú[’$7õ‰æµ?üú8qÇ‘‘T"""HNNÊÍ’´dggÀÌ÷§≤%É¢]ªv‘¨YÛë/Y6•qK±óR¸—í%Kh◊Æù√w((ZÏÁÁ»»H*U™$øûêêÄããKÅa ÀÍ§V´B4¨V+æææ6åfÕöëöö /ºÄR©$&&777¥ZmÅsÙ√TJ•í
*pÊÃ‡ÊuÃÃô3Å{9B»=$ãõŸlfÙË—‰‰‰∞p·¬r-Ê“∂_}Ì‹πì•Kó≤}˚v 9∂IJ:t®l-ê∆»oºAll,………òL&‹‹‹Ó´^R˛qV≠Z≈˚ÔøœÔR∞èg˘ˆ€o	ê›Œ˘Îä‰÷{VJD≤¨Iu±∂lŸÇ^Ø«ÀÀãæ}˚Ú‚ã/:åª0A$M–ˆıù>ü≈baﬁºy¸˛˚Ô$&&íûûé≥≥3æææ8êvÌ⁄Q£Fás(YÚ[ﬂ
∫OÚ'˙‹i,ˆ«∞wçZ≠VŸ™Irr2©©©$$$êòòHff&F£ë¨¨,πN_ff&/^$<<úêê™WØÓœ&ç_*ër;kE˛≈ÙÙt._æÃªÔæ<}·Oˆ]	Ë’´ó¸zff&ó.]í2:7n‹ê«QPœ£¬◊◊Wn”–¥iSrss9}˙44BÓ#Ñ‹CF2—KÓ©%Kñ˚ÔøXP◊ûªY}Áﬂ∆d2±sÁNæ˚Ó;6n‹(ﬂíÃ◊◊ówﬂ}óÌ€∑À7°4ém€∂1gŒVÆ\ÈW,Z¥•R)˜q}–Í‚èõ„«è˛X,$ˆb´∞åU˚kiÛÊÕDGGÛœ?ˇ`0(WÆù:u¢}˚ˆ(ïJY@›KˆËù&È¯¯xæ¯‚˛˛˚ot:ŒŒŒx{{”Ω{w>˘‰ì[ˆ%Y£Ï›ñ˘Ôèª©„føVPF≠…d¬h4rÂ ¢¢¢8{ˆ,ÒÒÒ§¶¶rÌ⁄5n‹∏·–¸[*\±bE¥Z-ÅÅÅ‘Ø_ﬂ!Ü™}˚ˆƒ≈≈1{ˆlŸrhèÙyÏÖq~°/›üˆÁu‚ƒâxzz‚ÁÁ'ÔGP¥H÷X©{ç—hî3VU*ôôôT©RÂ±∆&>©ﬂª‘≥U
µ∞X,x{{ìíí"∑¯<:ûÃ´‰C
Tm‘®aaatË–É¡p€x™Ç "ÿcoÅõ©+V∞lŸ2∂n›*ﬂ\ˆ∞|ø˛˙+{˜Ó˛-&i0Ë’´¸1aaa$%%…qPE±≤ö={6]ªvnoïx–ÎıdffÚ∆o<‘“)w™˝f/TÏœß—hd√ÜÏ›ªóSßNQ¨X1™V≠JÔﬁΩi⁄¥©Cúï‰⁄\ôÖπ”o∑ÿHHH‡›wﬂÂÔøˇ∆l6SÆ\9Z∂l…ó_~IÀñ-Q´’Ú±
‚n-k˘EõΩ@í˛ï\«GéaÎ÷≠\ºxë¥¥4Æ_øNVVã777‹››ÂB¿~~~‘©Sá5j‹SπÜç7 ŸÊ{ˆÏë?á˝wìﬂ∫Yò•SäΩ2ôLlﬂæùi”¶=±ÚgI`«ƒƒ–¨Y39Üÿ`0†V´INN¶rÂ ∑ºÔQÕ_OrrK≈äGkvv6Øø˛:}˚ˆ}Ã£˚Ô!fâáå‘Çk¬Ñ	\Ωzï8¥“∫SÕ™ªâ7êD‹∫uÎÿªwØ\ÃW≤.(ïJÊÕõ«?¸¿˛˝˚	

í„q,Ì€∑ßEãº˝ˆ€DGGÀ/ä	kˇ˛˝\æ|ô1c∆I˙„Ê ï+/^º»äÁl(Ê“ëbˆ˛˙Î/<(ó∞pww'((à	&P£FçB≥¢Û[æÓı°°T*È—£çF¥Z-···Ñáá„ÎÎ{Àb„~ˆÂ^
¥F£ë?ˇ¸ì»»H‚‚‚∏p·ÈÈÈ/^ggg ï+áßß'ıÎ◊ßNù:4i“ƒ¡¢ˆ H÷∑SßN1x`ÇÉÉÈ⁄µ+”ßOø•ê≥Ω•.ˇwlüÏ§R©:t(nnnıÃEC˛˘t˚ˆÌ4Œú9CıÍ’©Q£?˛¯#ó/_v(±Qÿ>ûe
äÒÜì*Æ]ª∆©Sß;v,WØ^≈d2Qπreºæ!‰2ÅÅÅƒƒƒÎØø2{ˆl¿1`
Ôàê¬êƒô¡``˚ˆÌ¸Ûœ?ú8qÇÃÃLX∑nùÉNzÔ¸¡Ë—£ô?>¡¡¡ËızT*zΩû>}˙`µZŸ∫u+:ù??ø"ªÒ_~˘%˛˛˛r2¿”na∞è´Ç;Øö˙•˝‰†K≈as¡ôÕf8}˙4Gé·‹πsÚwÂÂÂEˇ˛˝i◊Æù,‹Ï{Ë4FÈ),‡ø∞œÛÓªÔÚ˚Ôøc4Òˆˆ¶_ø~ºˇ˛˚∑t≥∞_à‹Î√œb±8¨ˆ•dçï+WA||<ÈÈÈ899Q™T)<<<ıı•}˚ˆ4m⁄î
*»-âÓ5‚n±øèÁÃô√˚ÔøOœû=©[∑.µj’b“§I4h–‡ñådyÀﬂªS≤VØ_øû	&<—ôß˚≈ÄR©d”¶MÙÔﬂü}˚ˆÒÕ7ﬂ‡ÈÈ…wﬂ}«‡¡ÉÈ‘©999º¬Y¨pkC>IH◊^˛:{“}~Â π; À/øL˜Ó›yı’WÈ–°çFŒ‰ój⁄	O˜Sı)¿l6Û¸Ûœ”ºys^|ÒE˘¡{7%M&á‚·√ú8qùN«’´W…  ¢d…í®’jö6m ‹πs>|¯-Õ∂U*;wÓdË–°|ÛÕ7ÙÌ€WÆ∆7ª,HqLf≥YŒ"-*˜Á°Cá8yÚ§‹vÊYx(U®PAÆkv'ÏKƒ‰∑JI√d2…ı¸".--çƒƒDπÆd!P©T1p‡@ö4i"◊s≥ß 7fA¢ÊNVaI‰ﬁˇ}6m⁄ÑJ•¢{˜ÓºÛŒ;T™TIû‰≤‚⁄«[Ù≥/øc?ú:uä‰‰d~ˇ˝wNü>Õï+W»ŒŒF£—Pπre¬¬¬Ë“•ÓÓÓroÃÇ\Õ{∑n`` ßOüfŸ≤eÃö5ã=z†V´)_æ<uÍ‘°Y≥fÑÑÑ‡ÌÌÌpHÇP°P–ßO<==yÔΩ˜ûâ˚ÂIB:ﬂF£ùN'wPÊ»ë#8≠VÀÅ–Îı|Ù—G¸ı◊_xyyQ£F~˘Â9f—jµﬁRÁYG•Rq‡¿fÃò¡ﬁΩ{)Q¢˝˚˜Á´ØæB•Rœµk◊;v, 5j‘‡¿ÅOUâ©ßïb6õÕˆ∏Ò,ÛÈßüÚ”O?ëññ&ØLÉC˝(É¡¿…ì'âãã„‡¡É$$$†◊Îπ~˝∫,ÿ*T®@`` Õö5£uÎ÷r[ó.]0>|ÿ¡„··A||<ıÎ◊Áá~†gœûrúíZ≠f˜Ó›ÑÜÜ2wÓ\û{Ó9˘ÅRî÷ãq„∆±q„F8 ü˚IÍ∏èz5õÕT¨Xë›ªwÀ•:ÓƒÌ>≥$ÇÙz=±±±ú:uäòòÙz=YYY899°—hÛÛ£AÉò†`/Û˚^æS˚’∑dπ:t(˝ıÂ ï„Ûœ?ó{€[(
€~la±ü:ùéç7≤q„FÂ}˚˘˘B√ÜÈ‘©”Cµ∞5F£ë9sÊ»ƒÀó/ìììCÒ‚≈Q*ï/^úb≈äëõõKâ%0õÕ\∏pÅﬂˇù∞∞∞˚∫∂∑G∫æ7nL˘ÚÂY∫t)jµö ï+s˙Ùi 9FN≤<≠Y≥Ü3fp‚ƒ	úúú®_ø>Ωzı¢Oü>Vm∏sØﬁ˚/@tt4c∆åaÛÊÕ˜eÂæ_vÔﬁÕØø˛JDDÈÈÈ¯¯¯⁄kØ……kˆEà´U´Fˇ˛˝˘‡É®WØıÍ’cŸ≤e}åˇuÑEÓ!ÛÕ7ﬂ∞tÈRπvZtt4………Ïÿ±C∂:H≠y\]]©R•
Mö4°~˝˙ Ò<í ÉÉ‘ﬂx„<»µk◊HJJí≠í9ªyÛÊÙË—É¿¿@&OûL||<ôôô$''ìòò»∞a√Ë◊ØüCy(öá√·√á˘˚ÔøÈ–°√Sü•jèd9ãåå$88¯é€Á?óIII$%%qÒ‚EL&{˜Ó≈jµíùùç≥≥3eÀñ•ZµjÙÌ€4çCk4©H≠˝x‡÷x∑ª¡ﬁ’$eNJ˚HHH`≈äLõ6ç
*∞fÕBCCÂ˜›Oº£4viA±oﬂ>fÃòAll,F£QnS◊øö4iB``‡C{@>
‘j5oø˝6‡Xœd2ëùùMvv6WØ^%##ÉFçJÉÓ®áà¡`‡¬Ö¨_ø∏«l0h‘®'N‰≈_ƒb±Cô2eËŸ≥'={ˆƒl6Û◊_Ò›wﬂÒŸgü1q‚DºΩΩi‘®˝˚˜ßn›∫∑xû∂k÷`0êíí¬∫uÎÿ≥gQQQ‰ÂÂQ≠Z5Ü∆®Q£‰˚ÿ`0»NÍ9ùîîDvv6pÛŸ˜⁄kØ9<ª!‰F£ëêê5jDHHk◊Æe¬Ñ	/^WWW ó/O˘ÚÂ>|8uÍ‘°vÌ⁄rÚAA±J“çêîîÑV´%==ùeÀña0‰Œ	ˆ¯ÜrÂ :ƒé;®\π≤‹ÊËˇ˚|...(ï É»ã≈BıÍ’âççe˜Ó›∑›ˆiõËîJ%•Jï‚ÏŸ≥ØIòÕft:WÆ\!##É∏∏8RRR∏p·ó/_&77óí%KRæ|y<==È”ßèlq≠T©R°¢Wz8‹Œ¬uøH¢A™wv‡¿zıÍEnn.Kñ,°yÛÊh4t:ùÉõ‰n„%k·—£G˘˝˜ﬂ9~¸8zΩ™U´∆õoæ…+ØºrK—€¬j«=çÿg‘î|≤rÂJ.]∫ƒî)Sûj!§#ùOõÕÜF£¡h4‚ÁÁ'óÃxÛÕ7ô<y2É‚Ω˜ﬁìÔg©´I”¶MiŸ≤•ºøO>˘Ñ#Gé∞n›:á{ªwÔﬁº˛˙ÎÚv˜‚y∏◊X“¡d2Ò˚Ôø≥j’*._æLZZ6õç2e –¢EÜNœû=ﬁ#πî•g“À/øÃ∆çiﬁº9ç5¢Mõ6Ú3ÈYZƒ?…!WÑHïJ≈¨Y≥0çlﬁºô¥¥4&NúH€∂mokfñnJ˚b•“Õ≠’j1ôL4m⁄î#F8º_zËÆ_øŒÎØøŒÙÈ”Âø€[_é9¬⁄µkô:u™¸¿,JAwˆÏY\\\älOuÎ÷eÕö56åÖb2ô∏zı*ÈÈÈX,ä+Ü≥≥≥\8V´’“Ω{wÍ‘©s◊E<•kÈa'á(
<<<‰ÏÍ.]∫∞}˚v:wÓÃÜ‚€Ó'÷%99ôü~˙â;vêûûNÖ
®]ª6ü~˙)6îK‰è’{Vå}¸©TÄX°P˙ÎØ3bƒŸÚÛ¨ÿ'777ä/.[’Õf3•Kóf‡¿ÅÑÖÖÒÓªÔÚ√?Ì∑ﬂ“©S'∆çWh˜ÑO>˘ì…ÑV´Âÿ±cDGG≥|˘r&Nú»ÎØø~_BÎQ∆FÆ]ªñ1c∆–¨Y3zˆÏIÉ		q˝ë\∏R-TçFCrr2ØΩˆ€∂m£BÖ
rLh«éÂ˜n€∂ÌûJ˘Ó!‰äiÇ÷ÎıLô2Öô3g¢T*Y¥h6õçﬂ~˚≠–ZZjµ˙ñ‡Á¥¥4L&«é#**ä§§$9{ˆ,’´Wg˙ÙÈ∑∏Ÿ$≥∑V´Ω%u^˙ª—hd¯·,\∏ùNÁ–`Y2óﬂ/“$tÍ‘©g÷ú>j‘(û˛yæ¯‚Jï*Ö´´+6ƒ€€???*U™tWü›ﬁm∑ñyÿ	"R‡∑¡`¿««///._æÃ¸˘Û8p†|≠ﬁÀı }Ü_~˘ÖEãqˆÏY ó/Ohh(„∆çs»Bï(®‰ ≥àdôîí\§˚¥c«é∏∫∫2uÍT·R}(ïJ‘j5Î◊ØßV≠Zr÷˜ÚÂÀiŸ≤%SßNÂÕ7ﬂ§m€∂ƒ∆∆“∂m[ ó/œ/º¿_|!Ô'øï<$$ÑêêÜB’™UÔX¥0Ï‘{!ÄV´e«é∑‹ì“¯Ìª¸Ãü?ü≈ãìííBŸ≤eÒˆˆÊè?˛¿◊◊óù;w¢R©®Zµ*nnnÏŸ≥GNÜ<\Ñê{@

8m◊Æ-[∂§{˜ÓX,æ˝ˆ[∆åS`„yÈF5ú={ñc«éqË–!bccπzı*7n‹†X±b∏ªª„ÔÔO◊Æ]È›ª7ªwÔñkôI7æ$¥Z-µk◊fœû=∑åW:ûßß'ÆÆÆlŸ≤Ö°Cá ˚zê‘z˚â 55ïR•J›Û>û:tË@Ÿ≤e			aÿ∞aÚÎR8Z[
–œ_√Ìqd)*ïJ|}}qwwßd…ír|ã^ØG≠VﬂıÉDù`ﬂæ} ¥lŸíÖ‚„„„ Jˇñ∑¬ê
˛¸˝˝ô;w.‡¬Öœî+˘I'((à={ˆ˛˚Ôc6õÈ“•ﬂ}˜ùC	ùÍ’´≥q„F >˙Ë#VØ^Õ‹πs—h4¥n›ön›∫—¥iS˘;ìÊÕ_~˘ÂÔ∆„ºŒÌ-˚˘À›¿Õvp———8ºœb±êúúÃ¨Y≥‰n@%Kñ§Cá2wwwﬁ|ÛM˘Û«ƒƒ‡‚‚"[Ÿ/\∏@”¶M·'˝Ô"Ñ\`oz˛Èßü–Îı:tïJ≈®Q£®^Ω∫o!≈ø≠\πí√á≈•Kó‰¯§í%KR∂lYÇÉÉ©Y≥&={ˆƒ√√√¡¬c49r‰[∂l°{˜Óé)88òÕõ7ﬂÚ∫4°∏ππÃÇ1bÑ‹ \äôªüâ«ætFJJ
yyy˜ºèßÖ^Ωz1a¬5jD©R•ÙÙî≠™íEÀæ√ÜDA´Ó¸‚˛aY‰Ï˜Kì&MÛÛìÿΩ

≥ŸLXXGé°Jï*|Ò≈<˜‹s∑îE˘Øâ∂Çêr“µ1vÏX>˙Ë#‹‹‹‰∞Qv‰·”∫ukæ˚Ó;9„‘ﬂﬂü+WÆ8∏µÌÔ◊…ì'3yÚd"##Yªv-[∑neÌ⁄µX,9A≠m€∂ÑÖÖa0®ZµÍ}/Xng…ÀÀÀs(kt'§≈y˛◊‡ÊB≤AÉî.]öJï*a6õ9{ˆ,€∂mc˜Ó›\∏pAN“k‹∏1Øæ˙™Kè’j≈f≥…≈ÌOú8A„∆çÂÎ€h4“®Q£ª˛‹Ç˚Gπ""&&ÜÃÃL~˙È'~ˇ˝wYxÕõ7è˛˝˚Û∆op¯a“““‰•Z≠¶fÕö<˜‹s¥h—Ç:uÍ‹“*I"ˇ=|¯pæˇ˛{⁄¥iS‡C∑SßN|Ù—G∑ƒYŸh>|8Éñ€ÖI&t£sg⁄∂mÀ/ø¸Bhh(NNN(ïJ\]]—h4T´Vç:uÍP•J⁄µkW‡πÃ_:ƒ˛5˚X…¸‚Ó~…ﬂ!A:F√Üi’™[∑nu8∂dEº=zÙê‹Øø˛Jõ6mn),¯7”\æææ‘¨Y∆éKrr2˛˛˛Bƒ="∫uÎ∆ÁüNLLûûûh4îJ%Öˆ
µX,0vÏXπV⁄˙ıÎŸªw/;vÏ‡è?˛`‰»ë§ßß£V´Yªv-...î-[ñ ï+£’jÂ˚Ÿ>l°0ë'›´“¸êùùMÒ‚≈Ô)É[⁄Œæ^£$^àçç≈`0Pø~}ÚÚÚ‰“U5k÷‰•ó^¢gœûx{{Àô©R™øø?111Ú‹g0∏tÈ}˚ˆ≈l6≥uÎVúùùC!‰ÈF	§vÌ⁄8;;≥~˝zæ¸ÚKt:
ÖÇ„«èS±bE:tË ïjÅŸ#•tKìΩJ•íWˆ7Æ’j%44î¸ëıÎ◊”Ø_ø[ˆÂÔÔOâ%X¥hØºÚJÅco◊Æ6õçµk◊.…:((ú˘ÛÁ”¢E.\»ÂÀó9sÊ'Oû‰‘©S;våÌ€∑s„∆ÚÚÚd—^æ|y¸¸¸®WØ-[∂$((pÃhî(Í∫Ω T*ïÏﬂø_v˝˛˚ÔrmCΩ^/Ø∞r“~Ü Í’´	`’™U¥i”¶H«˚,aﬂmEJ*0` iii\πrEv≥Êèô<<|}})Y≤$+WÆd‹∏q(
ºΩΩŸøˇ]5}óÓÉ~˝˙—Ø_?¨V´,fŒü?œﬁΩ{ô?æC'ó‚≈ã„‚‚BÈ“•—h4î/_û∆ç£P((Q¢ƒ-ˇJ•§§cI˝Má—hƒd2q˘ÚeÆ]ª∆ıÎ◊±Z≠¸Ûœ?î.]öååŒû=KFFÜºòwss√ŸŸôAÉQ•J*V¨X`üT£—à^ØóìÉº¯óÊ¨îî≤≤≤‰Îx≈ä¯˚˚+¸#BÃàΩ[5..éV≠Z·ÈÈIì&Mh‘®—-ÇM≤Üç∆[⁄=IÑwÉNß„ˇ˚+V¨†_ø~ñ6i\>>>Ïÿ±Cr˘≠s
ÖÇ
*∞uÎV¬√√e∑éÙØ∏	'""ÇO?˝≠VãV´%88ò_|ÒñÌííí8tËëëëƒƒƒ¡é;ò8q"7n‹¿√√*WÆL`` 5j‘ ((®¿öTw√Ìæ7Èı»»H⁄¥iC∑n›X∑n———x{{À´qiªÇ≤f∑m€∆´Øæ
¿ÚÂÀ	÷€; 	4)ªqÕö5¨^Ωöòò˜©SßQQQrÕö5kíîîTËˆˆ…hˆHãÈ^Æ^Ω:ù;wñMzΩì…Djj*III$''ìúúÃ±c«8zÙ(ôôôr-—í%K‚ÍÍ*äŒÀÀ£xÒ‚¿Õæ¶1112D~nZÍÆ]ªFVVñº˚ò◊2e ‡ÂÂEhh(ÅÅÅT©R≈·9cüîx§V´B{‹‹‹∞X,$&&R¢D	,WÆ\ë≠ãÖ≥gœÚ¬/àE…#BúÂ"@äÅÍ◊Ø«èÁΩ˜ﬁ˛]%$ŒÏ≠n˜*ò
Z≠ñû={2oﬁ<-ZDÔﬁΩÂõH2…∑lŸí5k÷8ºWäìDBªvÌ Lÿ˜Ä|!ß—h‰πgIJ¿YYY¥i”Ê°ïˇsjµZz˜ÓMÔﬁΩ‹ﬂ¨Y≥¯Áü8wÓ[∂laŸ≤edff ﬂë∑∑7çÜ*U™»Mﬂ∆éAÃ∑‡πÁû£m€∂,_æ\vŸ˜†¥ˇæÏ„∂¬¬¬8p‡ /º,ê:Ï«Q–9¯Øëˇz∑JÌÙfŒúâáááŒPòT„”O?ïØ›~˝˙…ãIò›M1[Èª.»≤7ÁBçFÉøøˇ]Y˚ÏâééñˇoµZ>|8Ôøˇæ¸Z@@Ä\ÆÍ~äÇ€è˚^∂˜ 22R>ﬁü˛Iï*U‰ﬂØ^Ω ‡¡ÉÔy,Ç˚CÃÄ˝CT≠V3sÊL|}}y˚Ì∑˘√ekõ0
ÖﬂÏ˜Ç˝ç7tËPæ˚Ó;Ü&O:í¸ùwﬁaŒú9∑MggÒ‚≈rŸë¢≤î*UäÎ◊Øˇä«g°ÃÑR©‰◊_≈««ßH ´ÑááÛ⁄kØ›rNvÓ‹…æ}˚∏tÈ			lŸ≤ÖﬂˇùÏÏll6jµörÂ ·ÎÎK`` ç5í„QÏ;A‰GqÎ÷≠s(üêEnˇÔÍ’´;v,eÀñ%""åF£C±œß˘;-J,&ìâsÁŒqÓ‹9"""∏q„ªvÌ"!!T*πππ®’jt:ùÉE^Ë2d|			¯˘˘…E„„„—jµrôò«YF…>ìTrgJØ¸sµTZ æ˚À√¨„ñëëÅ≥≥3J•í§§$™U´ÜR©d√Üî,YRƒ >BƒÃQƒ¨^ΩöNù:—∑o_*T® W∑∂O ( á^XX.dÕö54oﬁ\6ÉKbÆX±brúú}·Uiíkl÷¨Y|¸Ò«rx0KöáááÏ.x÷‹G´V≠¢i”¶r,ŸÉê_@I¥n›ö:»≥Ø˘œë#G8{ˆ,ÒÒÒ¸Ûœ?Ãû=[é√Q´’î-[???|||Ëÿ±#ï+W¶V≠Z‘Ø_üuÎ÷…ãã;âáó_~ô]ªv1tËPπ∏¥˝µløH¯/äπï+Wr‡ANü>Mjj™\4U°PP∂lYÆ\π¬•Kóprr¢rÂ î.]öÔøˇû^xÅW^y777åF£xË=&Jó.Õ¸¡ÿ±cqss√√√Éøˇ˛233üàxaiﬁñ,o‡8ß⁄[Â<õññF…í%∏p·D°P∞j’*|||äd~‹≈Ôºâ‡^h‹∏1˝˚˜ß_ø~¯˙˙b4º¡Úõ„Ôã≈BÔﬁΩô3gé‹¶ÀæKÉ∑∑76lppïÂÉÿ¥iì¸{Q†V´………q»º,ÍV`èã#F∞b≈
FèÌ∫ˇhˇÛ HA∆&ìI.ÎÎÎKá?~<ﬂ~˚-[∂l!..éKó.Àoø˝Fü>}–h4ƒ≈≈±vÌZ˙ıÎGµj’h›∫5[∂l¡b±8X”ÏÀH÷”ÖR±bENù:≈¡Éô>}:ÒÒÒ%$ûdK“É~F£ë›ªwÛı◊_3x`ZµjEÕö5ÒÚÚ¢\πrå7é]ªva≥Ÿh›∫5oΩızΩû‡ÏÏå≈b·’W_≈`0∞{˜n.^ºHtt45k÷dË–°ÛYπOû5jƒü˛)á2TÆ\ô”ßO7Øi1˙∏∞Nÿá?<	ã¶Àó/„ÍÍä^Ø«l6åR©‰ƒâ<˜‹sè{xˇ)û‹¯)@Z)Ÿ?»t:sÊÃ°zıÍÙË—Éµk◊èøøÅÔP¨V+Ω{˜f…í%Ï‹πìFça±X–jµçFzˆÏ…Ãô3o©af'◊Ω{w>¯‡yL˘É_ÔgúU´Vn>•lß'˘Å∑X,Fé…‚≈ãY¥hßOüf–†A8PviÿóÓ∞è]ªW
ru€ãi≈+≈D*
Z∂lÈPÑS•RQπrez˜ÓÕ™U´∂ïÑõ46Èµ^Ωz±}˚v¬√√8p AAAX,ˇ∂Ë ü0Û$<T
"‹ß˝k˘K˚HEzwÏÿADDÒÒÒ\æ|ôKó.°TﬁÏØ[∂lY|||Ë–°ç7&((H˛é§ÔIß”—∂m["""h“§	€∑oó«†V´˘Í´ØxÁùwÿ∑o-Z¥‡£è>íœk˛b≠œ¬˝Ú§Ê∞ ´SßéC˝Õ«-‰$,ŸŸŸ‰ÊÊ ø?n/GVVÓÓÓDFFR™T)<<<àèè«d2ÒÚÀ/?÷±˝◊π"F´’b6õ9uÍªvÌ‚£è>*PƒR∆’Ûœ?œè?˛àZ≠vX—KΩu:]ÅÌ¡¨V+]ªv%//O∂ ÓÓÓ¿Õ™·œíH€ºy3J•ízıÍÒÛœ?ÀBX•R›"t÷Ÿ^îH%N‘j5nnnriÄ ï+”†Añ.]zK_{7ª…dbÛÊÕ¯˘˘qÚ‰I˛˛˚oæ˚Ó;BBB‰TÖùè'ïÇjIb{ÁŒù|˛˘ÁÑÖÖBù:uh⁄¥)SßNÂü˛°d…íÑÜÜr‡ANú8¡Ò„«Ÿ≥g.dÙË—¥j’J^,)
¢££i÷¨µj’Bß”1m⁄4∂oﬂ.ˇ“Oè=ˆˆfÍ‘©¥oﬂûÅﬁRH˙I>ßœù;w&77ó›ªw7CMÆ]ª&ˇ=õ√GâΩ%Ÿl6sÌ⁄5˘˙}\æπππ899qÏÿ19>N™°™’jÖ[ı"ñ|È¡q˘Úe ó/èóóóúåP‘qí5°ˇ˛lÿ∞Åï+W“∑o_,jµö†† ‹››˘ˆ€oô6möº⁄ó‡*ï
≠Vãóó3fÃ†k◊ÆÖ>¥Ô©Ïä˝§¯¥cﬂùA´’Ú˙ÎØ3{ˆl.^ºH€∂m4hKó.},„íP*ï$$$‡„„C’™UÒııï≠Bˆnn¯7·∆l6ŒˆÌ€yÎ≠∑‰~íf≥˘ñ…∏†æ∞O2ÉÅø˛˙ã]ªvëòòHbb"+Vå2e ‡ÌÌM€∂mi‹∏1°°°rÇ“Ì>ü˝˝Î··A«é9zÙ(’™U£tÈ“ÿl6~˛˘g>˙Ë#Jï*≈Ò„«ÂG´’ í%Khﬁº9+WÆd¿ÄÏ‹πì:ö|Ú¥úÎßi±≥j’*ö7oNï*UP($%%Qºxq9aÎqê_‹ó(Q'''πæË„∆……	'''Œú9#ªR7oﬁL√ÜÅÇÀ	‚,?dV¨XAü>}8yÚ$”ßOó[aI<ËDmµZ—jµ$%%—•Kñ,YBﬂæ}ˆ ¶Mõò1cF°"≠k◊Æ¨X±¢HD¸;	IΩ;ü§áº—h‰„è?Ê˜ﬂßKó.Ï⁄µãq„∆—¢EfÕöE@@ :ùüá>&{W©Ÿl¶R•J‘©S777"""dA&ç›^ú•••…Æÿ≥gœ ¡˜èä¢*|qqqú={ñÙÙt≤≥≥)V¨•Kó∆◊◊óAÉ—Æ];4h /¨§DÉ€çE:gˆÖìáŒˆÌ€ÒˆˆÊ¿ÅÑááS•J÷¨Y#[ ﬂ{Ô=™V≠ ±c«‰Ï«†† :uÍƒ|¿ªÔæÀ®Q£ÿπsß\¸[¥Íz¥‘´Wè„«èc6õ—jµî*UäÿÿX\\\‰⁄lùN«÷≠[âåå$%%Ö.êëë¡ıÎ◊)V¨yyydggìïïEÂ ï…ÕÕE©T‚ÓÓéªª;Z≠ñ˙ıÎ”∂m[áˆ`RXÀ√@™eg0‡¸˘Ûå9ùN'á>¬µ˙ÄH±fÖ†ÜÜÜ2gŒ˛¯„™V≠ K/Ωƒ±c« òˆÂÓ%8[™¶’j1bó/_&>>ﬁ¡z4r‰HÆ\πÇNßìﬂó?†zÿ∞a§••…Æ¢¢@•RëêêP$˚z∞ˇé•è9¬ÅXºx1_˝5¸1`˛¸˘¯˚˚ìúú|W˚,ÏÁ^∆&˝˚‹sœq˝˙uNù:%_“ﬂÌ€Mô2Ö¿¿@4h@BBûûûã…bõ?¨®ÑWA◊∑‘»~õÇ∂ì\£Ì€∑«◊◊ó
*P©R%ñ,YBrr24`⁄¥i?~Ω^œŸ≥gŸæ};„∆ç£fÕö≤õY∫OÓ$(Ìã¡vÔﬁ???Nú8¡ö5k8sÊ;vÏ‡ÚÂÀlŸ≤E>O*ïäŸ≥gSªvmFçÂ–È◊_%55Uésú?>jµ∫–,f¡√£Eã\πrÖîîåF#ÅÅÅ9rÑ≤eÀ>î„çF,€∂m£Gè¯˘˘Qø~}&NúHTTÂÀóßOü>Ãö5ã≠[∑rÍ‘)íííXΩz5-Z¥‡ƒâDFFÚ„è?N˝˙ı1ôLÃü?üÁüûZµj—≥gO¶MõÜ^Ø˚∆⁄?îKó.·ÏÏL˘ÚÂâéé&;;õ÷≠[ÀÌ»Ñ5˘— ,rèÄÓ›ª”∑o_é;∆∏q„Ë‹π3+Vd î)tÏÿQÓ√hµZ⁄û‹“ÉAzOø~˝3f6l --≠VKPP^^^|¡,X∞@x∑xiµZ‘j5≥fÕ‚˝˜ﬂó≠<r#ñ*Uä§§§g“=dÔñ?~<c«é•_ø~tÌ⁄çF√ò1cHIIaÚ‰…ƒ««?4Àú4YJ«„∆ç#..É¡ "È‹KÆUïJEÛÊÕ9wÓã/&,,LnÕïˇ{ ˇ{Q
È⁄5≤ ﬁ:f2ô∞X,ú9sÜ]ªvÕ?ˇ¸#L.Q¢ÅÅÅÙÏŸì––PBCC∆YPˆß}')û±†k3ˇ˚„«èg›∫uî/_ûﬂ~˚çæ}˚ ôº6l†Kó.~Œa√Ü1vÏXŸe*=Dó,Y¬À/øÃ|¿G}ƒıÎ◊…ŒŒ∆ÕÕç∑ﬁz‡âp°=Î<ˇ¸Ûå?ûã/R¶LÍ◊Øœ¶MõJIòòò&Lò¿°Cápqq°V≠Z¸√Âåé9BDDÎ◊Ø@Ø◊ìëë¡ÂÀóâââ!<<úJï*Q≤dI*WÆLÁŒù	ê≈S||º£πxÒb ó/œî)S‰æœR|]Q$*]∏pÅ≤eÀ¢V´˘˛˚ÔÂÓ ¬%B»1]∏RQ‡Í’´≥k◊.åF#£Fç‚µ◊^£yÛÊ¨X±B~∏‹œÉR≤ Y≠V^yÂ÷Ø_Ott¥úm®T*È›ª7≥gœæÂÊ≤?^≠Zµÿ∂mõCÂ°tÈ“Ët∫g˙f6º˝ˆ€¨\πíÆ]ª≤}˚vBBBÿæ};:t ))âEã…€?,KK’™Uyˇ˝˜ŸªwØlëµ/C»≈:_}ıUj‘®¡ÖP©TrÕ¡ª)ÿ\îﬂ•d	S´’ÚıØ◊ÎY∑n€∂m#))	ùNG^^ûœ6h– ⁄∂mKç5Ñß≈b)–%\–¢Ëv∞¸÷äîî&Möƒ∆çQ´’Lü>ùa√Ü7´Ó˚˘˘a±X‰æ∫wB˙NÃf3uÍ‘°|˘ÚÏﬁΩæ˘Êö5k∆¡Éi÷¨AAA¢æ‹#@≠V„ÌÌÕºyÛX≤d	!!!,X∞†HŒΩ4ﬂÍız˙˜ÔOdd$¡¡¡¨Y≥Ü&Mö∞fÕñ.] {ÔΩ«•Kó‰~¨
ÖÇR•JQÆ\99&ÆLô2T≠Zì…Ddd$f≥ôÎ◊ØÀF '''Jî(Åóó]ªvÂ«D©TÚ˘Áü3tËPúùù˘¯„è	/≤â‰‰dö6mäJ•b˚ˆÌ4h–‡ñÖ£‡`<999wµ]VVñ-55’ˆ˜ﬂ€V¨Xa˚˘Áüm¸±Õ’’’Vºxq€;Ôº#Ôœ˛Án…  ≤eddÿ≤≤≤lﬂ|ÛçÌïW^±Ÿl6˘5õÕfÛ∞Õô3ß¿„‰‰‰ÿÊÃôcÛÙÙîﬂw/«∑GzﬂÛœ?oÎ⁄µ´√Î˜ªœ'˚sóööj+WÆúÌ«¥]ºxQﬁ¶gœû∂û={⁄Æ^ΩZ‡˚ÓÂ“OVVñ-''«ñëëaKLL¥Ÿl6€W_}esqq±Ì€∑œf≥˝{=ÿ∑wÔﬁ6µZm[∫t©Õf≥ŸNû<Èpå«Abb¢mŒú9∂ÁüﬁV•J[Ÿ≤em+V¥5lÿ–6p‡@€∆ç>Øt=KüØ∞iõ¸üMzÕÈ5˚øù9s∆ˆ„è?⁄*V¨h´V≠ö|ÆÚ#çk‰»ë6≠V+W˙±Ÿl∂6m⁄ÿ∫uÎÊ0˚Òªªª€æ˚Ó;õßßß-++À÷®Q#€ä+“ÿ#}Gü}ˆô-  ¿f≥›ú˚∫uÎfÎ⁄µ´m—¢E|å∑ﬁzÀV¶L€+ØºbªxÒ¢m÷¨Y∂¶Mõ⁄ î)cÛııµ5m⁄‘6r‰H€æ}˚l©©©˜t/fdd»ü„‰…ì∂Ôæ˚ŒjÛııµπªª€ºººlÉ≤%&&⁄&Möd´X±¢≠Fç∂ã/⁄Æ^ΩÍpùﬁ999∂Ò„«€™V≠j€∑oü-##√V±bEáÎˆ~ˆ+∏?äŸl6€„ìO+ˆ.J)êŸh4r˙ÙivÔﬁÕô3g‰ ⁄7n»5Ä
•Kó¶lŸ≤≤5Ìƒâî*UäÛÁœ?Pﬂ §§$¥Z-;vdÚ‰…4h–@_˚ˆÌπtÈíC¡KÈF£≥ŸLPPÀñ-£yÛÊ˜mzóV°√Ü„ƒâ>|¯ñ„=+ÿ¶â'Ú√?êûû.˚*ïJzıÍ¿Øø˛Í‡vêﬁw7˚«∏FïJ%Î9rÑNù:±p·BZ∑n-«≥ôÕfπTHH•Jï"..ÆH?ˇù»oÅT*ï¨\πíEãœï+W(Y≤$ﬁﬁﬁ4k÷å=z–§Iìﬂ+a_›>ˇæ°ÃZ˚zˆñ<{ó3¿ƒâ˘˙ÎØ1õÕTÆ\ô––P<==Q´’T≠ZïÍ’´;¥NíMj◊ÆçááGènZ$ƒÓ›ªâééñø˚c+ïJÜ ÅÛÛ###É7n0a¬¬¬¬ÓÒlÓ),%::öÁû{éCá°’jy˚Ì∑˘Ûœ?˘‡É8p‡=Ì”ﬁÎQ≠Z5
ü˛9ábﬁºy8;;”¥iSæ˘Ê‘juëY]•Î[öKñ,aÈ“•Ët:™V≠ ?¸Ï]w\S◊˚~Äê a{´(ä‡∂*E≠‚D≈Ö´à÷U‘:j›’j’jÒK’j≠≥U±bXQ\U¨(7(PAA%JPÇ	˛˛‡wOà÷]ûœ'1π˜‹sŒ=„=Ôx^,]∫«è«ÿ±c1wÓ‹Âì’ˆ¨O>˘ôôô∏p·:Ñœ?ˇWØ^}´)Õ˛´®5≠˛p˛IYYYò5kíììëììÉíí¡ŸŸù:uÇÉÉ‡ÊÊ777sG¨P(
###Ãö5_|Ò≈K	<â|>Õõ7«∫uÎ–¥iSÊ0>e ÙÏŸIIIh÷¨ôFxxII	$	,--±m€6¥i”Üø,ÏÌÌëòò¯“˜ø‡¢@U*fÃòÅCá°m€∂8vÏ3yƒ∆∆¢WØ^ààà`¬\≈Ë—7~D"—©S',X∞ °°°ï“gMú8k÷¨Aø~˝Xä≠7	uüùì'O"77pqqAhh("##+s˛qúâ≥¢`ˆºˇWW‡.9Ó;ëHïJÖÒ„«cÛÊÕ1bäääË—#dee!%%Oü>EAAJKK¡„ÒX;Í÷≠ãÅ"==={ˆÑùù!óÀammçÑÑH$6‘Î)óÀÒÕ7ﬂ†AÉåÿ;??ˇµF÷‚p„Œ««˙˙˙8|¯0¬√√—Æ];ƒƒƒºpy‹ÿMNNFˇ˛˝—µkWH•RÑááC,„ªÔæCﬂæ}5∆;«”»ÂzΩq„Œú9ÉÛÁœ„÷≠[(((¿£Gè†P(PVV>ücccA*ï¬€€6D˝˙ı·ÊÊ∆⁄%â0|¯pLú82ôË‘©Í’´áÂÀóc“§I∏}˚6s˝xQz¨˚˜Ô3ˇ∏ﬂ~˚ˆˆˆµB‹[B≠FÓëìì©TäƒƒD¸Ù”O8uÍ
¨¨¨–ºys4oﬁ6Ñèèè÷˚ü∑yØ_øü˛9:uÍÑﬂˇ˝•Î…˘d,Y≤ıÍ’cZ9___òõõ3äN;¡•Ä?~<>å‘‘T≠âôkÆç111ò1c“““*	.íV–Ã?jnné`¯·(,,d¥⁄4sœCUZ'.H¿””Cá≈ä+4N÷*ï
m⁄¥¡ıÎ◊±gœ¥j’ÍïkDµi∏ÄÚ±óííÇ5k÷ 11•••ã≈¯Ë£è–≥gO¥n›"ëH√M]hSœåQ±›/[G@3@%//è?Ü´´+ñ.]ä¸:::2dÊœüØ5ü,Wß¬¬Bú8q7oﬁƒ_˝Öã/B.óC__¸1Fé…Æııı≠‰ˇZ1ÇòœÁ„¿Å6l"""ı◊_#..¡¡¡/’ÊZº:wÓÖBÅ£GèB•R¡¬¬+WÆ|aç‹/ø¸Ç»»HÙÏŸá¬≥gœ∞lŸ2ÙË—<2ôå	ZrπÒÒÒ8tËŒü?èá¢¨¨B°VVVpwwáóóñ200Ä©©)Ó›ªáÎ◊Ø≥œ£Gè@D044Ñçç⁄∂mãé;¢U´V¨^ú’•wÔﬁHIIAxx8ˆÌ€[[[>|òÕ¡öc*ï
>>>h›∫5÷Æ]ÙÎ◊≥fÕ˙‡÷ˆ˜o’∞˚£*˚˛∞a√»ﬁﬁû$	µoﬂ^√'J›∑Aõo”Û>‹}πππ‰ÏÏLıÎ◊°:sepıâéé¶πsÁíR©§¸¸|R*ïîëëAÅÄ˘R©?ø††Ä≤≥≥I$±ˇø∏ÚíììI"ë∞r^∆˜Ô}7f6oﬁLÊÊÊDÙè◊fuüπóÒë„ﬁmvv6YZZRó.]àà4 KHH KKK
–®WUcÓﬂ∂π®®à≤≥≥i÷¨Y@âÑ,--©Mõ6•·ãWÒ_m>kØ˚ü´sjj*%$$êÖÖY[[”‚≈ã5˙I›oN˝SqÆr˜$''”‚≈ã©AÉdnnNù:ub>p‹ı⁄¸Nπ˙Q£Fç®Kó.TßNö;wn•ÎjÒÍ¡Ωø¸¸|äãã#ˆõÖÖ≈˘»)ïJ:zÙ(YZZR˚ˆÌâ«„QÔﬁΩŸoÏyÒÒÒ‘≠[7≤∑∑'j—¢ç;ñé=˙BœSè˘˘˘KÉ¶∫uÎíïïy{{”»ë#ô/mZZÂÊÊ“Æ]ªH$QÎ÷≠…¡¡ÅBBB4|OüÁﬂ¶T*©~˝˙¥rÂJR*ïdnnNßNù™‰\ã7ÉZAÆ
®1Gè•ÊÕõìµµ5hLÓäéÀú©6®K◊Æ]£‰‰dJHH†òòZªv-EEEQTTEGGS\\ëééıÓ›õ∫uÎFCiiilíT‹h*~ö4iBŸŸŸîõõÀ6¢V≠Zë∑∑∑V'z"“ÿÿû7ü'úZYYi∫≤ ßﬁ6???j⁄¥)˚^}<˘˘˘QTT‘K;ëõõ5j‘ààà9HÁÁÁSxx8âD"Zºx±÷˚*¸[¡.**ä»¬¬ÇÏÏÏ(88ò‚‚‚àË¡•™Àã>ÔeÍYÒûÇÇäää"âDB÷÷÷4vÏX"*∫®x {ﬁÅ´™˘ìëëAæææ$
)**ä’•™µ°®®à˝fkkK&L`AG‹∆XÎ8˛Í°>/π9dkkK©©©§T*YU‚’À∏vÌª∆ŒŒé»¬¬Çƒb1%''SZZ{ªvÌ"≤∂∂¶ˆÌ€◊Ëpˇº6T˜YΩz5˘˘˘ëX,¶∂m€≤29¡Œ≈≈Ö¨¨¨»ﬁﬁû&Mö§±Fh{>ßh "
¶ååäéé&6é’Ø≠≈õA≠ ßÜäìgÀñ-‰‚‚B∂∂∂‘Ø_?6ÄπkÛÛÛ+-Œú†v·¬⁄µkÕù;ó@-Z¥ ///rtt$rrr"'''rqq!OOO™[∑.’Ø_üÍ◊ØOç5¢ÄÄ j—¢ôööí´´+—Ñ	(44î∫tÈB;v§a√Ü—˙ıÎY‘êz›8,]∫îBBB*MLCCCZªv≠Ü@»°}˚ˆ‘§IìJeU◊gU}h◊Æ]ïÆ˝–QTTD¶¶¶,JX]cñëëA>>>—≠/RÆØØ/Ÿ€€3MQyî•ªª;πππ±çà∑aq„U[TÁÛﬁWFnn.≠^Ωö	o‘•KJHH`◊V‹˛ÕF•˛¸öj‘˚J=™oÈ“•dnnN÷÷÷4c∆ˆΩ˙¡à{ñ˙ﬂ/Ú·ÓIMM•-[∂êëë±~©Ó†«	‚uÎ÷•-Z0mN-^‘Öonú¯˘˘QDDÂÁÁ”‡¡É…ŸŸô∆éKÒÒÒ˜©∏{õ7oNFFF$â(--ç5jDÛÁœg˜6åÃÃÃ(<<º ≤^µ «·Ë—£‰‚‚B<èNù:≈æü?>Ò˘|ã≈$â4ÊqUHNN¶¡ÉS`` ïGeáÑÑQeÌ-ﬁjπ
(**¢òòíJ•$ëHhÏÿ±l≥‰6ëåås!wœ∞a√(  ÄúùùŸ)'  Ä:uÍD···4˛|⁄ºy3=zîùàjwwwrqq—¯.55ïÊœüO˝˙ı£‡‡`
§.]∫Pdd$mﬁºô.\∏@îööJ-Z¥`˜qìk¬Ñ	dbb¬Í¡µß††Ä÷Æ]K∂∂∂lCÆœ[HºΩΩi·¬ÖïÆˇê°~˙655’j≤X∏p!ÖÖÖΩpŸ°°°dii…N∆¥yÛf
ÖÂeddT+¿’Tê„,111‘ºys≤≤≤"kkkÍÿ±#]∏pA„Æ~œã>5Özùk
•RI———dmmMÊÊÊLÄ#*üC⁄Íˇ≤m—&–ÂÁÁìÉÉ9::j¥£™6ë≥≥36ålllû[øZº<‘ﬂ7/√√√©EãTTTD;v§¯¯xö?>ÖÑÑP«éi˝˙ıÏZnN+ïJZ∫t)ÈÈÈëââ	%$$0≠9∑ˆÕò1É P´V≠àà^ŸAß∫{+Rã4n‹òÍ◊ØOfffÃÃL√Ü£é; Úıı≠ÚπßNù¢ﬁΩ{Sã-h¬Ñ	L trr¢òòçq˝_XÁﬂ%‘
rjHMM%///≤∂∂¶»»H∂àrfŒ<ITÓá4zÙh
 kkkíH$‘®Q#
ßÕõ7øíX}ÅëJ•ÃTWPP@iii◊^ªvçbbbhÓ‹πA!!!‘©S'
df6nrqÇi£Fç»≈≈ÖiSSSô÷≈¬¬Ç‚„„k‰+Q›ßi”¶ZO†2‘“&MöP”¶MôP•æÿq¶éÁıGFFÂÁÁ”¸˘Û…ÿÿò.\∏¿ﬁY€∂m…ÿÿXÉêCu\EN≥™Í1lÿ0rpp SSSj’™”ÆV’Êóx^‘7V"¢Iì&ë••%hp/Çómó˙ÜñõõKÕõ7'±X¸\Ìt~~>mﬁºôlmm)$$Ñ5jD˘˘˘÷ÄZºh{_'Nú gggäçç’‡¿$"äãã£ﬁΩ{S˚ˆÌi¬Ñ	áqëHD:::tÍ‘)fbÙıı•»»HR*ïdffF———dooœ¥^U¶^ï ß^∆‚≈ã…ŒŒéäää»««á⁄¥iCDDAAAJDDâÑ –˙ıÎ5ûëööJ†6m⁄– ï+Y›â ˜AuÓ—Zç‹€A≠ ˜ˇË÷≠ôôô11—?™é=Jaaa‰··Aˆˆˆ‰ÎÎK···L‡·‹ó®n"pì],”î)Sÿ$©(ÃΩHôú0gaa¡ú‚’7u///
}ÓÑ|ﬁ"“≠[7Í‘©S•Î?t®∑”‹‹ú6oﬁ\ÈÑ<wÓ\ˆ>üá’´Wüœß£GèRAA]ªvç§R)yyy1iı~Á4qU˘¬UºVΩ^Kó.•˙ıÎìππ9˘¯¯Pdd$”ik„øv˛m?Wƒ‚≈ã…¬¬Ç\]])((à¨¨¨ò	ıe mÃœœßﬁΩ{ì°°!”ÿh”0r$œ≠[∑¶6m⁄êõõ≠_ø˛?1gﬁ4™ãûûû‰ÏÏÃÑ2ıQ˘°922í⁄¥iCì&M¢êê@ÓÓÓDÙœÅ¬««á¶MõF111dkkKDƒ4Z‹uˇv~‘‰˛¢¢"™_ø>Mõ6çà -TPP@m⁄¥°±c«íRYÆ=@B°ê’-<<úZµjE.‘∞⁄pe˜Î◊è7nÃæØ‰ﬁ˛ÛÇ\ll,YZZRù:uò√+«zÕ‹i”¶ëììY[[SÛÊÕ)::ömÄÍ⁄é¡ÛÇ‘'9ß%0` †3fPrrÚKOîä¬ú©©)súÁ~ãåå$WW◊j}z∏Î´˚DFF2çî˙ıˇpÇÒ¬ÖI*ï—?ŒÎJeπ¶Üã:≠©©©dddƒN√3fÃ ccc6lX%&xÓô59Ì´˚êÂÊÊ“»ë#…⁄⁄ö¨¨¨(,,L√Iõ+ªb˚ﬁñ WTTû)E= ..éÑB!ÈËË–Ñ	h˝˙ı‰ÍÍJFFF4wÓ‹ó“íøä6™o®c«é%}}}ñ]C€⁄¡}gccC›∫u#ww˜Wv8¨≈?®j,rôà4◊im˛ôQQQ§££C<è˘sÛÆIì&4˛|Íÿ±#lHHH [[[6oﬂÑ w‚ƒ	∆¿	a666¥k◊ÆJÇg=z4µoﬂûÊŒùÀ,Q⁄⁄?i“$∆ÆPkZ}{¯œ	r‹©º®®à∫tÈB"ëàÖ˙ggg≥}Í‘)


"kkkÚ†Y≥fi¯∆ïüÃ222òÆ:°Ïe¡M†ÏÏlÊXÆßßGÅÅÅÒ“Â™O∏ÇÇ≤≥≥#[[[äãã#•≤\€gaa¡¥’ïS›gÂ ï‰ÌÌ]È§ˆ_ò‰Í¬í••%≈««k,ÜπππLÄÆÅÄFèMJ•í⁄¥i√ﬁ˜ıgΩ®ÄÀÇj‹‹‹hıÍ’Z˝7µΩ≥7%»i{nFF%''Qπ`kaaA »÷÷ñÆ]ªF°°°ÄÙıı…ÀÀã\]]kÙ¨™⁄˝*?k◊Æ%ZΩz5iÊà Snnn‰„„√R¯’‚’B}ﬁïøã––PÍ◊Ø{_’≤WØ^M (""ÇÕeÓ˜Nù:—Ë—£…ÕÕç∂lŸ¬ﬁqù:u(22í=ˇu
rJ•í¬¬¬ò÷åõ€Mö4°~˝˙U‰ààtuuI__øF¡XGè%'''çv´◊´oˇπÃ÷÷÷8{ˆ,zÙËccc‹ºyì±ÆÖB‹∏q···HOOG„∆ç±fÕñ*ßbxooo ’ì¸˛rDu¬–œ>˚ˆˆˆÿπs'úùùaii	4i“6ƒà#‡ÔÔ åAû#¢≠Æ^%%%(,,Dzz:∆çáAÉ¡¡¡°°°())A\\ö4iÚRƒ¿ Pø~}‚◊ˇ¯|>À"¿ÁÛ!ïJŸﬂ‹;277g◊´ßˆ·`nné>}˙`ﬁºy∞±±ÅÉÉÆ\π†|<rƒ¬ÍÈª™Ç:1Ó≤eÀ∞rÂJ»d24h– âââ∞≥≥ÉP(du—÷û7ÖB°ëzà˚ÓÒ„«»œœáT*E~~>îJ%"""0q‚D!//ò9s&úúú0vÏXdff¬ŸŸ˘ç∑ÅGä›≥gOÿÿÿ $$ 0bƒñÑª &OûåÑÑ`ÁŒù2d|||¥éìZºx<dgg£k◊Æôo*ÇõK≥fÕÇïïFåÅc«éi\cjjäõ7o #wV©TF\\
EïÂø*»d2$&&bﬁºy)˚>˘‰Ï‹π◊ÀÂrËÈÈA•R·¡É‡ÒxâDUÆˇm€∂EYYT*’koK-™ÜÓ€Æ¿õÄJ•Bzz:d2vÓ‹âvÌ⁄·„è?FJJ
¯|>d2d2∫uÎÜ÷≠[√  
˘˘˘8x :wÓÃYkkkñU˝Û∫¿•KπrÂ
±n›:˘|ƒ∆∆b˜Ó›ƒﬁΩ{!ëH0fÃÙÌ€ââââDLà´X?.∑§\.á\. ÖB\πrù;w∆–°CëììÉ˘ÛÁ£†† ...U
	5iª••%û<yÇºººﬂ!Ô!T*RSSÄ•œ 7Çk◊Æ¡∆∆Fc…Âr‰‰‰@°P†^ΩzpuuE@@ 1h– ¸√ã≈êH$êJ•lÒ‰Òx’.§õ¸í%K`eeÖEã°WØ^ê…d8vÏ|||XÍ∞™>Q›µ’›˜"}ß˛77^«çáˆÌ€≥tC∂∂∂¯ÓªÔ ëH‡ÎÎã¿≈≈)))∏~˝:∆åÉ‚‚bLù:ıÖÁkM€Xì∂sœ
ÖË–°û<yÇÒ„«cˆÏŸLËÁr7ÄT*≈∆çëõõå1 ˛≥£7]]]‰ÁÁW;üx<ÚÚÚ‡¡Lû<ÜÜÜ–”””∏∆÷÷/^dyzπT\›ªw«„«èŸ{‰÷◊W9w∏ÚíííPRRÇ∞∞0∂FH•Rå1»ÕÕÖïïªG°P¿∆∆:::X¥h—sàˇ’u˝]√-BsBãB°ÄììÜä={ˆ`Õö5Ëﬂø?ÄrÌDó.]p‚ƒ	4h– ßNùÇ∑∑7d2Yï¬–õ∆W_}Ö˙ıÎ√€€
ÖP©T		¡•Kó’W_aﬁºyX∂lÊŒù>üè––P¥oﬂÅ 2ôOû<¡√áëùùçøˇ˛wÔﬁE~~>
îß~111Åªª;:Ñ}˚ˆ!**
¸1”“ºÑB!Ùııëûû˛Vµ!o|>_}ı>˛¯c6ñƒb1~ˇ˝w∏ªªkú¸e2úùù1d»¬……	3fÃ¿±c«‡ÈÈ©ëtù+üÉ˙8ÂÓ00i“$Ï€∑Å „∆ç√¨Y≥ﬁP‡•Á∑ôÒx<"22{ˆÏÅ°°!fœû>ò7oäãã°T*1`¿ ÑÜÜ"$$◊Æ]É@ @˜Ó›q¸¯qæ≤$ÂØgŒúAì&M  sÁŒÖB°–»«ÍÎÎã÷≠[#%%2ôÀó/g]-˛=‘h>üÖB333§ßß?w‹ÆZµ
∫∫∫ò<y2ˆÌ€ßU{¯!ÜÇºº<B †U´V,-[ÔﬁΩ_´6ÎØø˛“–˙s
Ö022¬˝˚˜acc√æ/,,Ñ±±1Áü>∑¸;wÓÄàX_Uµ6’‚ı‚É‰‘Õám⁄¥Aff&≤≤≤Xr‚Ω{˜b‘®QêH$8|¯0Í’´Å@¿Ú,÷ƒ\ı∫ëííÇø˛˙gœûP.xé9°°°8r‰∆èèÖB.óc‚ƒâ8p ˆÔﬂè˝˚˜c˜Ó›(++è«CYYÙıı!
aaa___∏∫∫B"ë¿ÃÃb±XCHh◊Æ&Lò +++≠≤¶≥@ Äëënﬂæ‡ø7πè9Ç[∑n·Ãô3P©T}|Î÷-ÙÔﬂü} âﬂ~˚-∂m€<|¯˜Ó›´±i[]£îõÌˆÌ€±XåØø˛c«éPnñ µ>o/+Ã)
0 			∞≤≤¬ñ-[XÆVôLâDÇ˚˜ÔC,„Ÿ≥gX≤d	
1h– (ïJÿÿÿ`Î÷≠ÿø?ˆÌ€ác«é°SßN/Ì*™·ÂÂ•Uò„÷ >üè≠[∑¬’’"ë´WØ∆†AÉÿ°‡ø6ü^7¯|>6là]ªv [⁄Æ;tË πππZ˜"BPP$	D"õÿµk˙˜Ôè¬¬B·˝UA•R·‘©S®_øæFΩÅÚ|™∂∂∂∏yÛ&Í÷≠À~/))¡ì'O0tËP,^ºòY*ÊSÊpÚ‰Iº“z◊‚%∂ùÙ^‘-Î‘©√"ø8gÛ6m⁄êH$¢˘ÛÁkuj≠	m√´rÊÆÆ˛Mõ6•6m⁄∞ˇ«∆∆íïï)ïJäää"ëHDDˇ§ˇQwöVgíØ Q]˝ˇ‹˝É&{{˚J˝®Ì˛ö|¸¸¸h î)/›Ô+ÚÛÛ…››ù•˘!˙«!855ï⁄∑oODöÈ‡‚‚‚ –Ñ	ÿ˚ÀœœßÏÏlç†ﬂ≥R©§¡Éì©©)π∏∏∞IÓæw≈	π∫±ïööJù:u"cccÚ`A8Í˜)ïÂA9ééédeeE3fÃ†.]∫êééÈÎÎSó.](..é‹‹‹»¿¿ÄÙıı©q„∆œçƒ~’m¨…'55ïÙııi÷¨YD§ôNM©,J±≥≥#©T _^îπ⁄°æn—â'H*ïjDDkv∞≤≤bAk◊Æ≠Ω9a¬“——aœQOì8k÷,Úıı%"“ZST7¶rss…≈≈Ö•î‰∆á—£G ‰«—Ÿ⁄⁄RBB	JKK´2]QyÓË†† ≠˚I-ﬁ>H9Œë\•R¡ŸŸHKKÉB°¿Ì€∑·ËËà'Oû††† ”ßOœIÂu˚Ω=Íœæ|˘2n›∫ÖòòVøâ'b»ê!‡Û˘àååÑÖÖ>˘‰à≈bÊ¡µA @(2µΩ6ø>ıˇÛx<ƒ∆∆bŒú9 ¥k–^§¯|>$	233_¥+ﬁk®T*;vrπ———Ï;†\À¥n›:¯¯¯ ¯ßè
∫vÌ
°Pà∏∏8,[∂L√À˘hr◊r‡¥7Å ÛÁœáD"Abb"V≠ZÖ€∑o£Gèê…dLÉ£˛º∑Ì6Pq<¶§§¿ﬂﬂÕõ7GNN<xÄã/"00P√\Ã˝Î‰‰Ñ@°P ::áÜûûVØ^ç=z`»ê!∏uÎÙıı±yÛfddd‡ˆÌ€o}ûWÑóóŒù;áoø˝≥gœ÷–‹ñîî†m€∂Ë⁄µ+tuu±oﬂ>Ê(_´ë{µ‡Òx  \Ωzµ⁄kããã·ÓÓïJÖ““R≠◊òõõ3Ì∑˙ªÍﬂø?>|†‹jÒ:L´è=¬≥gœ–æ}{ç5ûCÛÊÕ°´´ã¬¬BÊÇ·ÌÌ"Bù:u`ffÜ’´WW9∆T*.]∫ÑNù:ΩÚ∫◊‚≈A
r2ô<ŒŒŒêJ•8q‚ ‡◊_E´V≠Ÿgü·ÏŸ≥l#„|#∏Ë8 ’FÍºN˘|dffÇœÁ#,,ç5ÇD"ANNvÔﬁÖBÅ%Kñ∞âπn›:ú8qgœû˝Wã:∑¡wÓ‹^^^UMÇ££#ÓﬁΩ˚NmúØ|>ü˛9∆åSÈ∑¬¬B$''c¿ÄëkÓÓÓpssÉ\.GPPêÜ†•ÕOëX·Û˘ÿµklmm±rÂJå?∑n›b˛7Í˜´óY—ﬂÓMC›©{’™U®WØZ∑nkkk$''„‚≈ãZÔ„ÍœÕ›AÉ¡»»"ë...»ÃÃƒæ}˚0zÙh¢c«é»ÃÃƒ∫uÎÏŸ3$%%A$ΩsBPU¬úJ•ÇP(ƒ¯Ò„AD Äºsı_°~– ˝W]\\∞i”¶*Ôë…d–——aÔA&ì±w£KKK∂è®Ô'ÊÊÊ(++ck˝Î@nn. ëH¥önõ5k÷˛íí‰‰‰@•RA*ï¬ŒŒÁœüØ≤|ôLπ\én›∫iˇKÎ¸ªÇ GéÛ-ëJ•®Sß\]]q‰» ¿ßü~äÿÿXƒƒƒ†Cáåä@= Ç”HΩ-ˇÆ.âIII»ÃÃƒé; î/6_|Ò“‡&f€∂m·ÎÎã!CÜ %%ÂÖü…m
ÖÇÖ™?~º⁄:æ(Í‘©S)4ˇCÜB°¿¥i” î”‰‰‰0_4èá;v@,√ﬂﬂü—ëp˜≠[∑N£,Ó§¨Æ<π\é£Gèb¸¯ÒxÙË∆çáyÛÊ–|O‹˝úñV°P0«Î∑Ì+∂fÕÃü?2ôù:u¬©SßÿoúêZT*ÇÇÇP∑n];vc«é≈'ü|ÇÀó/√ÿÿﬂ~˚-<<<‡‡‡Ägœû¡‘‘ã/fæÇÔ8aÆq„∆ Ä3f (nnnË”ß~˝ıWú9s´V≠¬®Q£ﬁfu?8p„-88+WÆ‘!Ã„Òp‰»3ˇ9±Xπ\é‡ÏŸ≥êJ•8|¯0¸˝˝ŸúS◊ÜI$„‡¡É¡+‹Û^≈ºLJJ™‰ﬂ«Ì2ôÓÓÓ033√ñ-[ ãQPP }}}îññ"''Mõ6≈…ì'¡„Ò¥
Çì&MÇ≠≠-‹››ˇu]kÒ/ÒñMªØ4`àEEÂ…è≠¨¨òèQjj™ÜOò∫èwè6€7·#giiIıÎ◊'///ö4iÛuàââ!KKK≠˜\ªvçåççÈƒâïû]]›*˙Üÿ€€SÛÊÕÈË—£îöö™ıY/”ÒÒÒdgg˜üõ‡¸Ÿ¨≠≠)66VÉhì{óÅÅÅ´·{íëëAﬁﬁﬁ4i“§*}ü‘ﬂkvv65oﬁúìR©§k◊Æi¯—i#Ë¨Ë˙6ﬁIFF<òlmmIWWó˘
qı„|√¥ëlW5«bccIWWóêççù8qÇ"""»ÿÿòttt»◊◊óíìì…““í.\∏∆⁄˛2sÜÛô„íë´ø≥FçëùùyyyΩë˙Ë® ﬂ–÷÷ñFé©5≥√§Iì…t\\Y[[ì@  GGGÚ†∫uÎíÆÆ.≠]ªVcÆ©ZµjEaaaﬂ©˚E÷d|V5?àà¬¬¬®}˚ˆïˆ6•R…¸‚ºΩΩ…¿¿Ä|||»ÀÀãúúúH Pã-(<<úÍ◊Ø_Â~∆ÁÛ)&&Fk˛÷˙w	îF 4h π\Œ|≤>˛¯cdgg#++ãÒßŸŸŸiú¥‘’¬999Ãg°¢
«ô#ëHêûûé§§$ËÈÈ·Ò„«x‡û>}ä˘ÛÁøt›?˚Ï3 Äøø?6m⁄Ñ¯¯x2^^^¯ÚÀ/—≥gOçÎ9≠ãõõ⁄µkáàà\ªvM√èH8SÚπsÁ∞i”&ú>}˘˘˘∏{˜.<==±j’* Â°ÛJ•ÆÆÆP*ïııÖââ	|||–†A÷OUÍÍ}¶P(‡ÂÂ ∏q„#4UØÀáÜ	&¿⁄⁄!!!'q>üèì'OBWWó˝∆A @"ë‡‚≈ãU˙Àp}5~¸x¸Ù”OprrBQQ˚›€€õπ®STÍ‹s⁄~TÂK…}œigŒúâªwÔ2M¿Ç`oo_©n/ä∂m€¢^Ωzåq…í%∆ù;w†ßßá9sÊ†CáË”ßäää„è?‚«du;˛<≤≥≥qÔﬁ=‹ªw˘˘˘(..Ü°°!D"ƒb1lll ëH‡ËËWWW≠—årπ"ë®RºhªππaÂ ï2d÷≠[«¢õ
6m⁄Ñ:0jãç7j<´Ø666XΩz5z˜Óç˙ıÎ3Mñ≥≥3äããadd àååDì&M∞wÔ^‰ÂÂA"ë (7´Üáákh›’µÔÜÜÜ»ŒŒfﬂsæ›<è≠=TUPü/Í>ï|>◊Æ]CªvÌòi^}M‡\-ºΩΩaggá∏∏8ˆ[aa!∫wÔéh∏tp4-
Ö˛˛˛())—±Z;ﬂ<ﬁ{A.==ÓÓÓP(Enn.⁄⁄∂mã{˜Ó!99πíc7Á«MnQÊÿ˜ÚÚÚÁü‚Øø˛¬ï+Wêùùπ\Æ11âVVV∞≤≤Brr2 ºî0'óÀ±m€6DEEaË–°ò8q"åñ-[¬¬¬œû=√∑ﬂ~ÀÃMÖÃŸ≥g#((¿G}ƒÑ5@SMøvÌZÏÿ±◊Ø_Gqq1ÏÏÏ–≤eK>7nD||<‚„„Ÿ¬¢P(êëëÅ+WÆ 77'OûD||<ttt â–ºys¥j’
6‘JÄ ˘[ËÈÈ·ÊÕõÃ¡ˇCÖ@ ¿˛˝˚Ò√? ¯'Å√ö5kQ…‘"â‡‡‡ÄKó.U
FâDêÀÂ8q‚"""†R©∞sÁN4oﬁ\kûGd˙*Qï w˙Ùi\ΩzWØ^≈πsÁpÎ÷-îîî†a√ÜXπr%Zµj ¯ˆ€oQPPØÍ†R© ãâ·√á#//m⁄¥¡˝˚˜!ïJá_˝-[∂ ∏∫∫b€∂mHII¡Ω{˜4 ≤∞∞ÄÖÖååå†´´ãßOü‚ﬁΩ{,õDaa!JKK°ßßÅ@Ä∫uÎ¢k◊Æ		üœgB'tq}Tﬂ_U‡Òx<x0îJ%Ü
+++A ¿ÀÀù;w∆û={p‡¿\æ|>>>∏ˇ>¨≠≠k7“Wèá†Gèò0aÊÕõ«ˆâßOüBW∑‹≈º¨¨å˘ªrÔˇÿ±c–””c|§⁄–∫uk$&&≤˜ıoÕ©‹ÅA.óC @.ó√€€[´?(˜{{{ƒ«« ?B°ÅÅÅàééÜ≠≠-€KŒû=ã:¿››B°∆∆∆ˇ™Œµx5xØ9ÖBkkkÊ˚„ÌÌç„«è#66˚˜Ô«ù;wp˜Ó] `Éª‚dQ©T(,,ƒæ}˚pÊÃ‹æ}gœûEFFîJ%ttt`jj
___ÙÏŸ˛˛˛hŸ≤%
äããÒ¯Òc¿‘‘Kó.≈ä+∞h—"VvMO…„«èáX,∆–°CŸ¬|Ú‰Iú<y(((¿¢Eã0h– òòò@"ëhîÎÔÔè-Z‡Ûœ?«ç7 î/øˇ˛;<àø˛˙<ÄÅÅ\]]1{ˆlñà√≤eÀ∞a√,\∏”¶McŒ÷æææııe◊Òx<dee· ï+8x bcc°´´ã¶MõbÃò1ÃK›ô›»»◊Æ]ÚúbÔ:T*:wÓgggÑÜÜ≤q…Eûr—«°°°,Kè\£Fçp¯aˆ=ßÒÃ……ADDé;Ü>}˙ ::ZCÎSh≤µ˝ŒiÙ‘£"U*d2?~å€∑o„Œù;»  B~~>?~åÙÙtx<<}˙îqbÒx<ËÎÎ√––ŒŒŒàääBhhh•ÁÎÍÍ2ñ{ŒÁe—•KÖB\∏p&&&

Btt4ÜäÛÁœÉ«„a»ê!ò7o”®ÌﬁΩ[£åíí<zÙ999ê…d  ˝ü‹‹‹‡‰‰>üèúú\ªvŸŸŸÿæ};fÃòÅIì&¡ﬁﬁù;w∆ßü~
wwwçæS_{^ƒ)|‘®Q»ÕÕE◊Æ]ëêêÄV≠Z!==———8q‚ÚÛÛ1|¯pú8qb±¯µë}Ë®H
ÃAWW¸1~˛˘gaÎ÷≠7nFè___\∫tâ˝iÏ-˚˜ÔáûûûÜ«qÓ‹πÜÜÜ∏zı*n›∫Öû={‚È”ßP*ï(++c‚ãBOO(++CYY≤≤≤∞fÕ¸˛˚ÔêÀÂpww«¬Ö5ÓÈ’´∂n› ˆ«¬¬Bx<òòò†§§∆∆∆êÀÂ8sÊ¢££ëêêÄ¿¿@¸˛˚Ô®Sß_™ÆµxµxØπäÇŸí%KÑ^Ωz°∏∏XcS‡R§®T*Ïÿ±{ˆÏ¡≠[∑pˇ˛}∆ÊùüüèGèÅà ïJ¡SRR∞uÎVDGGcÊÃôP((++Ééé#›577GII	zıÍÖÿÿX ®Ò¬˙À/ø`“§I ¿"˘|>⁄¥iÉååÏﬁΩ!!!,‘õSﬂsP(ÿΩ{7$	>˝ÙSdgg„¬Ö())Åõõ2220d»fN™
´V≠¬ÁüŒúı’58\rô2‹››Y⁄§§$lﬂæÑ≠≠-¬√√Y‰% òòò ++ÎÉ4ˇpß’Mõ6!99IIIïÆ·Û˘ÿ≤e¿˛_-Z¥`ÊNàﬁªw/¬√√!
q¸¯q‘´W@’Çò∂ÁVwxëÀÂx¯!“““pÔﬁ=fZÃÕÕei‹ı‹|222üœáÅÅÓ›ª>üèﬁΩ{£¨¨≠ZµÇ≠≠-ãx´òÎWõ‡¬ô´™jj:^8°π}˚ˆÿπs'¬¬¬–Ω{w4n‹J•¶¶¶ÿ∏q#‡‚‚‹æ}#Få@zz:?~"bQ|DÑ““RËËË@WW*ï
œû=¡––666ÙÙƒ†AÉ–ø(
¨Zµ
7nƒ⁄µkaeeÖ¿ÀÀã•fSﬁ–ÊíPúp1wÓ\»d2#77óŒÃõ7„∆çCzz:¢¢¢0~¸x&ÑøÌ ñB°999ÙÙƒΩ{˜Ÿgüa¡Çò>}:x<lmm!ëH@D055èi=33÷÷÷¨,>üè÷≠[#55Ì⁄µüœGnn.îJ%ÙııüõbØ¶(**b8___$''„£è>ÇÉÉÆ^Ω
¸ÚÀ/,ól”¶MQVVÜ;wÓ∞\›@yz±≤≤2§§§∞LG8x ö6mäíí(ï ZAÓ¡{-»UÑJ•B@@ ˛˛˚o¿››;vÏ@||<é9Ç;wÓ@&ì°¥¥h›∫5:tËÄ‘‘Tƒ∆∆¬ƒƒaaaàää ¸¸Ûœ˜˜Gaa!ttt`kk¿œœO++˛≠[∑–≤eK§ßßC*ï>wAU©T9r$ÑB!∂m€Üﬂ~˚≥gœFªvÌ ïJôœ^ff&ÏÌÌôy®"É?Áˇ‡ÔÔè6†{˜Ó¯˙ÎØ—≠[7à≈bLõ6ÁŒù´¥»W‹$√¬¬0k÷,tÔﬁ±±±ãã∫OU≈ºêuÎ÷eπ˘6lÿÄÂÀócŸ≤e,âπáánﬁº˘Œ•H˙∑PÁÏãääB@@ ºΩΩ¸Ûé6lÿ †º’ô˚π2¯|>ö5k===\ΩzÕö5Cì&MpÌ⁄5Lû<”¶McöÆä¬ë˙ª∏zı*;ê<~¸ßNùB~~>‰r9
QTT•R	•Râ““Rîîî@__011ÅÖÖ|||‡‰‰;;;XXX¿¡¡666,O(bƒà∞µµ≈Ç^˙ùrºáúªÄ:∏CÁÊ∞i”&$&&B•R¡∆∆~~~<x0ª^ `⁄¥iÿπs'6n‹à5k÷@©T¢i”¶¯Âó_0zÙh:t@9è◊Œù;!ïJ1yÚdx{{khù+æcNöôôâSßN·Øø˛¬≠[∑0{ˆlå?∂∂∂hﬂæ=£3f∆ç =z4æ¸ÚKMgEﬂ&m¬ß°‰8ÚÄrSX~~>
4hÄ¿¿@<xQQQØ4¶jÒÚã≈x˙Ù)ÀÚ≥q„FtÈ“∑oﬂFpp0lmm°P(ò5ÇÛ°âD∏q„‡˘|>zˆÏâ´WØ‚¡ÉÏΩxyyaˆÏŸË◊Øﬂkÿk
___|˛˘Á		PÆÏ4hŒù;777îîî¿ƒƒiii˜˜g>~B°b±£GèPÓ±p·B¥j’ä≠y%%%ï9m~“µx˝¯†9ŒØÀŸŸ◊Ø_GÔﬁΩ—∫ukòöö¢n›∫Ë›ª7∫wÔŒÏã/‚≥œ>√›ªw1a¬å?'Oûƒ«åÀó/C"ë`¿Äh÷¨Z∂lYi’6XΩºº–∂m[¥oﬂIIIœ‰d2~˘ÂLù:ƒö5k0q‚DòôôaÂ ï

 |ÛÕ7î	7=Æ._}ıíìì±p·Bx{{3ÌN”¶M±}˚ˆù‘øˇ˛{0 ßOüfÇ#ns≠Ë0œ’A°P`¯·>|8é9ÇY≥f!..∂∂∂∏}˚6ÓﬁΩ˚A	rúYfÎ÷≠∏ˇ>ˆÓ›´ı∫Õõ7„Ûœ?◊HySÒ d2òööbÛÊÕ<x0x<Óﬂøè[∑na«é∏wÔn›∫Ö‹‹\»Âr3~>Nc¶ßß«|∏LLL â`bb333∏∏∏@"ë¿ﬁﬁnnn,%g¬≠)ØßeΩvÌZµjUcÌè6Ì\uf$Nhù9s&V≠ZKKK‘´W∂∂∂∏uÎ<àπsÁ‚ˇ˚ÇÉÉQRR___àD"<{ˆ∆∆∆Xºx17nåñ-[‚—£G033cZÈ={ˆ`–†A,'qUªÍÌ„∏){˜ÓÕæ„r†˛Ò«ÿ∏q#ÏÌÌ1c∆¨X±6l¿W_}Öˇ˝Ôò9s&BBB™L˘Tï0Ä	sÁœüáççrssanné’´W√œœè?FØ^Ω∞{˜nçÙÇµÍÀ√‘‘Oü>’¯.++]ªv≈‘©S!ãëôô	èá]ªv·ˆÌ€∏uÎtuuqÎ÷-v»ÿ∫u+<»“æi®ªqLû<ó.]BPP≤≥≥¡ÁÛajjäÈ”ß#>>Å >>>l-¯ÚÀ/î[j“””ôo+7æLLLﬁ|ÉjQo3dˆUCùJÑ˚p!„\X7Q9uC„∆ç…ÿÿò•OZ∫t)π∫∫íµµ5ç=ö222(77W#‰úW/ø‚á{Üππ9ç=˙πuﬁºy3Òx<‚ÒxdaaA.\ "¢»»HâD‘•Kö;w.YYYia◊F≈»®	∏Ô


»¡¡Åbbb™Á˙âà(44îúùù´§,·ÆÕÕÕeÙ‹Û*ÜÛ/\∏ê»ﬁﬁûNú8°qÌáOOO6lò÷ﬂ¢¢¢®Kó.DTNΩQëFC=méßß' ]]]≤∑∑'çèáá5i“Ñ⁄∑oO›∫u£πsÁRtt4Ì⁄µãíììﬂH[ïJ%eddê≠≠-ù:uÍ_ï’ªwoÚÛÛ´íZ§c«édffFÒÒÒZ”Õò1ÉMô2Ö˝ﬁ≠[7@†i”¶ëûûÒ˘|j‹∏1•¶¶R`` ê°°!I$R*ÀS}Ω
ddd–»ë#………âlmmiÈ“•DD4˛|≤¥¥$/// »»†ÇÇ ŒŒ÷ò;ûGT∑n]rttd◊ß¶¶íX,&333ö0aÇ÷æ¨Eı–FA2zÙhFÌ√ç≠a√ÜQÎ÷≠â®|Ωåãã#ccc
¶3f–¨Y≥hÒ‚≈dbbB			DD‰‡‡@˝˙ıcœ·‡ÈÈI´WØ÷H—˜™—†A6â ˜>"b˚úR©§6m⁄ê∑∑7mﬁºôfÃòAc«é%___233£¢¢" »» KKKVOéF…÷÷ñrss5ûW;ﬁﬁ>(AÆ"8N/uAnÌ⁄µ$
)88òàà‚„„…¡¡ÅúúúhÛÊÕïrïVú‹U-êyÄíìì…––πıõ6m˘¯¯PQQπππ ≤∂∂¶åå"* ttt(**JÎ]ë?(##É¨¨¨HWWó	M\õÇÉÉ©m€∂¨æ¡’üõúÊÊÊ4a¬çﬂ™ A´≠,ı:•¶¶íH$¢]ªvi\Ûæ£®®àbbb»⁄⁄∫èá&Mö–©Sßÿx‘∆ëFD¥rÂJ266¶Õõ7”—£Gi◊Æ]új’ç«7Ÿ^•RI………dccÛØÀS‰‘Á+—Ñ	»‹‹ú“““ÿsµqÃeggìP(§òò*((†’´Wìééôòòê±±1ÈÍÍ“Ë—£ÈË—£‰‡‡@:::ƒ„Òh◊Æ]dccC±±±DDá4Ó⁄ﬁW≈>œœœg?N8+((†ÿÿX≤∑∑'sssäéé&"¢~˝˙ëëëEFF≤¸πsøjõ◊Íü‹‹\rpp†ÊÕõ≥{ÜFb±òÈË—£¨Ø>Ñ9ˆ&†Mêõ0aB%Aé€/∏ÎrssI(j¢


»  ääää(>>ûtttÿ˝Mræææ4c∆ç˝âàh‰»ëdnnNDÂ´üü˚≠††ÄVÆ\IŒŒŒTTTDã/&ÖF~~>Ÿ⁄⁄V™{≠ ˜vA¶Ë™Œ<—∫ukLú8¸Ò‚‚‚‡ÔÔè∞∞0å9'OûDXXX•\•Ûî™GbjÈÊ|Z|}}1m⁄4WÈÃ≠R©`nnék◊Æa√Ü8˛<222`nntÈ“√ÜÉππ9>˛¯c≠>DÍ/\∏^^^>|8∫tÈÇ·√ák\?n‹8\æ|Yk=∏˙´S_|Ò≈Xªv≠F˚*˙2iÎáäpttDè=©AÀæC ‡ã/æ@xx∏÷®Àq„∆°Q£FÙÙd&’ä◊(
$&&bÚ‰…X∂l¬¬¬`ooèÓ›ªC$i|*ö?k“ˇØ
Í˘I˜Ó›´ïCÍUb›∫uHMMÖªª{%s°:eÉT*≈Ñ	0uÍTàD"4i“...ÙÙÑX,∆È”ß·ÊÊÜ‡‡`‹ªwééé∏p·é=
π\é∏∏∏JÌ‰¸π˛VÁñ¨ÿB°R©b±ò˝+âÇõ7o‚€oø≈◊_WWW¨^Ω/^ƒ¶Mõ–¶MF¡ïıºHV>ø<wÒﬂˇçk◊Æ°WØ^ Ä®®(XZZ¢†† _|Òss–ñô†5πÃ°yÛÊP*ï,™X,Ü••%~˚Ì7$%%aÚ‰…Ë›ª7siô:u*—∞a√∑P˚ÚH÷‚‚‚JkÓÿ±c!óÀëòò±XåÎ◊Ø„õoæ¡ƒâqıÍUƒ««£AÉ  Ÿ<==5 U(–””{≥ç©Eï¯ 9éKá∆ÄrÓ(†<ˇ‹©Sß â`kkãªwÔb î)å∆§&esn°‰¯÷‰r9Û5R(?~<Z¥h777∂∞™?C$·ªÔæC´V≠∞`¡‘´Wõ6mBjj*≤≥≥q˝˙u4£GèÜùù]•∫pã@ Äøø?ñ.]ä≠[∑bÓ‹πX∫t)rrrêòò»6ãé;¬‹‹c∆å—ÿ¸+
]∆ÙÈ”···¡¢)πg’Íõ-Á,¨T*1e ç˛|_!óÀ1uÍTîññb¡Ç,‡ÄÊìííòfE!ú ∏±“©S'å3#FåÄ\.áìì”[jUı‡Ñ®ÙÙt∏∏∏º∂ÁLú8,†Hùë˜Íá¨3f@©TbÎ÷≠hÿ∞!tuua`` Lù:_|ÒJKK1`¿ lÿ∞ù:u¬ˇ˛˜?!66ó/_fÁ‹aE›¥‚Æ™OEå1˜ÔﬂGßNù‡ÏÏåÑÑ»d2888¿€€Oû<—pvÁGmsçõ/rπè=B||<∆çëHÑÿÿX‹∏q›ªwüœGaaaµQ¡µ®œû=”¯øH$Çëë>ÃˆÅÅÅX±b∂oﬂé““RtÎ÷¶¶¶Ë€∑/._æ¨5(ÓMÇH‡∆PûÎ’¿¿ £Fç¬Øø˛ävÌ⁄AOOÜÜÜXæ|9é;ÜÊÕõC•R·÷≠[h—¢ÖFôè=zÂúîµ¯x€*¡WçäÊó¯¯x
Ö4vÏX***¢∆çìôô3;>œÁ¨&>iœC€∂m…¬¬ÇôP∏:<ò,,,òπd÷¨YdggGR©î¶MõFñññ‘ºys œœØÚ˘£Gè&3ÁÔ”Ø_?rqqaÈXààfÕöEˆˆˆıSWè´õê∏˙—Í’´µˆWuÔ°‚Ôπππ¥k◊.ã≈Ãt¸æB©T“Ö»““í˘™˚ãpæ'”¶Mc˝»ôÌ*ˆãD"°∞∞0"“ûÓ]Å∫e@@ Mö4È_óY—GéÕõ7ßë#G≤ÁVgj‰˙À««áπ∏ππQDDôôôëëë	ÖBäãã£Y≥fëôôÈÍÍíÖÖÂÊÊíT*•Iì&Ω2óR©§ÑÑZ∏p!ç=ö©Q£F‰ËËHñññÄÏÌÌi˝˙ı‘±cG¥k◊ÆJ˛F\YU≠;Jey*/CCCZø~=KÂgddDS¶L°¥¥4 ÕÕ•‹‹‹wj,Ωk® ¥Í„„£1∆àà:uÍDΩ{˜fﬂÕö5ã<==5ÓMKK#===¿¸cπÁpx¶U???Zºxq%”ΩR©$@ïÓÛ`fñ˛ëªˇË—£‰ÓÓ^kZ}GAâ‘ÍlÍ∫wÔéòòtÔﬁb±ÓÓÓ∏{˜.”Ñ ˇéÌ~Õö5’˛ﬁ°C¨_øëëëÙÙDbb"„äçç≈è?˛»4bsÁŒ≈‹πsÒı◊_cˆÏŸ9r$~¸ÒG»d≤JQm;vÏ¿W_}ÖBÅ≈ãc‘®Q¨˝úyx·¬ÖÒÒ¡ù;wIÔó_~âU´V·ÁüFxx8 Ì&NÓ‰∆„Ò0gŒLù:U#πÛÀê˙*
tÔﬁﬁﬁﬁË’´Œù;†rZ£wú∂(oÀØø˛
;;;|Ú…'¨˛@y>üè∞˜°û™ãC›∫uaooèuÎ÷±Ë2ëHƒﬁÂõ4ù÷\]>|¯ZµÜ:::Ã]∏w! ì…`ccÉ;wÓ@•R¡‘‘ÆÆÆƒŸ≥gq·¬ÙË—gŒúPN3sÊLtË–è?∆ë#G0p‡@$$$  3qˇööö¬€€Õö5cœÁË&ˆÔﬂèø˛˙7oﬁƒΩ{˜PXX»∏ˆÃÕÕaeeÖû={b·¬Öh€∂-ÇÉÉÒ„è?b…í%(..ÜéézıÍH$H$x{{√€€=zÙ®v}ÚÒÒ¡í%KŸgü1"Í¸¸||˘ÂóXæ|9Ùıı1vÏX)˚_ßá®ä±‚øU] Õö5√Œù;ŸÔlú§ßß√⁄⁄÷÷÷ÛÛCZZàËï∑£¶ "ËÎÎkhw9óSSS‰ÂÂaÿ∞a  ©u∏tt\ù9˛ƒ∆çkî+ì…*çKıı±"˛´„ÌM·É‰‘}h6oﬁå»»Hƒ««√√√ÜÜÜ¯Ï≥œG\MÑ8uﬁß¬¬BÏÿ±/^Dnn.û={±â¬©∞9ü•Râ_~˘DÑ¿¿@‹ºyıÎ◊«¶Mõ∞fÕÿÿÿ†oﬂælbq™˙7n†AÉàééÆî´sÕö5¯·áiÎˆÌ€—µkW∆œï≈•Î‘©˙ÙÈÉ;wÓ (ﬂÙ∫uÎÜÔæ˚é	ryÂ*RãLû<[∑nE≥fÕŸÌÛx™¥˝ÊÏÏåºº<;v∂∂∂¯·á0vÏXfí|&;∑∞ﬂΩ{Î◊Ø«∂m€4“ΩÂckÀñ-ò1c5Ó,s«ËŒ	¥⁄¸ﬂÜ˘B•R·˛˝˚∏sÁé;Ü‰‰d899aŸ≤eLÿ|˙Ù)⁄∂m˚ ü≠æ°jÛÁ¨Æƒb1<x OOO~´è>˙'Nú@@@ nﬂæSSSDEEA&ì¡««œû=Éóó“““0|¯p¯˚˚√»»fff011Åææ>._æååå‹Ω{ÈÈÈ066ÜôôäããQVV###òõõ3?ºÊÕõ√ﬁﬁû•˚ Ös.üÂ¿Å—∑o_6Ôd2Æ^ΩäªwÔ‚‡¡É∏vÌRRRP\\åë#GbÊÃô?~º÷ˆÀÂrå9wÓ‹A◊Æ]q·¬å5

Ö≥fÕ¬¢Eã`gg«zﬁó˘ˆ*¡µü„c‰æS?îr¸é*ï
Zì:‡«‘8úÈËË  úúúX˘'OûDhh(nﬁº˘&öW%JKK5˛œ’˘Ÿ≥gÿ∫u+„òSØ\-Zç˚KJJPTT§1Ü*
qÍ´sE÷‚ı‡É‰‘5q"ëk÷¨¡¯Ò„ëööä'Oû¿ÀÀÛÊÕ√‰…ìŸı5Ÿ y<6lÿÄ£Gè¢†† ıÎ◊«G}ÑfÕö1“◊ö‘Ì‹πs»»»@hh(6oﬁåÅÇ«„1ÌÄ∫?ŒÂÀó±ˇ~?~ú	8
ÖsÊÃ¡é;#ˇ·√áÒÏŸ3ÙË—;vÏ@pp∞ÜO áMõ6¡ŒŒ´V≠¬–°Cëóóáµk◊¬⁄⁄öˆrı¨H8´¯p˙ÙiXYYa˚ˆÌEaaa%Ê˛äÌÆXÁ˜SRRÇp,^ºòiﬁÆø¸ÚK8;;£Iì&,±5ó€s‹∏qpuuE«é+•‚ ;;;Ãú9«é√≠[∑*•nPÈ]ºpÔ\•R·ÊÕõ8tËêïïÖÇÇîîî@(¬……	«è«ˆÌ€q˙Ùi§§§¿––µÊÕƒ∂m€òF≤*ß}ıÃ)˜Ó›Cˇ˛˝¡„Ò·CËÎÎ#22Kó.≈√á·ÂÂÖ¯¯xDDD‡‰…ì‡ÒxÏ9ûûûhﬁº9æ˘Ê=zDRR233AD–——Å°°!ö6m
7774h– –ö¡B][»˝ÌËËàÀó/k@yÅ∆ç£AÉË⁄µ´∆{o€∂-˛¯„Lû<Y´ ∆qgFDD‡Ÿ≥gh‘®ˆÓ›ãâ'B `¬Ñ	=z4n‹∏Å®®(çy˘_›\+f’P˜wV?î]Ωzµíîk‰tuuqÙËQtÓ‹Yk˘ﬁÖÃ⁄⁄ î+‘°Æ˝/++ §••1bcu°®®7n‹`Yç¥ÌÍi˛‘ÛÑsœ´≈´¡{/»U4ßfff"227nDff&∫vÌäÂÀócƒà»ÃÃÑ≥≥sïiÉ‘3¨\π€∑oGΩzı0lÿ0vjy4k÷åôdÊŒùãÜ¬⁄⁄^^^ïÆù={6tuuëííÇô3g"552ô,O‰™U´–πsgú9sÎ÷≠CØ^ΩòSmE!U°P`¿Äò={6Fç≈æ6l¢¢¢–°C¯¯¯∞E¨"Y©B°ÄL&ÉT*≈?¸Ä·√á£Mõ6lìØ	*x§ßßc—¢EÿΩ{7˙ˆÌãü~˙IC#˘ÆÇ[ên‹∏ÅƒƒDú={Å "ëàe‡8tËnﬁºâ∏∏∏Jß}nQKNN∆ˇ˛˜?\ºxb±òô)8m™˙µØ\Óœﬂ~˚			»»»¿Ω{˜PRRSSSxzz"44Mõ6e©Ñ∏Ã
˝˙ıÉØØ/∫uÎ++´W˛æ∏≤JJJ0vÏX,_æ€∑oGœû=µF˚™L”ßOá••%ö6m
ôLÖB¡R›uË–ßOü∆ô3g‡‡‡Ä'Oû  ºΩΩaaasssˆÔﬂèÌ€∑C$¡——...0` fπîL™.+ö√π:∂h—Ç%(ÁÍØ~Ω∂‡Ün›∫·ßü~™2Íù3ÈãD"fmË⁄µ+ˆÓ›ãQ£F¡√√!!!Xæ|9rrr≈÷âwyÆΩ˘|$%%·“•K8{ˆ,ÓﬁΩã˚˜Ô„Ò„«åPª§§•••(--EYYYï.NNNÿΩ{∑VAN5]#ﬂ¥ô|πq°ØØè{˜Ó·ˆÌ€ò8q¢Ü@îè˝˚˜Ô£CáÏ0≈Ây500ÄP(Ñ±±1ÏÏÏ‡ÍÍäÜ‚£è>ÇP(dkΩz>ÁZ¸;º◊Ç\≈”%PÓ3Úı◊_£gœû
ÖXø~=”V9;;W[è«√í%Kp‡¿¯˘˘a›∫upuueQüó¶ÁˆÌ€8q‚äããYÍ#===√‹‹&&&EªvÌÿÇ∞a√dgg„‘©SZµÇÄææ>.\333<›∫uCΩzıò©ó3ù4m⁄Oü>≈˘ÛÁÄªwÔV*O(b≈ä¯Ì∑ﬂ0~¸x,Y≤999X¥h6oﬁå®®(|˘ÂóÃoØ¢∫ú«„A(B°P†WØ^¯ﬂˇ˛á:‡‚≈ãêÀÂ¬GU‡4‹∆ÁÓÓéÙÙtÏÿ±≠Zµ¬â'ÿ;zó¡’o‡¿Åh’™ÛS©T∞∂∂Faa!.\à/æ¯B#Uí:ç ÙÓ›ã/Ü≥≥3WÍœ®iÜÖö@.ócœû=ÿΩ{7nﬂæçøˇ˛DÅ@ ¢}˚ˆ˜˜gœ’V±Xå£Gè‚”O?≈˙ıÎ1wÓ‹WRGu·L]0
Ö;v,"""‡ÁÁß’è´„æ}˚∞a√ÏŸ≥@πœ ¥k◊Gè≈oø˝ÖBîïï±MG°P‡“•Kò8q"ZµjÖzıÍ¡››Ω∆uØi77œõ5kÜ'OûT“ú´kF+
t^^^P(∏xÒ¢÷b≤ä¬\PPŒü?è`«éHJJ¬ﬁΩ{—∞a√ˇå07q‚DlŸ≤DƒÊ¢ππ9ÃÃÃ‡‰‰Ñ-Z@*ï¬ƒƒıÎ◊áããNù:ÖààVé˙~¿,*’·uSÙ‘⁄ﬁµ67ÜÜÜx¯!=zÑ>}˙T*O°P¿⁄⁄ó/_ÜB°`ÆJ•˜Ó›Cff&>|àÃÃL\∫t	õ7ofyeE"6lÿ†·oZãá˜Zê„6Œ4È‚‚ÇvÌ⁄aÚ‰…066∆Ç–ø ’”\‚˛˝˚ò8q"tuu±q„F∏ªª≥ñÛ[˚ﬂˇ˛ác«é°∞∞ÜÜÜ∞∂∂ÜΩΩ=Í÷≠'''XXX‡Ò„«»  Bzz:˛˛˚oå?≈≈≈066∆‡¡É±vÌZklÙ\[zıÍÖzıÍ!&&Ü	ùÍıVœΩÿπsg\æ|B°YYY8˛<Í◊Øè‘‘Tç{n‹∏Lû<.dÊïÎ◊ØcŒú9¯ÚÀ/ÒÕ7ﬂ0<uSï6≠¬ü˛…ÚS.Y≤§í RÒ›hÉJ•bÛ–°C1bƒ‰‰‰ºÛÊÖBÅ}˚ˆ!++III/ ,_æ"ë≠[∑÷0ç™õ“ÃÕÕ1x`8êi‚™J∑VT4aÔ€∑			8sÊ≤≥≥QTT===XZZ¢n›∫ò4iÍ◊Ø777ç˜¶Ó3Z’˚ÄÖ‚¡É¯Ò«1k÷¨◊≥*îïï¡––êñ∏gÒ˘||Ò≈8wÓ£÷·|:’Òı◊_cÒ‚≈Ë‘©Nù:ÖÔøˇ¸Òttt–†A<}˙ñññ∞≥≥C√ÜÑ:ºï§ÚB°˙˙˙∏tÈKu§>G*é' ®WØT*LLL*ôd9®k~KJJÿˇ‰ìO∞h—"ÙÓ›øˇ˛;∂lŸÇ/ø¸~~~ò>}:ÊÕõ˜ö[¸ˆ±a√¨^Ω+V¨Ä≥≥s%øNuó†|p¡FúâüœÁ£SßNàââyÓÛﬂeÆµä‘*Íÿ∏q#,--+çKuø@°P°P»œ√ë#G›wﬂ!88˘˘˘ˇ≤µ`xkÒ≤ØÀtHHcüñJ•··’°®®àVÆ\I,Ñ_ùY=&&ÜÍ‘©CñññTø~}ZΩz5Ø.**¢‰‰däââ°ËËhZ∏p!≠\πí‚‚‚4R˛—Í’´…‘‘îD"Q•˙+ïJ∫vÌYZZR„∆çiÂ ï’≤ªse^ªvçZ¥hANNNDD$ïJ)44î—D®S:ïS2tÏÿë›OD‘æ}{ÚÒÒ!"“ 2_±?à )åççÈ¬ÖïBÛ´{OU—(¯˙˙jÑËø´»ÕÕ%///ñz≠bˆä&Mö0Zmî^^^‘¶Mõ˜YU‡ﬁÈµk◊hÒ‚≈‘≠[7ÚÙÙ$KKK≤∂∂&
§πsÁ“µk◊Ââ˙x™*K¡ÛûÀ]ÎÓÓÆAyÛ≤Ë›ª7yxxhMı≈•Ø⁄µkŸŸŸëÉÉ5i“Ñ@-Z¥ 333@ÜÜÜT∑n]ruu•––Pö2e
≠_øûQo¸õæ~‡˙¨††Ä<<<hÓ‹πø=èﬁH*ï“—£Gkî¢èK˝EDîêê@&&&‘§I÷˘˘˘‘¶M“——!Zø~=ª˛CD„∆ç´LùG§I;¢æVr‘.666Ûï˚7--ç®®®à"##©n›∫Zﬂ˜õ˙Û8º	˙ëFç—‚≈ã5ûÀ˝mkkÀ≤öpﬂsøµi”Ü¸¸¸®[∑nZ◊åÖíΩΩ˝Suq˚µïï’øNÔWã^k‰ÄÚS“°Cáè+WÆ†Oü>‡Û˘¯Ì∑ﬂjtˇ¨Y≥p˙Ùi¸˛˚ÔÃÑ(óÀÒÁü‚´ØæBAABCCÒ›wﬂA.ó#%%:t`·000`ß‚‚‚bC•RA$¡ÕÕã/ÜôôTânÉœÁcÒ‚≈∞±±¡æ}˚–≥gOú;wk◊Æ≠“7F ¿……	áÇ∑∑7Ñååòôô·∆çhÿ∞°F  ,]∫îiÇ‰r9$	∂m€///Lù:sÊÃ©D§Ã’ ¥ËŸ≥'é9Çè>˙Áœüg—N’i9™ÚKT©Tÿµk6làÂÀó#22≤FÔÌm`€∂mxÙËV¨X†¸Ù^XXÖBÅ±c«¢oﬂæLì*â4|@⁄∑oïJÖÑÑÑ*5+’A.ó„ƒâàççErr2>|à‚‚bòòò@"ë†eÀñËﬁΩ;|}}+is9-.†I“\¥iâ∏ø”””·ÓÓé~¯]ªv}°6h√”ßOëììÉ˛˝˚£¨¨fff@„∆ç!ì…pË–!‹ø∆∆∆∏uÎd2Ó‹πÉ:uÍ`ƒàåp€——Òù•∞·˙P$¡  äiÕk™y566∆˘ÛÁô6©:ÎÁ/ AAAHOOG`` lmm1h– DGGcˇ˛˝»ÀÀ√∏q„0j‘(‘©S{˜ÓÖX,~+ö ◊âGè±ƒ˜/„ìUùÜªª;LMM±yÛÊWRœwúπt‡¡,ú≈F°P∞H›öB]£ß´´ã≥gœ÷öW_ﬁ∂$˘*`mmM———îêêPI„•ÓT¡ÂFÏ◊Ø0Ääää4»8€∂mK∆∆∆4a¬vJk€∂-â≈bruu•êêäçç•k◊ÆUy‚/((†¥¥4Zªv-<ò»ŒŒéàH„Ã›Î‰‰§°≈•ﬁΩ{?˜î√%5ÊÚ˝Mò0Åi&’	.9MQ˝˙ıô&ÖÀaπeÀ233£¥¥4FZ´ç∏ñ”Ùqﬂ˚¯¯P˝˙ı5~Y2»ıÎ◊ìH$¢-[∂∞w•M[§Ìî˜¶`iiI”¶M”®—‚≈ã©GèDTﬁœ‹˜‹ò=z4#ü-((†‘‘‘Á>Îƒâ4e j⁄¥)999ëµµ5YZZíèèÖááSLLå∆ı‹8U'tÆi^\Ó˛™N—Í◊‰ÊÊ“µk◊X¢˙ã-Z–Ñ	®††Ä‚‚‚hıÍ’åHï«„ëææ>EFFjh™™M"Ñ◊1æ¬√√©Iì&öüÁ=øIì&^„6Tl/—⁄µkI"ëê••%ÖÑÑP\\ïè3.!:ó#ˆﬂÃ„wÓÓÓƒ„Ò|E<O#gnnÆU#GD‘£GÍ›ª˜©ësww'∂o®k‰àà"##…——±Fs®bˇvÈ“Ö –“•K_[ªˇkxÔ5r]ªvÖ©©)£±P'≠≠ı®‘#F¿««Àñ-√ıÎ◊·ÌÌçCá!44∂∂∂x‡ ¿ﬂﬂh⁄¥)∂lŸÇ¿¿@≠eW<%s9 {ˆÏâ>}˙ !!ﬂ|ÛçVÍì˛˝˚#;;õù˛‰r9bbb0h– 0 [∂l©≤M<R©@ÔﬁΩq˛¸yÏÿ±c∆å¡∫uÎò&Üã∂€ø?<==q‡¿tÏÿ
Ö˝˚˜«ˆÌ€—πsg<xê˘à®ÛÚqm‚˙ëœÁ„˚ÔøGˇ˛˝—ø¨^Ωö’Èe|‹˙ˆÌã‰‰d|˛˘ÁË—£áF˚™”@ºÓ\í<ã/∆wﬂ}}}}ú8qÌ€∑áH$Çââ	lllÁü"))	*ïä•„·¥ö?¸6oﬁå¥¥4Ê˚Uë∂#%%{ˆÏ¡πsÁpÛÊM‹øeee055Öèè:vÏàNù:±”k^^^%ÌWv≈˜V1‘ü£[x˘Ây>4hÄ‡‡`Lü>˝• ©333àD"c≈ä011Add$⁄µkáæ}˚÷à˚±:üÃw	≠Zµ¬°Cá^héÿ€€#%%•∆◊´k˚∏___$%%a’™U¯Ù”OADxˆÏY•H˛	ÜÜÜË◊ØzÙËÅ1c∆`∆å/t?UCÊ€°C¸Ù”Oh“§…óÆÍ˛˝˚011©RC[ZZ˙B‘*ÖÖÖh⁄¥)D"Í◊Øè´WØæ™Í÷‚mKíˇ"ëà


®wÔﬁ‹ÎïJ%ÖÑÑ–∞a√44q≥fÕ"äää""¢3fêÆÆ.5h–@„4˜¢'˙¸¸|j€∂-5j‘àà®í?JQQŸ⁄⁄Rpp0	ÖBÊß«ùÑ¬¬¬j§ôS*ïTø~}
•SßNë©©){ß5‰N[ù:u""“ÙÂrtt§êêÊ+ßÕ_éªG›Á∆ÿÿò/^Ã~{Ÿ”|nn.µi”ÜlllË⁄µk/U∆´ÜR©§¿¿@


b~i'Nú†-[∂– ï+iÈ“•îêê@Dö˝¬¡√√ÉfÃò¡¸Ωíìì)66ñLç5"+++277'jﬁº9Õò1Éé=Zmˇsı‚˛}]mppp†∆ç?∑~5EÉ(((àÍ‘©Cb±òFèÕ∆dAAŸ€€”—£Gâà4¥ÃoÍÛ™ëõõKï“∞U˜¸•Kóíéé”ÿøä∫ß••Qrr2≠^Ωö.\∏¿˙[›ÔCÄÉÉ≈««Svv6ôõõSì&MH©TRvv∂ÜÔWU9333≠9Œ‚‚ÍÍJAi‰,,,®Iì&l›™®ë9r$˘˙˙÷xû:uäÃÕÕ©uÎ÷DD‰ÌÌ]≠Ôb-^ÔÂ1ÇÛ«j›∫5¸¸¸ â∞oﬂ>ú?˛π˜é?%%%X∑nÚÚÚ ëH0yÚd¨Zµ
±±±®WØÍ’´á´WØ¬ÀÀgœûÚ…›e2RRRêêêÄºº<∆+ƒùö˚ıÎá¸¸|ƒ≈≈aÁŒù4hKÓùûûéuÎ÷·„è?∆◊_çyÛÊi≠Á≥êêê OOOƒƒƒ†^Ωz=z4vÔﬁ≠¡'óÀÒ«@$a…í%GNNƒb1Æ_ø[[[¸˛˚Ô;v,
” ™üÿ’”õâ≈b:tÌ⁄µÉõõ∫vÌZ…´¶êH$8vÏ˙ÙÈÉ¶Mõ¬ÀÀƒ«ü∑— ÁÛÒ·Cå3F√ˇH.ó£∞∞<âyyy¨üÛÚÚX==zÑ#Gé‡·√»»»@qq1·‡‡ Ãû=Õö5” é≠*a:á◊©y“÷øÍÛMGG¨ƒ7Xp„â£ô<y2Àh0h– ,Z¥H„˘\ÇÚ}˚ˆ°m€∂Ñ÷C"ëÄœÁ„»ë#Æ—=ˆˆˆ "<˝ıWçµè⁄Ê7n›››!ì…‡ÍÍ
°P»¸y?Ddee!00gŒúAﬂæ}akkãƒƒD∆ßWtuuµ~œY\ÑB!Nû<	ã∫ˇ]á°°°Ftw≈q§T*kD≠¬ÁÛ1d»ƒ∆∆b î)ò5kÛØ´.j∂/Ü˜jeTÁ‰:{ˆ,RSSqÂ ∆àngg˜‹2RRRpÏÿ1‰‰‰@(bÊÃôXµjû<yÇºº<899¡ŸŸæææØÑ^°oﬂæh€∂-¸˝˝ô≥≠∫†ìîîÑzıÍ¡÷÷˜Ó›C›∫u·ÁÁá'Oû`ÙË—‡Û˘8~¸8ö6mäfÕö!88∏C6∑9Úx<¯˘˘°]ªv¯˘Áü—¨Y3$&&¢U´VÏôÅ ôôô¯Í´Ø∞p·BÙÏŸÓÓÓå˙a’™Uààà@√ÜEG\qRsNÙÕö5√§Iì0`¿ ƒ««£eÀñ’
sœ[<∑lŸÇã/bÕö5Xµjæ˘Êòòò  ‹‹‹`hh###¶⁄ÁhS‘	=À  PRR•R…˛_ZZäííJKKADœ5Õñîî‡Ó›ªXæ|9.^ºâDWWW4k÷åqéq‰ñGé¡˛˝˚qÍ‘)‹ªwèï˝¯Òc¯¯¯`ˆÏŸÚÚbNÂS{=Øè^á[Uä:∫tÈÇõ7o"//Ô•IN@1bÀU9oﬁ<|˘ÂóUﬁchhàÙÙtV◊˜¡|ZT*qÊÃtË–·π◊◊©SÈÈÈË◊Øé9ÚRœ4.8Åç;T~®fU†|Ã)ïJ˘|à≈b$&&bﬁºy˜˜Gœû=±n›∫jÔØ °ü£Ú˜˜«oø˝;;;≠ALÔ2˝Hu000@›∫u´\õ
ÙÙÙû∏ÂÏÏ‹∏qÉÒŒπππÅ«„¡ÿÿ¯u6·?Ö˜Jê„6>ïJÖ©Sß¢Iì&
Ö»ŒŒ∆±c«™]êT*Z∂l…¸∆ƒb1bbb∞lŸ2\ºxÈÈÈÛÛC√ÜÄ#Gé‘H0¨™éÅ ˚ˆÌ√Ì€∑Q©znEÅ@Ä¿““ÁœüGﬂæ}allÃ~˝¸¸  ëëëêÀÂX¥h¶Oüé‡‡`@}s„Û˘ÿΩ{7\\\‡ÌÌ777DGG£i”¶uã≈6lVÆ\âÒ„«#..éïà)S¶†sÁŒ∏tÈíFd≈Ù]ÍÔÉ„§˙‰ìOò0«˝¶çÎy}XØ^=,_æú	ûWÆ\¡’´WÒ˜ﬂ„Ò„«P*ï(**Çææ>ÎnA—’’eÏ‰ú@ß´´ÀN«!,üœgf&&&033Éππ9,,,ÿﬂ@π«ì'OêïïÖƒƒD¨]ªSßNÖ\.áP(Ñ°°!û>} í§;;;cË–°Ë÷≠[µ¸J⁄¸◊*B€òÆI˙*°ŒI∆ijßLôÇc«é12€äcÆ&Â…d2Lô2±±±033√Ãô3—Ø_øÁ¶gk–†RSSYYÒæ	!
Ö∂∂∂HOOØîÜç;®˛¸ÛœXæ|9


ôLÜyÛÊ1ˇƒsÁŒΩŒ≈˜≠Ô^\™) ÏΩ`¡|˙Èß¯‰ìO‡ÏÏå_˝uÍ‘ÅH$bYJJJ¥¶¶™à~˝˙a›∫u,øv≈LÔ∫FŒ””ì˝≠Œì˜<x<ÊKÕ≠—R©îÓ'MöÑﬂ~˚···Ã«ı˙ıÎ011ÅJ•¬≥gœ`kk˚∫öıü√{%»ˇÑ@_∫t	)))Ë“•:uÍƒú‚´
/Có.]‡ËËÅ@Ä˚˜Ôc‹∏qÿΩ{7§R)ƒb1fÃòÅ°Cá‚´ØæÇT*≈⁄µkµ≤©´„‚≈ã∏tÈ.^ºàÏÏlËÍÍ¬ﬁﬁü|Ú	∆çáû={V¢Á‡¥1«è«O?˝Ñºº<¸Ù”O6låååêùùç•Kób“§IË›ª7ÑB!⁄∂mãV≠Za–†AX±b;Usõõ:+|›∫u—Ω{w¸¸ÛœË–°d2$âµà@ ¿ñ-[–±cG$%%1Gz>üèÒ„«#--˛˛˛8{ˆ,Ê*jÊ‘S≠ Â⁄ï‚‚btÓ‹?ˇ¸3˙˜ÔœÓy“€äø9;;√ŸŸπJSTUtÍøU‹,´'*ï
/^DRR222pıÍU‰‰‰∞¥O|>•••∞∑∑áéé7n777¥h—Õö5{©‡ãwEÀ§ﬁÖÖÖpvv∆‰…ì±q„F¶*”«T˜.1fÃ8p B°6l@Î÷≠!ã!óÀüK[”∫ukú8q¢⁄@á˜	Å ...HKKÉ@ ÄL&c9*'Oûåm€∂AOO¿í%KòØ{˜ÓHIIÅD"aÛπœáëëæ¯‚XXX†ˇ˛ÏÄ‚ÓÓéÛÁœc˙ÙÈË—£5jÑÉjêÃWE=¢???ËËË†††@Îÿ|_5rœÉ±±1RRRÿ‹ïJ•‡Û˘8}˙4¬¬¬†´´ã‘‘T6Nsrr‡ÊÊ∆àÔ”““PØ^Ω∑ŸÑ
ÔÕ™®æ!œû=ÊÊÊ∏tÈñ-[∆N⁄6ï§§$»d2Ñáá≥ËæÄÄ <uÍ‘ÅÉÉÜÇq„∆ ÓﬁΩã.]∫‡ÎØø∆§Iì‡‰‰§±Ÿ$&&"::ßOüFqq1ååå`ee·Ÿ≥gcæx‹bÕA$°}˚ˆˆˆf‹P%%%¯Èßü‡ÂÂ777‹Ω{DÀñ-ëôô	 X¥hö4iÇõ7o¬””"ë®íπâœÁ„ßü~BÎ÷≠aeeccc¸√ò5kñÜoPA◊§IÑÖÖU“z¨[∑Ω{˜FÎ÷≠qÁŒvoE!à˚ó+w…í%ıı≈·√±~˝zÏﬁΩõµO5Y$kÓùWÃ‘”)
\ªvôôô(((@vv6nﬂæç††† Oü>≈≥gœ4r,ÍÎÎ√¬¬VVVLªÈÔÔSSSXZZ2ÛhEçJM7Äw*ï
ÖÖÖã≈ò8q"VÆ\âc«éA,3wÑäÇW≈Ã„¥i”KKK¨X±;v‘≠	gYã-†T*qÎ÷-Ì˚Ææ/>üèV≠Z·‘©SLê3fˆÔﬂ+++|˜›wË’´x<ÚÚÚPXXài”¶!&&∑n›Çªª;fœûç¸Ò?°Q˚∑011Åøø?&Oûå-[∂‡◊_ÖT*ENN¨≠≠çp2÷÷÷6lñ-[ôLôLˆ‹ÚπTw%%%lR«ãDvæO055Eaa!”‚Òx<¥m€WÆ\A◊Æ]Ò›wﬂ±9ŒEÛü={]∫tÅΩΩ=\]]QZZ˙∂õÒ¡‡Ω‰‘Uæ[∂l¡Ãô3±h—"8::2ˇ3mÉL&√◊_ç!CÜ∞Å’ø`≈äh÷¨ƒb1æˇ˛{frù:u*-ZÑ^Ωz·£è>¬»ë#1oﬁ<§ßßc‡¿ÅHOOGΩzı0gŒÙÌ€ó=K=ÖVù:u0i“$ `'nIII∏xÒ"Œú9S…iºsÁŒÿ¥iåﬂˇ666ò:u*¶OüëHÑa√ÜaÓ‹π¯ı◊_´Ï+777XYYaÛÊÕ√Ó›ªÒŸgü¡⁄⁄Z√ø-''¸Ò¨≠≠Ò√?`¸¯ÒïÃ¥æææpttƒﬂˇ]IßMò+))AXXö5kÜÓ›ªC*ï¬≈≈AAA®Sß”¸©ìL™˚˚Uüœá\.«„«èëóóá ??P©Tl¡-((– 8ö•Râ≤≤2ËÍÍBOOèi-ÕÃÃ`bbwww8;;√——ÓÓÓh‹∏qµ⁄:ÆNÔr*±Éúú¶â[µj‚„„—∏qcîîîT«Í‡˙#''&L¿·√á·‡‡ÄΩ{˜¢m€∂¥(/.»%++´mÀ˚nç
Öx‡∫wÔé.†¥¥ßNùÇóóó∆ÿ‚ÇBÑB!<<<0m⁄4Ãû=ü}ˆŸ€n {ïJÖ6m⁄`˚ˆÌhŸ≤%¸¸¸Ø·‹∞aCÊì;sÊL¸˛˚Ôÿ∫u´ÜŸ±*4oﬁ999ZÁ\?>4BWWyyyò6mˆÓ›ãzıÍ·‘©SÃw8//èàØZµ
SßNE˚ˆÌów&ÌáÄ˜Bê„Ñ8ns~ˆÏ¬√√·ËË»¥hU	¸ÒSÁÂ¡qqqHNN∆/ø¸Ç+WÆ ++¿?—òAAAx˙Ù)V≠Zoool›∫k÷¨ÅR©Dù:upıÍUH$‰‰‰`’™U∏|˘2Æ^Ωäá¬‘‘>è«c<[‹Ê«Â%]≤d	Í÷≠ÀLñÍ(++Éãã~ˇ˝w;v;vÏ@∑n›0˛|‰ÂÂa‘®Qÿ≤eé=äÓ›ª≥Ú+jÂzÙËÅ-[∂ 11´V≠“v‡‡ÏÏÖBÅq„∆a¡ÇË”ßD"ëF_r…∫9aé«„±lÍm„|Ê∏z∏ªªc˜Ó›∏rÂ
∂oﬂé∏∏8lﬂæù®T*îïïAGGßZÜp]]]v˜∑˙w∆∆∆
ÖâDpttÑX,Üùù§R)‹››ahh333H•“ÕZˇ<ﬂ4u≥Ã˚ıCêT*≈·√±uÎVl€∂M#7•∂˛Søw˘ÚÂò5k
±m€6ÑÜÜB°P¸k≥®©©)Æ^Ωä:ºS¬sU&}NhïÀÂl≠IKK√É‰…‹Ω{ó%OJJBTT>ÃÑVÆŒz¿ÁÛÜ9sÊ`„∆çP*ïå≤’C,„ÔøˇÜP(Dff&ÜÇFça‚ƒâò;w.ÎoÖBÅÓ›ªcƒà1b∫vÌZ„ı¬€€˚?'»ÈÈÈ!//Õö5Cii)æˇ˛{ÑÖÖ1-¶\.gJ
???¸˝˜ﬂÿºy3:wÓåÙÙt<{ˆ¨∆˘YkÒ|º;ßIS(¯˙ÎØ·‡‡ÄÀó/C°P0-RU¸œ?ˇå#F∞MdÚ‰…h“§	3kFGGC,3*†¸$—°C899a”¶M¯˝˜ﬂÒÙÈSÃû=#GéÑH$Bœû=Ò◊_¡¿¿ NNNh‹∏1LLLêüüèuÎ÷a€∂mïÍRXXàííÏﬁΩCáetÍ¯Ûœ?·ÊÊOOOÙÔﬂgœûÖááBBB∞}˚v ÂâÊW≠Z≈9ı~‚˙aÃò1ÿ∏q#D"ÃÃÃ∞yÛf2LN%ÆR©∞`¡Ïÿ±àçç≠d¶Æ(Ã	ÖB≠¬gj‰æwwwáªª;∫wÔÆaÍT7yrë¶U°:ácı˚*˙¬Ωh*ûˇ*8Aã£üh€∂-.\∏Ä¥¥4Fn\‰r9Æ\πÇ˛˝˚„ﬁΩ{X∂l/^¨ı⁄óIMîSv§§§0"Í7ç™Ç,∏∫dff"11/^ƒï+WêùùçGè1∑333X[[£uÎ÷¿Ò„«Ò◊_1∑ŒU1=ß·óÀÂË◊ØÊœüèõ7o¢q„∆Xæ|y≠ W2SßNP˛û6n‹à‡‡`å3€∑o«…ì'Ÿ·î«„!==Àó/«ÏŸ≥Å3gŒ<˜EEEU˛ˆ°
r@9…å30x`˘|dff≤}Z$aŸ≤eò?><==Y?«‘¿˘◊‚’‡ù‰‘O¶B°¿ê!C∞lŸ2∏∏∏TKIêòòëHÑ˛˝˚(–Œù;ôLÜ1c∆‡È”ßP(Ë”ßäãã!ëH`nnépH$XYY!++2ôˇ˝7ƒb1V≠ZÖ)S¶¿””õ6m™îÈ·”O?Eù:u¥Ê°îJ•Ë“•ÏÏÏ∞ˇ~,_æ£Gè∆’´WQ∑n]8&&&ã≈ÿ∂múúú∞`¡ÏŸ≥ﬁﬁﬁÃ¿ÖÕs‘"@e≠«qÙı◊_£[∑nÿø?ÊŒù´Qu¡+))	ˆˆˆ¯˚Ôø·„„S)´CMÖπä>sÍî%úπËUAΩÕ‹¶W+¿Ω‘˝¸6làá"??ø ‡îúú§§§ ))	ˇ˝7íííêõõã¶Mõ‚ÿ±cP©T¯·ápË–!tÌ⁄ıïh'Î‘©Éîî∫7È'«ô˜qÙËQú:u
WÆ\¡Ω{˜PXXà““RËÈÈ¡––éééh”¶ö6m
ÖB¶1Ê1CáÖ≥≥3&NúàeÀñ°Cá¯ÓªÔ∞{˜ntÓ‹Y„Ÿ‹¸ã≈puu≈¢Eã0k÷,ÙÌ€2ôÏ•¯¸˛K¯Ë£èPVVÜm€∂°{˜Ó»……Ahh(BCC—≥gO8;;£gœûÿ∏q#„˘‰|∫~˘ÂóôWπuY>‘`†¸ê†‹ÖâœÁC$!//;vƒÉ∞b≈
ÙÔﬂôôôLQ2˛||˙Èß\^ﬂ∑âw^ê˛I”ƒ-®˝˙ıC◊Æ]RÌ}{˜ÓEõ6m îq£Gèfˆ˚m€∂¡‹‹ﬂ|Ûåççaff±Xå““RFm ÒÒÒ∏rÂ
ÑB!˙ÙÈÉÉb€∂måœM&ìihÜvÓ‹âõ7oj§ôôô8~¸8“““pˆÏYÙÌ€666		¡ƒâq˘ÚeÑÜÜ"??|>ü˛9æˇ˛{¨X±â_˝5V¨XèáÄÄ $&&¢i”¶ïÃ:ú∂≠q„∆8tË”V•π‰ÑÆÆ]ª¢]ªv∏uÎñΩHU¬Á3«9«sP˜√´)M≈À‚uRq|ËP◊ƒyyy°∞∞?¸bccëòòàúú‰‰‰‡È”ßx˙Ù)îJ%£t122ÇD"AªvÌ0sÊLÖB(
H•R¯˚˚#11ëçèïJÖÜ‚‡¡ÉØ®’UÉ”NﬁΩ{á∆Ÿ≥gëôôâá‚…ì'P*ï–’’Öôô|||–æ}{¯¯¯¿ÀÀ÷÷÷ÃáPõ¶Ω¢è‡‚≈ã1n‹8|Ò≈ã≈Ë’´ˆÌ€áŒù;W“\
»ÂrtÎ÷´WØF„∆ç°T*5ÃWµ–kkkÙÓ›ﬂ|ÛFå¡ﬁçB°¿∆çq˛¸y:R©k÷¨aëÒ5v Ä‚‚‚*”””CYYŸ;ÂSÀ˘q?œ#Ï---ÖL&è«c„p–†Aÿªw/ö5kÜ7n∞ÁpnD«éC~~>ÊÕõπ\˛¡íPøqºÂÃœóÊ£®®àbccYj)kkÎ*”»§¶¶RAA“©Sßÿ˜∂∂∂CqqqÄ)44î¶LôB†∫uÎíΩΩ=R∑n›HOOèíììâ®<≠óÆ•b
Æk◊ÆQQQ5h–Ä⁄¥i£µ^EEEF:::¥p·B"*O∂niiIm⁄¥!'''ö4iµm€ñ•+**"äçç•µk◊≤∂≈««k§ÓRÔ+Óﬁ'NêÉÉŸ€€≥∂Tóö'..é$	ÖÜÜ≤2*&–.**¢‡‡`íH$©º¥µY=≠ÀáíÚÁCÑ≥≥3 ///≤≤≤"GGGÚÛÛ£†† 
£3fPLL•••±˜»•#SˇpﬂÌ⁄µãlmm_I ´¢¢" »» 6/^ÍcP=SQQegg”Í’´)""Ç⁄∂mK>>>dooOVVV‰‚‚B~~~Lëëë¥~˝z ŒŒ~°6h{6˜oAAkó*êõ˚Í)õ∏{ÚÛÛ);;õ¨≠≠â®<©˘ ï+_∏?˛ãP*ï$ïJY™*n¨ÊÁÁ≥æû4iôööíèè≈««——£G…‹‹úçÎäcòKW’ªwoj‹∏1{ñ˙'::ö‹››µ¶≤ÛÚÚz„)∫∏=+77óÏÌÌ)--ç≤≥≥YJHÆûNNN¥zıÍJ©Ω∏œ¨Y≥»ﬁﬁû•Åú6môõõS˝˙ıYJKıπñëëA˘˘˘dkkK}_ãèw^#ßnFπxÒ"ÃÃÃêûû^mƒãèèŒû=ã““R∆wË–! @hh(ººº`aa¡(7‘qÛÊM,\∏ªwÔFØ^ΩX•ƒƒD?~º“ıB°b±ø¸Ú“””±oﬂ>≠'Ø”ßOcœû=X¥h,X ±Xå…ì'cÛÊÕ8˛<ÊÃôÉ?ˇ¸±±± ¿NÉÕõ7«7ﬂ|ÉsÁŒa˙ÙÈ∏|˘2|||–ºys|ˇ˝˜(,,‘`hW75⁄ÿÿ∞ì;ÁXÌÔÔ_©n"ërπÅÅÅ¯˘Áü¬û√˘±ˇh,∂lŸÇàà‘Ø_ÁœügAúDEs™:-g´≈€«æ}˚0r‰Hîïï°®®ËÖL⁄N“‹˝˛˛˛(--EVVúúú˛Uy<;Õ?x†J˛4ı¨/8îk◊Æ·‚≈ã∏yÛ&RRRêõõã¢¢"®T*¶çóH$h€∂-Z¥hÅè>˙àEó/ØÈU˜£„(à8¨6 ??ªwÔ∆à# óÀaffÜ‘‘TfEPÔé˚—ÿÿÄ∑∑7:ÑQ£FΩT›˛K())¡‰…ì1gŒå9í≠Cú÷S.ócÊÃôò9s&ÜÜ––P¯˘˘a‹∏qÃe£∫1PÈØÉÉttt êìì√|Ò§RÈ7ªröHÆÌJ•R√ÏÄQâTÄVRRÇÇÇÖBÏ€∑sÊÃÅééñ,YÇhî√˘x:;;cÊÃô  É¢d2Ym∞√+ƒ;/»qHNNÜááé9sss≠‰Ø‹bûîî[[[fñXµjÛw∏{˜.¥nF˛˛˛ò9s&Nù:Öòò»Âr|ˇ˝˜Xªv-6l®’T§P(0c∆tÎ÷M# Oﬂ|Ûúúú0yÚdòòò`ˆÏŸ1bˆÔﬂœúAwÏÿÅ¬¬Bç˚Ä1c∆@°P¿……	´WØFtt4$	Œü?è†††Jœ„ÛÀS“cœû=pww«©Sß0vÏX≠ı„|Z∑nçŒù;#((WØ^ÖX,f¬gn-,,ƒ/ø¸Çq„∆¡««õ6mBHHà˝ä˙Ü mhØËﬁ‘MªwÔ∆∫uÎpıÍUfBÁËZjäÍÆÂÛ˘êJ•044ƒé;™Møı"011¡â'*Qê®õ1Ôﬂøè§§$;v©©©x‡û>}
†ú.¡‘‘ıÎ◊Ghh(|}}···¡§◊ÌØ£nã≈X∂l,,,∞gœå1Çü>}AAAïLqú£ππ9—Æ];lÿ∞·µ÷˘CANN"##±b≈
tÔﬁGè≠“Ø-66◊Ø_«Áüé¡ÉÉà Tq≠R©†ØØ}}}(
ú;w˜Ôﬂáûû„Z Ÿ⁄¥i===ËÈÈ°¥¥¥Zﬂ∫Wèá9sÊ`Â ïÃ,∞gœ‹πs%%%HOOáëë †eÀñ–——atM\;πCπ\.á\.«ç7∞d…å3”ßO◊0◊™”Kqc?::Kó.Ö@ Äµµu%◊ùZº<ﬁA 222X$QUu‹I ==ù•â∏vÌzÙËÅCá¡¬¬ç7Æ2-<<ù;wÜJ•B˜Ó›Ä––P≠œ+))¡¨Y≥êììÉ≠[∑j¸¶~ 9}˙4é?éÃÃLå5
ﬂˇ=∆çáËËh¯˙˙2ø∏äËﬂø?æ¯‚?~æææ8uÍ˚ÕŸŸ˝ıóVAék∑ÖÖNü>ç&Mö∞TaUÅõp€∑oáT*Exx8~˛˘gÖBÊ∑√mzÖÖÖ¯Ò«Ä!CÜ‡◊_Ell,Û‚“êU'–’'º~‰‰‰`ÛÊÕÿ±cÓ›ªáíí¥j’
∏}˚6>‡ü(fœÀƒQXXXi#R#"ëGé˘WÇw0„Û˘ppp¿πsÁ óÀq˛¸yú<y∏|˘2<x π\"Çëë,--QßNÙÓ›Õõ7áááá∆∏„¸ﬂî≥5wp·6√^ΩzÅœÁcŸ≤eå¢H ¿œœ Ä*µ@ÆÆÆ∏zı*∆çáï+Wæë˙øÔ‡2Îú={ÿ∑o:tË†1ﬁ’777l€∂2ôç5zÓ¡•¨¨◊Ø_GXX
·ËËàªwÔ¬¿¿ YYY(..∆Ì€∑¡ÁÛq˚ˆm‹ø÷÷÷5
§¯∑())¡ú9s0~¸x∆Å‚‚b<zÙ'Ndá<ccc<zÙø˛˙+ÓﬂøèÇÇç≤∏ÒÀÊΩººpıÍUˆõ˙·É“d2§R)6làFç°Oü>µæqØÔÖ «é¬¬B¥h—{˜ÓE›∫uµ^Àm@wÓ‹AÔﬁΩŸ˝>ƒ§Iì’W_±hWÍ5//˜Ó›√∆çQXXà´WØ≤≈µ*®T*¿››ù:u¬_|°ë÷™Kó.puuÖ££#ªÁ€oø≈Ë—£±xÒb4sÊÃAzz:6oﬁå€∑o£®®&&&∞∂∂!..É∆¸¡ ∞±±Abb¢÷˙póT*Enn.ÇÇÇ∞eÀñj€°NF∫sÁN·¸˘Û¶ı^.óc¿ÄË“•ö6m
OOO<xŒŒŒlb´G™?ßVx{µP√¸Ò∂lŸÇã/‚Ò„«000@≥fÕÌ∑ﬂ¬œœb±¶¶¶¯Ì∑ﬂ–™U+G¸7n ++è=búg\$Î„«èÒÙÈS„Ÿ≥gL/--EII	   @Då+Œù;Ï¿≈i6àà}‘°ç'(w®âD»……ARR‚‚‚PVVÅ@ +++‘©S°°°h“§	Í÷≠ÀÃ°⁄¥¬oôôôpvvfí«é√Œù;—•KÑÜÜb¸¯Òå˙®a√ÜUŒQÓ˝x{{„¿Å∞∑∑Ø3àºI®õGgœûç!CÜ‡·√áZ”r} E·ﬁΩ{’ïîîî¿’’±±±ïÑæ˘ÛÁc«éã≈022“– øç<¨\¬˙ííòòò`Í‘©©ÛÚÚò‚Aı∑û@"ëhÂRTÔO©Täq„∆·Ó›ª8r‰àl-^ﬁAéCii)PPP†ïLW}±V(011PÆï‡¸.]∫ƒ"R’Ô„÷¶Mõ``` 777Lô2÷÷÷hÿ∞!Ä™MJ©©©–””√Ç0wÓ\Ï⁄µ3gŒƒà#4Ú¬rã9 AOOªvÌBªvÌ0}˙t2FFF(**bî666,Ø›å3ÏŸ3\ø~ﬁﬁﬁ∞≥≥´V=œÁÛ·‰‰ÑÛÁœ√ÕÕ≠Zæ#ı~ªˇ>ZµjÖ—£G£gœûê…d)ï8:N˚)ëHpË–!Ãû=æææ6lKîÃEµrööZÓﬂ°‚‰xô~˝ıWú;wé•sÛÙÙƒà#–°Cfé‰Ë*LMMÒ‰…DEEa î)P*ïL0”””è«ÉÆÆ.tuuaddcccA(¬⁄⁄ñññêJ•Z˝ﬂ\\\`ff;;;˘|ñ£ñW?@s¡ˆÏïJ%+¢Oü>ï⁄ØM´˚Æå3âD¬Ñπ}˚ˆ!,,;vƒﬂˇ 9)›‹‹PRRÇºº<≠ãíí‘≠[õ6mÇªª;îJÂõnŒ{	u-—∏q„∞oﬂ>xxx‡Í’´ï\Y*Ç#æ≠*/®L&É∑∑7RSS°P(pÒ‚E≥‘`>ƒÕõ7¢A¡ƒÁÛ´ıC{ù»œœGhh(<xÄGèA•R·ÙÈ”»œœáììlmmADU¶ã≈x˙Ùi•=Xõ˘9))	Î◊ØGbb"ÀØ\UäøZº<ﬁAN•R±M¶∏∏∏ 'î=yÚVVV  ˝∏?//è	f⁄ÓKLLÑΩΩ=x<Nû<©ıZudee·ÏŸ≥¯‰ìO0a¬4k÷~~~ò?>6oﬁåÇÇx{{≥S9èœíììvÓ‹â‡‡`XXX‡¬Ö®Sß\]]aaaÅ &&∫∫∫∏sÁ$	ÑB!?~ prr™6Ù].ó√∆∆˘˘˘077GqqÒsìî´õú-ZÑ?ˇ¸ıÎ◊«ıÎ◊ô¡ë>r';.‡b√Ü8x ∆çáù;w"::ö%HØË^rrrp„∆¸ˆ€o8sÊ>|ÿ⁄⁄¬œœ”ßOg‘3à≈btÓ‹<ﬂ~˚->|ëH±XGGGH•RXYY±<≤U°&È∂∏EΩ¢C3GˇÛ_ÅJ•ÇX,∆ÚÂÀÒ’W_aÌ⁄µ®Sß:wÓÖBccc\ø~AAA–◊◊«ù;wXêñ˙!S°P¿÷÷ñ˘)ΩçŒ˚
Œ$òììÉ√á√ÕÕ-[∂ƒ…ì'YŒPm‡Òxx‡AïÂ
ÖBXYY!##}˙ÙaêGè¡≈≈			¯Ï≥œ‡ÓÓé•Kó≤2º5AŒ»»ßNùBÁŒù1uÍTl⁄¥IÉ&ä´uÑ”≈≈≈∞∑∑Ó≥:wÓåoæ˘ÜÌ£µ‹qØÔç WRR]]](
∆cU8nŒÃ¢ÆëS(Zµy‹}®WØã0˙¯„è´µÈ2m€∂≈/ø¸Çòò¸√HLLƒW_}ÖÿÿX§¶¶"##É˘ÂpçJ•¬«åΩ{˜ÇœÁ√ÕÕÜÜÜ8wÓ€(π7;;;÷ﬁííddd†Y≥fpuuÖ°°°1hE≤T+++<}˙<eeeZOD⁄˙Å;%˝Ò«ˆˆ∆ò1c∞b≈
¢_ıø9‚“¿¿@‹æ}_˝5Üå1ÅÅÅLœE∏˛:m—ï’ÅãÑNHH@VV>|]]]H$¢}˚ˆh›∫5ü\˘ú–îøü˚˜Ô„ﬁΩ{8x $	—æ}˚J¡/Í¬ﬂÀÔj{ßˇµ˜ÃA$°eÀñ∏zı*V¨XÅ‡‡`¸˝˜ﬂÃ¥ÃÂ]Â†ßßá¸¸¸JÂpÔ“ÃÃåô¥+
rÍá¥Z-GepÆ&*ï
◊Ø_áìììÜ0«293,ónO€˚‡†P(‡‡‡ cccƒ≈≈±Ô∏˜`eeÖ∫uÎ¢Q£FÏÓΩº-ANGGR©êH$ï8è;Üû={2Àè6C$±]EöCá°Gèò0aT£}ß/è˜Fê„ âPXX[[€*Øπ~˝:,,,4ÑØö
J•vvvâDxˆÏYµBﬂŒù;qÎ÷-A ÁÛ·ÂÂÖØæ˙
.ƒ„«è±tÈRH•“JŒÀ999∞¥¥dZ:Å@†5ÄÉ£)Yæ|9˚é[X8?ã™6[Å@Ä““RËËËº¢Œ]/ëHp‚ƒ	¯˚˚√««£Fç“†8Qá∫Ê`Ú‰…ò<y2>˝ÙSå?"ëCáeŒ›@π6S›g‰}öË/"‡®;Rs~9Í4 ‹wˇ˝7Œú9É3gŒ %%˜ÔﬂáR©ÑÖÖ<==1lÿ0¥h—Ç%±Á˙ø‚ªÂÒxï~S(ÃÛ£è>Bœû=q·¬Ãú9âÌ€∑«¿Å—¨Y3f˛Qœ[Qmu˘/	‹˚Â˙oƒààççEÉêïï•a‚„f∫∫∫,Oß\.á≠≠mï‘JÅ &&&Ã2ADÿæ};ƒRwx[ÈÃﬁeTÏèªwÔ¬◊◊ˆˆˆπnπ9…„Ò‡ËËàø˛˙ëëëïÊ 77,,,4ÃêÍÎò©©)


PPPP…/Ù] ßÏ  ˜$©T
KKKËÈÈ¡⁄⁄öıÆ=zÑ:uÍ –Lè(óÀ1q‚DlŸ≤≥fÕb¡NÍÄjØÔï «-`ÍY¥Å3˘qP(–◊◊Øq∫ ===à≈‚j˝ `˙ÙÈêH$∏}˚6„SìJ•(((Ä££#0q‚D öπMÅÚàS•R©q
¨™~vvvãã˙b]]‘'˜ΩÆÆnïõ˛Û†P(`eeÖ+V`Ãò1h◊ÆºΩΩëóó«¥ÄUÖëÛx<l⁄¥	ÖÖÖ¯ÓªÔ∞q„F¨X±~~~?~ºF¥-«˘ıÆhÈ™ÀHQU¥ÛÛ†Æâ;yÚ$Œü?èSßN±H∂““R¬““Õõ7Gã-Pø~}òõõWvü˜Œ+˙ãNù:B°ã-BJJ
úùùØ⁄¶Mõ∞ˇ~¸˙ÎØ022Ç´´+¬¬¬0bƒàJÂ™Á ≠
Ø"-◊˚>üèòòƒ∆∆bˇ˛˝066fQ}Í|å∂∂∂æ≠ÊÊÊÏ~•RYÂö£Ì†£.Ù’?º8.^ºàÒ„«£U´Vh‹∏1ã‚æˇ>ã∂<vÏ Ì„Z˝ùhõ%%%x˙Ù)


PVVˆzÒ044!==<Ä´´+˚ç[œ9◊@≥M\˚Ø_øé““R‘≠[W#≈_JJ
:wÓ]]]<xÏﬁ˜Èê˛>‚ΩYqπ®H$b]u◊™;sº=‹©@=ÂWEp>*‹ﬂ◊Ø_Ø!ÀÁÛÒÕ7ﬂ‡È”ßËﬁΩ;Nü>Õ4wü~˙)æˇ˛{òòòh$\÷6…=zƒ¥ÜLÀ®.†…ÂrH$2ässsfû|ﬁ‚†T*°ßß˜“ã<'8~Ú…'¯Ï≥œ–®Q#§ßßC*ï"''Áπ—\@˘$û;w.ÊŒùãÉb˘ÚÂÉP(Ñóóö7oŒ“‰p‡ËK‘Î°éW-ÏΩåÜ≠™r∏w£P(êôôâì'O‚ÚÂÀ∏wÔÓﬁΩ´¡Á‰··Åé;≤‹ú÷÷÷/›6ÓôE«Õõ7Ò˚Ôø#++%%%ÿµkÚÚÚ`ffÜgœûA°P†^ΩzX¥h-Z Xªv-∂oﬂé9sÊ`⁄¥i∞±±Åüü∆å√¥uÍ;u”JM˚Ë}Á¸3‘€%ì…p˚ˆm?~111HKKcQÍNNNË–°ÉV„Ì€∑„È”ß–——ÅÖÖÄÚÒêüüìJ˝ßM√FD066fˇˇØ
–ˇQQQ:t(ëHÑQ£F±˘‡ÔÔèù;wj2´Z+¥çy777|˚Ì∑‡Û˘⁄Ø∑Ö‚‚b¢Y≥fxÙË‚‡´U*ïÜ ¶ŒípÚ‰IfvÂÚ◊ﬁæ}›∫u√∫uÎ óÀ5\h‘Ò!¨Ôﬁ´ôœm∫∫∫ï8n‘!4kkk†§§∏ˇ~ï˜
ÖB‰ÂÂ(w
MJJBHHH%ÛÇ…'ü ::VVV>|8\\\„è?‚…ì'X∞`ÅÜ∞®Œ°∆˘»]πr666»……A~~æ÷¨ ·C33é∆‰˛˝˚œ5y)
ËÈÈA.ó?W ÷Æ˛"ëàE¢zyya◊Æ]

™±…ç”‚≤p˜eÀñaÔﬁΩ¯ı◊_±fÕòòò¿€€ù;wÆùXQ}ûFˆEQ”≈Ö€‹

ahhàã/‚‚≈ã∏q„{ó‹5ÜÜÜ,s@˝˙ı1|¯p4k÷NNNˇjA„JÅ@ÄªwÔ‚Í’´àèè«…ì'Ò‡¡ËÍÍ¬¿¿ 4¿¨Y≥X óÈÄà4¸9>£Fçbõ6mBrr2∫vÌ LM={ˆDdd§Ü`£Õ¸Ú!ÄÀü
î˜˘¸ÅÉ"))	˜Ó›ÉR©ÑÅÅ¸˝˝!óÀaooèMõ6°U´VUr"##Ÿ¯}ˆÏôÜ”xQQQµVÄ'Oû@WWóÒóYZZ≤ﬂ‘˚ΩVÚbhÿ∞!Æ\πÇ_~˘”¶McŸk8Û‡ô3gQ≥:‘ˇˇ√?‡Ë—£–◊◊GAAö5kÜßOü¢wÔﬁhŸ≤%æ˝ˆ€7›¨J~x&&&011¡Øø˛ä»»HdeeaÊÃô∏|˘2tuuaee•¡oßŒ˜	îÔ111ııÖL&CØ^ΩêííÇÜ‚·√áÏ>.hÓCZﬁeºWÇ\YYrrr¿„Òò÷L?SÉX§´ÖÖ.^ºàÆ]ªjΩ◊√√ÄJ•B›∫uY/n”Ã……Åªª;"""∞~˝z‘≠[Cá≈â'p·¬XZZ¬––≠[∑÷Zæ:]¬ıÎ◊1|¯pH•R<zÙ4–⁄ñ≥gœ≤‹““R¶œ  zÆFé”ËÒ˘¸j”öUuøÜ®®(˘|tÈ“É∆ö5kÿu5âf˛Òó7n∆çÖBÅ3gŒ !!˝ıÊÕõái”¶¡‘‘666puue—º~~~,≠Ã´⁄¨8^#u°F&ì··√á∏~˝:nﬂæçÏÏl‹ªwxÚ‰	äääP\\å‚‚bB(¬““NNNF@@ ¸¸¸4ﬁwuÊ⁄™Í≈iÑ8RféOÌ¿Å∏zı*rrr4®j—•K¯¯¯∞~Ro#77™∑p@”¶M—¥iS&≈ƒƒ`€∂mXπr%æ˝ˆ[àD"¯˙˙¢c«é<x∞ÜOÍãh-ﬁ6‘};9à‰‰d\∫t	iiiHIIAvv6”nõõõ£q„∆9r$˙ıÎ«xÓ:wÓåÄÄ dgg#33âââh‹∏1Œù;ásÁŒ·«Daa!úúú†R© ì…`cc√ûœq‰UÖ€∑o√¿¿ 
ÖÇmºj5rˇ
Ö›∫uCXXæ˘ÊDEEa◊Æ]P*ï¯˝˜ﬂü¶zD∏J•ÇããrssÒ˝˜ﬂ√ÀÀã—˜ÏŸ≥áÒp˙¯¯@.ó#%%YYY055}nR˙W"¬≠[∑pˇ˛}ú={wÓ‹AYY@D8~¸8tuuabb]]]\πr€∑oGQQëÜØ˙ºΩtÈQßN¯¯¯`€∂m®dÂzÁ˙áä˜jÊ %%b±ó/_Æ“< e48{ˆ,ÇÉÉ·ÊÊ∆¯ÄÍ‘©É‰‰‰*üä≠[∑B°P ""˝˙ıè9∑ /Y≤QQQË“•~˛˘g888`Ò‚≈Ëﬂø?¶Mõ¶A˛´.z5))	˘˘˘Ë⁄µ+é;Ü““RtÎ÷MÎ=ó.]B√Üëíív“ø}˚ˆs’ı7oﬁÑD"¡Ò„«5RÆº(∏ ñ,YÇzıÍ·´ØæÇ••%¨¨¨–≤eKtË–AkuÜ~Íõé@ @PPÀƒ°R©X∫•”ßO„∆çHIIAaa!û>} ¥õ˙˙˙∞¥¥d@__ÜÜÜÃ1ú^ü={∆ß‚‚b(ïJñcT°P‡È”ßxˆÏKW≈qò∞ºõB°â~~~pqqÅ∑∑76lX)PÉ[‡’€˚<”m≈hVôLÜ´WØ‚œ?ˇƒŸ≥gëïïÖ†∏∏D[[[¯¯¯`‹∏q,•∫r+nÚDôLV•…Z˝{ÆÓƒ–°CîáÆ]ªGé¡≤eÀ0wÓ\ËÎÎ√ﬁﬁ˛˛˛6l¸˝˝+i¸™“‡jØk#êÀÂ∏ˇ>>|àc«é·‚≈ã»  ÇL&É\.GII	Àèiii	8ç7ÜááGï˘^<xÄ/ø¸)))xÚ‰	RRR0r‰Hîññ≤èçç£}4£ËØ\πëHT≠@vÒ‚Eòõõ„˛˝˚‡ÒxÙ.µÁøÉ˙<û>}:Üé˘ÛÁc„∆çXªv-fÕö•¡†Ó:bkkCCC8::B,3ãë±±1Z¥hCCCËÎÎ„ìO>Åéé   X>Ì◊âííl‹∏˚ˆÌckáD"ÅX,ÜüüÚÚÚ`ii	OOO®T*X[[#33ˆˆˆZÉÔ>˚Ï3‰ÂÂA*ïb’™UhŸ≤eµ˘èk«‰õ¡{%»â≈b§¶¶¬››ôôôUFfÒ˘|8::‚‹πsÃågeeÖµk◊¢sÁŒò;wnïœh÷¨ÃÕÕÒÏùyXTÂﬂáoañÜM@YWP◊L”\”¥“‘‹^M”Ã KK3MM≥¨L≥≤üiY©ôYπ‰^bn® (Ç®ÄÄ2¬0¿Äœ˚á◊9Õ ∏îñËπØk.qÊÃŸÊúÁ|ûÔ˙Êõo≤p·B\]]yı’W˘Ë£è‰e,›¨Î◊Ø«h42vÏX˙ˆÌKXXS¶LÆ}x[f-æÚ +4n‹òààû}ˆYBBB¨\1“qÈız≤≥≥y‚â'¯ﬂˇ˛gu”dee›∞.◊ô3g‰ÆÆÆ◊]ˆFXˆJ>|8√ágÔﬁΩlÿ∞Åﬂ~˚çMõ61~¸x<==âçç•k◊Æ¥lŸ9¶J¢*W©4ÛìP———<¿∏∏∏X≈ß=zîîî“““Ä´Yº/^$??É¡ gıVTT»€¥±±ë˚J/∏jÅ’Èt∏ªª£”È®]ª6xzz¢”È¨ˆÈf%)ÜÏfâèè'!!Av—¶••QXXHyy9ÆÆÆ¯˚˚ÀÁ¢Cá’∂ßìé’Ú‹Z&«Hxzz =´+(]ïeUzØºº≠VÀÛœ?œK/Ω\![∑ne«éƒ≈≈Ò„è?RQQÅììëëëÙÍ’ãêêêj{W>KÀ`uTÂŒï&.\ ''á”ßOs˙ÙiRSSπtÈgœû•¨¨çFCYYééé∏ªª„„„CTT···DFF“¢EãkJI˚UπïYyy9/æ¯"æææhµZV¨XÅÇ&Mö`ccCyy9ÖÖÖîññ“øÊŒùKØ^Ω8zÙ(éééÚÔôêê [œ´;÷‰‰d|}}…»»¿ŒŒNyPﬁA|||‰I ƒâi‘®›∫u„±«£uÎ÷Vı„‚‚¯‰ìO¯Ì∑ﬂd˜∏ØØ/ßOüñ◊wÙËQT*ï|]IYüwïJ≈Ãô3Â]999|˝ı◊,Y≤ÑıÎ◊≥n›:úúúpssìRY´ÑÑæ¸ÚKˆÏŸ√ô3gXΩz5É™võJ◊Üü#‰‘j5>>>r±Ãoæ˘Ê∫À˚˘˘ëîî\^ıÍ’cÛÊÕ¸√r&iUòÕfz˜ÓÕW_}≈ÎØøŒ|¿–°Cô3gé,&$QbYGÕ≤®buH¿∏∏8é9¬—£G8tËü~˙©’≤“∫/^ºà…d¢SßNº˘ÊõVñ>£—H„∆çØªÕÀó/”∂m[÷Æ][m)ïõE≤ÑI«i6õi“§	Mö4aÊÃô®T*Yªv-õ7ofÛÊÕÚC”€€õ6m⁄EßNù‰6^ñÁ∆Ú·≠V´âàà∞zxJü5m⁄¥ xBKwáÂos£á]u†;1£‹πsßliÃÃÃî]íÀ.""Çâ'“∂m€j´…_/.—≤Ù\{LÉÅƒƒD
Ÿºy3m⁄¥π•˝Ø,Æ§ÄÊFç—¨Y3˙ıÎGbb",‡¿Å‘©Sá““RÊŒù+gm;99·ÂÂÖßß'ıÍ’√ÀÀ///‹‹‹pttî[~Ÿ€€sÍ‘)´d•¸¸|π"Ω…d‚“•K…n„ää
\]]πrÂ
âââ!®U´B.\(ªªRSSe+πÈ-oÈ∏Æá‰’h4¸ÚÀ/|ˇ˝˜ËızV≠Z≈î)S8p ƒd2@xx8°°°º˛˙ÎÙÓ›õ≈ã ˇ^ÁŒù√««Á∫ìÄ‹‹\¬¬¬∏xÒ‚ﬂïP∏y§$Ö≈ã≥~˝zæ˚Ó;&NúHEE–®Q#bccô2e
SßN™NŒ≤¥éˇ∆“˝'ïÀ2õÕå7éq„∆Y-∑yÛfFé……ì'9˛<ÂÂÂ∏∏∏–∞aC∂lŸRm	E¿˝w‘wcqõjxÓπÁ¯Ûœ?˘Èßühﬁº9gœû≠vŸÃÃLû|ÚIV¨XÅèè´WØÊÕ7ﬂ‰¸˘ÛÑáá3zÙhŸrVuÎ÷e‰»ëÃò1C~8I3*ÀõÆõRπlÉJ•¬œœè'ûxÇÖ“ø“””ŸµkóXm˘ÄxÈ•óàããcﬂæ}Ú…'ü–ªwo‘j5]ªve…í%x{{_ü$m◊◊◊ó¥¥4Z¥h!ª}ˇÕY|ff&ﬂˇ=ªwÔ&55Ω^Oii)ˆˆˆ∏ªª@√Üâää¢c«éÚCÃ≤$ãÂ√˛:ﬂï-Oñ¸€ñä Æ—¯¯x˛¸ÛOvÏÿ¡©Sß‰ƒGGG\]]eó]LL>¯†,≤oÁ`Xy¿µåπÎﬁΩ;YYY7\«ç¨∏“É¡d2QXX(˜Fçççe⁄¥iVc©Ö—¡Éâèè';;õ-[∂HZZö‹QE¬rhR©T\∏pÅ∞∞0Í÷≠ãŸlfÀñ->ú›ªwìííBÌ⁄µÈ–°vvv§§§†◊Îi–†WÆ\!..é¯¯x¸˝˝	£uÎ÷,[∂Læœ§X KnÊa´—hhÿ∞!˛˛˛l›∫ï)S¶›wﬂ±m€∂*≠ÂÔøˇ>≥gœ&''á˙ıÎ3yÚdÜéJ•‚â'û†_ø~<˛¯„’N*BBBX∫t)ü~˙)F£—™˜≤¬øÉdı›Ω{7_|ÒÖOk2ôpww«ÕÕç¿¿@¸˝˝È—£AAA◊\f≥ô»»H^x·9ŒÚN–∂m[ƒÿ±c≠J`ù8qÇ‰‰dâèè'++K∑∞µµ%((à‡‡`|A¢££			QhÓbjîê[±boæ˘&ÈÈÈ¯˙˙≤c«éj+OõÕfÃ§Iìh◊ÆÉÅêê÷Ø_O||<ÔΩ˜………’>ø˝ˆ[∆èOZZZ≠ñ˙ıÎ£—hàãã≥7Û‡µ‹Üüü!!!lŸ≤ÖCá—Ω{w÷¨YCœû=Ø)¨®’jÒııe˙ÙÈ¿’ñYRØ Õõ7Û·áÚÂó_Ze÷YÆc€∂m>úåå<==˘˛˚Ôo µuß1Ïÿ±ÉÉr‰»Œú9C~~>•••888‡ÏÏ,ÜAAA‘Ø_üp¬¬¬¨‹ú’Yû˛©∫ëî,~F£ë3gŒ∞wÔ^é9¬Ÿ≥g………¡h4bkkãÉÉµk◊¶~˝˙DGGÛ‡É‚ÏÏåNßªFxW•∑Kà^/¡BÍÉzΩâ»/ø¸RÌgRíÖΩΩ=Z≠'''¬¬¬¨í,nÑøø?ßOü&**äi”¶Yπl,œãF£·ôgû°Oü>¥i”ì…D«éô0aΩzı¢eÀñtÔﬁù§§$‹››©_ø>ŸŸŸîïï±q„FFèÕñ-[ÿ∑o/^§]ªvº˙Í´<ˇ¸Û◊sUa9ÅÎŸ≥'			deea6õÒÒÒ°yÛÊºÙ“KDFF‚ÔÔ/ª®L&Õõ7ßCáLù:ïòòvÌ⁄EDDßOüf‹∏qÃô3Ák≥$‚Nü>Má»  "<<ú^x¡™÷ü¬œÃô3ô9s¶\à]∫ó•û≈...‘Æ]õêê÷¨Y√‹πsÔ®êãààê«!)[Ω®®H›êíÂT*uÎ÷%>>ûÚÚr9ÏB≤∆).¸ªõ„ZË⁄µ+/ø¸2ÈÈÈxzzÚ≈_»ı~*£V´Â‘vÌ⁄Q^^NÎ÷≠y˛˘Á˘Ûœ?y˝ı◊Ÿ∏q£l›≤ƒ`0ÿcèÒ˘Áü”§Iπ&ó4ìèããì∑q3òL&RSSy¡i“§	[∑nEØ◊”ßO^˝u9éœ≠V+gÑé7éV≠ZÒ–C…ü˜›w¥m€VÓcZ6l 22íÉbgg''¸◊hµZ˙ˆÌKﬂæ}Â˜,gπÒÒÒú>}öååé?Naa°¸PóíîÄ‡ÊÊÜáá>>>‘Æ]WWW\\\∞≥≥Cß”·‡‡ÄJ•¬¡¡A~IÓV©ÃÂÀó),,§∞∞ê¢¢"äãã1çíëëAff&πππ\æ|YNäê‹¿jµZû<Ú»#tÔﬁù‡‡‡ŒUYuo˜ÄYï¿ó∏^@	)π·NakkÀÓ›ª			a›∫uU∆ﬁH’ˆ4h¿Í’´i÷¨>>>rºô‘fÏ˜ﬂß}˚ˆîîîpÓ‹97nÃÏŸ≥X≤d	ûûûLù:ï/ø¸íU´VÒ‰ìOíóó«À/ø,ª§ØW'ÃçFC˚ˆÌIMM%99∏Zñß††Ä¸¸|>¸CJJJx‚â'<x0f≥ô‘‘T≤≤≤X∂l˝˙ı£Nù:Wcm˝¸¸™tßK◊Ÿ÷≠[Âå„¸¸|Ü˙˜N∫¬mA≤niµZ{ˆÏa˛¸˘ºˆ⁄krGÈœÕÕÂÿ±c?~úÃÃL.^ºHqqÒﬂG;;;≤≥≥È‘©=ÙMö4ë±KBMß”q˙ÙiFåAdd$êÎ U5›ã5#k:5 "WÀÁû{é#Géêíí¬é;™]v√Ü,Z¥HˆÎü>}ö÷≠[ìòò»Ë—£IMMÂ€oø≠2„/!!Å»»H5jÑ≠≠-[∑nE≠V3j‘(vÔﬁMø~˝Xæ|˘˝‹‹\û}ˆY~˚Ì7¿ÚÂÀÅ´Æ€-Z˝˜ﬂc4Â;¸@Nﬂæ}y˚Ì∑	‡‹πs≤kl–†A|¸Ò«◊Ïª•+≠AÉ2Ñ¸¸|vÌ⁄eU†¯n¢∫Å°rFNNqqq‰‰‰êùùç^ØÁ¯Ò„îïïa6õ)))ëcõ$±uΩR`Ìæì‚©T*vvvÿŸŸ·ÏÏl%}}}©WØAAA4i“§ B±U€›‡æ’Ú'ˇΩ{˜∆ﬂﬂüñ-[2gŒ´‡p¯ÎaY^^NVV'N‰õoæë„⁄|}}Yπr%Géa¡Ç¸˙ÎØ888ÇZ≠&==,X¿°Cáÿ∞a„«èg˙ÙÈ§••Ò‡ÉRªvmvÔﬁ]m∆hÂÛµi”&Féâ∑∑77nDß”—ßORSSô:u*ﬂ~˚-©©©å=öü˛ôIì&—∏qcÜéãã;vÏêª•¥m€ïJ≈”O?Õ–°CÈﬂøˇ5€ó¨ÛR-øßü~ö1c∆\7¥D·Œcì´’jÒÚÚ‚Ö^‡ïW^·Âó_&;;@.˝$≈;::bgg«ºyÛò?˛µ»EEE·‡‡¿ê!CHOOó≥Ù•æÂ“˛5m⁄î–Ω{w¸˝˝Yø~}ïûÅø€’F·#j/ΩÙíh⁄¥©ÿ∑oüˆˆ≈≈≈¢¨¨ÏöÂäããEFFÜË‹π≥¯·á‰˜€∑o/∫tÈ"Ñ¬””S¨Y≥F!ÆYGvv∂»»»B—∏qc(∂fÕ*ºΩΩEßNùƒ§Iìƒö5kƒé;ƒû={ƒO?˝$&Lò ⁄¥i#<<<Dxx∏ÿ≥gèBàooo—•Ky˝yyy¢¨¨LÀœò1Cxzzä‚‚b%:wÓ,Ô◊“•K≈#è<RÂ˘ëé#))I‘Æ][§§§à»»HÒ˙ÎØﬂÚπæ[)++ìœWAAÅ»ÀÀyyy¢∏∏∏ Ânıuª˜Ûﬂÿ÷ﬂŸØªÅï+Wäêê!Ñ>>>"%%≈ÍsÀﬂπ¨¨LLö4ILü>]~ˇâ'û¢¨¨L‘Æ][å?^!ƒô3gÑBàï+Wän›∫â˛˝˚ã:uÍ7771a¬!Ñ¢WØ^¬’’U4m⁄TÃõ7O?~‹j˚Bq‰»1}˙t.<==≈K/Ω$≤≥≥EAAÅàääﬁﬁﬁÚˆäãã≈ú9sÑ´´´ò>}∫Ë”ßèHII¢¨¨L¸ﬂˇ˝üï∑øgœ—©Sß*œOYYô»ÀÀB(∂n›*zıÍ%∫tÈrÕıÆÔ"]ó≈≈≈bıÍ’¢^Ωz¢¨¨LtÌ⁄Ux{{ã˛˝˚ãˆÌ€ãNù:âŒù;ãˆÌ€ãÿÿX—•K—ø°—hƒ“•KEAA¡€«ÊÕõã‡‡`—≠[7—Æ];—±cG+:wÓ,∫uÎ&∫tÈ":uÍ$¥Z≠XΩzµ»»»:ùÓö}≤s•gÓ›4é‹Ô‘8!∑gœ·ÈÈ)Ñ¢n›∫bÒ‚≈Uh“∂rÂJ—´W/!ƒUqìîî$¥Z≠ÿ∑oüXºx±puuB¸%¶,IJJíˇÓ⁄µ´–ÈtVÇË»ë#bÿ∞a¢Eã"  @‘≠[W‘≠[Wä®®(1x`Y¿à	&GGG˘a#â!Ñ|ÉH«¢’j≈ÚÂÀEFFÜ–jµ"##C^∂Kó.bÎ÷≠U≥t/ΩÙíeee¬”””Í·tøp∑πªëªeﬂäããÂ˚πMõ6‚â'û∞˙ºÚos‡¿YÙdggã‚‚b·ÓÓ.VØ^-∂n›*ERRí’Ò=Ú»#b¸¯Ò¬››]!ƒÒ„«Ößßßàååî∑ìóó'{Ï1&|}}E@@ÄàààıÎ◊¬ﬂﬂ_‘Ø__Lü>]pk÷¨æææ¢yÛÊÚzRRRD^^û8sÊåò4iíh—¢ÖxÒ≈Öììì1bÑB777±uÎVyˇûx‚	1gŒújœQYYôÿ±cá,k◊Æ-÷¨Y£πˇI»	!ƒã/æ(ö6m*ÚÚÚÑèèèÿ≥gœ5b»ry!Ñàåå¸WÑ‹ºyÛ‰k-;;[˛[feeebÿ∞a¢Mõ6"//Oxzz FÜ ˜ü"‰ÓNjúê‚™Ä[∫t©;v¨h’™’u¥≤≤2—πsgÒÎØø ·#è<"7n,Ñ¢~˝˙¢}˚ˆU~Wwíï`Â ï¬””S¯¯¯»ÇÆÚÖ\˘¬œŒŒì'OuÍ‘˛˛˛b«é¢¨¨Lú9sFûÕUæ!"""DªvÌDFFÜ®Sßé6lò,‰÷Æ]+∫uÎfµ≠ €Bà-ZàIì&âY≥f…≥Öªë®®(1j‘(±|˘rQØ^=´[U"{¿ÄÚ.;;[Lü>]∏ππ	!ÆN∏|||DAAÅ(((Àó/£Fçí«ÈAñëë!:vÏ(\]]≈‡¡ÉÂÂ•{˛¿Åb˘ÚÂb˘ÚÂÚÑN⁄˛é;D˚ˆÌÖõõõ<)+..)))Ú:


ƒØø˛*"##E„∆çÖáááBàV≠ZâV≠Z…€KJJ±±±◊< +”≠[7yÛÛÛì∑©ﬂ"˝V#Få±±±B!‰	º¥åÂ$]à´ì¯¿¿¿]»Y,   ‰k˚≈_îü•æææ‚¿Åˇ˙ƒW·ÔS#Ö‹ÿ±cE√ÜEYYô–Èt"##£Z˜™$~:wÓ,ˇø∏∏Xx{{ã3f!ÆZø∆é{Õ˜À  DAAÅHIIëg(¬ŸŸY∏ππâ∆çãn›∫â_|Q,]∫T|¸Ò«b¸¯Ò¢]ªv"<<\x{{ã∆çãEãYÌóÂ6,ˇˇÿcè	___!Ñ√ÜÚSPP zˆÏ)÷¨YSÂÒZæ'Y94h ÊÃôsÕ@¢†p7PVV&~¯·Q∑n]˘æî¨Õ’=8vÏÿ!⁄¥i#ÑV·ù:uŸŸŸ¬€€[ÙÏŸSdddà±c«äˆÌ€ã&Mö!ÑÏÜóû?¸Éhÿ∞°Mö4£Fç?¸ÉHIIë-~R8√ê!CDhh®ÚÚù;wGé±≤§WıR©T¬ŸŸY!ƒ“•KÖ´´´<	qı~ü1cÜï•§2í’2##CtÌ⁄UÙÏŸSπüÔ§qy»ê!≤•8  @vÌW^÷Ú7nÿ∞·ø*‰$7}Â…AAÅò7oûàââBŸ‡PŸÚ¶πªóïµ*±xÒb|}}—Îı‘≠[óW^yÖ∑ﬁz´ Ç∑*ïä˛˝˚≥j’*Êœü/óÚ¯Ì∑ﬂh›∫5±±±\∫t	wwwBBBÆ©-gô~≠◊Î…œœ«ﬂﬂüààÜF||<Î◊Øgˇ˛˝òL&¬¬¬–jµ8880p‡@y{`(j˘∑`˝‹sœ±i”&
Ÿπs'Î◊ØÁÿ±cÚ∂ÁŒùKTTTïŸßñ˝"•ûèRvîT¢@È≈®p7“∫uk ÀÀŸø?›ªwÁµ◊^ì3Î,ëÍ
vÍ‘âV≠ZÒ‘SOÒÂó_b6õ9vÏÆÆÆ|ÛÕ7§ßß„ÂÂ≈å3Ë“•ø˛˙´‹'”≤´…dí≥ßXæ|9;wÓ‰ó_~AÅ≥≥≥nggG›∫u<x0$<<¸ö"ØR˜ìO>Iyy9………Ëızû{Ó9æ˚Ó;π◊∑ﬂ~À•Kó;vlï	3ÉAÆ%ÈÌÌçøø?dÂ ï Ω|ó`Ÿ™ÀÕÕÌÜÀJ=è’j5eeeˇ¬Vè¥ÂÂÂîïïQTTÄ££„k(*	wˇµíºU§@∑n›D∑n›DFFÜ∞Ú˜Wıù„«èãñ-[ä3gŒ»3ÚyÛÊ	GGG!ƒ’ÿGGG1oﬁ<˘{ïÉÈ%Î^PPêËŸ≥ß<ìZ≥fçò<y≤Ø6H¥™ó‰^‚jLõΩΩΩ8sÊå»ŒŒéééb¡ÇV˚ﬂÆ];q‰»ëÎû)¶ÓÃô3¢U´V¢c«éÚ±((‹çîïïâÒ„«ãpëóó'‹››≈Å¨¨NUÕ˛€µkgï»ÙÎØø
{{{Ÿb≠’jEhh®àåå/æ¯¢BX≠œ“ùZïUD˙¨™q•:ÀÑîdµ`¡akk+ñ/_.äããÖáááò<y≤B»÷∏òò˘~Æj‹:sÊålç[ªv≠¯øˇ˚?fu
wè=ˆòﬂY∑n›*-r“o˙ØZ‰,ìÈ,˜C!/^,¬√√ÖBÑÖÖâü~˙È∫Æ~ÖªõˇZH˛Ùz=Ôæ˚.qqq¯˚˚„ÌÌÕê!C™ù•öL&"##yˆŸg1bÑúŒˇ‹sœ—ø\]]—Èt:tà∑ﬂ~õÆ]ªV[(uÒ‚≈Ñáá£—h–jµrµ¸¸¸| ÀÀ9uÍîºÕï&ë∫¥m€ñeÀñëêêÄNß#,,å	&¸ÛœìêêÄZ≠fÃò1Lú8ëk÷cπù'ü|í&MöDrr2+V¨ kú¬›ãZ≠Ê£è>"77É¡@ll,£FçíõäW∂dKˇü?>3fÃ¿d2ëêê@∑n›Xªv-O=ıGèÂ‘©S\æ|ô§§$vÏÿÅ…dí≠ajµ≠Vk’5$''Ω^è¡`êóuqq±Í1l2ô‰˙[ï€ I].ﬁyÁ¶Mõ∆∑ﬂ~À‡¡É	†Mõ6rAoùNGè=xÏ±«‰ñ{UY8ÇÇÇò={6ˆˆˆÙÔﬂü6»~Â~æª(**¬≈≈@.≤{7R›u„ÊÊfe!ºxÒ"W[FÖªõ'‰§ﬁw!!!4n‹òAÉÒ„è?≤eÀ´~úñh4Ùz=CÜ!,,åwﬁyÄì'O≤rÂJFåAHH<xêƒƒD"""8zÙ(Z≠ùNáNßcÕö5$$$√„‚‚"W¯èää¢®®æ¯‚yõ7s4i“Ñ¨¨,π(≠ØØ/#GédÓ‹π‰‰‰…£è>J◊Æ]yÏ±«™º•Ç°pµ5‘û={xË°áh⁄¥)AAA’6FWP∏[00Ä˛˝˚Û”O?qˆÏY‰U’≥äää‚ëG°_ø~DFFr˙Ùiö5k∆¬Öi◊Æ[∑nÂ“•K4h–ÄCá±p·B‚„„≠÷£—h–Èt¯¯¯†”ÈP©TòL&πÎ ˜Wñ^R;©ÑÂ=Ÿ®Q#V≠ZEQQë\#/**äç7íõõKPPoºÒçFÆ+W’˝)â’%Kñ√?0e ‹‹‹2dÉAy∏ﬁeHÌ˜‡Órµj’∫©Â‹››Âöx  d°Q#)iñÈßü“∫ukñ.]Jdd$?¸0€∂m´ryïJÖ^ØgŸ≤e<Ù–CLô2ÖŸ≥gc0X¥h%%%4n‹òyÛÊëúúÃ‡¡Éi◊ÆAAA¥k◊éúú:ƒƒâ˘Ò«yÊôg‰ı˚˙˙¢R©ÚÚbÁŒù¿_}-•¡^äèêfıRa·'ûxÇè>˙àô3gÚŒ;Ô0e ^yÂrrrÒÒa‚ƒâÿŸŸ1c∆å*-|ñÏ£¢¢x‡Å»ÃÃ$..éîî´s††p∑¢V´yÎ≠∑àåå$>>û'ü|í1c∆p‰»†˙∂kØæ˙*c«éeÃò1,[∂É¡¿Ë—£qssc‘®QÏ›ªó„«èÛ˛˚Ô3e 6lÿ¿ÁüNdd‰5ß•qE*Œz+Ì˜&Nú»_|AÛÊÕILLdÛÊÕ<˙Ë£ÙÎ◊èï+WèØØ/3gŒ‰ƒâ|Ò≈Úw´∫7’j5Ωzı"((àËËhŸ⁄®pwRXXàZ≠&33ìºº<û~˙i***¨ñëû≠≠-vvvdffﬁÒ˝™U´ü|Ú	ªwÔ∆∆∆Üää
+cá—hƒ’’ï¨¨,
¨ä+‘j§êÉ´ÉlHH}˚ˆ•]ªv;vgggVÆ\YeˇA©çJff&[∂l°Cáº˛˙ÎÃù;ó∏∏8>˘‰⁄µk«ƒâŸ¥i?˝Ù999ƒƒƒŸgü·‰‰ƒà#HJJ‚£è>"""BvøhµZÃ˚ÔøOaa!œ<Û”ßOóE\yy9gœû%??ü∑ﬂ~õ]ªv·„„CNNçÜÿÿXíììŸΩ{7———Ëız¥Z-œ?ˇ<ÈÈÈ,_æ\^∂™∆≈çÜ?¸êÛÁœsÏÿ1ÇÉÉÈ›ª7>>>VÓ$ÖªÈ⁄:t(Ωzı"##ÉÔøˇûY≥f1wÓ\˘û®l%HLLdÈ“•6åAÉÒ˘Áü£◊Î4huÎ÷•_ø~¸ˆ€oú8qÇIì&Cll,±±±å7éËËh¸˝˝ÂıIì-Èa'πÀ™¬l6Û¸ÛœÀ	ÒÒÒÑÜÜÚ¯„èÛÎØøÚ∆o0vÏXNü>M£Fçx˝ı◊IOOÁˇ˚ü¸}Èÿ-ë⁄=mﬂæù‚‚bzË!BCCÈ‘©ì‹∑U·Ó¢∏∏≥Ÿåøø?#Få†††‡Ôêççç‹K∫¥¥õ;Ô3õÕ888‡ÔÔOAANNN◊|^XXH„∆ç8p jµ[[[   ¨<=
w9ˇuêﬁ?A
Xvuuk÷¨,:ùÆ⁄T~ÀReee¢]ªv‚•ó^íì	Ñ∏`‹†A·ÈÈ)fÕö%<?¸√B•R	???1vÏXπXØTgÆ¨¨L,Z¥HtÈ“Ex{{ã^ΩzâÂÀóã’´Wã#Fàp···!:wÓ,◊ÓY∞`Å–jµ¢Mõ6rbÖ¸¸ˇ˜r	ÖÏÏÏ*;H«!Ñ...bÕö5bŒú9¬««G!‰j¯

5)Ëªn›∫‚’W_GéŒŒŒr«ÍäëZ÷óìŒ•íA¢Kó.B´’ä#F»ﬂÎ“•ãÙÙ4˝˚˜k÷¨ëìÑ¯´LIÂ⁄_{ˆÏì&MÕõ7ﬁﬁﬁ"<<\.’∞rÂJ·„„#ƒë#GDvv∂ºÔ3fÃù:u∫a˘Èˇﬁﬁﬁb˙ÙÈ‚¿ÅB´’^S0\·Ó"00P,X∞¿™€√ı»ÀÀ···ˇJ≤√¨Y≥Ñ÷…;’ΩÑ∏Zãq¿Ä µVÉ®ÒBÆ∏∏X,_æ\Ï:vÏ(Z∂ly√"¡ñÉü>}d±$]Ë3fÃæææ¬”””™Í˙¨Y≥DDDÑÒÒÓÓÓ"00P4h–@DFFävÌ⁄	·‰‰$ Q´V-·ÓÓ.7nlï+â-Ò”O?Y	µºº<—•K—ßOπ†∞T¿¥:Q&◊0rrr¸±úëß9ÖöÑTåW´’
!Ñò4ií®[∑Æ¢j!'Ω§˚}¬Ñ	¢Kó.ÚÑH™∑gœQø~}·ÓÓ.^}ıUy{,;væææ¬ÀÀK‘©SG4lÿP¥i”Fƒ∆∆äÊÕõã∆çã‡‡`Qªvm·ÌÌ-"##≈´Øæ*ﬂ_´WØ¡¡¡¬››]Æ	'Ñê≥a«é+∫uÎfïY_9ÀﬁÚﬂvÌ⁄…]'<==≈‰…ìïáÍ]éØØØ8~¸∏x˝ı◊Öìììh–†Å∑z’Ø__ÑÜÜä––PQø~}akk{«Ö\”¶MÖ´´´º›êê´Whh®6ŒŒŒ"//Oº˛˙Îr¡|Öö¡=!‰ÚÚÚDØ^ΩD√ÜÖBxxx»≥êÍæg)p-Z$bcc≈O?˝$Ñ¯À2 ıLûûû¢Kó.b«éÚ@-Ñ´WØã-/ΩÙí?~º\∏rôê•KóävÌ⁄	,Èïˆ';;[¨]ªVƒ∆∆ä3f»e$!WŸ (˝=j‘(Qªvm!Ñ¡¡¡‚â'ûê[UWéEA·ngÿ∞ar©çàà´ÓUâ9ÀˆGk÷¨Ì⁄µã/ñ◊'Y€VØ^-"##Ößßßàää?˝Ùì\*¢∏∏XÏÿ±Cæü'Mö$^zÈ%±xÒbq‡¿´{pÌ⁄µb‡¡¬ﬂﬂ_‘´WOLö4Ia›ı»ë#¢i”¶b÷¨YVìƒ™éC˙{∆åÚ§¥Mõ6¢Iì&◊-¨ﬂ≥zıjQßN!ƒ’Iııû=ñ¸π-Zà\∑<ó4Èo“§âxÒ≈≈Ò„«ÖØØÔuK®(‹]‘Bàˇ⁄Ω{ªÒÒ°oﬂæ,[∂'''fœûÕ§Iì™]^*1¢V´IHH‡ç7ﬁ¿——ë±c«“Æ];9‡S•R±eÀñ,YBbb"eee888–¢E7nåóóxxxPPP@bb"………‰‰‰p˙ÙiÚÚÚpvv¶i”¶å3Ü:»1s6DØ◊3e .]∫ƒ+ØºB∑n›–Îır<êT¶D⁄◊ÙÙt¥Z-Kñ,·Ì∑ﬂ¶∏∏òﬁΩ{sÙËQ∂oﬂéøøø\
îDÖöá…d"::WWW~˚Ì7¸¸¸xÍ©ßò3géºLÂ"ºRi©ÄˆÑ	pqq·Ö^†i”¶t:jµö∏∏8>ˇ¸s∂m€FEEvvv‘Æ]õ&Mö–¥iS|||prr¢®®£—»â'8yÚ$………\∫t	{{{ÇÇÇx˘ÂóÈŸ≥'999V˚?k÷,8¿¨Y≥Ëÿ±£ºñH˚Ø◊ÎÒÒÒaÁŒùÙË—É3gŒ”O?1yÚdÉ\.I:6%ÊıÓ¡l63q‚DNú8¡ÊÕõ	c≈ätÈ“ÂÜ…2ç7Ê˘ÁüÁâ'ûêln7———<òâ'Z=C,˜_ä£6lŸŸŸ¨]ªñÊÕõÛŸgüUYò[·Ó£∆&;T≈ÊÕõi◊Æ]∫t·˜ﬂßuÎ÷ ’ä9çF#◊•äåådÌ⁄µº¸ÚÀº˙Í´¥lŸí7ﬂ|S.]ÕO?˝@BBÒÒÒl›∫ïm€∂QZZ*◊ç≥±±¡……	WWW5j=zÙ $$ƒ™fUHHF£ë◊^{ç‰‰dzË!FçÖNß≥™Ag˘∞íjV˘˚˚≥q„Fﬁ~˚m˛¯„ﬁyÁvÌ⁄EFFÜú{≥ÂOÓFT*k◊Æ%66ñÖr˘Úeúùùd1gŸQ¡l6£R©–ÈtÚ=ÚÓªÔœK/ΩDhh(oΩıñ|¥n›ZíììŸ±c¸Òâââƒ≈≈QTTDII	ÆÆÆh4Ñ¯˘˘…	uÎ÷ïì$§‰çF√ªÔæÀﬁΩ{âââ·´Øæ¬€€[ŒTáÍ3T„„„È’´_˝5/^‰Ÿgüe”¶MòÕf˘!ßˆ
ˇå∏∏8»…ì'πrÂ
≠Zµ∏Î3?%WØ¡ÅÚ‹sœ°”È`˚ˆÌäê´!‹SBÆY≥f¸˙ÎØtÈ“Ö‹‹\÷¨Y√„è?T/Ê,ÀÇ º˘Êõ¿’r›ªwßa√ÜÙË—É˛˝˚À‚*22í»»H˙ÙÈ\õufâîπ$‡ÈÈÈú>}öü˛ôÀW_}Öèèf≥Ω^/ﬁñ"NöIôL&~˛˘gÜ∆·√á9yÚ$3gŒîÎËI€RDúBMF≠V¬Ó›ªâââ¡ﬂﬂüì'O ±%1WUV∂î)@dd$< }ÙÉ¬◊◊óa√Ü—≥gOyy???ÜŒ∏q„¨÷cY.»««∏j=≥Ã◊Îı§••±fÕvÔﬁM´V≠X∂l◊î7ë∆iLêägee—∂m[ÊŒùKè=puuÂïW^°SßNJÕ∏@nn.={ˆdÎ÷≠xzzXyDÓf,Ø≠ﬁΩ{ÛÙ”OÀ÷={ˆ¸á{¶p+‹SB†]ªvºı÷[¯˙˙rÙË—õsÄ\Q´’≤|˘r∂m€∆ÜX∂l}Ùç7&66ñ‡‡`Í◊Ø”3dì…ƒ∆çŸµk'Nú@•RÀ7ﬂ|#ªA%'UìØé~¯Å#F∞a√‹››y‚â'X≤d	Ì⁄µ#33SqΩ(‹3®’j¬√√Y∑nè<Úﬂˇ='Oû$,,GGG^yÂπDÇ‘óTöòIì ì…Ñøøø\3Úã/æ‡ìO>·ìO>!  ÄÅ“†A¥Z≠,⁄$°VπÆ\-GíõõÀÔøˇŒÅ8|¯0WÆ\°yÛÊl›∫’jŸ ¨Úæ8pÄ˛˝˚3m⁄4&Lò ó‘¡Aqw7íÆY≥fLû<ôÊÕõÀûìªuÆ‹Á€“ÿ‡‚‚¬∆ç6lÉñÎô*‹›‹SBN∫@ßLôÇ…d¢q„∆?~¸¶≈úT8XZO´V≠Ë“•ôôô$%%±ˇ~÷Ø_O^^B5jDEE8:: 7Æ…d¢∏∏òíí“””1ç¯˙˙…∏q„àååî∑k00ç∏∏∏\#‡ ÀÀÂîF£·πÁû„”O?Â‡¡É¯˘˘QßN.\»·√1◊Ä

5ïŒù;≥oﬂ>⁄¥i√∆ç…ŒŒ∆œœèƒƒD6lÿ \µä÷Ç…≤±ΩZ≠f“§ILö4âÉ≤c«ﬁˇ}ŸíÌÍÍäªª;ÆÆÆrGóÇÇ%%%‰ÂÂqÒ‚EJKK—Èt‘Æ]õ°Cá“©S'ÇÇÇnÍX,-Û[∂l·ŸgüÂã/æ`¿Ä∏ªª[â8∏æµ_·øg›∫uxyyêññfSìê¨œ···¨_øûØø˛öÚÚré?Æπ¿=%‰$◊£—hd¬Ñ	òÕf5jDbb"			DGGÛÌ∑ﬂÚ˚ÔøÀùT*’5≥hi‡óﬁ˜˜˜«ﬂﬂ_é0õÕ§¶¶≤{˜n≤≥≥ÂÔJΩÍlmmeaˆË£è“§I t:f≥Y^ŒÃÃD£—‡ÌÌ}ÕqHh4L&Ωzı"!!ÅKó.±rÂJû{Ó9-Zƒà# %~F·ﬁE≠V”¨Y3V≠ZEü>}X∞`Å‹Œ.,,åc«éHjj*~~~rUÀæ¨ñ˝RÕf3ıÎ◊«ÕÕçÁû{N.ÿ}‰»RRR(**íìÆ\πBEEnnn4i“Ñ»»Hö6m˙è,e&ìâ…ì'≥eÀvÓ‹ITTÓÓÓ<ı‘SV"N·ÓgÎ÷≠¥i”Fˆ®¥k◊N˛Ïf:É‹XZâ;tË ˜Ávttdˇ˛˝Jú\‡ûrÄ‹MÆZÊ¥Z-Mö4·µ◊^„¬Ö4n‹ò∫uÎÚÀ/ø)7…ñ¨qñÎ±º•Å[y~~~0¿j{ï±¨Ï-Y˙,◊#ıv¨úM$Uo?{ˆ,ÖÖÖtÎ÷Ùz=”¶M„›wﬂe…í%>\^÷2√Vq«(‹KH≠å˙˜Ôœ◊_Õê!C8p‡ 'Oû§WØ^¯˘˘±b≈
˙ˆÌKzz∫”fyØ¡µ√˝˝˝Âp
???"""Æª“ΩoÈÇ≠Í^ìÓsiªï„‰BBB »œœgˇ˛˝8;;3oﬁºÎfÿ+‹ùdff2yÚdˆÌ€áJ•í{[KªÈ⁄óûSZ≠ñÊÕõ≥p·B9√{ﬂæ}ˇÒ^*‹wæG»ÄelÀÑ	¯„è?X∏p!}˚ˆÂÙÈ”ÙÈ”áÿÿXFè\ΩÄ•∫r[i}ñ®T*9ñÌzçÖ•Ü⁄ñ‚ RÃInKPzz∫<Ãû=õÿÿX{Ï1é=Jtt4Àñ-cœû=<˘‰ìV3© €QP∏P´’x{{£—h»ÃÃ§oﬂæÏŸ≥á_~˘Ö6m⁄∞{˜n¶Nù ê!CxË°á

¬««áÑÑ´uXæ,õ›K˜ådÕó,vUΩ ´Â´œ,©úÿ ∆o†”Èh€∂-YYY6å>}˙∞b≈
Eƒ’Päããi€∂-ﬂ~˚-uÎ÷µ˙¨ÚuWôõmhˇO∞±±¡ŒŒÆ œ*WDÄ´avvvú8qÇæ}˚íññ&_„ßOüæ„˚´˜∏'Öú%çÜfÕöëùùÕ˘ÛÁÒ` î)dddÛœ?”∏qcñ-[&ñ≥Ï€ô˝i9ÿW¯•áGyy9AAA|¯·á∞wÔ^äãã5j>>>îññíììC˝˙ı1ç¿_.U%SU·^E≠V£”Èpqq¡`0–¨Y3.\∏Ä≥≥3Z≠ññ-[rˆÏYÚÚÚpwwgÍ‘©DFFíôôiU ßÚ:-ÖùÂÎFH–r=R;È=ì…$Ø˚√?§Nù:,]∫î≥gœ≤h—"Ÿ∑o?˛¯#É∫Ω'L·é`˘6m⁄Ñçç>>>?~úñ-[»œÀ…BÂ	ÄZ≠˛◊Ñú≠≠mµüW∂Z´’jj◊ÆÕ™U´=z4˘˘˘Ú≥∆ﬂﬂˇÆ∑2ﬁØ‹ÛBNB≠Vs¯aÜJ√Üô8q"			<˜‹sºÚ +4h–Ä+V¸+q“mŸ4[≠V≥zıj|}}ô?>3gŒ‰‘©SÙÓ›õˆÌ€3q‚D>\ù=Iç≥kJÜÇ¬?E´’ usrrÿªw/SßN•wÔﬁ<˙Ë£:tàœ>˚å+V»Ó÷ %@nÜ ñîÎΩ‡Øzaí’–d2°’jŸ∞aºÒ∆å1ÇÛÁœÛ·áN◊Æ]IOO∑ä©R∏ª—h4VÁıÎ◊ÀI..\`¯·Úg“øñØ Â§™Ú˛‹nÆgë´
Ω^Oã-ÿ∑o>>>îóós¯aπxæJ•BØ◊ﬂ¡=V¯;‹7BÆﬁàã-‚è?˛‡˜ﬂ'$$[[[Ùz=è?˛8/ø¸2ıÍ’„˘Áüó„rÆ«Õ> ™3±´’jô:u*µk◊fÍ‘©Lô2Ö‹‹\
ÒÒÒ·¸˘Û?~ú3f»3B)~O±¬)‹oH%§r!ì&M"77ó‚‚b‹‹‹HJJ"++ãÒ«∆”O?MNNéï€ÙV∏ﬁÚRxÉdqÒˆˆf˛¸˘DDD0vÏX∫wÔN^^!!!Û≈_«‚≈ã´µ*‹Ω<˝Ù”¯¯¯–ºysæ˝ˆ[@||<*ïäfÕö›ÙÔiiëªìc∏≠≠Ìu-rí∏î‚Â§“XR_£FçxÏ±«h’™AAA¨Zµ
çFÉ¡`PÆ›ªâˇ∂CÿÉ‘„Ù„è?uÍ‘˛˛˛bÕö5B!ÊÕõ'ö4i"<<<D´V≠ƒÇDRRíB»çÎ•fÿ7”ˇ–≤Ø´‘?5))InL,5·^ªv≠‚jOV(VØ^-ˆÏŸ#˜¬´‹üQA·~EÍiŸL~Õö5¬ﬂﬂ_‘Æ][,Z¥H~/**JËt:—§IÒ“K/âîî!ƒ’˚˘FÕË-{°J˝\-{$KÔÒ≈"&&F∏ªªãêê1gŒ!Ñ{ˆÏ···¬””SLü>]Ï€∑Ôöu+‘‹››ØÈ£=k÷,—ºys!Ñ∏ÓÔYπ'phh®¯¯„èÔË5%ÊÃôc’kµÚ´††@Ó,Ìãóóó»»»B˘Y∑`¡·ÂÂeu(‹‹SΩVo…%≤p·Bñ.]Jyy9è=ˆÛÁœ'33ìeÀñÒÕ7ﬂP\\åìì4†k◊Æ4m⁄î »&ÛÍfUôôô>|ò={ˆpÚ‰IRSS),,ƒ€€õ'ü|íIì&°—hx˙Èß˘Ò«±±±a˙ÙÈå3Ü”ßO„ÌÌ-Ø[IfPP∞∆≤˚Ç‰˙Z±boæ˘&EEEÙË—É≈ã£’jy˚Ì∑YΩz5/^D≠VMDDQQQ¥h—Ç–––*◊oô©
êîîƒ¡É9uÍ˚˜Ô'''ùNGáò7o:ùé˘ÛÁÛ·áRRR¬cè=∆/º`UkN…2Øô‘≠[ó∆ç„··AII	ÓÓÓ|˚Ì∑å;ñπsÁﬁ–ï/YaµZ-Mõ6•CáÃò1ùN'«ﬂ›Œˆä^^^|Ù—GÙÎ◊œ™•ù%“ı-%I˜∆≈ãÈ⁄µ+®T*é;Üããk◊Æï€”)‹‹◊BÆ2ü}ˆÔøˇ>0lÿ0&NúàZ≠fÛÊÕ¸Ôˇ#))âÇÇL&µj’¬……I(µ±±°¢¢≥ŸLYYô¸∑ùù4h–Ä!CÜ–≥gO233Ÿ¥iKó.%==ùp^|ÒE˙˜Ô\õı¶¯

’c)Ê‡Í√pŸ≤e,[∂å¥¥4ººº?~<¿ﬂﬂüm€∂ÒÕ7ﬂœ≈ã1õÕ‘™U≠V+ﬂ«ˆˆˆ≤êªrÂ
B9â¡««á¿¿@∫wÔŒ®Q£Ä´ΩûgÕö≈©Sßprrb‹∏q<ÿÍ°'≠ØÚUπ∑k;wÓd⁄¥ih4ÏÏÏ(//ßi”¶å7ˇ˛éñÒî_}ı&L ""Çßü~Zé±˚'Ç.''áÛÁœÛﬁ{ÔÒ€oø·ÔÔœ™U´‰í7U!πU-ç&ìâ1c∆êüüoµ¨6†pwq_9i6/µ¯—Èt®’jíììYºx1€∑o'//ö4iBﬂæ}È”ßè£f4âèèß¥¥î‚‚b ÀÀqttƒ’’ººº‰nπππ§¶¶≤zıjvÔﬁMII	ûûû<Ú»#Lû<@^÷ÚfeêWP∏,kb¡_}X5oºÒk÷¨·ÚÂÀh4⁄¥iCø~˝h“§	~~~îóóìïïE~~>ÈÈÈ‰ÁÁSPPÄóó>>>∏∫∫‚‡‡@√Ü—h4ú={ñåå~¸ÒGˆÓ›Kzz:tÏÿë^xÅfÕö]7√Or5KkZÂˇÎız\\\n¯;J◊®4∂gff2vÏXé;Ü≠≠-≠Zµb‚ƒâ¥k◊Óñu‚„„Yø~=´WØ∆`0‡ÌÌÕÿ±cô0aÇº›õeY,©>Èıˆ]·Ó·ær7∫Q<H\\;vÏ‡¯Ò„ 8777|||prrB´’booOii)˘˘˘\æ|ô““RÚÚÚ(..Æ
µ˙ıÎ”•K:vÏ(7 Ø
ÀÚ


7GÂ"ﬁñµ·4F£ë¸ëuÎ÷ëññFQQ∂∂∂ÿ€€„ÊÊÜ∑∑7ÓÓÓÿŸŸqÂ Æ\π¿ÂÀó…  ¢∏∏ò““R***∞µµ•Nù:¥lŸí·√á”¨Y3 +gYª*î˚˚øÂVˆØ˜;^Ô≥Î-kY~˝˙ı,^ºò≥gœ‚ÁÁG˝˙ıo∏.ííí»ŒŒ∆ﬂﬂüﬁΩ{3m⁄4˘sÀÌTıº´ ÛXY∑Øár˝ﬁ‹◊BÓÔb0ÿ∑o«é„“•K\æ|ôÀó/ÀÓV777<<<pqq!::<==—ÈtVq


∑óÎMŒ,„È ŸZwÙËQRRR8{ˆ,ôôôËızπ«*Äªª;>>>‘©Sá∞∞0¬¬¬h‘®ë¸†ì,ï;9TwüW’1F·ø·ø»º¨NÙ©’j233IIIë„™KKKØª.{{{bbbË’´óUÔ™∏!w≥(◊Ô›Å"‰n#ñ∫…díoÿ ÖFïã_A·ø«2· Æm√W˘3À¯∂ nS%!©fr∑ï–∞º333≠dnÖ™⁄√]oπøãr≠ﬂ(BÓÛw
í*((¸ªT~†›»BQï–S®y‹mBŒí[π¶™;é˚Y»›Oœ^E»)(((TCuÓ®˚ÂQHHH`ÁŒù§••QXX('ú9;;Û¿Tùz7π€AMrUµ≥¸ı◊_âãã„‚≈ãhµZ***ÛÛ#66ñ.]∫\Û›˚·^Ω5á∏ÇÇÇ¬}ƒ˝®)XfâˆÏŸ√kØΩFzz:&ì	¥Z≠U˘'ïJÖããm⁄¥a‰»ëÑáá£”È‰êÖª©¢ƒ€oøÕ˙ıÎÂéKÂÂÂÿ€€£—h(**¢ºº[[[\]]>|8”¶MªØ¬ãúÇÇÇÇBç¢wÔﬁlﬁºçFCÛÊÕ>|8uÍ‘¡””ìKó.°◊Î…œœ'..éÉíññ∆ï+W`‘®QLô2P,rwªEÆGè¸Ò«îññ Eî{ˆÏâF£°Iì&îîî êëë¡˛˝˚Ÿ∏q#ŸŸŸ∏ππ±sÁŒ˚¶Êù"‰j&ìâ·√á≥~˝z⁄∑oœØø˛jıπeAÀR«éc≈ä¸¯„è≈_|A``†¸Ω[Õÿ¨	‘T!˜ˆ€oÛŒ;Ô ÃSO=Eˇ˛˝—jµr}ª Æ”úú4oΩıü~˙)∂∂∂‰ÂÂ›ıÔ!ß††††P#ÿ∂m?¸0‡ÎØøæ)!"âªÃÃL≤≥≥ô={6¸Òµj’‚„è?¶gœûrWÉ[Â~q››	,≥¿-œc´V≠8zÙ(ÅÅÅ<˝Ù”<ˇ¸Û◊…ØÍwóJïóó≥rÂJÊœüO`` ø¸Úã\9‚^˝Ω!ß††††P#àçç%))â;v–¨Y≥øeQR´’,Y≤ÑyÛÊqÒ‚E>˝ÙS‹∫ÖÍ^ˇRw$≥Ÿåèè 4‡Ãô3tÌ⁄ïç7^cMªﬁÔciç5õÕ<˘‰ìÏﬁΩõ]ªv—®Q£{˙∑≤˘Øw@AAAAA·f8yÚ$ÅÅÅ[ƒ¡UÀÕ„è?Œ_|Åóóc∆åa€∂mÄ"Ã˛m§"˘ Mö4·‹πsLö4âU´VYeõÕÊ˛ﬁR±})!f‡¡îññ≤uÎVY0ﬁ´(BNAAAA°FpÂ Í’´w›>∂7B dçââa—¢ExxxƒO¸£u*¸=§R>$%%Öë#G2wÓ\‡Ø217+¿,cÊL&ˆˆˆ‘™UãÙÙt+ãﬁΩ(Ë!ß††††Pc8wÓ‹m	\W©TÙÌ€ógü}≥ŸLè=d+(÷π;çZ≠F≠VÛÀ/øÀ/ø√¬Öeqw+"NBÍ¨d6õ±µµEÅ≥≥Û=ﬂYIr




5Çêê“““HOOø-d≥ŸÃ∏q„àééÊ·√‰ÊÊ¢V´≠zÁ*‹Y,XÄΩΩ=œ>˚¨¸û‰"˝;îóó£’j˘Í´Ø∞±±°sÁŒ∑kWÔZ!ß††††P#:t(ÖÖÖlŸ≤Â∂¨O≠V£—hxÊôgB0oﬁ<‡j)£—h@Øp˚1õÕ?~ú∞∞0z˜Ó˝è÷eŸ6/!!Å={ˆHáÓ˘.äêSPPPP®å????¶NùJrr2◊√˘VEWyyπ‹-"88çF√_|¡í%K

¬≈≈Âû¨-w7—†AäããÈ—£«-∑ºº\˛Õ+∑\õ;w.˘˘˘ºˆ⁄k®T*åF„Ì€ÈªE»)((((‘‘j5|ÉÅ1c∆».–ø+Ê§u:;;cooèªª;SßNeÍ‘©ä5Ó6#≈ÆôÕfL&uÎ÷≈d2·ËËàøøøÏ“æŸó¥NÀukµZﬁ~˚m÷≠[G≥fÕxÙ—GÂÚ%˜™5!ß††††PÉË€∑/&L‡è?˛†oﬂæòL&233ÂÚGÄIVõààRSSY¥hœ<Ûå"Ên#RCnn.ææætÓ‹ôµk◊RVVFbb‚-ØO™1g4eã€≤eÀX∫t)NNNVÓ˜{π´(BNAAAA°Ü±p·BzˆÏ…ˆÌ€âââëKáHnFÄIızΩûeÀña6õ	Eß”q‚ƒ	6lÿ¿ò1cHMMïÖ¬Ωl’˘7ÿºy34`“§I|˘Âó‘´WïJ≈Ó›ªˇV1fùNá…dB£—ˆ€oÛÚÀ/„ËË»ü˛âV´≈l6ﬂÛ"!ß††††P˘˛˚Ôô3gÈÈÈ¥j’äô3gíêê '0‹¨{NØ◊≥q„F >˙Ë#L&>>>dddÎØøÚ√? œm´`›ç·â'û`‹∏qÃò1É¡ÄZ≠¶oﬂæ$%%±h—¢j◊°R©™|Èız<Hó.]X¥huÍ‘!99y˝˜Jã.ÖÀ¡ÉÈ◊Ø999x{{3h– ûzÍ)"##1V˝<+[g>˚Ï3/^Ã©Sß∞±±¡œœèæ}˚2j‘(BBBÿæ};@Ø◊ÀBNÍ4 äÖÓfêb{ıÍ≈˘ÛÁ9zÙ( _}ıKó.%==ùKó.°V´<x0√áßuÎ÷Úw·ØƒïJÖV´EØ◊≥yÛfñ/_Œ°Cá0õÕ4à≈ã£—hdw?X„@r




5ê bjÍ‘©|ˆŸgËız4Mõ6•Y≥fDEEä≥≥3ó.]";;õ›ªwORRµj’b“§ILû<ô©Sß≤}˚v.\∏¿í%K2d< zΩû£Gè¢◊Î—ÈtÚˆ!wsl⁄¥âAÉqÏÿ1¸˝˝i€∂-iiiDGG3fÃxÍ©ßHMM≈’’ïV≠ZÒ¿–§I***Ä´bÓ¯Ò„ÏﬂøüÉrÒ‚ET*m⁄¥·Ω˜ﬁ√œœœ ’z?°9Öè$Ïæˇ˛{ﬁ}˜]“““(++„ ï+◊,kkkãÉÉ———Lû<ôn›∫Y}>e æ¸ÚKrssIOOßyÛÊºı÷[å;ì…ÑV´˝Wé©¶#â]¸q^˝u^zÈ%6lÿ¿≈ãØY~Í‘©|ÛÕ7‰ÊÊ @í)*ï
<<<Ë÷≠&L    çF#«Iﬁèøç"‰j<RYK+ŸÔøˇŒ±c«8sÊ˘˘˘ÿ€€JÎ÷≠	√€€˚´Zff&:ùé-Z–¶M>ˇ¸sñ-[∆‘©Sâãã#44‘*ÓK± ]ü=zêññFrr2ÒÒÒ<¿|ı’WÙÏŸ”j9) 55ïù;wíîîÄçç∂∂∂ƒ∆∆“™U+¸˝˝ÂÔI≠º,]Ë˜äêSPPPP®ÒHÛ€ÈV”jµ¸¸Ûœ¥k◊é:PQQ¡/ø¸"[ÄÓß8¨[Aronﬁºô«{åﬂ~˚çËËh¢¢¢pqqaÁŒù∑u{˜ªõ[…ZUPPPP®Ò‹	Qı‡É2fÃ æ˛˙kŸ∂mjµΩ^[∑u/ëôô	¿»ë#È”ß———|ˆŸgú9sFq∑≥óÌ˝,‚@r





U2gŒrssyˇ˝˜Q©TLü>ù—£Gc0–ÈtrGk¸˝˝:t(çÜï+W0c∆û~˙iÄ˚™4»øÅ‚ZUPPPPP®ÜÖ2wÓ\“””Q©T¥lŸ;;;∂m€&/Ûoÿﬂ	˜ÒÌDr©Ó‹πì^ΩzÒ”O?—∂m[^˝u÷¨YCzz:&ì	É¡ÄV´Ωoc⁄n7äENAAAAA°
‚„„y˛˘Á±∑∑ÁôgûA≠VÛÕ7ﬂêíí¬™U´‰˛†ˇÜUNqRRGÂﬁ•“ÀÚ˝iõzΩû·√á3fÃ⁄∂mã—hî[gI("Óˆ¢X‰™@≤0I›Ò˜˜Á√?d∆å$$$ Wãﬂi´úe›ºÙÙt222»ÀÀ„ÚÂÀRVVFù:u†vÌ⁄hµZ4Õø^¿¯Ò«gﬂæ}8p µZMÔﬁΩÅ´ƒ“q(Óˆ¢9Öjê:
ÙË—É¢¢"˛¯„ 7nåØØ/ﬂ|ÛÄ,ön'íÖÎªÔæcÎ÷≠$''STT$◊∆”h48::¢—hP©TP\\LYYÿŸŸ¡‡¡ÉÈ⁄µ+:ùÓé
ªÉÚ¿∞uÎVÍ◊ØœŒù;9r$˘˘˘J7å;à"‰™@≤»≈««„ÏÏLtt4_~˘%}˚ˆ≈l6„ÌÌÕ7ﬂ|C≥fÕP´’∏∏∏‹V°“Ω{wπñZÉÒÒ!   ≠V+Ãµµµ†¢¢Ç≤≤2Ãf3TTTPZZ ©SßHII°¥¥î¿¿@&OûLˇ˛˝ˇq´ ¬Ãl6»ìO>…ÏŸ≥1ç<¿¥i”Ü≈ã[-´p{QÑúÇÇÇÇÇBHn@Ω^è…dbˆÏŸ¸¸Ûœú:u
ÄÂÀó3uÍT._æå¡` n-Ò!33”™∏-Ä^Øg‡¿Å$&&¢”ÈÒÒA≠VSPP@AA%%%ÿÿÿ†—hpvv∂˙nEEf≥ô““Rπ@Æììnnn∏ππëööJff&ûûûÃò1Éé;¢”È‰¢∫∑"¥*·9r$;vÏ‡Ãô3‰‰‰›wﬂ1oﬁ<Œù;¸eŸTƒ‹ÌGr





’ 	ú”ßOäØØ/è?˛8sÊÃ¡d2—•K‘j5˚˜ÔGØ◊ﬂ≤UN ‡4,]∫îŸ≥g£R©∞∑∑«¡¡GGGÍ‘©C„∆çâçç•i”¶›Ù∫¸ÒG6lÿ@ZZó/_Ê ï+îññR\\Ã¿ÅYæ|9pU@JMÈoÂ‹ËızRRRË›ª7˚ˆÌ#$$DnÀ5q‚D^yÂyYP¨rwE»)(((((\IÑîóóÛŸgüÒÊõorÈ“%Ÿ¢Ê··¡+Øº¬Ñ	0õÕ∑,Ü‘j5dÌ⁄µÿŸŸL˜Ó›9r$···r	ïJıèéC≠V≥p·B˛˜øˇëûûé¡`†vÌ⁄$''[	¨[u∑zyy1|¯pÊœüè…d‚ôgûa˜Ó›ú>}öÙÙtÇÇÇã‹Dr





7Å$∫7nLhh(_~˘%Z≠ñ+V‚ã/ÚÂó_“¶MõõJ|ê ÜhµZ¢¢¢8|¯0ÓÓÓ|Ú…'®T*/^ÃŸ≥g1õÕÿÿÿ Ñ¿€€õá~òßü~⁄ %kÈMHH‡É>`ÔﬁΩYm≥SßNÃõ7ñ-[∆ÚÂÀ9p‡ ˆˆˆ§¶¶‚ÌÌ-˜;ΩY1◊´W/Œú9√û={–h46l»¶Mõàääí◊g2ô–Èt7}ÆnE»)(((((‹ )Ò ..éá~òÑÑÃf3:ùé°Cáíòò»È”ßo*ﬁLä1{‡Åÿø?ù:ub«é¥m€ñ”ßO”ªwo6lH´V≠pss£ººú?¸ê-[∂`6õ˘˙ÎØi€∂≠’:ÁÕõ«|@HH†Eãxzzíôô…Ÿ≥g˘Í´Ø8zÙ(=ÙKó.≈≈≈ÖY≥f1sÊL»……A£—»±op}WË∫uÎxÍ©ß0çr·à#∞±±a˝˙ı ®T*L&ÔNæÔ






7Eqq±BàÆ]ªäû={
!Ñ»ÀÀBQ∑n]1x‡õ^◊å3 fÕö%øEã‚Ãô3Ú2eeeÚK˙ˇÿ±cÖõõõHIIëﬂ_¥hëprr[∑n≠v{eee"%%Exzzä#Fàºº<Q\\,é?.j’™%Í◊Ø/ÚÚÚDAA¡MÌøV´Kó.≈≈≈"%%E$%%	ùN'Œú9#Ø[˙W·Œ°9Öõ†∏∏XNGéëEãDJJäpvvk÷¨±`’Ωlllƒ§IìDqq±1bÑªÓˆ•mgggãá~X¥lŸRà≤≤2·ÈÈ)VØ^-Ñ"##Cà‚‚b˘Û≤≤2YP%%%	777q‰»!Ñ"))IÿÿÿàY≥fâÇÇ˘{UQPP ƒê!C‰˝Bàé;äÿÿX˘\»"W·Œ°¥ËRPPPPP∏	§`}ì…Dxx8>>>¨Zµ
Ω^@hh(ã/f‰»ë§¶¶ZµŒ2ôLËızy˝ı◊ÒÒÒ!<<úEãp‡¿˙ıÎg’jKBjU^^.◊[∏p!999îóó≥q„F‹‹‹0` &ì	ooo9NO´’¢V´≠j∆Ã'ü|"o√¡¡Å◊_ùô3gÚ‚ã/ÚÎØøíööJNNéº?&ìâÙÙt∫vÌäáá+WÆ@ß”ëôôIrr2oø˝∂’9ª[˚¬ﬁK¸≥Ö˚)Æ{˜Ó¸¯„è>≥Ÿå—h‰Ò«'..é∂m€≤k◊.‚„„Ÿ∏q#á‚ÚÂÀ®T*Í÷≠ÀÄX∂lô,ÿqppê◊-’v´º]∏*éNû<âBJÖÖÖrÔ◊≈Ái4JJJptt¥zo∆å\πrÖ?˛¯ÉΩ{˜RRRByy9!!!<Ú»#ÙÌ€ówﬁyá”ßOìëë!W≠V≥c«T*-Z¥∞z_·Œ£$;((((((‹R)ç˝˚˜3h– Œü?ONNZ≠ì…Ñãã£GèfÂ ï!pvvÊïW^°Y≥f¯˚˚3m⁄4íììÈﬁΩ;3fÃ@ß”±p·BfœûÕ•Kó0õÕú={÷*3’≤ÙHyy9111≤q„FŸB8bƒfÃòQÌ~Kµ6m⁄ƒìO>…Ö ÎÚ*:ùéﬁΩ{ìêê@£FçË⁄µ+ˇ˚ﬂˇ8|¯∞lë,.. '' ¿wﬂ}¸UóN§J¢√ùCq≠*(((((‹&ìâ≥gœrÚ‰I
Ÿ∂m>>>rÎœ?ˇÃÆ]ª∞∑∑G£—∞q„F^zÈ%zˆÏ…‡¡É………·ÎØøÊÎØøfÕö5òÕf∆çGÉııEØ◊(ªG5çl•É´eD
Yµjïúi˙˘ÁüÛﬁ{Ô1q‚DŸZ˘ ä+x¸Ò«≠ü•ÎµY≥fdffÚı◊_s‡A4[∑n•q„∆‘™U[[[Ü*[Õf3999$&&RPP¿¡É…ÃÃDß”YeøJô´
∑≈µ™†††††plÿ∞Åè>˙àì'OR´V-π5◊ë#G(**b«é|ˇ˝˜dffR´V-<<<BCbb"¡¡¡4h–Ä›ªwÛ÷[o…ÎU´’§¶¶≤}˚vÜF£Fç¶WØ^V€ﬂ∂mIII‘´Wè¥¥4‡Øí]∫taÀñ-8êıÎ◊EDDûûû\æ|ô‘‘TˆÏŸCII	Ôøˇ>£Fç∫F\i4¬¬¬¯˝˜ﬂô3gWÆ\¡””ïJEll,)))!¯Í´Ø¯ÊõoË÷≠#Gé§Eãú={ñ§§$B‡ÓÓŒò1c1bƒm)f¨P=äkUAAAAA°,k¬µm€ñÀó/Û˘Áüìïï≈ê!C∞±±±*º[´V-"""?~<√Ü#((àˇ˚øˇcÓ‹π≤•l›∫ul›∫ïÖ¢’j≠çÜ≈ã≥c«≤≤≤(++‡¡$&&Ü6m⁄TÈ™Ã  ¬œœè’´WÛÌ∑ﬂr˘Úe ÀÀquu•^Ωz8êá~çFSeß©Â÷Ü8|¯0≥gœFß”ëììC√Ü=z4œ>˚,œ=˜?ˇ¸≥Ïb∞≥≥√∆∆Ü÷≠[≥xÒb>¸Cæ˘ÊÚÛÛ≠∂u´=]nå"‰*!eâöL&Øæ˙*ø¸ÚÒÒÒëììCø~˝dÁÎÎÀÉ>»¿ÅÂñTçÜô3g2{ˆl"""àéé&  @éo˚˝˜ﬂ—Îı‰ÊÊb4πxÒ¢’>dffb0®®®†V≠Z‘™UΩ^Oii)666r«@˛◊÷÷[[[T*ïU2\µ¸I˝[ÌÏÏpss√››gggÏÌÌi–†AAA8;;∞yÛf>Ãoø˝Fhh([∂lê;4Ï›ªóuÎ÷±k◊.   ∏rÂ
„∆çc‡¡ DEE·ÂÂ≈ÏŸ≥Èÿ±„5˚¢p{PÑúÇÇÇÇÇ¬uX∂l„«è«÷÷ñCáyS1_í•mÁŒù|ˆŸgú8qÇííÑîóóckkãΩΩ=ééé≤ïL´’‚ÂÂÖóó899·ÍÍäF£!$$Ñ⁄µkÀÂEnƒ…ì'…œœóÖ¢ΩΩ=.\ !!Å¨¨,Ãf3TTTpÂ ŸzvÂ  úùù—h4tÔﬁùW^yÄ‹‹\πï◊çzß>¯‡Éƒ≈≈1|¯p-Z$«˙I…äòª=(NkÖj0‚··Åìì!!! 7%F())`¿ÄçFåF#&ìâää
(//ß¨¨åííÏÌÌπrÂ
/^‰‚≈ãS\\LYYÂÂÂ!®®®¿d2QZZz√∏3©ÜúΩΩ=vvvÿŸŸ…‚∞vÌ⁄≤(ÙÚÚ¬——WWW<<<ÙÙDß”UÈæïﬁ≥,ç"ıS≠å$Ωºº‰å^ÈúU.≠r≥X∂JS∏ä"‰ÓIû~˙iæ˙Í+^zÈ%¶Lô¬—£G…ÀÀ„ÚÂÀ‰ÁÁììì√≈ã…ÀÀ£††Ä¢¢"JKK)++£¨¨å¢¢"j’™Ö…d¬h4‚ÍÍ ∆ç…»»‡Ãô3Ëız._æLAAF£Q]í[÷ŒŒN∂æ	!∞µµ≈¡¡≠Vããããú-*ΩP©TÿŸŸaooOXXvvvÿ⁄⁄ «$˝m˘^UTTTPVVFaa!EEEîîî»˚g2ô(..&..Nó•••◊¨£§§Dçt:µk◊∆ﬂﬂü∫uÎHHHà\*≈≤G´´´+≈≈≈¨X±B.looèãããÏﬁuvv∆≈≈WWW‹››ÒÛÛ√◊◊óÄÄ  <==πtÈ?¸0=Ùü~˙©"‰*°∏VÓI˙ˆÌÀñ-[∞±±¡√√„Îô≥≥3ÆÆÆ∏∫∫‚ÊÊÜõõ:ù///¸¸¸∞∑∑ß}˚ˆú;wé-Z Ñ†Nù:TTT†—hˆˆ∆≈≈wwwY‡J√ÜÅk-v7≤¢›Nw£e}8I\JÔKÂFÆ'ä‚‚‚8sÊπππdeeëïïENNyyyY¥JÆXK¡ÁÍÍJZZiii¨^Ωö∞k◊.ó.]¢∞∞êsÁŒa0dq]TTÑ…dí-êWÆ\°¢¢Ç¸¸|Ãf3±±±Ï‹πÛ∂ùü{≈"ß††††pO“Æ];vÏÿA˝˙ı9x`ïÀX
∞ZRÃöüüB<==9sÊÃ-ÌCebun»õÂVÑû¥¨e{Æ[°uÎ÷¥n›˙∫ÀH… Áœü'99ô¥¥4222∏p·F£Ä∞∞0åF£U◊á Y¨U≈€IY¥œ>˚,õ6m¬’’É¡†ÆÑ"‰Ó,c®ÊÃôÉççÕ5ŸõñX⁄ïæ/â;ïJEff&˛˛˛!∞∑∑®VLH˝H%±¶—hÆ(ˇ‘‚ˆwcÀ™⁄˛ç÷u3˚™R©‰x∫Fç…Ô,_æúÒ„«S^^éããKµﬂ∑‹…z(°”È‰Ôn›∫ï={ˆ–≥gœÓ◊˝Ñ"‰Ó	§çÜÿÿXÂ∏∞õ≈RXhµZYî’™UKrzΩûsÁŒX[æn$~n$û˛©≈ÓFTg}¨
)9°Úr“1Z÷Ñ´J ¶§§`ccC˝˙ı´=.Àò:È_ïJ%/ØV´)((†V≠ZÚÃ3œ(BÆäêSPPPP®ÒH‚A≤î]∫t	äää¨
◊Z.oYB√d2°◊Îπp·ôôô‰‰‰êúúåÉÉÉ\¢C™ØÊÔÔè…díÖŒ≠¥ü∫ë–ª”1t∑b—ìˆ•≤≥¸øe.	iB0yÚdºΩΩÒıı≈ŸŸYŒäï‚5Z≠V˛-*‚úúlllprrí≥Ä˛Br




5û Á‘©Sx{{#Ñ¿h42fÃ


∏|˘2zΩû‚‚bÑr¿æTt◊∆∆Fµj’Bß”Q∑n]ÏÌÌ—ÎıÚ∂,KiÄµ ªõÎ£˝ù}´*vÕíÍÑûªª;666îóós‡¿222¨ñ+((@•R…Eå•YGGG¥Z-uÎ÷≈……â¥¥4T*'Oû‰À/øºÂ˝ø◊QÑúÇÇÇÇ¬=…ü˛)7Å?tËAAAxyyå££#¯˚˚„ÎÎãøø?^^^≤u»≥ŸL”¶M…ŒŒñﬂªüÓ+ªÍÑ^ff&çÜ+VTπûÃÃL222(**¢®®àKó.qÒ‚E≤≤≤∏tÈyyyú>}öºº< V≠ZEˇ˛˝oˇ’p!ß††††pORRR"◊;€∏q„MØr±_µZÕ∫uÎh›∫5}˚ˆ•_ø~DDDPø~}π]ïÙ=)Ÿ¡2~L≤›®BM¬“*gY‡◊h4≤gœ>Ã_|Aü>}d]elPPAAA7‹÷–°CŸªw/6$''ü€w ˜ J9Ö˚ÇøìÒi)ºvÓ‹…ÏŸ≥9yÚ$888‡ÈÈI`` 111tË–ÅËËË*◊#≈‘Yñ€êZV›çòÕfπ|HÂ}5õÕdff¢’j˘˘ÁüŸªw/)))deea0P´’8::“ªwo^{Ì5´Æ5≈]ìPÑúÇÇÇÇ¬}¡?)›QYtÏ‹πì‹‹\‚‚‚8~¸8ŸŸŸÃf3Z≠ùNGdd$———ƒ∆∆yÕ~Xñ)π[1ôLú={ñ#GéObb"ÁœüÁÚÂÀràªª;!!!DEE—°CÍ÷≠+[Õ§∏B©ìEeKû¬?Gr




˜∑≥[ezΩûåå˛¸ÛONú8¡©Sß∏p·É{{{Í‘©C´V≠Ë’´;v¥Jö¯Ø≈ú•;9>>û≠[∑≤q„F≤≤≤(**B•R·ÂÂE`` Ì€∑ßEãÑÖÖ·ÌÌ-üÀ|`}LUe„*BÓˆ†9Öj®J¸›l≠8ì…ÑZ≠Ê‰…ìú:uä¯¯x6oﬁÃÖP©T¨^ΩöòòRSSâàà∏#˚´¥n›öSßN·ÂÂEã-hŸ≤%:t†i”¶◊=Ó VFâÎïSQÑ‹ÌAr





◊·Ôà9È{zΩ^v3JÒq&ìâÖÚŒ;Ô0gŒ&Lò «ñ˝óñ9///Í◊Øœ∂m€0Vuˆ$Av;˜Or∑E»)(XGNN}˚ˆ≈`0‹’¡»


ˇ>ïE›?“””âåådÙË—,Z¥Ë_u≥Z«∆ç2d#Få`˙ÙÈ¯¯¯X9æQë‚øã2∂ﬁl˛ÎPP¯ØêJòL&ÊœüOTTm€∂e√Ü¿Õµ€QPP∏ø®™fZUØõ¡ﬂﬂüsÁŒ±b≈
ÜJjj**ïÍñ:E¸]§ÒÌ–°C2ÑW^yÖÈ”ß£’j1®T*˘•pw£¸B
˜%íã„˜ﬂg‹∏q¸q≤≥≥È’´p5€ ﬂﬂˇ?ﬁSÖªç[i<£ı∏∏∏êüüèªª;%%%|˜›wîóóc2ôÆÈCz;∞‹ﬂÌ€∑”∑o_ﬁ}˜]&Lò@NNNï€¨ÓïâÓ›ÅbëS∏Øê$Ω^œ<@ﬂæ}âåå$==ù1c∆`kkK€∂mß††pC™3∑"p§e/_æÃŒù;y˚Ì∑—h4òL&åF„mKí˜¡`0`4—ÎıËızƒªÔæÀÿ±c1hµZ9NØrôE¥›Ω(9Ö˚
µZÕ‘©S˘¯„èi“§	Áœüó©7ﬁxÉ¿¿@|||¨™≤+(((\À˙hˇd‹xÁùw;v,ÆÆÆå5
É¡Ä…d˙«1s“'≠«d2°”Èh◊Æ√Üª¶|à\ïòS∆∆ª%ŸA·æ"&&Üì'OÚ˝˜ﬂ”•Ky¶™’j©_ø>O=ıœ?ˇº’`¶†††wπûŸºy3õ7oÊ‡¡Éú;wéííäãã),,‰è?˛†i”¶≤•Ïv&@Ët:µk◊∆∆∆ùNGXXƒœœè∞∞0t:]µÓUe\ºªPÑú¬}¡Œù;8p ¡¡¡Ï‹πìúút:ç£—à¡`†eÀñdeeYıT,ÖøÉea\Ieee±q„F~˛˘gŒû=ã—hî?S©T899Qø~}“””)**"!!ùN'«À˝”ÒHØ◊3yÚdæˇ˛{⁄∂mKrr2eeeîññR^^éùùNNN‘≠[óé;Mì&M˝g'C·é¢∏VÓiÃf3?ˇ¸3ÉfÏÿ±,\∏@n‘l6õQ©T¨Zµ
///‡Œ•⁄+((‹?îóóÀÌ∫÷¨Y√™U´HJJ¬h4RQQÅZ≠∆››ùÄÄ ö5k∆<@˚ˆÌe·÷®Q#z˜ÓÕó_~â∑∑˜mó>Ã7ﬂ|√ÔøˇNtt4ôôôƒ«««πsÁàããCØ◊ìòòHBBçÜêê∫uÎ∆C=DÎ÷≠o√ôQ∏›(9Ö{öØø˛ö—£GÛ¡0j‘®k>ó‹1114n‹ò%KñX}ÆX‰˛.#Géd«é‰ÂÂ`ooO›∫uy¡i◊Æç5™÷⁄e6õÒˆˆ¶sÁŒ¨]ªñÃÃL¸˝˝o:FMäwì âÏŸ≥á~˝˙Ò‚ã/2{ˆly}ïŸªw/_˝5˚˜Ô'##É‚‚bÆ\πÇóó±±±<ˆÿc≤‡T∏;PÑú¬=çìì|√Ü´“e*˚˚˚Ûﬁ{Ô—Ø_?´Ô+BNAA·zTVÈÈÈºÒ∆l›∫ïÀó/cggáøø?Ì⁄µcÃò1DGG÷Õ‰%Îù%jµöúúZ¥hA@@ ˚ˆÌ√`0‹t2ñ•êõ6mÛÊÕc‹∏q,Z¥H˛‹“ gπZ≠ì…Ñ^Øg—¢ElŸ≤ÖsÁŒQZZäùù6‰Âó_¶oﬂæVÁA⁄oÖE»)‘hÃf3F£ùNg50‘´Wè+VDhh®U/@IÃôL&~˘Âû}ˆY222nk’vÖ{ó™∆äô3gÚ—GQPPÄùùıÎ◊gË–°:¿™›UÂû§U≠OZÆc«é$%%1~¸x^{Ì5¥ZÌMÌ„gü}∆å3(((`ıÍ’4k÷Lnro√gâ•∏ìñ3ç>|ò•Kó≤}˚väää∞≥≥£oﬂæºˇ˛˚◊¥Ò∫YîÒıˆ†9Öœ∑ﬂ~ÀÚÂÀÈ◊Ø„∆ç`ÙË—Ïÿ±ÉÕõ7£”È¨‹ ñòF£aÙË—‰‰‰∞q„FE»)((‹ñ®úúzË!qpp†eÀñÃü?_∂æV›§≤"Z≠VûxVFöhÍızt:+WÆ‰ç7ﬁ†∏∏òàà:uÍDTT6ƒœœΩ^Ojj*{˜ÓeÀñ-§••QZZJÔﬁΩYµj’5ÎøQ˜à ÷:∏:^fffÚ∆o∞q„FÚÛÛ—jµ|¡0‡ax#aßåØ∑E»)‘h‚‚‚Ë—£QQQ:tàW_}ï±c«Ã¡É≠í*ß“Kihh(/º£Gèæf˝ @£††PÉÅSßN—ø.\∏@É5j`˜Ó›8pÄ¸¸|åF#%%%TTT `kkã≥≥3%%%◊]˝˙ıÒÛÛ£i”¶tÍ‘	ÄMõ6Ò˘ÁüìúúLii)&ìâÚÚrlmmÂÃ◊Ü“£G9.ÿl6≥fÕÚÛÛIKK#55ïÀó/À	^’QVVÜ—hƒ¡¡t:^^^4m⁄ûyÊíìì©U´oæ˘&c∆å±
]QÑ‹øÉ"‰j4”¶McÂ ï§ßßÛ¿ITTsÊÃ·¿Å◊uAH3jùN«‚≈ãyÚ…'ØYFh$§	°[k2ôÛÛì[luÏÿ—j˘¿¿@j◊ÆMÌ⁄µ	≈ŸŸ777¥Z≠ï;R≤ºÂÁÁìüüOQQÂÂÂ¸Ò«rÓ‹9
Båøø?ûûûh4    pss√ÀÀãÚÚr233…ÃÃ‰ÙÈ”ú?[[[Í‘©CÌ⁄µ	&88úùùqqqëK1ÚæçF
qvvÊÏŸ≥\∏pÅÇÇŒû=K^^%%%®T*vÓ‹Ivv6BNú8Åüüﬂ5„fuÇN_oäêS®—Ëız¢¢¢(--%77ó_˝ï1c∆0|¯p^}ıU‡˙É≈¬Öy·Ö˜˜Áƒâ’Œ$ïGA·˛∆2ÏBrm⁄¥·–°CÙÏŸìq„∆—®Q#Y§¡_qn∑ÛCÂPèCáqÊÃ“““»ŒŒñ   ∏rÂälësuu≈——ëFç—∂m[´Ï‘õÌ+%?îóóÀ°)ñıÏ2331õÕ¯¯¯∞q„Fû|ÚIj’™EYYôï€ˆzV9e\Ω=(BN°∆ìûûN≥fÕııE´’¢◊ÎIIIÆ∫>*wh∞t≥FDDêûûŒ‹πs3fåºå"‰™Bq{˜Ó•}˚ˆ<Ú»#¨_øÉ¡Pef¸Yó≤rõ≠[•rÃõ‘É5779÷œ««áMõ6—´W/Ã™U´d1ßπ;è"‰j<ÉÅNù:—ªwofÕö≈√?ÃO?˝XÙZ∂∏ëöFGDD–≥gO6lÿ œn´ æR@nô¬˘ÛÁ)++ì3;·Í8sØøﬁ∏g9!ñƒm≥fÕ8~¸8◊î7π’ı+‹<6ˇı((¸L&ìÏ+1`¿ ´∂7ï]#ÈÈÈTTT‡ËË¯ÔÌ∞ÇÇBçDJê*//«`0pÊÃ∆è/øÁ‚‚ÇããKçq7#¢Ãf≥¸2ôL˘ˇF£Q.˘$Míøˇ˛{Æ\π¬¥i”˛ë%P·÷PÑúBçFä—ppp‡‘©Sxzz^”F¶™Å’≈≈ÖO?˝îZµjQØ^=•òe5X‰UΩÓ7T*/æ¯"666Ãô3Á∂‹ÂÂÂV/À	™4IU´’∑<>Iﬂ©Í%Y‘,_7≥æ Xøøø?uÎ÷eÈ“•7]ÎN·üS3¶

’ Õé9r‰uÍ‘¡››£—àJ•ígäï≈úV´Â¿ÅËt:úúú¨ñ©™HfM„F5¢ÆGM±(((¸€Hc wﬂ}Gxx8f≥Ÿ*d„VêÓQÀÑ∞Fâââ§§§pˆÏY≤≥≥πxÒ"ÉAŒ(∏rÂ
ÂÂÂ!∞±±¡ﬁﬁ‘j5nnnxxx‡ÈÈâßß'-Z¥¿ÕÕ777t:ùUqti_™BÍImâ/g2ô‰Ôi4^}ıU&Lò¿È”ß≠
±+‹9î[°Fc2ô˜˜',,å~¯Å>}˙‡„„#^› ≤yÛfÃf36îSˆk∫ÄπŸå7¬R»÷Ùs¢†pªêÓ≠¯¯xåF#&L∏°à≥gïÔM©ée||<€∑oÁ–°Cú;wΩ^OII	•••ÿÿÿ‡‡‡Ä££#ééé899·ÈÈIHHòL&ÏÏÏ∞≥≥√÷÷ñ≤≤2


0çsÒ‚ENù:≈·√á)--e¡ÇrΩ9ïJÖV´ïK£ƒƒƒ–¶Mπˆ¶eÜjÂ}∑W+O|GèÕƒâYø~=S¶L˘[ÁZ·÷PFiÖç$4‹››)//ßi”¶¿’dój≥∂6oﬁLPPÉOOOŸUX]´UüÙÄπ—l¯FÆÖø–Îı|ˆŸg‘™Uãq„∆UyØHìBì…Ñ—hî«!È˚?ˇ¸3k◊Æ%--çúúÏÌÌ—jµx{{NTT-[∂¥Í
ÒOê¨fRviff&)))§ßßìöö ±c«ÿæ};?¸ÿ€€ATT#Få¿««Á¡™V´≠∫=H…“g¡¡¡,^ºXrˇäêS®—X∂ﬁË—£á’˚ñ≠eÀõU´V1j‘(æ˚Ó;ÏÌÌÂ¡ÆÌ5x7#’y≤l;v+•™r¡*V8ÖÍŸ¥iri£™êb€t:{˜ÓeÕö5Ï⁄µãKó.°R©„ˇ˛ÔˇË’´ç≠V{]Îﬁ?ù\i4Ÿ™”Èàââ!&&∆j¨0ôL=zî={ˆ∞{˜n÷Ø_œßü~äùù-[∂‰≠∑ﬁ"""BûJcéÙ∑Â∫zÙË¡í%K‰eî1ÂŒ¢îQ®ÒH≥‹°Cá‚··A”¶MÈ◊Ø£FçígäGèÂ∑ﬂ~cÕö5§••·ÌÌÕû={hﬂæ=´WØ¶uÎ÷5R»U≈øiQ´âÁGA·ü‡‡‡¿®Q£x˜›wØÈG*›{ÂÂÂ¨X±ÇÂÀóSXXàùùm⁄¥aÏÿ±¥k◊Æ ñÅU≈»I¸˜ôÂ§–h4 cÁ˙ıÎ˘ﬂˇ˛GFFjµön›∫1uÍTÇÇÇ»……˛ä“~n€∂çÓ›ªÛÌ∑ﬂ“•KójE™2~‹!ßP£ë¿%KñÊõoÚ˘ÁüÛ—GëòòHII	6$;;õ3gŒ‡‰‰ƒ£è> ¯Ò„i÷¨zΩûfÕö±oﬂ>π∏%X◊õ´©çÂ±¸ìc¯;ÆYÖ{ï∏∏8⁄∑oOFFÜU	µZÕá~»ºyÛ(++£[∑n:î.]∫ »EÉ-≠Wp˝‰ñ‚–Úˇ∑BUµ1´⁄ñ%íKÆ&á•ßß≥j’*æ˘Ê.\∏@´V≠¯˘Áüe∑≠$Ê$¥Z-±±±|˚Ì∑äêª√(ˆNÖÕ…ì'âåå$;;;;;zË!zˆÏ	¿ä+5j.dÂ ïå5ä—£G[’CB‡‚‚ ◊Ç™©rss…ŒŒ&//è‚‚bíììπtÈYYY   (++£§§DnÌ#¿666ÿ⁄⁄‚ÍÍJ@@ ıÎ◊g‚ƒâˇıa)(¸ÁHBÂÛœ?«ﬁﬁ^Œ¯¨Ï6∆h42r‰HÊŒùkı}∞.!Rπuó¥.Àí#ñ≠æ,3CoÖ	ø añh4πäøø?ØΩˆØΩˆÒÒÒ<ÛÃ3Ët:ﬁx„Ü*oG
Si‹∏1Gé¡h4^WH*¸sî3´Pc1õÕr	 Ω^èΩΩ=jµöÙÙtÇÇÇÿ∞a›∫uc¿Ä≤ãCB≠V≥m€6llln©ïŒﬂu[^/Î´ÚÁU¨gœûÂ“•KÏŸ≥á‹‹\222∏|˘2ÉÅ¢¢"•••‘™UïJÖççç\*¡ŸŸgggt:‘≠[ó¿¿@BCCÂ¶‹“v”““»ÀÀ„·√Ï⁄µãπsÁ¢V´qpp 00êvÌ⁄—ªwo¢££Âë™b`îô∂¬ΩÑ¡`@•R±uÎVBCC≠Æo…#0e ∫uÎ∆«åèèzΩﬁ*ÛÆ-Pnô$ qªÔ•Îπl´€fÂœ§ÒH§ç5‚˜ﬂg›∫uå5ä~¯Å;v»üß¶¶Ú»#è0m⁄¥{™”≈›ärv™ÂvπÁÓ$ÂÂÂh4~˝ıWÅ´âzΩû?˛¯ÉU´V·ÔÔOAAÅ’Ä©—h0ÿŸŸYΩ˜w©N®Y∆ÕX.#Õrız=âââú:uäsÁŒëùùM~~>ÉÅ¬¬BåF#f≥Yfp’e·ÎÎãèè6§Nù:ÑÑÑéÉÉÉlaªqTTî’˛HÀ¡˚Ë—£ú>}ö_~˘ÖuÎ÷ÒÈßübooœÉ>»í%K0\∏pÅ¸¸|RSS≠÷oooèããÆÆÆ≤†îj\Yn´r--Öª	çFÉ—h$//è|Pû¿h4ﬁyÁﬁzÎ-6lÿ@hh®\˛H•R›îÖˇF… ∑#ÊµÚ}u≥˜ôeáú .aì…Dó.]∏|˘2Mõ6%,,åîî···DFFÚ⁄kØ±gœ9	M·Œ†9Ö*9}˙4ªvÌ"**
7779§r]$K”ˇøçZ≠∆h4ÕÈ”ßeó™V´e‰»ë∏ππ…±)BÍ÷≠kı}Ω^o%‰nvõ`ù“ØV´≠JYîeddêöö πsÁd±c4Â:Qµj’¬¡¡úùùquu•vÌ⁄¥h—ÇêêÇÉÉ	

¬€€˚∫BÛFÁøÚ√†≤≈œR¯IÀJ≥Î÷≠[”∫ukÜ"ˇ√?‰˝˜ﬂ«ﬁﬁOOO‘j5NNNÿÿX7ãëäïñóóSQQ¡ï+W∏rÂ
BÑÿ€€À5≠ÏÏÏ–h4xyy@XX^^^¯˙˙HHHà"Ù˛¥Z-{˜Ó•§§Ñ	&»¢f·¬ÖÃú9ì¸ë.]∫Xu<π’â·ù¥ZUæˇØÁ®Ó}…,çñc†î8f)Ê‡ÍDn›∫uÙÌ€W)ktQÑ‹}∆ıj•m⁄¥â≠[∑≤i”&ÓÓÓ‰ÂÂ°V´—h4—±cG˙ÙÈCpp∞Uå«øïÒYyˇ#""h’™ ééér∆’¶MõX∞`zΩùNáÉÉÉU°`Ä¬¬¬[ﬁGΩ^OZZÁŒù#++ãc«éëìì√≈ãπ|˘2%%%VÇ≈››]h4lÿêzıÍA≥fÕn⁄"UπüÏÕrΩÿâ Ì∂,cq,óì‹@;wÓd≈ä‰ÁÁ”£G:vÏ»¿Å´¨7%}œ2#Œrø.^ºHZZÁœü'++ã¨¨,rrr8x €∑oß¥¥T>óWÆ\ëE≥óó>>>tÓ‹???	V⁄)‹1∂oﬂé≠≠≠Œ°R©x„ç7¯ÓªÔË“•À5n‘*\Ó‰§Âf‚Ê™⁄ó 1~ñ˜˚é;h—¢O=ıÛÊÕC´’ƒ˛˝˚wáQÑ‹}DU7”∂m€¯Èßüÿ±cyyyxzz“æ}{û˛y"##ÿªw/€∑ogÔﬁΩ|˘Âó,^ºX∂ µi”ÜÆ]ª“≠[7´ıﬁ	wlÂ¶˜ªwÔF¡˙ıÎÒÛÛ£GèîóóÛ˛˚Ô£—hdí…d¬∆∆F.1"=Ï322ˆˆñ◊m49wÓgœûÂ‘©S\∏pÅSßN°◊Îπ|˘2EEEîóóckk+hRÏYDDAAA≤≠Nù:rÖÙ€ÅTÍÔ|ÔF\Ôw ÃÃî]ff&É&))âÊÕõèøøˇ◊/Y‹$,©Nß£Q£FÚ~TÆã'π…ŸŸŸ$&& ÆË3gŒŒ;ÔPQQAyy9666899QßNö7oNã-h÷¨!!!Uûá™ƒ´ÇBul€∂M∂åK€Q£F…ûÄ Òo7¬≤†ÆÑ^Ø«l6s¸¯q“““HNN&33Sû$ñïïQTTDaa!•••7‹Ü‘BÍ
·ÊÊÜóóuÎ÷%88ò:»Óﬂ ÷7K™∫W*/„‚‚¬±c«ÛÛcƒàËt::tË¿Í’´o∏ü
ˇ•¸»}ÜŸlfÕö5|ı’Wú<yíÃÃLÃf36åÒ„«ä¡`®“∫a6õ…ÕÕe˜Ó›>|ò-[∂êìì#g|∂h—Ç=z0p‡¿;fŸºy3ˆˆˆ¸˛˚Ô¨Zµä˜ﬁ{è!CÜ∞gœ"""		a÷¨Y4oﬁúâ'booœŒù;yı’Wqvv∆d2—†AfŒú…â'ß†† {{{Ãf3WÆ\¡≈≈Ö:uÍ‡‚‚Ç∑∑7ıÍ’#<<ú¿¿@ººº–Èt˜¸√ﬂ2∂ØwÔﬁÏﬁΩõ∞∞0æˇ˛{ÇÇÇ»ÃÃº)!w+€í® íhiÈêƒûV´%''á.êññ∆ë#G8r‰gœû%??ü‚‚blllpww'<<ú÷≠[Chh®ï–æYWì¬˝K@@ ¡¡¡Ï‹πì)S¶›wﬂ±ˇ~ÄõjX´V≠bÛÊÕú:u J¨ŸŸŸaooè´´+nnn∏∫∫‚ËËHhh(NNNËt:±µµΩÓ˙œû=K^^û¸“Îı‰ÁÁSXX(Op•lu777ÇÉÉâçç•eÀñ4i“‰´|Â„ì&_ñ˜Àƒâ˘Èßü8uÍ[∂l·—G%77Wû‹+®€è"‰Óñ-[∆ó_~…È”ß±∑∑',,å>}˙–≥gOˆÓ›À/ø¸BJJ
YYYr<Yxx8?¸0Õö5ì≠sïë,Yáfˇ˛˝¸¯„èú?û≤≤2iŸ≤%`–†A◊∏˛-Z¥ %%???πƒÜçç%%%`ccCZZ4 ==ù‚‚blmm±≥≥C∫‘•¡À∆∆Fv˚uÏÿëààûx‚	:uÍ$õƒ˝:‡H1@ﬁﬁﬁ|¸Ò«¥h—¬*.ÚV‚ÄÆ˜Ä˚ª1~¿5qöñYøf≥ô√á≥i”&>Ã©Sß(..∆ŒŒwww7nLll,#Få∞öxTï†¢pˇb6õquue¡Ç<˘‰ìÑÖÖ±h—"$áo‹(ºdÔﬁΩ¨X±Ç#Géêõõã…d¬¡¡Å⁄µkF”¶Mi–†ç5Bß”Y≈›ﬁÆlyi]Rl¿ô3g8vÏ$11ëã/R\\Lyyπ2h– bbb¨Ówi,óºññÙÜÚ‹sœ1bƒ¯Ò«È÷≠õ2a∫C(BÓ'66ñååúùùÈﬁΩ;É¶i”¶V3#À }µZÕˆÌ€Yø~=IIIú9sF»˜ÛÛ£Y≥f¥oﬂû∂m€^cç…ÃÃƒ≈≈£—HRR¸Ò€∂m„Ãô3·ÓÓNll,O<Ò={ˆº)aóúúL~~>ûûûÙÔﬂüúú>å∑∑7zΩµZMßNù`Àñ-tÏÿë¥¥4ﬁx„˛¯„<<<»……·‘©Sƒ««â≥≥3999îîî†R©»……¡œœOÆ≥ñùù-[{Ó'§^´’r˙Ùiz˜ÓMNNœ=˜c«éE≠VÀ≠œ$|ª\Ë’=®™öÒﬂÃ˜-ÖûÂ˜•òõ6mbˇ˛˝lﬂæùúúÃf3nnnÑÑÑ–∫uk¸Òj'/ï◊©pÔ"›€∂mc‡¡<xê-[∂·áíññÜ^ØóõœWuœú9ìÌ€∑ìûûNii)¥h—Ç6m⁄éõõÓÓÓÚ}Uù˙ür+Âè,cZßMõ∆˛˝˚9˛<B‹‹‹àââ·Ö^êã™KÇS˙ûZ≠Ê≈_‰∑ﬂ~„»ë#¯˘˘1d».\x√˝R¯{(BÓA*ÎÔÔœÍ’´y˛˘Á©®®†∏∏ò:uÍÜNß£k◊Æ∏ππ·ÁÁGLLÃ5Î©ÍÜOLL‰œ?ˇ$..éì'OrÒ‚Eπ»c`` AAAƒ∆∆Ú¿qÕ:Õf3ábÁŒù|ˇ˝˜$''cgg«É>»†AÉ‡˜ﬂÁœ?ˇ‰‚≈ã\∏p£—àBŒù;G›∫uIHH∞Z∑V´Eß”…≠`"""ò2e
£Fç≤ZÓ¡‰ ï+Ïÿ±√jø§æ¡`‡ÚÂÀ<¿§••›WBÆ≤ÂÒ˘ÁügÈ“•4h–Ä}˚ˆ˝£uﬂ©Å˙z¬Ø™Â™™ä/YL&iii¸˘Áü¨Y≥Ü‰‰dŸ¢‹§Iy‰˘zRÍÊ›òL&VÆ\…Ûœ?Oaa!ç5¢k◊ÆÃú9”ÍZ0ç¯˚˚≥d…ñ/_Œô3gˆˆ¶AÉ>úáz»ÍöÉø&’≈pÊÊÊÚÎØøíúúLbb"a4o*FNölyzz¢”ÈÚÚ¢sÁŒ‘Æ]Z∑n]Âw§rDÄ,TwÓ‹…W_}≈ﬁΩ{πxÒ"NNNÙÓ›õ∑ﬁzÀjÇßR©»ÕÕ•q„∆?~ú~˝˙QTTDbb¢bëªC(BÆ#Õ•Å¿d2—∑o_~ˇ˝wÊŒùÀ®Q£–h4<ÛÃ3|¸Ò«‘Ø_üázH∂≤]ºx///úùùÒÙÙîûáá¡¡¡¯˙˙Vïêê¿â'ÿµk'Nú ##£—(«#’´Wè⁄µk”™U+.^ºH~~>ú<yíKó.akkãááIII≤ÿl‘®ë’ˆàéé¶Kó.Ëız233—ÎıV˚—¢E   8{ˆ,Gè•SßN¨Y≥F∂¯ôL&rssâää‚–°CVB”Ú¸RRRËﬂø?gœûΩÁÖ\eWà4¿FGGSVV∆Ç2dà<òˇ]n∂§¬ùj#v#KÑÑTLZfˇ˛˝?~ú’´Ws˙Ùi ÀÀ	†[∑n<ˆÿc4k÷¨ ı*¶{ìAÉ±k◊.Œû=ãüü@ß”…„Æ^ØÁ’W_Â∑ﬂ~£V≠Z¥lŸíwﬂ}ooot:ù‹ö˛∫V$k∂F£!99ô∏∏8˛¯„ííí8{ˆ,TTT‡ÌÌçõõNNN·ÂÂEpp0~~~7‹Ôúú≤≤≤8wÓ˘˘˘ú:uäîîººº®U´ nnn≤•∞sÁŒr…&i_-≈™$“““ÿ∂mKñ,¡h4RØ^=^~˘e˙ıÎ'gã-4h%%%|˛˘Á≤ß√Â~π=(BÆc˘»ÃÃ$::GGG8Äãã&ìâG}îCáÒ¡Ë£è 34â˝˚˜ìõõÀ˘ÛÁ—Îı‰‰‰`4π|˘2≈≈≈8::¢—hpttƒÀÀã¿¿@5jDÌ⁄µÂÅD
à5õÕ=zî∏∏8>LVVó/_ñc—≤eKbbb@´’¢◊ÎyÊôgÿºy3£Fçb˛¸˘V«√˘ÛÁ9r‰àÏæ0çú?ûæ}˚íõõÀÙÈ”ô1c			4k÷wwwRSS—Îı≤µ∞∞∞ê≠[∑^î,=¿'Nú†Gèr»Ω,‰,1õÕ<Òƒlﬁºô¡ÉÛ—G]”:ËÔÚoπÍ®J¥U3f≠êWKO|˛˘ÁÏŸ≥áíí|}}Èﬂø?O=ı°°° V¢W)n|oJ`` ”¶M„…'ü$33ìÙÙt¥Z-Ωzı"!!ûzÍ)^yÂ‡ØTÈ:∞åyKHH`È“•ƒ««ìööJii)ˆˆˆ»£è> ‚≈ã1ç8p‡ÜEÉoñ-[∂0q‚D“““àèè'''áÌ€∑s‡AY<
!ıı%22ín›∫—µk◊k&Ùñœû‰‰d^~˘eˆÏŸÉããì&Mb‚ƒâ<£—»‰…ì0` πππä%˚°π{ÄÉ“æ}{zË!æ˘Ê4999DEE·ËË»©Sß ¨b™+‰[˘vË–!rrr8˛º|£õL&
…ÀÀ£n›∫\ºxëää
¸¸¸®[∑.ÓÓÓxyy—¨Y3dsª$¯*oSö—∂i”OOO>@´V≠HII·ÏŸ≥VOjµöpj’™EQQGè≈≈≈ÖÌ€∑À±\6d√Üƒ««”Æ];~¯·:vÏxM+,ÀsOßNù∏p·¬}#‰íììÈﬁΩ;F£ëˇ˝Ô®T*6oﬁÃŸ≥g)//óØùäççˆˆˆr∆ùóóZ≠'''¥Z-ŒŒŒ∏ππ—ºys\\\–h4VUÒˇÈÄˇO≠vñÀ$''3oﬁ<‚‚‚∏p·ÅÅÅå1ÇIì&U)~QWÛqwwgÃò1hµZ∂m€∆œ?ˇÃ»ë#Ÿ∏q#6dﬁºyr2Ä4ﬁYíõõÀ ï+Âd∞íí¸¸¸àåå§oﬂætÈ“Ene%≈©~¯·áº˜ﬁ{8pÄ‹‹‹€R˚Ò«'))â˝˚˜ìôô)OB,kÅû8qÇoæ˘Üp˙Ùi***ıı•SßN<ı‘S‘Ø__•±[€üyÊ÷≠[áØØ/m€∂Âÿ±c¸˙ÎØ¯˙˙rË–!"##ï$≤;Ä"‰j83gŒdŒú9Ãú9ì)S¶ ∞a√ÜJ∑n›X∫t):ùŒÍFµrïπï+''ùN«Ÿ≥gIOO'##CÆπñüüOQQ)))888`ooè≠≠≠\|V∫ômmmÂœlll¯Èßü‰v/ø¸Úã\!‹í)S¶∞fÕÇÉÉqtt‰´ØæBß”«£è> /º¿ºyÛ8sÊ=zÙ ++ã\#Ã™r]ªvÂ‹πs˜¨ê3>|ò;vpË–!~˛˘gÑRVVF≠Zµ–jµxyyQØ^= π€Çªª;ÆÆÆÿ⁄⁄RQQAYYŸ∑óíí"óH())!??_Ó[RRBQQeeeòÕf´òH©€ÖììŒŒŒr`©ô‘í˛ﬁ√‡fÖ]ekùÂ2f≥ô‘‘Tﬁ~˚mvÌ⁄Ö—h$<<úY≥f—•K9˘G≤Ä+≠öI||<m⁄¥a«é¨]ªñµk◊b6õqrrb¡ÇráTkQ≤^%$$∞p·BˆÌ€«•Kópvv&22íG}î«¸ö$ú™Æwwwrss1çVΩøã‰˘ﬂˇ˛'óò∫^Êπ^Øgﬂæ}lÿ∞Å]ªvëóóáF£!""ÇÁû{éŒù;ÀÀJ˜äV´e‡¿Ål‹∏ïJEaa!^^^<˝Ù”Lü>›j˝ =q{P
◊ *g
Nô2Öè>˙à~¯AéŸy˘ÂóY≤d	|√á'==ùNw€K$7ehh®<≥≥‹O¯K4JqXR‹ö‘∂©§§Ñíí˘ˇﬂˇ=æææ$&&íüü_Â9êZæ¨]ªñyÛÊ…Å∂ŒŒŒrŸ+WÆ†—h8~¸8œ<ÛÃ=) nñm€∂±zıj8¿•Kódw≤óó”¶M#""Ç∆ç_ì•y;\´f≥ôsÁŒq¸¯qíìì)--•¨¨[[[πU wn»œœó≠yyyîïï°◊Î9sÊåºL≠Zµ‰Ú1ÓÓÓx{{„ÔÔOdd$———rˇÿÎ]Î◊s±ﬁLÒS…-» ï+¯Í´ØXæ|9Dß”Ò‘SO1e ÂaU√ë≤€õ6m †AÉ∏p·ü|Ú	}˙ÙëEêF£AØ◊c2ô9r$[∂l°∏∏X∂LMò0A£-=7¬¡¡Å˝˚˜”§Iì€rÂÂÂÒ¯„è[mﬂÚzØúÌ≠—hËŸ≥'={ˆ$..OOOVÆ\…˙ıÎ>|8ƒƒƒ0q‚D¢££1òL&ñ.] ú9sxÏ±«®WØ%%%dffb4e√Ç¬ÌCr5…|m2ôò2e
Kó.Â˚ÔøßCá <ı‘S¨_øûÌ€∑À%6$ë#‹çFŸÑwfFTUI)®∑:A%›ÿk÷¨A¡ÊÕõ´Ë
	ß¢¢¬™ˇß4Èızúúú¯Í´Ø∞≥≥cË–°7µﬂ*ïJ Æ…ﬂÃÃL>˘‰vÓ‹…©Sß∏rÂ
æææ¥h—Bv„‹)a´—hX∑nÎ◊Ø'%%E∂®˘˙˙Dó.]ÛÛ√ŸŸïJÖÉÉÉ’•ººú¸¸|rrrdÀnNNéªYVV&˜sï&R—ÔøˇŒ‚≈ãB†’jÒÙÙ$,,å®®(:uÍt√NUâµÍÇ≥-[IÀ2DNyÁùwXæ|9ã/Ê—Ge∆å’Ü(‹›ÏŸ≥≥ŸLXXıÍ’„‘©S◊îÎò?>?¸«èGß”ÒÏ≥œ2|¯pºΩΩ≠ àH…U7{∏ππ…=Øo≈≈≈¥j’™⁄.ñKpibEyy9„«èg∆å¿’ŒF£ë;v‡‰‰ƒ†AÉò>}∫|Oˇ˛˚Ô,Y≤Ñ)S¶∞k◊.˘y§p{QÑ‹øÄdvˇ;TvˇÈız¶Mõ∆ÁüŒ?¸@ÁŒù—Îı<ò£GèíîîÑããZ≠ì…Dbb"Mõ6Æm◊t7<P§Ÿ©‰ˆ}˙ÈßyÁùwË‘©ÈÈÈ◊<|SSS—h48;;[•Úk4.]∫ÑJ•‚‘©S¯˘˘±|˘r⁄¥iC``‡-Ô”ﬂ˝Ωn7◊´Wfymƒ««≥uÎV>˚Ï3ÚÚÚ∞∑∑ßyÛÊÃù;ó˛˝˚Àâ%’ÕÑˇŒŸr˚GèÂ∑ﬂ~cÎ÷≠‘™Uã:pÏÿ1ˆÏŸs›u\Ôÿ™ÍÓ†◊ÎIII·¸˘Û‰ÊÊíîîdï(YÌäããÂ6n€∂m„Ì∑ﬂF£—BLLè<ÚHï•r*Ôõt˛´≤÷YÓøÂ2*ïäW^yÖ3fŸgü1˛|4h@ÛÊÕ˘Ï≥œd◊€›pˇ)\ãe@\\•••0ÄEã…ÀlŸ≤ÖπsÁíííÇ££#ÉÊŸgüeÚ‰…<˙Ë£¯˚˚À1dZ≠V∂Ç› ÔÓÍÍ ô3gnK¢É¥ﬂaaaVŸ®◊≥»IHÁ"''á†† rrràåå§k◊Ælÿ∞ÅÙÙt>˚Ï3VÆ\…í%KÁùwﬁ°i”¶<ˇ¸ÛÙÈ”á∂m€#w√P∏}(1r∑K`Y+H£—êõõÀÖ¨ñØ_ø~ïÎ±åù∞dﬁºyÃö5ã≠[∑“∞aCt:Ωzı‚¿ÅdddTπûªµx©Ÿlñ´¢xyyÒ√≥tÈR9‡∑≤Â–d2QßN÷Æ]KÔﬁΩÂD ???FèÕØø˛J€∂mYø~=´V≠í”È-ÖGUÓ≥‰‰d:vÏ»±c«Óö\’˝v“,yÒ‚≈¨[∑é≥gœ‚ËËH˚ˆÌô<y2———◊,Õ≤´ÀŒ¥§™Ó	“wô;w.iiiÑÜÜ2m⁄41ôLÃú9{{{ÊŒù{”uﬂ˛&ìIŒ"ÃŒŒÊ¬ÖrV…+≈i=zî‘‘TÓÓÓƒƒƒ0e î*ãˇVWR‰VDØÙ›˘ÛÁÛ›wﬂq˙Ùi⁄∑oœÜ‰uU∂Ï˝õ◊›?uq›˜»ÌD≤öI!oºÒÛÁœÁ«§m€∂òÕfÊœüœ ï+)))!&&Ü1c∆»˝V¶Nù {ÔΩ«ó_~Iø~˝»ÕÕïc%oı|=ı‘S$%%ÒÁü˛„c[∑nì'OÊœ?ˇî-Ú◊Kƒ˘ˆÆ;Æ©Î}?@HÄEà≈Å{‡B´à≈j]E≠µÓ~mmmµZ[WµŒ∫˜8Q‹P( à†âí Å$p~ªß	Ñ•‡¿<üO>JrÔY˜‹sﬁÛéÁ-Oo≈ÃÕÉbÃò1pss√•KóTÓa≥Ÿ8q‚ñ.]ä{˜Ó¡——SßN≈»ë#!ã··· )◊–Êœ{—†NëóóGˇüõõKˇŒÃÃ$fffƒ  äxzzb``PeY2ôå»d2B!ÖÖÖ‰ÙÈ”D__ü\ºxë~ﬂªwobaaAˇfÓQæ˜CÖL&#âââÑBlmmI`` IOO'yyy*„X˛ûFçëê>}˙.óKFéILLLH@@ Y¥h133#3gŒ$Õö5#πππd—¢E§k◊Æ§}˚ˆd€∂mÑê≤gSXX®2Fâââƒ¬¬Ç§ßß0cWXXHrssIbb"mS||<È”ßi‘®±µµ%AAA‰ÙÈ”ÙÊŸ3˝SÓãÚoU} ﬂWXXHRRRËÔÀñ-#]ªv%>>>d·¬Ö*mŒÀÀ#âââ‰˙ıÎdË–°*Â’Â¸î…d$77óægÂ˚ôôôI¢££…ö5k»‰…ìIü>}»å3»ä+»È”ß…‚≈ãâßß'·Û˘ƒ⁄⁄öë¯¯xµı®kke}™™ü———§uÎ÷ƒ‘‘îLú8ë‰ÊÊ“1KOOßø+‘¶u˝¸>Díºº<íõõKV¨XAIJJ
…ÕÕ%AAAƒ∆∆Ü8;;ìÖVË?Û^B»∫uÎüœ']ªv≠Lk3æÎ÷≠#u“∑p“≤eK⁄F¶ΩÃz´Ó£ºØƒ««___¬„Ò»Ç‘æ◊ÂL±µµ%···ÑB⁄∂mK<<<h;4x{hπ:ÜÚÀLHŸ¬¿, áÿ⁄⁄í&Möggg¬f≥âµµ5
Öƒ∆∆Üÿ⁄⁄{{{‚ËËHúùùâ≥≥3qqq!...§uÎ÷DWWó¨[∑éñ€ßO!é©ˇcXhe2…ÀÀ#ÖÖÖƒﬂﬂü8::B ˙ïôôYÂΩ!!!Ñ«„BY¥hÈ÷≠Y≥fY≥fa≥Ÿ‰¯Ò„ƒ««á∏∫∫[[[biiI»»ë#â°°!ô={6≠K˘Y•§§Å@@“””Î©◊oáù;wí∆çèG<==…·√á+\S^8≠©‡V~QfÓU∆È”ß…ó_~I¸¸¸»Ä»ö5kË&UŸ¢@‚„„ﬂª ¿ƒ6l _~˘%	$„«èßû={à∑∑7155%...dﬁºyÊÅ∫6◊Va ‹∂m±µµ%B°êú={VeS}ó¬úFêSè333≤fÕ2`¿ bllL‹››…∂m€*ùÎÍﬁµÆ]ªÅ@@⁄∑oO÷¨YC¢££+=§™C^^±≤≤")))o›ß¿¿@2bƒàZ›ìôôIÊÕõGö7oNLMMI@@ }Óå†WŸ|P˛nÒ‚≈ƒ……âòõõì%Kñ'''ˆ÷}“†”j=@ôØmƒà∏~˝:Æ\πáÉƒƒDïkããã°P(P\\L?2ôå“;0ü˘ÛÁc“§IX∏p!¯|>FçÖ„«è#;;@Ây˘>D’5”F&∫â1Õq8új£kÜÙÄÄ <yÚ”¶MÉππ96m⁄ÑGè·œ?ˇƒà#¿Âra``Ä¸'N§ÂEDD`‘®Q»ŒŒÆ`:KMMEªvÌÔøˇVö—‚]C*ï‚ˇ˚vÌ⁄âDÇÓ›ªcœû=ï^ØÏ[VS0@ô©Ö1+3é9Çòò Äáá∆éKMë’qBMô2ÆÆÆ?~º⁄∫ﬂáë©s˚ˆÌààà@VV<<<0˛|x<å=ëëëê…dË⁄µ+~˚Ì7°]æøµ5M*õµ`Í‘©¯Áü‡ÂÂÖ'N–,#âD≈Qææ†1≠VÑX,Üìì‰r9∏\.úúú∞~˝z4m⁄T%Ä¨∫tp@Ÿ˚ÙÙÈSÃû=◊Æ]£&[{{{¥h—ç7ÜÆÆ.uy»œœGNND"


êîîÑ[∑n·ÙÈ”Ë‹πÛ[ıÀ√√Ø^ΩBè=`ccsss»d2ËÍÍBGG˘˘˘HKKCJJ
Mìòóó.óãé;bÊÃôh⁄¥i•î<Í∆§<÷Æ]ã+V†∞∞¯Ûœ?¶·Z|Khπ:Ñ≤Õ?55∑n›¬î)Sêïï•ñ$®ŸBÿ§I˘|ú<yrπ;vÏ¿¸˘ÛÒ‡¡x<‚‘7)ˇ}Äz˜ÓçP?6Ü€®≤{$	D"\\\˝˜ﬂ„·√ê…dÙÙƒò1c–µkW|ı’Wÿ≥gíìì+lTÅ ∂∂∂Xºx1ç0d|Ï>$AN,#,,/^ÑÆÆ.ÜJ≠ï˝
kKR~2QiL>E†åˇjÎ÷≠àããÉH$Çßß'BBB‡ÎÎ†L∏ã≈`≥ŸtÓU6œé9Ç˛˘PÒ”cæÁß\.«•Kó∞sÁN$&&¬€€õ&˜>r‰ÊÃôÉÙÙttÔﬁ˚ˆÌSπÔM†Œ?355˝˚˜«ÛÁœ±eÀ´˙ÜFê´à=z‡Ãô36lvÌ⁄•Ú[ueu„…DW?~¸˘˘˘∏zı*Óﬂøè¥¥4H•RzÄW(îWì9àzyya«éò3g&Oû¸V˝≤±±ÅP(Ñëëäää†££ÉÃÃLJƒd‡a"ÃÖB!ººº‡ÈÈY!⁄¥|PmÊÅ\.«ÊÕõ1gŒH•R<~¸¯ΩØ∑=ﬁ´>∞Å@Y•Œ®íSRR»¢EãH€∂m	!D≠?Å≤)•≤OÔﬁΩâéé±∑∑'ƒ——ëpπ\≤sÁŒôz>$0˝e 
…ƒââL&#———’ﬁœòcô1ÀÃÃT1s»˛ﬂg™uÎ÷d¿ÄÑê2ø7ccc"»ıÎ◊	!Ñ∏ªªì3f–61HOO'ñññÔ’¥ZXXH¬√√âππ9qpp 6l†ﬂ+õ@ÀWsieü¬¬BrÁŒ2m⁄4‚ÁÁGºΩΩ…»ë#…·√á…Ω{˜ﬁ ‘óõõK¸˝˝ULN ¸,ﬂÜƒƒDB:tË@-ZD˚}‡¿‚ËËHLMM…ºyÛ!§Çˇ–õ| õˆ√√√â°°!9r$!Ñ‘â9≠¶c†1≠˛á¶MõíÒ„«´˝≠∫˛W˜ºwB*∫A®√Ω{˜àøø?9r‰[çw||<±µµ•Îoyü“7≈€ñabbÚ¡∫≤|L––è‘‘Qx<4k÷õ6m¢◊©£S`≥ŸT¢¨iar‡]ºx"ë
Öœü?«„«èaaaKKK 	Wæ:ƒb1˙ÙÈSSS¨^Ω©©©ÚÚ™ÒÈéÕfC*ï™ò 322ÚÂK ¿ì'O’W_ ÇÉÉ—¶Mº|˘ﬂ~˚-¢¢¢‡‰‰Ñÿÿÿ
Â÷Uàm†l™Y∂lV¨XB&Lò@πöò∂1œõÈe®™ c{Â ¸Ûœ?HIIAaa!‹‹‹›wﬂ°{˜Óu6ó¯|>åååpÊÃÙÓ›˚É"-ﬂG{{{l›∫111¯˝˜ﬂ—ø,]∫AAAË€∑/-ZÑ+V‡¸˘Û∏vÌçn|”y√‹«å…ä+0vÏXtÈ“m⁄¥°>ñ˜∫!@*ï¬ÀÀ±±±uNCƒ–è0¸ÑïYiî·ÓÓé¶Mõ"66
Ö‚çÁ¬ù;w†´´K˜ö∫‚3¨MåÀè«ÉX,¶πY´≤(iP3hπzÄT*óÀEPP&Núàµk◊"44ÄÍ&À¯ú;w			8˛<RRR â îª˛Ù”O`≥ŸP(puuU°I¯Xye~-©TäıÎ◊„Ó›ª4sè«´Y&Û[ll,.]∫Ñ≥gœ‚Ò„«»ÀÀCii)Ä2ÊrÙÔﬂür8≠X±±±±Xπr% ¿——/^T[>C\P'®Ú˘|¸Ûœ?X∞`äããBM{			îÎLŸåY^à´ç ±}˚vDFF"99%%%hﬁº9&LòÄ†† Z6#†‘’&Ê‚‚Ç[∑n°wÔﬁuñ¸ª>¿<///lŸ≤ó.]¢ià~˛˘g,\∏≥fÕBÀñ-!p˚ˆmXXX PÔ/T[»Âr∏∫∫"11›ªwGõ6mêòòH}ÂçˇcxÔ?6»Âr∞X,tÓ‹ëëëı¬%©ºTÁñ¿¨âÓÓÓ∏p·¬[µÁ·√áh±ﬁıR&äg≥Ÿ8tËê
®oésE˝»°Ï∏˘À/ø`∆å»ÃÃƒgü}Ü/^@OOªvÌ¬„«èÒÏŸ3  óÀÖP(D≥fÕà9sÊ¿ÀÀ≥fÕ™P&u/‚á∂¿óÁn„Û˘¯Âó_∞uÎV …wÀT2BÖ\.«å3ÖÇÇ∞Ÿl8::bÙË—‡p8¯¸Ûœ±xÒb¸˝˜ﬂàââ°©¡d2RSSÒÙÈSö ““ÖÖÖ⁄ lí)))ıÊ≥°|™âDË’´ÓﬁΩã‡‡`Ì- 8;;”ˇó˜I©Nh`ÆïH$ÿ≤e.^ºàºº<°Eã•>oÃÜ¡‘Q◊Ÿ:uÍDy”>∞ŸltÌ⁄Õö5Chh(ÜÜ={ˆPB‚·√á£i”¶HHH†)á‘qÛ’dÀk)9V≠ZÖıÎ◊√……	7n‹ÄÖÖ}ÊÂﬂë ⁄ØAÌ°P(ÜÔæ˚111¯Î
 áÍû•ªª;ÚÛÛU,6µ©(ÀÎ‰‰Ùfç≠p8‹Ω{m⁄¥—Ã’:ÄFê´(o¢°°°âDò;w.~¯· eiW¨≠≠—´W/4à˛Õdcÿπs'd2Æ\π¢RÊ«
Â∂{yy°CáTc∆,hïô<àﬂˇ©©©∞≤≤¬®Q£0lÿ0∏ªª#++Å àèè«⁄µkq‚ƒ	ÿ€€#99ÓÓÓË“•&MöB∆é†ÃÈ∑®®® v÷îµç£Gè∆Å‡„„Ék◊Æ—<åÄÍ¬ÆÓˇï	qÃºããã√¡ÉÒ‡¡§ßß√⁄⁄Ì⁄µ£&;eree·≠æN∆Õõ7ßÇ˚«à≥gœ‚ã/æ¿gü}Üï+WB"ë`◊Æ]4hö5kÜ‹‹‹∑ä∫S˝Í··Å_~˘ ‡ÌÌçc«éUµX˛˛7qB◊†rπ&&&8yÚdAÓM"ï´™ß*0œÆY≥f–““¬Ì€∑iPXm†P(ÏŸ3ÙÌ€˜ç⁄Y_HOOß÷ﬁVê´ÈÀˆ∂ù∫Ù&l6<¿ﬂˇç„«èC.ó√ﬁﬁù;wÜØØ/|}}!‘nú,ﬂ}˜~˝ı◊∑Úâ¯P¿f≥©ÿ?ˇ¸É'Oû‡¬Ö»»»®@3¢,†ÏﬂøsÊÃA~~>|}}±q„F899©|>ü˙ ıÔﬂc∆åA≥fÕ â`jjäåålÿ∞b±÷÷÷t—077W;?îs≠÷Œù;áêêîññb”¶M˜˜ØÅZ0⁄ 'Oû`«éàããÉL&ÉããÇÉÉH5FâŸŸŸ4Bµ>Ö7e8;;#??ü¶\˚ê¸‰™c Ã  ¬¶Mõ∞vÌZLô2ÖöÂ∑oﬂéû={¢Iì&HII°˜Ω…fØÓ.óãıÎ◊√  
˝˙ı√Ì€∑·‚‚RÈ˝5≈«2˛ÔÃÅR*ï¬ÕÕ/^ƒÇﬁ[{òÁ$¿„ÒıFÇ ‰ÂÂ°EãuŸº∑BLL‰r9µ
hvh∞Ç‹õ
@’-rÂ}aîÎ9sÊ6m⁄Ñ[∑n°®®ÊÊÊî∂!00∞“zîOœCáÖùùÜÚ¡˙’å&jˆÏŸ¯Êõo¿f≥!
+Pg0ãháêôôâ––P™≈d¥ï¿f	Ê”•Kòòò‡˜ﬂØ0fÿªwØäCOO•••ÔÑs/))	...êJ•:t(.\∏Ä>}˙`œû=*úoo∫πNõ6			»œœáõõ&MöÑÓ›ª´Õ´˚æV≥Ÿl ))©⁄ƒı82ëÀÂò0a ‡≥œ>√≈ã¡·p	[[[å5
€∂m{´˙‘ô⁄‰r9¬√√Ò‚≈¯¯¯`¡Ç∞≤≤BÀñ-ULÔ˚ÅÔCc∂n”¶Õ[?œ∑sHc≥Ÿ033√ì'Oﬁ®π\é‚‚bÿŸŸx?A]Â€sÚ‰…Ji¶4®=Ü§Pá®jAdLQL‰P∆πµp·B\Ωzpqq¡ó_~âoø˝ñﬁ«b±(ë-Û1—KLπl6ŸŸŸ∏p·"""h @m°.w#≥ (
<~¸iii»ÕÕÖT*≈√á!ïJëüüè‚‚b@&ì°®®®¬Ω∫∫∫êJ•8x ö7o^£ë—j2¶¶¶ò;w.ƒb14òÚü?é¸áF◊Æ]qÎ÷-ïk≤≤≤®Ôñ2gZ\\Æ]ªÜ√áÉ√·†oﬂæàééPfí:x 222 
i¥ßææ>!»ŒŒÆw·∆≈≈±±±Ë—£¥¥¥hÄGMÕ§ÃˇÅ2°ÙÏŸ≥∏rÂ
ííí†££É¶Mõ‚ÎØøV	V`Ó˚Púà≈b1¨¨¨êêê∆Ö˜∆ÏÃº£ÂÖ9Ü´_ø~Ë’´ÜNÔ´+Æ9.óKÕ¨SßNÖªª;rssahh+++4m⁄Ω{˜Fˇ˛˝k\>çvNÃ˙2bƒ¨^Ω˙Ωî1Bejj*‹‹‹Ë—£7z^ÁŒùÉÆÆ.⁄µkW≠¨9î◊≥®®(wﬁAÆ`LQ			ò:u*Œü?è¢¢"ÿ⁄⁄b⁄¥iTxcú«¡MYÉƒ†ºP ={ˆDè=–Æ];ZäöBô0w⁄¥iHLLÑL&É\.GII	JKK°´´===†≠≠CCCòôô¡⁄⁄∫Çì?õÕÜ••%∏\.÷¨YÉÁœü£yÛÊx˛¸9›‰™≥‡ÏŸ≥∏q„Ä2aÉ—∞1BYœû=Q\\å«è $	$	ŸÁÒxjÖûë#G¬€€ÅÅÅh◊Æû<yBO“£FçÇüü≠ó©[__ZZZ»……©wAn˛¸˘¯Ì∑ﬂ0zÙh¸ı◊_U.ƒÃX(Gó±Ÿlú9s;wÓDRR5jT!XÅâŒe4Hä «@°P¿……	è=zﬂMy#0„*â óÀ1vÏX<{ˆ£Gè∆÷≠[)	ıƒâ)ôovv6=<º	 kÁaÓ¬ÖÒÒ¡Ü√? 991118uÍ&Lò è[[[¯˘˘°_ø~077'"8\\\†••Ö;vP∆uÈ'W œ˝È”ßpqqè«É∑∑7Nù:UÎÁ(ïJëúú,°ÏÙ.°¨aLJJ¬˜ﬂˇNÎo»hÇú:?µÚﬂóˇçÅ:3©∫ˇÑÑ¨\π'Nú@^^,,,åÈ”ßC @.ó´h›8Nïl˚ÂÖíï+W"++WÆ\AFF∆©øŸÏ≤Ù>^^^puu≈∑ﬂ~333òòò@__üfÇxìóxÍ‘©ÿ¥ix<™CVV¬√√—°CJ•°LßpıÍUå5
]ªv≈Ó›ªkç…‡ ï+HOOGBB÷Æ]ãPÍ†LÉ%À/ø`‹∏q‡rπ‡ÒxÙ’µâAYê∂∞∞@◊Æ]Ò·CÏﬂøΩ{˜Fjjj•—∞ \Ñ@Ÿ)zÎ÷≠HMMÖÆÆ.0{ˆlJ?√oÃ\{_f”öÄ√·†Iì&TSZ”hΩ	]ÑT*EFFfÃòÅ#F`„∆ç√ÚÂÀq¯a◊©ŸHYh‡rπÿæ};>˚Ï3ÙÌ€W≈ãIÎµˇ~\πrªvÌ¬ ï+a`` +++x{{„Ûœ?ááá’02„Ô€‘ˆ°Å6,--qˆÏŸ
Ç\}Åy÷å	£ÕwssÉéé^ø~ç-[∂‘™LÏﬁΩõZ=ﬁÁ:¡ÏYYY(((@œû=ﬂ[[Ã\ﬁ◊àÒ∑*ˇ]e(/º1«ƒƒ‡õoæAVVLMM1j‘(|˛˘Á∞∂∂¶˜2¶«™8–™j7ã≈¬∆ç©oìD"°d∑µÖáázıÍÖ’´W”H:Âà:esÆr˚ôæWFù0vÏXòôô°wÔﬁã≈‘iΩ∫6&&&‚—£GxÒ‚> @(b˘ÚÂXπr%÷Ø_èAÉ’ÿ‹»hÙæ˚Ó;∏∫∫B,cÒ‚≈jìø˘Ê¸Ò«¶õüœá∂∂vùm` c∆ÁÛ¡·p`gg.óã¸¸| eÈø‘mÓLü222pˇ˛}‹ºyÁŒù "<<úFŒâ≈bj™f˙Ú1hZ8¨≠≠!ã©V†&d®ò±fûÒÈ”ß—•KtÈ“|>è=üœ«â'T˜∑}F ÔeªvÌ˘Áü„À/øT1•Úx<x<Ñáá#<<ú~‰»ÏﬂøQQQÿ∑otuuaee:˛˛˛jÎ¨l≠¸ÿûYm¡∏&dgg£c«é∏yÛ&Ä˙„Ïd÷ˇˇ˝{˜Ó≈ç7Í’+‰ÂÂ°®®∫∫∫‘Ç†ßßá9sÊ‘™|mmmC[[[≠[Éââ	,,,‡ËËwww¥oﬂæ^8vÓ‹	mmmöøXÉ∑«GükUù6éyÈƒb1ÇÉÉqÔﬁ=C.óC[[ª ÚLLL‚≈dggCGG∆∆∆Ë’´∆èè6m⁄T–BU&¯T¶%Tá`⁄¥i»……°Z&“P]ŸÍ â‡ËËXAàSß5+/ÿV•a ∞∞∞¿™U´0tËPöµ&ãõüüq˙Ùi*à4gŒú°…⁄Åˇ¸È™*ìöY,LMMqÓ‹9òôô°m€∂»  R€~333>|>>>Ù{'''ú={ˆˆˆ*c$
±gœûZ-fåp…f≥ëúú___∏ππ·Í’´’í˜äD"‹∏q{˜ÓEbb"ö5kÜ)S¶¿√√ÉfrêÀÂ‘?}˙ÏºD"ÇÉÉ±yÛfÖ¬=Î œ‡ó_~A||<∂n›
©Tä––P\ø~iiiTcZW⁄9ÂzÜä%Kñ‘ î~‚ƒ	ú<yQQQ»  Çëë7nå‡‡`6L≈¨_Ÿ\˚êrÂ÷5îê._æåêê§ßß◊Y˘ „%ãq‡AÃû=
Ö÷÷÷prrÇèèö5k777ÿ€€◊Y›¿ö¸ÃÃL‰ÂÂ·È”ß∏uÎ“““hƒ{ã-p¯a˙¸ÎZã7|¯p<zÙ∑oﬂÆ”r?iºœ¸`uÅ r⁄B»í%Kàôô…ÃÃ¨q^ƒ∂m€èGZ∑nM6lÿ@RRRTÚ…’4◊†∫úäÍ>Ñ“¶ML!ïÊ»¨
ÖÖÖÑœÁì…ì'ì‹‹\öœØ≤˚*ÎS7ìœî¡ƒââ≥≥3≠´¶y£££â©©)πsÁéJéø>}˙êFçΩUœEãíûûNÊÕõGúùùi˛@ÂOnn.i÷¨ôJnUôLF¨≠≠Ibb¢JÆKB±∂∂&QQQµjãL&£˘π\.	®t\ô>ÁÊÊí√á???‚ÎÎKñ-[V!go˘\ú3ÚÚÚHœû=I||<!§fy&?»d2“°CM˚√ÁÛ…¬Ö	!§NÛH*è◊ÜóÀ≠u˘Âﬂè5k÷êÄÄ "
âP($:t Àñ-Sπ∂™˚"îÛ¢öôôëËËËÁ-ÆMN⁄ë#G6õMV¨XQ·=W^ﬁÂÁŒù;ƒ——ëhii+++‚ÓÓN˙ÙÈCñ-[F«·m·ÍÍJ&Núÿ`÷∂U´ß>2(ù¿—£G—øµ'GÖBA?áÇ±±1ttt∞yÛf‹æ}aaaî.ÅâV≠m[*s™çååDZZVØ^≠‚ﬂUS»Âr¥lŸﬁﬁﬁXæ|πZsjUmS¶Ò®Ï§}¸¯qå3¶V$£rπÀñ-ÉP(D´V≠ ïJëïïÖô3g‚Í’´x˘ÚÂ[ùÙˆÓ›OOOXXX **
ˆˆˆïj7nL˝≥ò>‘%_sjµµµÖßß'Œü?‡ø˘•|óÀELL¬¬¬∞lŸ2ÙÍ’QQQò>}∫Jj¨˙&È}◊`≥Ÿ–””£˘p
$	˙ˆÌãﬂˇùr&é?´V≠_Z∫∫ £ëÕ  BXXLLL„è?æUô&L†©ó.]
¸Ò«∞±±¡ÿ±cëùù ‘X9@©°By111¡Œù;ﬂò`YyOJJJ¬¸˘Û·ÂÂsssÏÿ±-[∂ƒ®Q£ ãU‹^î)ôﬁÂx∑j’
˝˙ıá√Aó.]–£Gdgg„∑ﬂ~Cœû=·‚‚Çæ}˚b◊Æ]oTæT*E^^˙ıÎ◊‡ÕÙÔJê+è¥¥4Lù:ïæ *ø3ÔKó.≈»ë#±~˝z\ªvAAATp´oáÏÖ¬««\.∑∆õ∂Ú∆ mmm;vå˙È’Ö…äŸÄ∂lŸπ\éÈ”ß◊jA…ŒŒFTTÊœüOÕ©k÷¨¡∂m€h¬qe™å⁄"##›∫uÉB°@nn.LLL‘éè«Éππ9^Ωz‡øÖQ[[[mvá⁄ÄÈ CKKëëë @üC˘†äÔæ˚c«éEˇ˛˝q˘ÚeÃö5ãnêIoCã≈Çææ>rssﬂwSÍÃ≥7nrrr>üèü˛ÑÃü?_Öˇ∞Æ¿Ãë)S¶‡‰…ìoUñÚ7`¿ ¨]ªwÓ‹¡/ø¸Çîîx{{cÈ“•*æOÃa™i”¶∏vÌ UøÎöB*ï"..°°°ÛÛ√∫uÎ‡ÏÏ±Xcccxyya˝˙ı4ö¥ÆÁJM¡¨Ì{˜ÓEVVFçÖgœûa∆å∏yÛ&û?é®®(å?ò:u*¯|><==´å>e‹Nò9áíí|2sÈ]‡£‰‘-07nÑB°PI2œ8+:ÑEã·ÿ±cË◊Øﬂ;ﬁ∞X,ƒ∆∆“ÖíY†Àk∆î˚vˇ˛}⁄æÔøˇÒÒÒxÙË}ﬂFàS ^¬µk◊¢Kó.j€VRSS]]]:rπ±±±X∂lÊÃôC£W‘vº<à““RÑÖÖA*ïBGGç5™ÙzáôLV´:j∆Ì‹πs8{ˆ,=z±X\Èµ}˙ÙAbb"Æ_øé––P$%%—√£Ò¯ò"9k6õ]]]*P70A'¶¶¶8vÏ}w˙˜ÔO#ü?^ßZ9¶éˆÌ€C.óc’™UjÁç∫Ô™ZX,∏\.∏\.ÜÜ„«è„‡¡ÉX≤d	∂oﬂÆíÎıS ã≈BªvÌ(’RM"›ô√¥T*≈Ö‡ÈÈâœ>˚ÒÒÒ¯ÎØøêêê@Û>{xx†{˜Ó*÷ÂÄ/u¡˙ÑB°¿∂m€0p‡@ÙÌ€ó.]¬ÊÕõî	§ŒŒŒò={6Æ^Ωä‘‘Tddd¿ÕÕõ6móÀEì&M√?T–,*xwÏÿ++´w“üO	Ω ßÂó‡ÚÂÀ∞±±Pı‚5fÃÃû=Ì€∑P}`B]‚€oøÖççÙıık¥ÅK•RÿŸŸÅ«„!55Àó/Gdd$uÜØ´^πúgœû·õoæQqNØŒ·ﬁ¡¡øˇ˛;\\\(˘oØ^Ω–∑o_Ãù;rπ¸≠®+WÆÄÀÂ“çT__yyyjØïJ•(..¶ÌU÷xÈÎÎøQ˝ `≥Ÿ3f˙ˆÌ´÷±ùY¿‹‹‹Ä;vP°Õ¬¬\.ó∂ã«„5ËS*á√°œâ≈b}Ù&:fsã≈ò0aM› 6l@AAvÓ‹	ggÁ:–mπØØ/ö7oé˝˚˜Wò7©©©êH$ã≈T„[[8á√AªvÌ–Æ];ú8qÇÚË}Ïœ≠¶`≥À≤∆("UΩüLÄ›ï+W–µkW8Å gœû≈›ªw—øLõ6çr∫vÌä/^ Ä a¸]É√·‡È”ßHKK√¿Å!
annéü˛±±±ïÕ≠^Ωœû=√Ω{˜‡ÊÊÜø˛˙VVVË–°Nù:•≤Œã≈b\∫t	zù{hPÇ#˝K$ƒƒƒPrNe0>&h—¢‹‹‹∞p·¬wæâäD"DDD‡Ûœ?WÒ´Í%f^¶ååtÏÿaaapwwß¿€ú˙ô”†Ú¨Y≥FFFîÅª6„Û‰…å1<_|ÒX,6m⁄Ù÷ÅT*≈Õõ7·‰‰Dµòˆˆˆx˙Ù©⁄˛ÀÂr<~¸vvvTÄd†n¨I-É∏∑m€Ü¸¸|ÏŸ≥á÷«ÄÕfÉ«„¡œœ£Fç¬Ãô3+‹ˇ)pÙıı)KCÛå===addÑ§§$˙[∑n›∞n›:ïà„∫™(õk˝˙ıCrrrÖkÆ«Áœü#;;»  ÇD"©µâT  --çÊá˛T4r@›ãûûˆÔﬂ@=K±ûîîÑ!CÜ 00zzz∏{˜.< ¿⁄µkÅ	&†∞∞Mõ6è«Éûû‚‚‚ ºül,L?/^å““R∞Ÿl∏ππ!00?˛¯#:wÓL9RÀ˚¸2⁄GÅ@ÄCá·È”ßX≥fÙÙÙ0yÚd8;;c¡ÇîG$UJy£¡õ£AΩëL©Täó/_"$$DÂwÊ%‰Û˘8vÏíììQXX®rˇª¬´WØÍ’+Ãö5´⁄^Y¿‚p85jåçç±tÈR™Òz€MBùpµwÔ^‘J@îÀÂ8sÊäãã
±Xå#Gé‡œ?ˇ¨ìçåƒªvÌJÀÛÚÚ¢)Ω ◊¡„ÒêññÜ‡‡`JÄ
îÒ+’ÖfaÀñ-ˆˆÆ‘z“§I077«¨Y≥Tæˇ∑Ú–””{køƒåfÿ––7n‹Äãã‰r9¶LôÇAÉ—,-u…®œ¨UΩ{˜∆¬Öqˇ˛}∏∫∫“≤◊Æ]ãü˛ÊÊÊ())°Ÿ]¢¢¢TÇh™#gâDh—¢¢¢¢Ëı’¸Øå‰‚≈ã7nÄˇ∆J9cœ∑ﬂ~ã5k÷¿¡¡WØ^•^Ã⁄)ã1c∆Ï›ª±±± Ñ¿””"ëç7∆≈ã·ÂÂUÌÿ™SNTsss¸Ù”OjÛ+◊óïïÖ)S¶ ({Œ˜Ó›√∂m€pÍ‘)¥i”WÆ\©íJáÈÎ¿Å©KÕ‚≈ã±zıjl€∂ûûû43äuã•ëc44GèÖÅÅÅZ}∆á·˚ÔøGﬂæ}kTfUüÍÓ‘˚;¸Ù”Oh⁄¥iü¥Ú˜ó◊`ù9s/^ƒ—£G’˙÷òr≥≤≤‡ÌÌ]¡Z]øœü?O…ÉÉÉ·‚‚BImÎ†„2~¸xH$ƒ∆∆V∏6++ãfªPnwiii•Â?{ˆ¨∆myÚ‰	&Mö§6öÔ∆ç∏sÁ6lÿ†¢Ò¸Ö8 044¨ñ«ÒcÜØØ/bbb îE≥∂i”l6˚ˆÌ´Û∫ò9‰‚‚>üèÉ™8À«∆∆¢c«éHMM≈„«èëíí¢BPÕ†&>¡∆∆∆TdÍ˛TÊ1ã≈B€∂mq˚ˆmï¨∂oﬂ°Pàç7b›∫u4á(„Ó¬d—hﬂæ=¸˝˝@Ö‚¯¯x¥m€j◊.†,håg$&&B.óC$A,#??ø !ÁŒù√–°C´ÏgFF‰r9∆çWWWLü>;vƒ¡É±sÁN‰ÁÁcÊÃô4U]˘=çÈ+£} Ê…ÇêïïÖàà‹πs:::u∆´®¡hP9†lÚ0)¥‘˝¶P(êööäÙÙtöìÛ]∑èÕf„⁄µk¯˙ÎØT~Vﬁ¯ﬁ––På5äû˙Àg§xì”ry'[ Xø~=ÿl6:vÏ®R~M˙wÔﬁ=∏∫∫B$·ÊÕõò;w.ÃÕÕÎd·g¥nÕö5S! upp¿ú9sp‡¿ïÎÁŒù>üèñ-[™£ïi„jcZΩq„¥µµ·ÍÍJ€¶å;wÓ¿‹‹ú¶k˚îLRÍ†´´ãííí˜›åzÉ±±±ä†ƒb±‡ÓÓé`¸¯Òu^Û>R“⁄ö¯À2ø’dNÚ˘|888@°P@"ëºqzøè
Ö#Géƒé;®€£ 8p Nù:Öë#GbÌ⁄µ*k∞≤e€∂m»ŒŒFxx87n h‘®Œü?è/^‡Ò„«055Uõ_õ©+##999»……©u<àØæ˙JÌoL;wÓ‹	†L0MMM≈©Sß`ffÜç7¢[∑nàââ°dÂ5—2„¿§,ÙÚÚBø~˝êôôYÎˆkP=‘Òòô\Lh∑∫G,cÛÊÕ‡rπ‘˜Î]„∆çêJ•TU_≤≤≤¿„Ò0d»òòò`ıÍ’*Yî˚YWãÏ≈ãammggg˙]MÖƒåå¥j’
 Ñ 44¥Œ¥Ö
ÖÑòôô©òyV≠ZÖ»»H\∏pÅû/\∏Ä›ªwcÔﬁΩR%’ÖY5**
zzz¢pô»’˚˜ÔS?ﬁèˇO}É—òÀÂrÿÿÿ®s∞ŸlÙÈ”………ı*¸XXX %%Ee|uuuÎ¨|îññæœÂ«&8ƒÀÀ⁄⁄⁄∏xÒ",,,∞k◊.˘|ƒ∆∆‚‹πsXæ|9ıS6k÷,lﬂæ;wÓD≥fÕ∞h—""##~~~âD(--≠T+î≠Î%%%ÿªw/çtOMM•¡,ï}Ä2 BzQG≠ÉÊÕõ„—£GË–°LMMQ\\åé;‚÷≠[êJ•îK.55µF„«fóÒk∫∏∏  nﬁºâ^Ωz’‚	hPS4HA^^^•Bè«√ì'O`jj˙é[ıòÏöllrπÅ 			ààà¿ô3g óÀ©pP_ƒã/®6Æ∂(((@„∆çö[≥. ïJ)ô/Ω'ïJ—Æ];,^ºÉF˜Ó›îô°«éKvÂ9Qôiµ6π‘‘T—v1œÑŸÿ•R)<==k›«Ü
ù˜›Ñ:áÚÅ¿¡¡ÅÆ=ÃªÌÓÓÆ‚á[◊êÀÂ∞∂∂VÍ:çc›»œœØ‡Ïﬁê¡ò•R)LMMÉÌ€∑„Ë—£ò5k.\®¬ì∆Db3§ﬁ 0h– XZZ"   øˇ˛;nﬁºâã/B__fff‘¬¿b±™L&
àâ'¬¿¿ ∫∫∫5¢T“““¬´WØ^·y)ˇ˝Í’+¸˘Áü¯·á¿·pP\\\ºxFFF`±X7n6lÿÄ1c∆‡»ë#*îYUA*ï‚È”ßêH$Ë—£Gµ◊kP{4HAÆ§§§ ô	xP∑ÿ]Ωzˆˆˆ∏rÂJµŒﬂ999Ë‘©z˜Óçæ}˚¢Iì&js±æ‘9aggg#;;ó.]™UYêJ•˜˜«Æ]ª‘ö∏ÎåÄ(ïJ+++¨]ª ∞uÎ÷J}Cjù™ôôôÑ7fqS(044§ã-≥X´ÛÉ¸TP\~ÔÂ7o»d2ïç‹””˙˙˙∏q„ç^¨K(
xº
ÎH]˙"≤ŸlËËË‡ıÎ◊ÙÔOù;w∆O?˝ggg<x ...‘WåqQ÷rq8‹øÁŒù√’´W°P(‡‡‡Äòò4j‘h“§	.^ºà.]∫`‡¡ÿΩ{7ÜRÈﬁÙœ?ˇ–\©ÂÖju`~◊◊◊áªª;]+Àõ‘ìííêüüáÏﬁΩ8p Œû=´BVÏÿ1∏∫∫‚ƒâ¨Ò>z˜Ó]B®vNÉ∫EÉ‰™á√Åππ9>|¯ﬁ⁄¿òEˇ˛˚ÔjØã≈8˛<‰r9≤≥≥U|(ÍsAã≈∏wÔ∂n›Z´˚¥µµQ\\LùˇıÙÙﬁiî€¿Å·‰‰ Unúuë¢+77∫∫∫*$#»I•R «‡S˜ìÀÀÀ´SìﬂáãâDRaSc4ÁZZZHHH@õ6mÍ•˛““R™Ìd÷&{I]Å≈b°†† @›k¸>`œû=x¯!ıYf÷buÎrπ#GéD˜Ó›))}tt4∫uÎwww¸Ò«ò?>:ÑÄÄ ÿ€€#77WÌ<b¿åµQB®{NÂ◊†€∑oSÊ#F`—¢Ehﬂæ=íììaffôLÜîîH$∏∏∏`Ÿ≤eò0aÕdRX,.]∫TÔá˙OrW)--≠r£nﬂæ=é;¶BGÒÆ ã—∂m[ËÍÍb√Ü’^œòÏ‰r9¯|>"##—πsg ıª†ÍÈÈa“§I1bÑ ˜’	"l6B°è=B”¶Mq‰»*¿º"Q{{{™ù–◊◊«…ì'Î’≤§§Ñ2‚37f±màToÉºº<òõõøÔf‘ø(Fpg±X*ÊcF∞/))°ÆÃwu	±XÉ
§›u-»◊YyzÙËccc<x ≠ZµRÒ{-Ô£,ïJqÊÃ<{ˆªwÔFFFÑB!lllÅ@.ó„ÿ±c(**BFF¯|>JJJ‚≈ãjû7ù?ïë˙FGG£i”¶‡p8xıÍÚÚÚã6m⁄P≥™••%êïïÖêêl⁄¥	_|Ò._æ\mΩl67oﬁÑ∑∑˜µ[ÉÍ—†ÇÄ≤âYZZ™V‡`‘“DII	=zÙZÙÏŸ◊Ø_ßZ´™> °‹ü˛ynº∫õÕFjj*LMMÒ¯Ò„Zﬂ/óÀannéõ7obÙË—4È6Û[]kÁ§R)¯|>ZµjwwwàD"àD"∏ªªWI>˘∂ÇV£Fç®)M©oC#ø}[68?9ÂuÜI«@yÆ+sº’%‰r9
©0…5=41Î„kZûÙïygµµµ©ØﬂßíŸAåy˘¬ÖjiH0Y[&MöÑ±c«™LLLPRRoooÑÑÑ‡‘©S∏q„,,,¿·p`ffFÕ◊ïç1Û<òÁU›G9†:(
§••°Iì&  kkk ¿7ﬂ|Å@ kkkòòò–9¬¨sWØ^•$∆*#d ¨P"‡˙CÉ‰ †∏∏X≠3;≥Ërπ\ÿŸŸa·¬Ö*ø´„âSéQ˜©-8ÇÉÉi8mä““Rå7Æ“úûu>ü.óãÁœü®Q2õÕÜ££#n›∫wwwËÍÍ‚«¨p]eFu„Àhˆò(”±c«B__Gé°ãÿë#G`iiâ.]∫@.ó„¡ÉÙ###µÇúûûÙÙÙj‘W[[€j75∆/LŸ‰ı)B.ó£∏∏X≈¥⁄PÃÃrπúö—Åäfñ…ç\ﬁÃ^W`≥Ÿ»……°0”û““R¯/˝£°SŒH†,¿1˜*óÕ†*ﬁ≈Ü
ÜÆ
¯èJÊ˙ıÎ‘¥Zñ/_é““R,Z¥HeéﬂªwÌ€∑«Ç†££±Xåâ'“q∂≤≤¬Œù;UÔ’≠á ¸mÍ>}IeáãÖÏÏl¥i”Ü÷âKó.aË–°X∏p!D"äää(_\FFD"fŒú	+++Ç‰Ú¬úB°@ll,JJJX”°◊†ñhPÇ#|5j‘H≠êƒf≥¡Âr!â0i“$\∏pÅûXﬁe91˛¸›√ºÌ⁄µ√ñ-[∞c«<yÚ§ﬁÃ™<ÆÆÆHMM}#a’ÀÀ)))  »zô‡eF˘7á√ÅÅÅ˛˝˜__ï'N‡ÁüÆp˝é;6õsssÍÉBQ+TBj¨5rttDvvvï>-œü?ßQåı°ë¸X†P(PZZJ£|
è«√Ω{˜*»EEEA__\.WÖ˜±Æ¿·pêööä÷≠[S≤Vèá““RDDD`–†AËﬁΩ;∆çáÁœü´Ãyf]·p8‡rπ4ç3üïÁj}
£2îy:€∂m´b•P˜.≥ŸllŸ≤_~˘eÖıŸŸŸWÆ\AØ^Ω∞yÛfËÈÈ·¡ÉàååÑT*ÖèèÂY´nûºMÆjedddÄ777∫6ÜÖÖ°§§¸Ò∆çãÖ¢¢"⁄°P>üèπsÁB__”ßOWqRá√¡Ÿ≥gahhX#:ﬁJêc–™U+‰‰‰TIycccå3¶^µ[Í†P(0zÙh\∫t©∆‹LÃ“µkWÙÍ’AAA*\roÂÅ©«ﬂﬂµˆÈëÀÂËﬂø?rssëêêÄ@[[&L†Í˘∑fÿl6åççiNKèá.@WWÆ˜ÚÚã≈¬∆ç!
È&•N®`⁄•ØØ_£∂∏ππ°®®®“˘„ÈÈIù£ô∂jN‚X,¥µµ©0–P4ì ôW°´´K59l6ßOüÜ≠≠mΩp	2ˇÖÖÖË‹π38çfˇÓªÔ0vÏX∏∏∏¿››-Z¥¿ä+`bbB◊EfCV‹*;l»d24j‘®Œ˚±@.ó£wÔﬁ»ÀÀ£‰ÏÍﬁÂ©Sß¬¿¿ ÛÊÕ£˛ì ◊°c«éò9s&ç ˝Êõohù‚‚‚wzÿ{‡%yñÀÂ8x ƒb1VÆ\â¿  ä
`Íˆ”m€∂·ü˛°˚ò∫˜˙‚≈ã*|§‘=§ ◊πsg„È”ß~c≥ŸtQ=sÊÆ\π¢"LΩ≠È¥:0ÍÁq„∆°∞∞ó/_Æ—…ä°∑êÀÂÿπs'
¶OüëHT•œFm€∆†uÎ÷4˙¥∂„‡ÍÍ
mmm‹πsâk◊Æ≈ˆÌ€©#ˆ€Do2ƒ´ôôôã≈êÀÂ8p‡ lmm’û¯ƒb1lllpÚ‰I ˇeÜP'»I•Rîññ÷ÿ¥⁄∂m[hii!**JÌç1iii  |Dä)Òm–…ëôgüôô	777ïﬂ‚‚‚–Ø_øz©W°P 22l6Õõ7W·/ÙÚÚ¬Øø˛äEã·ßü~¬ä+0fÃ8;;S”om÷πííòôô’K?>d(ªD¥j’

Ö◊Ø_Ø†Ög¸ØwÔﬁçeÀñ©XÑòÒMNNFÀñ-Ò›wﬂ!..£FçBRRbcc¡·ph∂ûGèΩ≥ÉNRRÑB!ç∞^ºx1^ΩzÖ]ªv¡——3fÃ@vv6Ùıı’Œ___¥m€ñÊ≤V∑∆%''£ˇ˛Ô\aÚ)°¡	råãÀÂ‚ÿ±cjØa2SSS,\∏Mõ6≠íUª.¡f≥Èd˜ÚÚ¬ÊÕõiõ™É2ﬂ€…ì'q‰»ú;w ﬁJ”•¨)bÍ∞∂∂á√¡È”ßk≠Eb≥ŸhŸ≤%∂m€áÉ°Cá¢c«é∞±±©¿•ˆ&ñõõÓﬁΩKÔø{˜.ÏÏÏËÿ*x<ÏÌÌÒÏŸ3*Ïfdd®¯ø0`πöj‰x<ö5kÜ?˛¯CÖGNﬁﬁﬁ¯¸Ûœ))≤≤ÁSCRRRAß!ÄyÊ˜ÔﬂßZaëHÑ˚˜Ô#//¡¡¡ıV˜ÊÕõ—ºysx<N3¶]Ã;Ò6⁄`∆zQ>É…ßÅ@Ä£GèV¯^.óc÷¨Y044TI®¸Æ[ZZ‚Í’´Ë€∑/""" ãaooöH^__………Ô¶3({'ôHÚååddd¿‘‘———¯˝˜ﬂ1}˙tËÎÎ√‘‘î˙5ó? ,]∫>ƒ·√á+‘222êüüèˆÌ€ø≥>}ähpÇ£q¶Bí∫k
¯|>¬¬¬ävÌ⁄!!!°B∞C}µQ.ócƒààãã´ï6çÒÈsuu≈?¸Ä±c«R“∑i/≥ÿˇ	√Mö4¡û={ËÔµAPPÓﬂøáÉ¨¨,ú>}≈≈≈Ë›ª∑JrÔ7—RıÏŸìF√ñ˜„QWWWH$*D2ãk˘`©T
BHç9 ¯˙ÎØC«ø|÷Æ]ã¯¯x,Y≤â§Aj§jÖBKKÀ’eÚWπ\é◊Ø_√““@ôŸrÒ‚≈∞∂∂Æî™‚mÎÊp8∏sÁ&MöD#VôˆTÖ™⁄†|†;sÊ∫tÈÇÛÁœcÈ“•u“ÓèÃ%â‡ÌÌçòòò
◊x<8p .T!–U^WMMM¡·p0d»,\∏õ7o∆ ï+aggGi<<<<G≠ıç˚˜Ô£uÎ÷`≥Ÿ¯Êõo`ddÑCáaÌ⁄µÉççtuuÈ|S∑^∑j’
¡¡¡ò7o^Öﬂ.^º∏ππ—˜DÉ∫GÉ‰Ä≤Ö,<<Ø_ø∆˝˚˜’
JLÙ#á√¡_˝Ö)S¶†U´VXµjΩ˛ ï+ı÷>ÖBÅ·√á√»»à2vWF√ƒ®¡` î)Ëﬂø?úùùÎúèÕfc‘®QxÚ‰I≠U‚rπúÊë›ªw/ı'9}˙4.^ºà+Vºq{
ºΩΩ¡b±∞oﬂæ›SXXHs©T
°P®6À „ê_·≤gœû‡rπò2eJ•œˆÌ€ÿ∑oˆÔﬂ‡øπ˜)Å1-+opåõ¿ô3gT¢E"Æ^Ωä†††z´õqíÔ€∑os©2 Ûú1ˇ2Ê@e⁄ ¯˛˚Ô·„„É/æ¯@ô÷&  †^Ç5>&∞X,ÙÏŸ999‘•Ö¡Ë—£!0r‰»J+˜Ó›Cã-–¥iSDDD`¬Ñ	Ë”ßnﬂæ±Xå'N†}˚ˆàèèüœØ5´¡õÄ√·¿……	R©ó/_FNN˙ˆÌã+V  fœûëHÑÃÃÃJyË§R)¶MõâDÇU´V©¸~‚ƒ	ÿ⁄⁄~≤æ¡Ô
Rê (F5jÑ≠[∑VP¿,~YYYX∫t)VØ^çŸ≥g√””ëëëıı≠pO]NH&0‡ÔøˇÜD"y£Ör”¶M∞∞∞@«éﬂ A]øÄ¸¸|JCRH•R¯˘˘a…í%`±Xã≈h◊ÆNù:Öﬂˇ+WÆ|£2ÂÚ2bd°PX¡ƒ°NêíJ•ã≈t\y<D"¥¥¥T(LÄˇÃ µyáûÆÀ˚d2Â»Âr¸ı◊_ÿø?pïÒ)D≥fff"//Ôùpø+;vå¶íÀÂàääÇD"¡è?˛X/¬èB°¿◊_M◊(Â ¶’Å«„A @"ë‡€oøÖ∑∑7,,,∞wÔ^¯˘˘!55Áœüß∑ü*î5ù˝˚˜GQQ]ﬁ∏àà¨Y≥ÄÍ{Ø|`ÛÚÚ¬Õõ7±h—"\ªv2ôÆÆÆ¯ﬂˇ˛á∂m€b√ÜprrBnnÆZÌ~}‡ıÎ◊h’™>mmmÙÍ’			ÿ∏q#æ¸ÚKxº*£Õˇæ—£G„ó_~°}Ä¯¯x:Gk√o®AÌ–`96õç±c«bÛÊÕT àççEBBêúúå‰‰d<˛Ø^ΩBBB:vÏàSßN¡¿¿ =zÙÄ≥≥3ˆÏŸSÅWÆ|*ñ7y·òó}˘ÚÂxÒ‚Õ«ß¸ªÚß|ﬂò6dgg#66Oû<¡‡¡ÉUÑπ⁄∂´|]Õö5√‹πsU|˚‘µ•¸á≈ba«éHKKS°
È⁄µ+Nü>çô3gbÌ⁄µ*Ñ¡5i”Ô˛˝˚„Í’´4ìÑ≤ú2‰r9ííí‡ËË®ÚP—?O°PÄRÎ´––PtË–›ªwGFFÜJ˘ÃßMõ6Xªv-
|}}±m€6µãZC›0<xP!´√«~JgÊπB°@BB&OûL53fÃ@ˇ˛˝ÈuuçGè!%%ÖŒ#e./eN8uÎì\.«⁄µk1d»4i“>>>8}˙4∫wÔéÂÀó„‹πs*ZÛÚn& ⁄øO 3ÃÃÃp‡A eÔ¯O?˝ccc¥lŸ≤¬òî˜	666∆Ë—£±xÒb¨\π√á«›ªwëêêÄòò¥j’
yyy Íˇ˝ààà†Ô‰Ò„«Q\\åœ>˚?ˇ¸3˛˙Î/Ãõ7ﬁﬁﬁU“1)∑qÈ“•êÀÂÿªw/
D"^æ|	zÌß¨—≠Wêé†† bnnNúúúà≠≠-±±±©Ú#H≥fÕàïïa≥Ÿƒ––êX[[ì¡Éì{˜Óë‹‹‹*Îì…dD&ìU€.Êö¬¬BB7nLø/,,§Â®˚0(,,$yyy§∞∞êBà±±1	

"ÑíóóG233Èo5Å∫∂>|òXZZíÙÙtZñ∫∂TÜﬁΩ{ìŒù;B…ÕÕ%yyyÑBŒû=Kttt»‰…ìiüÀ∑C]2ôådffB·rπ$>>ûDEEssÛJ«Õ““í¨Y≥ÜñëûûN¨≠≠ITTîJΩwÓ‹!fff5Íó:òõõ???íóóG«?77WÂôB»≈ãIõ6mà∑∑7Y∑nΩ?%%Ö^ﬂP¿ÙeˆÏŸdˆÏŸµö;
…ÜHü>}hø¢¢¢àââ	πwÔû ú¨+»d2“∫uk˙^…d2íõõK?Ã;¶¸€∫uÎË:ciiIH◊Æ]…ÊÕõ’æ◊5˝|*`˙õóóG˙ıÎG˙ÙÈC«Ÿ  ä¨\π≤“ÒIOO'Ñ“∫uk‚ÎÎKñ,YB\]]âââ	—’’%ZZZDKKãêÎ◊Øìû={íÎ◊ØWªºÈ¯3˜-^ºòÑÖÖëºº<‚‚‚B 6õMàççÈ◊ØY∑ni‘®πwÔû 8TVˇ»ë#Iì&M!ÑDEEkkkíòò¯IŒôwâ-»1(#ÏºÈ¢∫yÛf‚··AÃÕÕâ≥≥3	#âââï÷Y”IÀ¥çB¯|>Ÿ∂m…ÀÀ{£ñπŒÿÿòtÎ÷Me1»d2‚ËËHfœû≠ROM€uÁŒbjjJÓ‹πC
+s,ãx{{´ÿ*´Éyé~~~§Mõ6§∞∞êòôôë={ˆThﬂŸ≥gâ±±± xT&»EEEΩï wÔﬁ=¬ÂrIPP8”””Uû©Ú3_πr%iﬂæ=È–°Y∏p!≠733ì
·˚‚«¥=$$Ñ¨[∑Æ¬ÊÙ±ÉôáÒÒÒÙπ6i“Ñå1ÇBTÑ§∫™oÁŒùƒ––êîcÍ‹ºy3			!ÆÆÆD °PH⁄¥iCfœûM¢££’ñ´‰™3w◊¨YC	!Ñ,\∏êÿ⁄⁄“kî«&//è‰ÊÊíÃÃL"ì…»ò1cá√!ZZZ 177'>>>dﬁºy‰˙ıÎƒ……âÃû=õÑááì%Kñ‘ª 7q‚D2c∆BHŸ!t≈ä$((à899}}}ÄËÈÈKKÀrÖÖÖƒ¬¬ÇDGGìEãë¶MõBHùÌG®GÉ÷s2&Å∑ıÀ	

Bhh(RSS±b≈
;váÜçç>ˇ¸s8ê˙«®KQ®2Ñ3Pé
¿í%K‡ÎÎáZõ-µˇã/‡‚‚ÑÑÑ¿——¶¶¶
Öîkçπ∂™∂)ó˚˘Áü„Ë—£ò5kV≠«≤U´VËÿ±#æ˛˙k\æ|ô÷ÀòY£££·ÔÔ+++\πrˆˆˆ"@s6Û/á√ÅX,∆¶Mõ–≤eKp8¥n›sÊÃ¡¿ÅUÍGªvÌTêY,!‘¸yyyoïh‹››YYY∞∞∞@è=p˛¸yà≈bH$(
öwëÈ”‰…ì1bƒÏﬂøÛÛCá0bƒxyy©DÆ©„ﬁ˚òLì˘˘˘hﬁºπäy¸c3WÆ\â&Mö–y˚À/ø ''?˝ÙD"QùgC`≥Ÿ¯˙ÎØ±|˘r˙û‹ø◊Æ]√Ÿ≥gq˜Ó]‰ÂÂA__üŒ√>}˙†k◊Æ‘ÏÀ¯ç6T≈˙Û˛µoﬂûÊ1›¥i∆å£v=UÛ[£Fç–Ø_?4k÷∂∂∂∏}˚6˛˝˜_¸˝˜ﬂâDHLLÑØØ/?~\Ô¡%b±˛˛˛47ıÜ–æ}{¸˘Áü044D\\Nú8Å«èW€fùã≈¿Øø˛
]]]∫/jPøh–Ç\]ÅÑB!~¯·Ãû=
Ö{ˆÏ¡í%K€oø°Q£F;v,¶Oü *•2›Fed∏;wÓÑÖÖ%hTFM7>Ê∫¯¯xå1'Nú@~~>
UÍe˛o`` }}}–£l6FFF066Ü@ Ä±±1ëòòà£Gèbÿ∞aµøﬂˇ^^^»»»†§Ωå_èππ9ÚÚÚ‡··Åñ-[b¯·ÿ∫u+](À/ >äç7F˜Ó›±{˜n899!88  4ÈÈÈ*9Vô∑§§&&&*eøzıÍ≠Ö&°≥≥3\\\êîîD, ?†,ØÌ∏q„®œﬂÒ„«1i“$òööRøª6m⁄®u~f˛˛–#ëHÑÇÇ¥lŸÄÍ3¸¡Ã!âDÇ£Gèb≈ä4hÍ◊_≈Ñ	¿f≥È\Øã˛2etÏÿ@Ÿ°£Gè»ÃÃÑ\.áÆÆ.4n‹ò⁄ò˚ÅäúëU‚îÔ”‡?ÿŸŸ¡‘‘„«èá∂∂6¬√√Èz∆0!(ìüH•R<|¯–””√í%K âh^p---‹æ}Ω{˜Æq∆ü7Û¨ü<y'''lŸ≤•••x‡‚„„Òœ?ˇ¿»»Mö4¡¿ÅqÛÊMJ¶Ú>‚ò5m˝˙ıË‘©¥µµÒøˇ˝Ø¬=‘=4Ç\-¿,ÇLNπ	&`˙ÙÈ∏q„VØ^ç?˛¯ã/Ü••%ÇÉÉ1wÓ\z√°£,‘1ŒüÃ"=zÙh|Ò≈î≠∂êÀÂ4d˝¯Ò„ã≈*,ëHÑ◊Ø_„ıÎ◊(((ÄB°¿≥gœ¸˘söz¶∞∞âŸŸŸx‡d2∏^ºxÒF„faaÅ¡É#   è=_ ÄÖÖ ‡∆çXµjæˇ˛{ú8qëëëpwwØ0˛x<
6n‹à≈bƒ∆∆¢m€∂∞≥≥P∆Q°Ü/Œ‘‘TÂ7âDR+π ¿„Òêúúåœ>˚¶¶¶8uÍ∂`ÚÕ2\Ãf*Ñ†† à≈b=zëëëò;w.ÙÙÙŸgüaÚ‰…j5Z ãÈá∂`≤Ÿl·◊P8‰òg˜Âó_bÿ∞a∞≥≥á√AHHLMMÒÛœ?C,”TNoã‘‘Tx<¨]ª◊Ø_áçç:sssLú8ëjÒU°Q]∆óÍ7™#†€ŸŸ·‰…ì8uÍî⁄“ '˜Ôﬂáªª;lmmq‚ƒ	\ΩzÑÖB4oﬁh—¢bcc±lŸ2XYY°∞∞PmÓ“∫Ç\.áææ>¨¨¨∞wÔ^4···Xπr%íììÒ‡¡\ø~∑oﬂÜÖÖäää(iæëë]áòæ+∞3ﬂ=yÚÓÓÓö√¿;Ä!ÑºÔF|ÃHMMÖP(§ìì'Obˇ˛˝∏~˝:D"<==1a¬Ñ
t& <;;B°Å _˝5ÊŒù˚V'˘ödP÷™î7ÅÚø◊fC»»» óÀÖ≥≥3¶LôÇŸ≥g”ÕPô[å)´m€∂àççE´V≠∞wÔﬁJ5îÃ¯<±±±î˛c◊Æ] Ä·√á´mœï+W0h– ƒ««´,¬Àó/«ÊÕõq˚ˆÌ7w∆î gS¶L¡ﬂˇçÈ”ß#<<únÏ ÇΩ2 j"ë8|¯0íììakkã÷≠[£_ø~pss´T®˚P6jπ\éCá·ÿ±cÿ∂m€˚nŒ[Å1Krπ\Ãô3ôôôÿ¥iÿl6ˆÓ›ã/æ¯˘˘˘HMMU+X’ Î√±c«0r‰Hl‹∏ÉV)ì·Éc±X*Z8e“Ì∫hÉ:|(ÛÏ]@˘›ö?>-ZÑfÕö—ﬂ	!())°Ê;ÖB###dff¬ÃÃ„∆çÉππ9lllpÈ“%DDD ))	≈≈≈(..∆∂m€∞uÎVú={∂^∆_.ó#;;!!!8tËúùùÒÍ’+ÿ€€£CáÚÚÇèèpÍ‘)ú8q|>2ôZZZ¥---ËËËÄÕfCGG⁄⁄⁄P(066FBBLMMëëëAsŒjP–rufSfM±Xå«èc˝˙ı∏uÎ^ºx===8;;cË–°ò0aΩèÕf”Ö¯‡¡Éò1c‚‚‚`aaÒVemNBï©Àks_eã≈êJ•∏tÈæ˙Í+dee©p
ïﬂh8"""0}˙t$''√’’£Gè∆ÙÈ”U6FÜVÜ√·¿ÃÃ¿÷≠[i9ÃÔåƒ‹{‰»Lò0Åj>ôEfÈ“•ÿ≥gÆ_ø^'¶0f|Œù;á·√á√‘‘ã-¬¿ÅÈ\QÁWS˛Y0ã≈bÏﬁΩWØ^EJJ
Ùıı·„„Éa√ÜU–^~(êJ•¯„è?êõõ˚QgP~€∑o«ÜIÁÒx¯˘Áü1yÚ‰
Z∞7’Æ3ı≈∆∆¬œœÎ◊ØGÔﬁΩÒ¯Òcxyy©òÚÍANÃsŸ∏q#/^åü˛YÂw===RÕæææ>LLL‡‚‚Çñ-[B__Õö5√È”ß!ëH ì…@ÅññºººÉêêîîî`⁄¥i’¶¥{ìÒóJ•x˙Ù)æ˙Í+lŸ≤≠[∑Fii)$	¥µµ°••###ÙÍ’˝ıˆÌ€GMæÃÅF°P†®®EEE‘∫Å@Ä+V†§§WØ^≠3Õ¥U‡}EY44(”K0≤LƒZHH155%∫∫∫DWWóòòò‚··A-ZDrssIaa!çnÚıı%æææ&2å°@∏wÔÒÒÒ!æææÑê≤ËQ&äï?&≤ïπ/==ùxzz###bffFLÓ‹πS°é{˜Ó===r˙ÙiZvff&•Q¶iâää"t‹ÑÖÖëÊÕõ◊Àò«««ìˆÌ€2m⁄4íííB˚Xû"¶≤˙ôH∏¬¬BíòòH¢££…ò1cH@@ iﬂæ=ô6mπxÒbÖÚî#∂ïÀz—áÖÖÖd‡¡d€∂mıVG}B˘ù&Ñê%KñíííB£àøøøJî°r§Úõ‘…<≥¯¯xbhhH.\HÚÚÚhΩem¯ÿ¿å˘Œù;âùù]çÓÒˆˆ&3fÃ ≥gœ&,ãhiimmm‚‡‡@ÜJ÷≠[G8@ˆÏŸCÿl6ÒÛÛ##Gé$ßOüÆó®’¬¬Br¯aBŒû=K5jDˆÏŸC¢££…ó_~I⁄¥iC	 ¢££Câéé&Mõ6%wÓ‹©QØÓ3tËPH—D¨æh|‰ÍÂI3Ÿl6ÜésÁŒ·Ãô3*˘ÊvÏÿÅSßNaıÍ’¯Ì∑ﬂ`bbwwwÙÍ’€∂mC€∂mqÏÿ1ÙÌ€˜=ˆ®n¿f≥¡Âraggá®®(˘|l‹∏aaaâD*iÉ U≥£ÖÖ˛˝˜_$%%a”¶Mÿπs'¸¸¸†ØØggg¥j’
0` &NúàÅ‚Ë—£Ëÿ±#D"x<–`Ú∆>|¯êö>îQ\\\'>rÍ‡ÏÏå”ßO„˙ıÎ1bˆÓ›ã√á√ÀÀ´¬©Z°P ;;õÊlTF€Î‚‚©Täﬂ~˚b±<@dd$~˛˘g»Âr4oﬁÓÓÓ

¢	’•R)$âZüû˙2…r8»d≤VcXîÁ‰ˆÌ€±k◊.¨_øEEE‡ÒxË‘©‰r9é=™»RûD∑∂u≤ŸlÏ⁄µc«é≈Í’´
π\Å@†!U˝ ¿≤(C—xÁŒùoooº|˘ˆˆˆò:u*lmmÒÚÂK§¶¶bıÍ’HHHÄ∂∂6!HMMÖèèÆ]ªÜNù:’ÀÛNMMÖÖÖ:Ñ‹‹\å5
ËﬁΩ;åvÌ⁄·Ò„«ààà¿•KóPTTÑ‘‘TtÏÿ6l¿Ähj7uÌÀÀÀÉ±±qù∑[ÉJæ%…Ü eé0ÊîîóóGé?NLMM)Å≠ÚI[YcM&OûL⁄¥iCÃÕÕâÖÖ·p8ƒ¿¿Ä‹πsá,\∏êLú8ëE&&&~îßFõ¥n›:bll¨Ú}ymë≤ÜN˘wFsπrÂJH7nL,,,àÖÖ±±±!ZZZDOOèÚzÖááèGx<	'Ñ2~¸x“¨Y≥
‰ª¡¡¡T[XP>EJÍJQ´ùT÷$ñá:M!e«yÛÊë~˝˙ë∂m€í>}˙ê≈ã´p2wÂµíu≠Ââèè'®”2ﬂ5ÚÚÚ»¬ÖâèèÂÀÃÃ$¡¡¡ÑÀÂ™\W’Û™fŒúI8Ÿ≥g!Ñ®hp5⁄∏˜f‹„„„+h‰îﬂ◊ºº<‚ÏÏLºΩΩIø~˝»‡¡Éâøø?i÷¨	$\.óËÍÍmmm¢££CÙÙÙàüü122"\.óå3ÜÃú9≥∆‰µiøL&#···dÂ ïƒﬂﬂü∏ªª+++¢••Etttàéé144$∂∂∂dÃò1Ñ«„ëEãë&MöêÖ≤a√ïÚ ºΩΩ…¥i”!ç‹ªÄÊh˜(Ø≈PéFU(∏uÎi‘(›S>ÖNì&MhÓ—¨¨,ƒƒƒ 22ªvÌBõ6m‡··###hkk£Oü>x‡çh˙ò|Tò6„‡¡Éh—¢Ó›ªèGOw¿„…å3û hdTXXÜB#ßD"rrr‡ÍÍ
°Pàààå7ƒŒù;qÔﬁ=lÿ∞ã/FFFÑBaÖì§L&´7çúrøÄ≤ÄåååtÎ÷&&&¯¸Ûœ±zıjàD"-3_î◊ô≤îµjåì—∆5n‹999022¬˘ÛÁqÊÃ=zFFFııU	ñ`"ö†rô’ÕØÍ|®.^º¯—˚«å3R©/^ã≈BFF∆åÉˇ˝WÖÎO˘ô’Â«π{˜Ó∏sÁÆ]ªÜV≠ZA*ïV‡ñ¸òﬁ˚ÜkkÎ
úì önOOO∞Ÿl‹∫uCÜÅB°Äüü~˘Â™}suuÖèè:uÍ\∫t	………Ù}œ……©7.π¨¨,tË–è?Üªª;÷Æ]ãÇÇú:u
∑oﬂ∆Ω{˜ÏŸ3l›∫Å NNN(**¬Ç`llåpòöö™µ)
PFÍ6◊Í˚Ä≤öô≈b¡‹‹R©<OE)&/c
ÏﬁΩ;ñ.]äÙÙtx<4Áœü«©Sß–∫ukx{{Sg”è5¥{ÁŒù»  ¢º{Âƒ´⁄®òPwF0Êp8∞∞∞Ä´´+‰r9úúúp˘Úe∫®@GGZZZêÀÂ»»»†≠2äããa``P«=≠B°qqqX¥hˆÔﬂÏ‹πìø0&6ÂÖ\˘†e* .óè;;;˘|å1{ˆÏ¡Ò„«Ç‘‘TÃö5Ωzı¬î)SpÓ‹9XXXÄ«„A"ë ++ãÊÏ≠,_gMWÎ‹µÔ ˝<q‚:uÍ{{{ú<y<Äüüû<y¢í◊¯o^÷F»bpëHÑååXYY!55ïJò˜B#ƒ}X`÷ÙsÁŒP}>´V≠¬Àó/†,‡A.ó#55Å ;vÏ¿Œù;]]]¸¯„èË‹π3˛˜øˇ°§§,ÒÒÒ»ÕÕ≠∑ˆóññ"77Ø^Ω¬Ö‡ÔÔèAÉ··√á˜˜« ï+q‡¿å9rπzzz011AFF&NúàØø˛'NT…'≠±XõzkøÂæUÇ2ôå§§§r¯aBy#≥Kzz:122" Ñîôﬂ\\\àøø≥ÿ« &ÅBé?N»Å™Ïá≤©U98`≈ä§uÎ÷ƒ√√É”rßMõF∏\.…ÃÃ$›∫u#ÅÅÅ§yÛÊ‘lÍ‡‡@Æ_ø^¡§ÎÔÔOS+Ω(õ"
…‰…ìâââ	±µµ%;wÓ¨48°2ìjy(ß+èÙÙtE∆èOzˆÏI¸˝˝…‰…ì…È”ßÈ¯*◊Qô)ß:gÏÆ]ª“π˚± >>ûrˆÏY˙˝¯Ò„âëëÈ”ß˝ÓmÕ]Ãı”¶M#FFFd‚ƒâ‘C]˘º_(?É-ZêeÀñBTS±ÖááìÄÄ z›Ãô3Iœû=Iœû=â££#	 á∞Ÿl¢≠≠MX,144$AAAƒÃÃå2bƒï¿Ø∫4≠ëô3g $((à8;;ãEM´˙˙˙ƒ‘‘îÑÑÑCCCrˆÏY"Hpp0i⁄¥)±≥≥#áXXXGGGDé?NÎ±±±!/^$ÑhL´Ô”j°<WõÕÜÉÉ~ˇ˝wå5
›∫uã≈Ç∂∂6JKKÈuYYY*Âîîî†¥¥î:„õòò@[[¡¡¡»ÃÃ ¸˚Ôøh‹∏1fÕöÖÈ”ß√ŸŸ˘£9•3ÑöR©ò1c¬¬¬êúú@=Á£ôR¶Èÿ±#Ó‹πÉIì&¡  
˛˘'ÏÏÏ◊_a˘ÚÂ¯Ûœ?·‰‰ÑQ£F·–°C066∆ë#G∞j’*H$xxxTh[aaaÖlı	Ü{êÈﬂ ï+±rÂJå;'Nƒ‹πsépï@.ó[·$¨n‹ù:ö
°P°P(
<zÙªvÌ¬í%K√?¿’’˝˚˜Gˇ˛˝i[´¢å©≈≈≈4¡«Ä)S¶ ..ÅÅÅîèpÈ“•X∂lÙıı±vÌZÙÎ◊©©©‡Û˘*Ÿ[ﬁÑ‰ÊÕõ5jd2Nù:ü
⁄iÀ;˛©¿»»ÈÈÈ @◊%∆UÅ1ªJ•R‰ÊÊ"??ûûû8sÊRSS°´´ã:†EãÒÒóÀ≈µk◊pÛÊM(
ºzı
2ô¨Œ€ÃÃ!ôLÜÑÑ e√ü˛÷÷÷àçç≈Ÿ≥gçÃÃLlﬂæñññ¯Í´ØêóóááB$°∞∞∫∫∫(**¬Àó/ëííÇ'N¿ÕÕ'NÑññuS—Ã€˙áFê´#T∂àáÜÜ¬∆∆ﬂˇ=Æ_øNôØ	!»  ÇüüÑB!∏\.ÚÚÚ†´´===∞X,ËËË¿»»£Gè∆¸Å÷≠[#))	
Öó.]B€∂maffÜ3fÄÀÂ~T/#`,\∏7oﬁD´V≠[Å∏¸= ∞h—"‹ªwÖÖÖXø~=<à6 11aaaË÷≠‹››°ØØèÀó/CKK÷÷÷0` ˛˝˜_|˜›w*æääää‘F£’7 6lÿÄ6`‘®Q¯˛˚Ô±tÈR|˚Ì∑Ëﬂø?5s2ë®Lî≥D ˇ	âÃˇïÎ*Ôs√b±–™U+¥j’
 ÉÌ€∑„œ?ˇƒí%K–™U+ÙÎ◊ÅÅÅ*ëyÍ»åÀ√≈≈ÂΩåiM!ãÒ·CÏÿ±◊Æ]Éøø?._æ±Xå)S¶`ˇ˛˝–÷÷∆_|Å3fÄœÁ”å)ÍR]©ÉÚs`˜¨¨,„ˆÌ€6l÷Ø_OØe|
ÎÇ–WÉ∫s0244D~~~Öﬂ


PXXHø
ÖxÙË^ºxÅfÕöa·¬Ö–””√√áqÎ÷-Ãò1ŸŸŸ–——Åââ	ååå¸˘s§§§‘ãÎìŸF$¡¬¬˚˜Ô«Ó›ª°££ÉÊÕõ£sÁŒ2d\\\p‚ƒ	¸ÚÀ/ıı≈í%K0a¬,^ºnnn
Öx‡˛˙Î/Ïÿ±Oü>≈î)S¿b±–ºyÛ:oªï‡}´?0*p‚··°Ú©
ÂMcŒŒŒ§Iì&ÙÔËËh¬Âr…ÏŸ≥+D`~,HLL$2ôåÿŸŸë†††j˚ëóóGÃÕÕ…û={»à#àëëÈ÷≠144$ÅÅÅd—¢Eƒ∆∆ÜÑááGGG"ì…»ö5kHpp0ÈŸ≥'Y±b-´|=ŒŒŒdÊÃôı÷Wu®	O‘‰…ìâççi‘®	W1„0ëíÂ˚RYyÂ£‡™ª˛˙ıÎ‰À/ø$Ì€∑'ù;w&”¶M#◊Ø_W©K9
[ŸÙ=~¸xïÒ~ﬂP6ﬂÁÊÊí={ˆêêê“µkW2yÚdRXXH¢££I@@ ·Û˘ƒ——ëÃû=[eúô~*sπ)èieı*ø«aaaƒƒƒÑ¥n›∫ ˆjÃ©&ò˘†ÂÆ<∑@M´ÖÖÖdÛÊÕƒ◊◊ó'''‚ÓÓNÿl65cÍÍÍR3¶©©)133#§uÎ÷$::ö÷Y¶UB ‹*@ö7oNLLLH@@ Ò ∫∫∫¥Ml6õ___¬Âr…û={àëëY∞`Å
Cy&+++˙˛,\∏ê^ßA˝B£ë{`N” L5ÅrTjj*ííí`nné:‡¸˘Ûh“§	.\∏ÄÄÄ  ¯ 5s’ù(-,, âpÈ“%xzz‚á~¿ä+TÓ-ØQ L–Gé°Ÿ
ö7oéÊÕõSGQQé;Ü	& 44¥Z”Qìı}Ç—z≠\π≥fÕ¬’´W1gŒl€∂ò6mDs∑2©¡Gl œ†ºÊ®:˛∏vÌ⁄°]ªvêÀÂ∏p·8Äoø˝¯¸Ûœ—ºysÿ€€S´râââò1cFùé…€Ä≈b!22/^DFFÙÙÙ–ªwoÿŸŸa”¶MpuuEAA7nå˛˘~~~tlÀsD2s©∫®B∆‰&ã1sÊL8p [∂l°fÎ !Ω«¸&pÕ∆∆ T-2÷÷÷a$	BBB0gŒB†ßßá∂m€¬√√AAA4bTWW˙˙˙‡p8xˆÏ“““‡ÂÂUßÌıÍRRR¿ÁÛabbÇÇÇÃò1Mõ6≈’´WèsÁŒ!99WÆ\Åìì&Núà!CÜ <<úˆïYoîÁÈÂÀó·ÈÈâ_˝≥gœF@@ |||Í¥˝TÑFê{«PmX0Êñúúòòò`‡¿Åÿπsgùso™ ”˙8•%âD022Çóó%Òe⁄Tæ¸◊Ø_C –úñb±ˇ˝7¶Nùä°Cá‚ÚÂÀpww«¶MõDØQ¶Ì(/Ïîîî¿““Úç˙Q`π\°Pà°CábË–°8wÓ~˝ıWLô2,ÄüüÊœü:é s†&œF›ºTNq∆f≥—©S'(ÀKªlŸ2∞Ÿlå1˝˚˜ßıpπ\‹∏q...u9$5ÓìF(>>è?∆√áëïïá[[[XXX 11ﬂ~˚-d2¨¨¨0oﬁ<É«„!++ã“@0†ˆfN6õçØæ˙
Ñ°°!˛¸ÛOö¯CÀã´AE‹ø/_æÑH$ÇX,¶~kR©ŸŸŸHJJ¬∆ç!ì…¿·pêüüèËËhpπ\ïr^ø~çø˛˙⁄⁄⁄ò4i˙˜Ôèàà¸Ûœ?¯Ûœ?QRRmmmx<îññ¬——˜Ôﬂß>‘ ÆoãÃÃL!Õf≥áQ£F({w˝˝˝1q‚DtË–wÔﬁ≈Ñ	`ffÜMõ6©ÆLï],∏\.∫tÈÇù;wb¡Ç>|8Êœüèºº<¡€€&&&
Öö¸´uç ˜éQ€E[.óS'w&9ˆ£Gè‡ÊÊÜë#Gb˚ˆÌu.Ã)Ûñ1oäöê1Çö\.«¶Mõ0vÏXÿÿÿ†sÁŒïﬁWRRÇ‚‚bïDÊ˛˛˛–““Çùù8ÄÔæ˚ì'O¶‹l ¸lÂ!ïJQRRB√ õ~◊Æ]—µkW ¿∑ﬂ~K3Dòõõ£Kó.¯Í´Ø®ø[UÂ©ÀÛ™¸ª≤Ê	P’:Lü>S¶L¡ô3g«`˚ˆÌÚÚBHH‹‹‹‡¡4j‘Ë≠˚[0ÔEzz:≤≥≥Ò¸˘s<yÚê…dî¶ß®®"ëÁœüáûûÃÃÃéa√ÜA("))âŒC>üØ≤A’FÄìÀÂxÙËfŒúâõ7o¬‘‘´V≠Bﬂæ}¡b±hÓIç ˜·aŒú9∏~˝:“““ óÀ°≠≠®¶≠≠≠0¿Âr±|˘r∞X,¿ÃÃ<@€∂miô%%%x˛¸9Z¥hÅ∂m€b’™U¯Ì∑ﬂ®Oúóó$	íììammç§§$899·¡É4¿≠.!ãQXXàÁœü√∆∆&&&P(ıı≈˝˚˜qÊÃ?~ZZZh›∫5!Ë‹π3]´´⁄¯|>~¸ÒG|ˆŸg≈è?˛àô3g¬ŸŸôéttt ì…`aaÅˆÌ€„´Øæ™†u‘rjç ˜ÅÉ·cÑ>üèåå<x nnnËŸ≥'"##·‰‰ÑƒƒD¥n›7oﬁƒ˘ÛÁkE\>Ω≥i+;œø)  eïˇˇ–°C±j’*tÈ“999ÂŸl6LMMi–«£Gè`nn.óãîîB¿ÁÛQTTÑ†† å;[∂l¡î)ST˙Yæ~Fê˚ê4rÍP~Å[∫t)ñ.]ä¨¨,Ãò18p‡ åçç—¢E>§◊+?ãÚcQô@«@›ËﬁΩ;z˜Óç˚˜Ôc’™UÉççû={Ü—£GW©ÅÆ¨Ï Ês®y˛¸9^ø~ç‹‹\ƒƒƒ ''á:òø~˝âEEETÀ™P(†ØØ°Pàû={b»ê!j7°P®vÃ+Î;Û=#òI•RJ:-ëH‡ÍÍäøˇ˛õjÑE"Ä £4x?ÿ∏q#ñ/_é◊Ø_√»»-[∂DXX\\\–ºys∫◊t=z4“””U¢è---qÂ 4i“ñññ¯Êõo0yÚd:w¶Lôπ\éÿÿX¥j’
∆∆∆022¬Ó›ª±p·¬:Ì/s û3g¶LôÇáb‹∏q¯Áü¿ÁÛ!â¯ÒcÃü?Áœü!}˚ˆ•÷eMy¡Æ¸4wÔﬁ≈•KóË~ƒ·pp‚ƒ	ú={WÆ\Aè=†ØØlﬁº T\‘ï´Å*4Ç‹G ∆Ù»¯ÍÖB*Ãµh—Ì€∑Gtt4ÿl6û?∏ππ—º¶UA9# ÄZ/ZÍêëëÅgœû!++ãûT≥≥≥!â ëH*\ˇ¸˘s eæ%πππxÙË‡ËËàá™–<∞X,4{ˆÏÅõõfÕöÖ”ßOC,É≈b°§§"ëàÜˇ‚œ?ˇƒÙÈ”+dGP#»ï7â|®(/	l⁄¥	l6111X≥f‚‚‚éØø˛B°Ì⁄µCØ^Ω‡ÁÁG£ßkR~eu*œwww¸ı◊_  6∆»»Hú={.\Äââ	ÏÏÏ ‡ËË°PHÖof3êH$té!??˘˘˘àèèGff&%Ã.**Bzz:Ë¸*..ÜL&Éññttt¿·p`mmxzz¢wÔﬁÑ4uy1î"´”û8qõ7oFll,tuu—£G,Y≤Ñæ{åøSû&WÍáÉé;"11CÜ¡‚≈ãkúÖ§≤9¡¯ÊÍÈÈQ≥<óÀÖD"Åïï:tËÄì'O@ﬂKÊ˛““R∞ŸlXZZ";;˚Ì:®7oﬁ!			âDÿ±cJJJËz¿ÁÛ—Æ];ú={IIIhﬁº9Nú8Åë#GB ‘™Æ∂m€"""Çˆ(Îw˜Ó›—Ω{wz›ö5k∞fÕ899·◊_EXXòFà´4+ G∆gI*ïÇœÁSa.;;ç7ÜΩΩ=íìì¡·pêîîÑNù:¡……	áÜßß'≤≥≥’˙%0≤∫$ÍocbS(»  Bzz:û?âDB3( ++ãjƒÙıı!ì…†´´SSSïó—¿¿ ∆∆∆066FII	:wÓ{{{¨X±[∂l¡ˇ˛˜?,X∞ ü}ˆö5kÜ[∑n°i”¶¥Ω≥fÕ¬ﬁΩ{ëññFOóL˘zzzXø~=5m|˜›wË‘©Æ\πR•”≠B°@iiÈGµ…*ß0S˛◊√√Î÷≠PÊêâ **
Dii)åçç·‡‡ ___899¡››]≈[~Ò,øqUµ»ÜÖÖ!,,@ôPüòòà«è###wÔﬁEqq1ååå`llågœû¯èi˛ÂÀó(,,!⁄⁄⁄x˘Ú%¥¥¥  ZZZ–““ÇÆÆ.u
ÁÛ˘∞≤≤Çùùö5k¶B£î	Q öFh¨Ï∞¢N≠Ó∫àà¨Y≥wÓ‹ÅT*EÀñ-Ò«`¿ÄÙÂî}ÂÀ◊‡›CôáíÕf„€oøEJJ
(7£X,Æ4OM¿ÁÛ°´´KÎaæ{˝˙5¸¸¸˜ﬂ”vT&†0Çúüü∂m€¶bäØ?9∆œÌ–°C∏vÌ≤≥≥allL˜e∏∏∏‡÷≠[ÛÛS·N¨J∏ »»†öÍ:††† b±|>_Ì}b±c∆åAxx8æ˚Ó;Ãõ7aaaÆ–¨*ÕÛb€€€C.ó„·√áË‹π3ÃÃÃ∞wÔ^tÔﬁó/_∆¸˘Û—ßO8ø˝ˆÄ™7`±Xå«è#11Oü>≈´WØêìì†,»¢∏∏∫∫∫ã≈022BßNù–≠[7pπ\B,„˘ÛÁ»ÀÀSâ∏ ;;;8;;SÅåi„è7i“$ú<ygŒú°˛_/^DÁŒù—•K∫¯0BÂ≠[∑‡ÏÏå◊Ø_c˝˙ıò8q"äää‚≈pπ\™•c6ˆØø˛7oﬁ¨–gfA-**!§R2÷ï	 B?ã≈Bﬂæ}©yO*ï‚ÊÕõ8sÊbcc±c«z-3å_åññ7nòõõC&ì¡¿¿ (..Faa!%Æf¿¯öÈËË–‡ï¸¸|º~˝ÖÖÖêJ•xıÍQPPÄúúËËËP¢lBX,M3fkkcccÿŸŸ¡¬¬ﬁﬁﬁ033Éùù]ç¥'<OÂ:∆=ÅãÚ„Y›Ê—ßOƒ≈≈A.ó√ŒŒ≥gœ∆∞a√¿ÁÛUL¬|x`÷$Ê‡w„∆8êj·Î‚˘âD"XZZ‚—£G¥.333∞X,Ï€∑èÆ·Âa `π¿¿@l‹∏ë¶y¨+ËÍÍ z˜Óçøˇ˛+WÆƒ÷≠[+¯ƒ2ks´V≠‡ËËà+V‡á~®ÚëÀÂò1c<==È{¶≠≠çWØ^—wDÂ˘/ø˚Ó;l‹∏±B¿ñUC#»}d`Bﬂôˇ3/Fdd$æ˝ˆ[<AAAÿ±cÊÃôÉ¸ÆÆÆË⁄µ+6oﬁ+++$&&Rì’≥gœPPPÄºº<»ÂrËËË@WW∆∆∆∞∑∑á∑∑7¬LMM©IN$!22◊Ø_«Õõ7ëôôâ¢¢"j⁄222Ç∂∂65ï…d2‰ÁÁÉ√·¿∆∆˝˙ıÉçç8Ä»»Hà≈bòööb‚ƒâ‡Òx066Ü••%∆èèâ'¬ÃÃœû=£/<üœ«´WØ`mmçü˛c∆åA„∆ç°´´ã’´WC(R3Óí%K–•K<}˙ˆˆˆt,ï«ÒÂÀóÃÖÔo¸¢Ó~u˛nåñA˘wãÖé;¢c«éTê·Òx»»»¿ü˛âeÀñ·⁄µkË‹π3


p˘Úe\ΩzØ_øÜ\.Gii)¥¥¥®”2 ïL%Ã¸—””£ö3Â6Ä«„°i”¶044Dã-``` .óãFç¡ƒƒ¶¶¶Tê´kîßb)¡≥"ëœü?«⁄µkq„∆<˛∫∫∫pttƒ§Iì0j‘(ì?PÛg©Ÿú>àD"”Éè:WÉååï ö¨¨,àD"º~˝ööˇãääP\\å““Rp8ƒ≈≈©ê·>~¸fff‘Ú°nﬁ@rr2¨¨¨êùùç““R∏ªªCOOÅ@%Ã€Ç	‹8yÚ$|||‚≈ö‡æ|˘L;˝˝˝q‡AJUV¨XÅ'Oû`◊Æ]‡ÒxHKKÉB°¿Å‡ÂÂ{{{X[[”wªº5àyß¢¢¢™•Á—‡?hπèÂ7ÊÑ∑b≈
ÑÜÜ"00ñññ¯ÚÀ/Ò‚≈xzzbˇ˛˝˜˜áøø?ÙÙÙ`ddáÉn›∫AOONNNpss * 1ã£&?x é;Ü¯¯xàD"ËÍÍ¬  
;vD`` Zµj•V}ŒhÅ≤Ñ“Kñ,¡ÏŸ≥ÈÜæn›:ÙË—wÔﬁ≈ï+W®ÄôññÜ_~˘Å Oû<A”¶MÒÙÈSJ#¡„ÒpÌ⁄5¯¯¯‡÷≠[Ë⁄µ+ÑB!äãã¡f≥¡Âr!ïJ···Åœ>˚c∆åATTm„»òÜU|‰>ƒDÂU9›◊Ê{Ê7±XåååÖB,Z¥ø˛˙+|||p„∆¨Y≥CáüYäÛ<ÎÉy˛m«∫¶m*ø1ä≈b,]∫QQQx˙Ù)ƒb1,,,‡ÓÓNi^òÙr’EÔi·„ıÎ◊˜˜P&∞1~•ã≈TxbL˙Lƒ*s`¨ñññ044õÕF˜Ó›±zıjº~˝@ô–tÈ“%òõõ´òÌ’ÕqGGG$%%°Y≥f»ÕÕÖÖÖÙÙÙ‡ÂÂWWWpπ\˘|ÇœÁÉÀÂ“6\.,R©/_æDVVƒb1≤≥≥ëüüOÑ≤≥≥qÁŒx<å1´WØ∆ﬁΩ{1oﬁº
ÌQˆiÎ—£V≠Z???DEEA,W0±~ˇ˝˜X≤d	∂n›
www ¿”ßOQPPÄµk◊™∏H0æ¢&&&pqq¡†AÉ®’@[[qqqAÆ–¨D Ã¬ ãaggá¨¨,6å.(\.c∆å¡ÙÈ”ULõ¿ÊF8d|§R)˛˝˜_l⁄¥	ˇ˛˚/≤≥≥°´´{{{ÙÌ€&LPK’¡¯’1Â≈∆∆‚“•Kÿªw/û>}ä““R8;;„˚Ôø«à#T7¯¯¯T∫ë7oﬁB°ÒÒÒ @iEåçç±xÒbtÌ⁄˙˙˙ò;w.“““êïïccc!%%è?FØ^ΩT ,--Ö©©)‚„„QZZ
ëH§÷•∫tTä†W[î7= Âr‹ºyk◊ÆEXX~¸ÒG¨]ªææætºô˘Q_ÇL]
áÂ£uôy)ãáÌ€∑#::œû=C~~>¯|>úúúÇ1c∆PÅ≤f≥º€Ä∫˙4¯∞!óÀabbÇ;wÓ‡À/øÑD"Åµµ5úúúÑ-Z¿÷÷ç7¶KMÉ¿ˆÔﬂO9 ∏wÔ\]]U÷uÂºxÒ√ÜCZZ¸¸¸¿f≥1oﬁ<DDD†∞∞ŸŸŸ∏vÌ‰r9•’a\ *Cii)5jSSSËÈÈÅÕfc‡¡àââ¡ﬁΩ{!âpÛÊÕJÖK∆ƒ–Â‰‰Ä«„¡√√~~~(**Bnn."##QXXàËËhRı’´W£[∑n8yÚ$ƒb1$	^ΩzÖ‰‰dº|˘ÁŒùCjj*¶Oüéq„∆aÿ∞a‡Òx*„ßAı–"Ñê˜›Í  êîîÑ={ˆ`˜Ó›(,,Ñôô:uÍÑ—£G”SÊ⁄”ßO#--2ô∂∂∂ÒÒ¡§Iì*Å@E≤ﬁ¨¨,¸Ûœ?8q‚›Y,Z¥hÅ!CÜ $$Ñö2T%(
àD"ÖBdee°oﬂæx‡ÃÕÕ+t∫ªª£®®âââh“§	Ü–””£ı®òËÍÍ¬ÀÀ3gŒÑ°°!\\\*ÂîSÁKSùPÛ±nù;wFLLq‡¿ ˇ=Û§§$Su}£2ﬁª ∆ñ	l`8ÊÆ^ΩäKó.!))âŒKKK4i“ù:u¬‡¡ÉaaaAÀc¢M´sÓ÷‡„≥ˆXXX@°P`⁄¥i¯˘Áü’^ªk◊.ºxÒiii»……A^^çp \	I[[≈≈≈∏wÔ¨¨¨pÎ÷- e„«è«‘©SiπÂÁ”î)Sp¯a<{ˆéééË÷≠~˚Ì7z]]ôw∑m€∂‡rπ¯„è?∞m€6>|X%◊u˘{ †Iì&ÿ∂míííp‚ƒ	ƒ≈≈A&ì¡⁄⁄=zÙ¿‰…ì©ŸòiØùù‹‹‹‡„„899°EãhŸ≤%=@2ö√ó/_b÷¨Y∏|˘2~¸ÒGÃù;˜ç˙¯)B£ëk``R%1⁄°PàÈ”ßc˙ÙÈ Ä‡¬Öÿ∑o8†,$=--ÜÜÜpvv∆à#0a¬ï≤-å≤O…Õõ7Å»»H§¶¶¢∏∏<nnnÛÛ√‰…ì’Ü¨+ßtbPŸ‚$
©&‰Í’´xÙËååå∞oﬂ>¨[∑[∂l°ßL6õggg|˚Ì∑pss√ÙÈ”¡b±G√Áçåå‡ÈÈâ‡≈ãò0a.]∫Ñó/_b∆å4·µÅÅX,all>üKKK∏∏∏†i”¶puu•õº≤∫&•wùA„Mâ§§$tÎ÷ÊÊÊò:u*]`ÖBaµ	„ÎÍúøô9„∆dee·ˆÌ€∏{˜.û>}J#íçåå‡‡‡Ä‡‡`Uõ˙®>|Ù4¯0 óÀ°ØØè˚˜Ô Õ††P(∞eÀ‹∏qÖÖÖ∞∂∂¶ô|||`nn∞X,¡¬¬¢¬<Yæ|9VØ^Mˇñ…d077Ø∂M †‚W @ù/gM†º^(3îññBGGÆÆÆpvvV)ª≤r¥µµ±gœ¨\π°°°ï∂ÅikHH±zıj8p %%%∏rÂ
: 077G∑n›(!7 ú:u
ΩzıBrrrç˙ßA4Ç\≥∞®sˇ·á∞tÈRƒ∆∆‚¬Öÿ≥g˛˝˜_ eú?Î◊Øáπππä÷åPíììãàà‹Ω{YYY`≥Ÿ–◊◊áÉÉ&MöÑ¡É√≈≈"ëàﬁ_ô#qMÑejÊˇå&±eÀñêH$ÒÒÅB°¿±c«–∑o_6?¸û>}äk◊Æ TW ÚÚ¬Õõ7U]@ıÑòîîÑ'Oû --ÈÈÈHII¡Ÿ≥gQXXH2&7"è«Éôôlll‡ÏÏLM¡FFF‘ßÜ¸ﬁÊD]®™=...HII¡ñ-[Õ7ﬂ`Ì⁄µ«∑ﬂ~˚N}‰ò9˘¯ÒcDGG„…ì'àèèGzz:^ø~ôLÜíí¡ƒƒ÷÷÷6l<<<–≤eK5ß—Æi¿Î(G1˜›wàääB„∆ç1vÏÿ˚hUÂK+ïJk,»’îÁ{y≤˜⁄rfÍÎÎW{≥∂9r'Nú@JJ
 `Ú‰…¥nèG˜ü;v`ˇ˛˝ò1cZ∂lY´ˆh4Ç\ã≈™î≠øU´Vpss√Ñ	 óÀ±oﬂ>l›∫]ªvEII	7nå––P‹ªwˇ˛˚/û={Ü¬¬BËÈÈ¡¡¡ü}ˆ˙ÙÈì´X,ÜH$™ñà∏. π\é©Sß¬≈≈˜ÔﬂGPPÊœüè6`ÔﬁΩ:t(§R)äãã)k:Pvo‘®ttt ïJU2ÿl6ÏÌÌaooè6m⁄–Ô0Êk©Täîî§¶¶"==ùF∏›Ω{/^DAA%©e•9LMMacc'''8::¬‹‹úFs™\fÂyÕÍZa6°öêoÜÜÜ"44ø¸Ú˛¯„¸ı◊_ò?>:wÓö*ãÒ++ü€∂20„ˇ‚≈<}˙………HII¡Àó/ÒÙÈS‰ÁÁC"ë†∏∏òÊ§dÑgtÏÿË‘©∏\nïØ!N‡?Á…ì'‡Û˘Ë‹π3¨¨¨pÈ“%ïkﬁ"ëà˙©1⁄˙⁄Ã¡∫–v3u*ó≈¨Iò Ñ™`bbR£˙Œù;á#F`—¢E~c÷M+++|˛˘Áò>}:ˆÓ›ãô3gbÃò1≠Q®B#»}‚`Úî2$ÆR©;wÓƒ÷≠[Ò˝˜ﬂÉ«„¡⁄⁄ì&MBü>}`ggGù∆’m– ©UÍ{”d≥Ÿ∏vÌ˙˜ÔèƒƒD¥k◊éö¸˝˝±d…8ê∂ÂÈ”ßpssSÒ!ÃÕÕ•|O5uff®=∏\.,,,T4î3e(
pπ\$''#==Oü>EZZû={ÜÁœü„—£G»……AII	JJJPZZ
===ËÎÎÉ«„¡––fff∞∞∞Ä≠≠-úúú–§I∏∫∫æuˆÂ1d¿‰RT˜É§§$tÓ‹gœûEdd$æ˛˙k™â‘◊◊ß‘5˙˙˙(**ÇD"AII	-õ˘0˝ïH$ ÑP⁄---îññÇÀÂ¬÷÷ñF6{xxPs∂P(¨÷q\™Éééååå–ßO¯¯¯®<ﬁ/^º !‰Ωß˛S¶ ˙ÆŒW∏*W{Mè=Ö?ˇ¸!!!5*wË–°ÙÙDpp∞Fê{Chπe·¢≤ÕÆºÊå√·®0ÛøiùÔrπ÷÷÷∏|˘2⁄∂mãÿÿXJb9wÓ\tÎ÷.\@@@ !HNNV·é
Ö»ÀÀ´uΩ’Qzî◊B5m⁄Tm†&˚¿´WØÙÈS<yÚ©©©»ÕÕ≈ÛÁœâDRM+õÕÜûûLLL`nnKKKòõõ£Q£F∞≥≥É££#=ç´s⁄g"…$	ÚÛÛ···©T
âD©TäGè!22qqq»ÃÃDVVx<ººº‡¡X[[„ˆÌ€∏q„û<yÇºº<îññR≠ôÅÅÂïc±X–◊◊ßÊx6õç∆ç£Y≥fprr™µOöFÄ”‡M¡¯¥ÜÖÖ°CáÑ∏Úú⁄ÄyOÎÔsŒõõõc”¶M
Öh÷¨5jÑ¢¢"\ªvá∆ì'O`ffÜP}Mú...ÿΩ{7¸˝˝ëùù≠í!EÉÍ°‰>a4îçê√· 44õ6m¢˛xL§‘≤eÀCCCJVÃ,Ã<èöÍJ√ı&`(@Aïürfff&ÚÚÚpıÍUdgg#''˜Ó›√’´WQTTDIòµµµ©/C–´ßßßißåÙÙtîîî@&ì—ªππ9–≠[7Lû<πÇ&∂sÁŒË‹πsùèã‘≠îÆÆ.“““IÈõ‘πî_™Ï‘+4∞X,ú<yø˛˙+ÚÛÛ·ÏÏBö7oéıÎ◊√ÕÕ≠B [u„≈åØãã∆åÉ)S¶¿÷÷∂^˚—–†‰>4Å≠<îÉ¯|>JJJ¿ÁÛ)…Ì‡¡ÉÒÂó_bÀñ-T3§ÜÕú¡áÓœ8fÛ˘|∏∏∏ ¯œOPŸÜ—J2¡&999»»»@NNrrrÚÂK‰ÂÂ—ú£åPßßßávÌ⁄¡÷÷ûûû†ıj†ACá√Å@ ÄÉÉÿl6≤≤≤*ÕZ’]SùOhm°Ω{Mõ6≈˘ÛÁ±h—"?~ú 1`RHñ∞® ◊Oy›˝Ï≥œ–®Q#M‡C-°‰4¯Ë¡¯\…ÂrDFFbıÍ’∏vÌ§R)‹‹‹À/ø 55.ƒ≥gœ0k÷, eŒªåFÍC[0k
uæäÂµ
B°P%ëº|ÍêÀÂƒ∂m€ îv
Ö
è‡õÏëÜà‚‚b eæVVVîkÒm¡åuDDÃÃÃËAUÉöAª˙K4–‡√áéérss1x`<x 'NDRRbccëêêÄ#Gé`ƒàÿπs'ÏÏÏ–¥iS8;;£§§ÁŒù{ﬂÕ◊@ﬁ·,88/_æ§d‚ B£Õ~ì»’w±ˇæ¿∏[C*ïR´H˘É ò(
˙ëJ•8tË<==ÎΩçú%%% Ñ‡¯Ò„033ÉΩΩ=•µ ÄNù:°SßN¯ı◊_îi©ñ.]
==Ω:;Uj†Å‡ÍÍ
ÿÿÿ–hvÜZâ…ÏR€úÀ5•È¯¡)Ω~˝∫•â2î3ﬂ®„÷À  ¬Î◊Ø±q„F§¶¶¢∞∞FFFàãã√/ø¸RØ}hà–r4ºzı
 C√ﬁ’±ˇ39r$.^ººzıJì ]>1à≈bLû<c∆å¡¡ÉÒÚÂK‹ºyó.]¬°Cá¿ÁÛ—¶M0 Mõ6U°Á©J†322zW]xÁ044 º|˘≤JÕcy˛K »»»¿’´WqÌ⁄5$$$‡’´Wh›∫5æ˘Ê888 44<Ì⁄µ´ﬂN4@hv/


¿b±p˝˙uÑÑÑ@"ëÄÀÂ™,$ fì^Ωz·»ë#033{#
4–‡„è«√–°C1}˙tDGGc¯·hﬁº9ÇÉÉÒÏŸ3ƒ≈≈·‰…ì8zÙ(tuu·‚‚Ç6m⁄†[∑nU˙pUñ1Å°„¯òahhπ\éÇÇÇq„ù;w111àééFff&tuu·ÓÓéyÛÊ¡◊◊ó^'âêíí¢—∆Ω!>ÓY•Åˇègœû¡¡¡˜ÔﬂõÕÆê‘^,666∞∂∂∆„«èÎ4 L4¯x ã1n‹8Lù:√áßÅBÅ nnn1b‰r9“““∞m€6:t;wÓÑôô‹››—•Kxzz™¨!|>
Öh’™tttêôô	>üãU©ﬂùñññ ø@Õ©;Í
ÍÍS(`≥ŸxÙËö7oÖBÅÇÇ899©Ü @rr2._æå®®(<}˙:::pttD`` \·pùîî{{{Ãô3ZZZ®”˛|*–r4<}˙^^^àää™—‚gaaWWW\ΩzôôôÔ®ïh†¡á &oØB°¿‘©S±sÁN6{ˆÏÅ\.áH$Ç\.ßèÓÓÓ‘øV*ï‚·√x˙Ù)~˚Ì7ºzı
\.ÊÊÊh⁄¥)&Lò@…s˜ÏŸ}}}$$$†Iì&U∂â°G˙êxË
ƒb182331˛|p8dgg√€€€∑o«√áèÏÏlòöö¬““>>>=z4\\\ *ñôÃ7|>"ëªvÌ¬ÊÕõ!ﬁSO?nh9ÚÚÚ–¨Y3Ï€∑;vÏ¿∞a√™ºû≈b¡◊◊7nƒ≥gœﬁQ+5–@ÉLvâDÇ-[∂ 00êÊg†ñWN*ïB.óc‡¡*ÆWØ^≈›ªwÒÔøˇ"((˙˙˙8p‡ &Mö}}},^º°°°U2≥≥≥îπâ(
xº:…˜Zÿl6nﬂæ≠"∞)É≈bA ‡‹πs»ÃÃDRRåçç°••Öøˇ˛fff∞≥≥Chh(ººº 
k\/£˝¥≥≥C˜Ó›—∑oﬂ˙Ë‚'ç ßAÉÄéé≤≤≤PZZäsÁŒU+»q8∏ªªCGGáJh†Åüa¢Iì&¯·áÂó_b‡¿Å`±XâD‡Òx*¬ç≤ør^Â∂m€¢m€∂¯¸Ûœi∫ª¢¢"å=)))–÷÷Fü>}pË–°J€ÚÍ’+xzz"--ç‘§R)¥¥¥pÊÃxyy·Ò„«h‘®Q•f⁄]ªv·À/ø Ãû=_}ı’Nµ3ÔñÈ”ß!ÿ∑oﬂõvGh9>r»Âr$''„ıÎ◊àââAã-p˜Ó›jπúÿl6MDÊÃ¨X±SßN}7ç÷@>0\gÅÅÅ∏uÎ¨≠≠ëììC£ﬁÅç…U\>kÅ27ìjèX=z[[[\ºx›ªwáππ9⁄¥iÉ±c«¬  
666pqqÅ\.áÆÆ.:wÓåÑÑ ıAÅ∂∂6<==!ì…P\\L˚êëëÅ≥gœ‚¡É8x ^ºxÅ+V !!rπ?˝ÙÌ˜õÄÒπ=z4Æ^Ω™9H◊4Ñ¿|‘âDË“•^ºxÅ[∑n·è?˛Äééñ/_^ÌΩDaa!˛¸Ûœw–Z4–‡C#àŸ€€c«éııÖôôn‹∏°Ú;P&‘1d¡LVu¡Rå¿óïïÖííp8ƒ∆∆bŸ≤e(**¬å30bƒ¯˙˙B `Î÷≠033√_|.ó´íbØ>PRR{{{|ˆŸg8p RRR`mm333xxx`Œú9ÿ∑o:tËÄªwÔ¢{˜Ó∏wÔﬁ[◊ÀpœuÔﬁ'OûƒÛÁœÎ›|¸)@£ë”‡£∆Ò„«°´´ã‹‹\¥h—'Nú¿à#∞q„FLü>@Â©vÿl6ÊŒùã’´Wc˛¸˘Ô∫Èh†¡f}HJJ¬°Cá0i“$tÔﬁ≠Zµ¬_|A˝€§R)’‘%%%©sÍ:>üèágœû°yÛÊ		°<ó p·¬ïÎ›››aii˘N®JúùùÄÄÄ ∏ππ°§§<B°ÆÆÆÙ:¶_uAú>uÍTÏ⁄µ&&&»……yÎÚ4(ÉF#ß¡Gº~˝„«èáB°Äçç,XÄÁœücÔﬁΩ P)	á√è«É≠≠-˝Ns:‘@ÉO|>R©´WØF||<x<fÕöGGGlÿ∞Å H•Rpπ\ïTåç	à`êb±			 PAä˘0˜ÊÁÁ´Ωæ.Q\\LÕ°Cá"00~~~pss£˝‚p8tMâD PkS*ï¢Kó.033√˘ÛÁ1c∆<zÙb±∏^µéü4Çú5\\\∞rÂJddd`˛¸˘áX,F◊Æ]±h—"∫†V%†5oﬁGè•îh†¡ß	F8 Ï€∑ôôô3fÊÃôÉŒù;”@∆| <(ò¸° `llåííí∑Å ˇôh´Ài˙&`|’n;.ó[)ß&”/⁄.u◊îˇˇ⁄µk!
!óÀÉ{˜ÓaÍ‘©T(‘†n†‰4¯®!óÀ1lÿ0\∫t	„«èPÊpºoﬂ>deeaÍ‘©P(êH$jÖ9π\éæ}˚‚¡É ﬁ.Y∂hÒ¢ºÄ§Ï«h˘aaaÅáÇœÁÉœÁÉ√·PM#¿)Øàçç≠q;î	ÅÎ⁄⁄⁄5^Á¡K9É≤ø sç≤ˆÆ[∑nò9s&~¯·\æ|B°R©îf›©Ã≠AÌ°‰4hPP6o§¶¶bÀñ-4äï·iRõÕFhh(äääpÂ ÌZ◊åÈh†¡«π\±Xå[∑naÿ∞aË—£>ˇ¸s ˇq≠)ﬂ*õXõ4iÇ∏∏8Mù≤∆Óc #à
ÖBïµë—‘%%%QﬁΩ+WÆ¿ÀÀ………∏sÁBBB âËa∫≤fº94Çúøˇ˛;zˆÏâ]ªvA("##CÌuVVVX∑nùäyµ:ì¨hiÄÕfSˇπÂÀó„·√àääÇçç-ZDØ„p8‡Û˘`±XP(@VVÏ>®Ûu+/h2ÌMOO†z¿e≥Ÿ‘èœ≈≈.\@€∂m—ßOÙÓ›Oû<Q…I[ïÈVÉ∑ÉFê”‡£Fyü∆Ió˘å3ªwÔ∆_|Å~¯A≠0'óÀ—£G‹∫uÎ=ıB4¯–¡¨/
Ö>>>8sÊ¬√√±m€6XXX`ÙË—ààà†AèãÖQ£F°∞∞<è
Bï	Q,Ñêw“==Ω
ºxï^œù;ooÔ
ﬂ«∆∆b…í%puu≈·√!‚≈¸ı◊_âD»»»†|‘¥»ªö5h†nb≥Ÿ8wÓåV≠Z!22RÂZâD±Xåé;‚»ë#pss£~/öH4(e*í‘‘TDFFb˜Ó›∏ˇ>JKKajj
¯˙˙¬œœÉÇìì.\∏@'±X¨"eΩ6m⁄†Iì&ÿµkWΩ¥]*ï¢sÁŒ∞≥≥S…®¿ò~ï¡·pp‚ƒ	2SßNÖÉÉn›∫Öòò‰‰‰@&ì¡  
}˙Ù¡¨Y≥¿„Òh™/ëH6õ]•)U„¬R7–r4(î‰òS&cÚÚ¬≥gœ∞i”&¯˘˘Å«„QÅÕŸŸ#GéƒºyÛ®âU#»i†ÅïA9Má√ÅB°¿£Gè∞wÔ^‹ªwOü>EAAäää‚≈ e¡B°FFF‡Û˘–◊◊ß©¿LMM±i”&tÔﬁΩﬁ9π\___§••a‰»ëêH$êH$(,,D~~>JKKÒ‚≈‰‰‰‡’ˇµwˇ°Q÷q¿ﬂw˜<ª€=áßÏ¨ìºñ∏®5◊î`
íõÜ	&j"‚?∂@Z*ÛØ4êçÑr`ƒ$Df?(≥2årAõˇ¶¯á≤d±Qk9ŸM<Û9ΩÔ˘q˝±æO€π›v∑›n∑ﬁ/2Ôyû˚ÉÒﬁÁ˚ÎŒXñEQ‡Û˘PXXàíí<˝Ù”X¥hû}ˆY,\∏–û[úÓ–1É‹‰‡Ü¿4„›¿≥≥≥˚˜Ô«÷≠[QQQÅ≥gœ¬„Ò@UUTUU·ÏŸ≥àD"ˆ"¢—=¸]Ñπ  JTVVÎ∏ÌﬁΩ«è∑úè≈bx‡b±L”6'ÌÔøˇŒz›âD8vÏ\.‹n7\. ¿≤, És⁄|>¬·06lÿÄè?˛¯°†&∂bôNsˇ˛èÿë£+˘ÄfÒb. ™U´p˘Úel›∫---∏p·6oﬁlœ°ÌD"¢Òjjj¬°Cáp˘ÚeÉ¡aØ%ˇ~—uk÷¨¡ìO>â˜ﬂ?+ıË∫éeÀñaÈ“•hiiIyùòﬂÊ˜˚±k◊.ºı÷[àD"˚˝#˛~•‹`ÀÅf¨—éÂ√¶_}ıÆ]ªÜ∫∫:|ÛÕ7ÿπs'L”D[[÷≠[óÉäâh&ÈÎÎ√|Ä#Gé 
·â'û∞_s:ùvÃ4MXñYñÒ«‡Ò«œJ="|9ùN=z)Ø∑,gŒú¡á~à˙˙z444p§b‚OÑ˛óƒfîÅ@ ΩΩΩ8tËZ[[qÎ÷-|ˇ˝˜rD4a◊Ø_áeYÿ≤eû˛y„£è>BWW ¿ÂrAí$˚ﬂ≤≤2¨^Ω⁄ﬁúl‚è€ÇÇTWW„ç7ﬁHy}SS∂lŸÇSßN°∞∞WØ^≈≤eÀ≤ReéAé@CC^˝u¥∑∑#ãÂ∫"ö˙˚˚Q\\UUá—‹‹å““R,Y≤ƒ>	AlS.Œö3gNVj˚ÿ)äóÀÖyÛÊa˘ÚÂ)Ôihh¿ﬁΩ{·ÒxPXXà7nÿÛ‚ƒ =˛à˛%ÀÚ∞NÁ~—Dƒb1{¯4è{M¨ÙúŒ\.L”¥W‰ét:Â7&"" M”‡rπ†(J^ÆÏ,**≤œ~ïe˜Ó›ÀqE49""¢,à«„vGn:ù≠:ﬁÕ*ÅÄ‰‹n˜îlçBÈ„–*—å∂Uëiöp:˚%"<â#ºF3;Çâ≈cÕq+..0¯˘‹n7ÁOSrDDD$ÜN≈" YñÒ◊_Ÿœ≤,ÉA˚xØëB‘¿¿¿î¡&	ªSòJaa!


`|>_÷V”“ƒ0»M“ƒú≤ÇÇ˚µ““R˚öëÉ¡)Çµ,—htÃÓ 0∏`Cí$∏›nªªH”É—$]∏X,fü◊l***RﬁÁt:—◊◊áÁû{.´ı%	|˜›wxÍ©ßR^cL” ¯|æ¨÷Dôcê#""öÄ°Û„º^Ø˝Ω¶ipª› Ä7nÿ˚Øç∆Ô˜£™™*ª≈˛k≈ä¯ˆ€oS^ÛÁü‚—GÖ,ÀÏ∆McrDDDìdhàÎÌÌ≈˙ıÎ°™*ÍÎÎ«úcÊız—››=%aÓ“•K®´´Kyç”ÈÑﬂÔ«æ}˚
Öp‚ƒâ¨◊EÈcê#""ö†‰C‰˚Ì7‹æ}õ6m¬¡ÉqÍ‘),]∫4Â3ÓﬁΩ;e
‚Ò8Ó‹πìÚö¢¢"|Ú…'∞,Ôæ˚.Z[[G]®Aπ√üQÜÜ7±p@ñe®™äﬂˇâDÂÂÂÿ∂mˆÏŸÉ∆∆∆îœÎÈÈ¡ÊÕõ≥R´$I√VƒæÚ +x˚Ì∑Sﬁ„Òx–‘‘Ñ∂∂6x<HíÑéé¨]ª6+5Rf8ËMDDî¶‰˘nÜa çB◊uD£QÑ√aÃù;ö¶a`` ÂÂÂ–u=ÂW( Í™’°œá√c^ØÎ:™™™Ï£πÊÕõá~¯!kıQf‰ààà&Ht¨√Ä◊Î≈Ò„«ÒÃ3œ¿„Ò‡¡ÉXπreÆKLõ¶iX∑nL”D$Ayy9:;;!ÀÚ®õ ”‘cê#"" Äÿ/N[ç(äÇõ7obıÍ’¯ÚÀ/·Û˘†(JŒÉœXõKí4ÏKò={6æ¯‚‘‘‘‡÷≠[ êÛœBˇaê#""öä¢¿„Ò „˛˝˚Xæ|9æ˛˙k,X∞ ◊••^…¡-YYYNü>çç7B”4twws¡√4¬ GDDî¶°¡H◊ıa¡Ê‰…ì(**B0Dww7*++ß‰Ë≠l–4/æ¯"∫∫∫‡Òx†( ò˚œ—‘bê#"" Äs≤,vÁŒù√¸˘Û°Î:¬·06lÿê´«î‹YüE|IíÑ^xwÔﬁÖ¶i®¨¨‰ÇáiÜAéààhíœ,ÌÍÍBMM~˙È'8,Y≤¿ÿs‘r-y¯UÃÖBp88˛<jkk—””ìõiDrDDDJg¢◊ÿÿà∂∂6 wÌÚ¡–˝ÒÊœüèœ>˚555∏ˇ>˙˙˙r\	rDDDi“u›9bµj8∆ÖÏÕw/^ºhw„¶$«®Ø%üsÒ‚≈∏~˝:,X ”4—ﬂﬂü’Zi¸∏ÏÑàà(MÜaÿ›8M”pÏÿ1ƒ„qú8q≥fÕÇ¶i∏yÛ&∂oﬂ>Ïæ‰ESEºóÆÎp:«ﬂ√Òx<–4---xÏ±«  è<Ú^{Ì5l⁄¥	sÁŒ≈´Øæ˙–e4uÿë#""Jìò?&I^zÈ%8p p8ÿΩ{7Ä¡ÄW[[õ€Bˇ%ÜIeYÜÀÂÇ◊Î˜}ä¢ ç¬·p‡◊_≈˛˝˚è«—ﬁﬁé∆∆FªÎ»óÏ»e@t´.]∫Ñ_~˘¡`¿‡kss3ÊÃôÉP(4ÓÁâaÃY≥fAUU;â°€LâSJJJ†™*,À¬Ì€∑”zÜﬂÔGqq18ÄO?˝’’’˚˝ËÈÈAUUC\1»•IS%I÷¨YÉEãaˆÏŸ∞,í$°øøÔºÛNZœ4+V¨¿ÁüéÉ⁄Áπ™™jøßÿ.d<¡I‹/ÊÏ…≤å¸WØ^EKKK⁄üy«éhjjBYYâL”D4Emm-TUÖ¢(i?ì&ŒëH$π.Çàà(ﬂ$œqªrÂ ∞Ô”]ËâD‡˜˚±j’*¸¸Ûœ®®®¿À/øåù;w⁄◊höfüÈ:VmÜa¿Ô˜£≥≥Gè≈È”ß°™*ÍÍÍﬁ{ÔŸœ∆Ü¢[âDpÔﬁΩáﬁø¥¥îA.G‰ààà2ê‰&:ºá†Î:Œü?è√á„‚≈ã–u’’’xÛÕ7QZZ
Ø◊˚–ﬁu#inn∆…ì'çFQRRÇıÎ◊c˚ˆÌÉˆ–m:> ıØÊÉQÜÜ±äUeˇÖ¶pƒs√Ä¶ihooGkk+z{{aL”◊3Ω^/÷Æ]ã˙˙z{NﬂPÈ9ö~‰ààà2ê‹ù√ç#{ï…≥≈<<qø¶i∏rÂ
z{{«uh˝ ï+Ì6RCü1ﬁ9w„¡P8µ‰àààf∏—BX¶!s¢œ†…√ GDDÙ?¬Õ{g9"""¢<≈ìààààÚÉQûbê#""" SrDDDDyäAéààà(O1»Â)9"""¢<≈ GDDDîß‰ààààÚÉQûbê#""" SrDDDDyÍT’[Fgå„    IENDÆB`Ç
--- FIN DU FICHIER : ./public/images/scooter_sketch.png ---


////////////////////////////////////////////////////////////////
CHEMIN : ./public/index.php
////////////////////////////////////////////////////////////////

<?php

use Illuminate\Contracts\Http\Kernel;
use Illuminate\Http\Request;

define('LARAVEL_START', microtime(true));

/*
|--------------------------------------------------------------------------
| Check If The Application Is Under Maintenance
|--------------------------------------------------------------------------
|
| If the application is in maintenance / demo mode via the "down" command
| we will load this file so that any pre-rendered content can be shown
| instead of starting the framework, which could cause an exception.
|
*/

if (file_exists($maintenance = __DIR__.'/../storage/framework/maintenance.php')) {
    require $maintenance;
}

/*
|--------------------------------------------------------------------------
| Register The Auto Loader
|--------------------------------------------------------------------------
|
| Composer provides a convenient, automatically generated class loader for
| this application. We just need to utilize it! We'll simply require it
| into the script here so we don't need to manually load our classes.
|
*/

require __DIR__.'/../vendor/autoload.php';

/*
|--------------------------------------------------------------------------
| Run The Application
|--------------------------------------------------------------------------
|
| Once we have the application, we can handle the incoming request using
| the application's HTTP kernel. Then, we will send the response back
| to this client's browser, allowing them to enjoy our application.
|
*/

$app = require_once __DIR__.'/../bootstrap/app.php';

$kernel = $app->make(Kernel::class);

$response = $kernel->handle(
    $request = Request::capture()
)->send();

$kernel->terminate($request, $response);

--- FIN DU FICHIER : ./public/index.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./public/js/tomselect-users-config.js
////////////////////////////////////////////////////////////////

// Configuration TomSelect pour la s√©lection d'utilisateurs
window.initUserTomSelect = function(element, preselectedIds = []) {
    if (!element) return;
    
    return new TomSelect(element, {
        plugins: ['checkbox_options', 'remove_button'],
        create: false,
        placeholder: 'Rechercher et s√©lectionner des utilisateurs...',
        searchField: ['text'],
        valueField: 'value',
        labelField: 'text',
        maxItems: null,
        items: preselectedIds.map(String),
        render: {
            option: function(data, escape) {
                const option = data.$option || data;
                const name = option.dataset?.name || data.text.split(' (')[0];
                const email = option.dataset?.email || data.text.match(/\(([^)]+)\)/)?.[1] || '';
                
                return `<div class="flex items-center space-x-3 p-2">
                    <input type="checkbox" class="rounded border-gray-300 text-primary-600 focus:ring-primary-500" ${data.selected ? 'checked' : ''}>
                    <div class="flex flex-col">
                        <span class="font-medium text-gray-900">${escape(name)}</span>
                        <span class="text-sm text-gray-500">${escape(email)}</span>
                    </div>
                </div>`;
            },
            item: function(data, escape) {
                const option = data.$option || data;
                const name = option.dataset?.name || data.text.split(' (')[0];
                
                return `<div class="flex items-center space-x-1">
                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-primary-100 text-primary-800">
                        ${escape(name)}
                    </span>
                </div>`;
            }
        }
    });
};


--- FIN DU FICHIER : ./public/js/tomselect-users-config.js ---


////////////////////////////////////////////////////////////////
CHEMIN : ./public/robots.txt
////////////////////////////////////////////////////////////////

User-agent: *
Disallow:

--- FIN DU FICHIER : ./public/robots.txt ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/css/app.css
////////////////////////////////////////////////////////////////

@import 'tom-select/dist/css/tom-select.default.css';

@import "flatpickr/dist/flatpickr.css";

@tailwind base;
@tailwind components;
@tailwind utilities;


/* Sidebar Custom Styles */
nav[x-data] {
    font-size: 0.925rem;
}

nav[x-data] a svg,
nav[x-data] button svg {
    height: 1.25rem;
    width: 1.25rem;
}

nav[x-data] .group .mr-3 svg {
    color: #6b7280;
}
nav[x-data] .group:hover .mr-3 svg {
    color: #374151;
}

nav[x-data] .sub-link-icon svg {
    color: inherit;
}

/* Sub-menu icon wrapper styles */
.sub-link-icon-wrapper {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    height: 1.5rem;
    width: 1.5rem;
    border-radius: 9999px;
    border: 1px solid #d1d5db; /* border-gray-300 */
    transition: all 0.2s ease-in-out;
}

.sub-link-icon-wrapper svg {
    /*height: 0.6rem; 12px */
    /*width: 0.6rem;   12px */
    height: inherit !important;
    width: inherit !important;
    color: #6b7280; /* text-gray-500 */
    transition: color 0.2s ease-in-out;
}

/* Active state for sub-menu links */
a.active .sub-link-icon-wrapper {
    background-color: rgb(2 132 199); /* bg-primary-600 */
    border-color: rgb(2 132 199);
}

a.active .sub-link-icon-wrapper svg {
    color: #ffffff;
}


/* STYLES SP√âCIFIQUES POUR L'IMPRESSION DE LA FICHE DE REMISE */
@media print {
    /* Cache tous les √©l√©ments de l'interface par d√©faut */
    body * {
        visibility: hidden;
    }

    
    
    /* Ne rend visible que la zone d'impression et son contenu */
    #print-area, #print-area * {
        visibility: visible;
    }

    /* Positionne la zone d'impression en haut de la page */
    #print-area {
        position: absolute;
        left: 0;
        top: 0;
        width: 100%;
        box-shadow: none !important;
        border: none !important;
    }

    /* Cache sp√©cifiquement les √©l√©ments non d√©sir√©s comme les boutons */
    .print\:hidden {
        display: none !important;
    }

    /* Optimisation de la police pour le format A4 */
    body, #print-area {
        font-size: 10pt;
        background-color: white !important;
        -webkit-print-color-adjust: exact;
        print-color-adjust: exact;
    }
}
--- FIN DU FICHIER : ./resources/css/app.css ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/js/app.js
////////////////////////////////////////////////////////////////

import './bootstrap';

import Alpine from 'alpinejs';
import TomSelect from 'tom-select';
import Sortable from 'sortablejs';

window.Alpine = Alpine;
window.TomSelect = TomSelect;
window.Sortable = Sortable;

import ApexCharts from 'apexcharts';
import flatpickr from "flatpickr";

window.ApexCharts = ApexCharts;
window.flatpickr = flatpickr;

Alpine.start();
--- FIN DU FICHIER : ./resources/js/app.js ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/js/bootstrap.js
////////////////////////////////////////////////////////////////

/**
 * We'll load the axios HTTP library which allows us to easily issue requests
 * to our Laravel back-end. This library automatically handles sending the
 * CSRF token as a header based on the value of the "XSRF" token cookie.
 */

import axios from 'axios';
window.axios = axios;

window.axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';

/**
 * Echo exposes an expressive API for subscribing to channels and listening
 * for events that are broadcast by Laravel. Echo and event broadcasting
 * allows your team to easily build robust real-time web applications.
 */

// import Echo from 'laravel-echo';

// import Pusher from 'pusher-js';
// window.Pusher = Pusher;

// window.Echo = new Echo({
//     broadcaster: 'pusher',
//     key: import.meta.env.VITE_PUSHER_APP_KEY,
//     cluster: import.meta.env.VITE_PUSHER_APP_CLUSTER ?? 'mt1',
//     wsHost: import.meta.env.VITE_PUSHER_HOST ? import.meta.env.VITE_PUSHER_HOST : `ws-${import.meta.env.VITE_PUSHER_APP_CLUSTER}.pusher.com`,
//     wsPort: import.meta.env.VITE_PUSHER_PORT ?? 80,
//     wssPort: import.meta.env.VITE_PUSHER_PORT ?? 443,
//     forceTLS: (import.meta.env.VITE_PUSHER_SCHEME ?? 'https') === 'https',
//     enabledTransports: ['ws', 'wss'],
// });

--- FIN DU FICHIER : ./resources/js/bootstrap.js ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/admin/assignments/create.blade.php
////////////////////////////////////////////////////////////////

<x-app-layout>
    <x-slot name="header">
        <h2 class="font-semibold text-xl text-gray-800 leading-tight">
            {{ __('Cr√©er une Nouvelle Affectation') }}
        </h2>
    </x-slot>

    <div class="py-12">
        <div class="max-w-4xl mx-auto sm:px-6 lg:px-8">
            <div class="bg-white overflow-hidden shadow-sm sm:rounded-lg">
                <div class="p-8 text-gray-900">
                    <h3 class="text-xl font-semibold text-gray-700 mb-6 border-b pb-4">D√©tails de l'Affectation</h3>

                    @if ($errors->any())
                        <div class="mb-4 bg-red-100 border-l-4 border-red-500 text-red-700 p-4" role="alert">
                            <p class="font-bold">Veuillez corriger les erreurs :</p>
                            <ul class="mt-2 list-disc list-inside">@foreach ($errors->all() as $error)<li>{{ $error }}</li>@endforeach</ul>
                        </div>
                    @endif

                    <form method="POST" action="{{ route('admin.assignments.store') }}">
                        @csrf
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">

                            {{-- S√©lection du V√©hicule --}}
                            <div class="md:col-span-2">
                                <x-input-label for="select-vehicle" value="V√©hicule" required />
                                <select name="vehicle_id" id="select-vehicle" placeholder="Recherchez une immatriculation, marque..." required>
                                    <option value="">S√©lectionnez un v√©hicule disponible</option>
                                    @foreach($availableVehicles as $vehicle)
                                        <option value="{{ $vehicle->id }}" @selected(old('vehicle_id') == $vehicle->id)>
                                            {{ $vehicle->brand }} {{ $vehicle->model }} ({{ $vehicle->registration_plate }})
                                        </option>
                                    @endforeach
                                </select>
                                <x-input-error :messages="$errors->get('vehicle_id')" class="mt-2" />
                            </div>

                            {{-- S√©lection du Chauffeur --}}
                            <div class="md:col-span-2">
                                <x-input-label for="select-driver" value="Chauffeur" required />
                                <select name="driver_id" id="select-driver" placeholder="Recherchez un chauffeur..." required>
                                    <option value="">S√©lectionnez un chauffeur disponible</option>
                                    @foreach($availableDrivers as $driver)
                                        <option value="{{ $driver->id }}" @selected(old('driver_id') == $driver->id)>{{ $driver->first_name }} {{ $driver->last_name }}</option>
                                    @endforeach
                                </select>
                                 <x-input-error :messages="$errors->get('driver_id')" class="mt-2" />
                            </div>

                            {{-- Date et Heure de D√©but --}}
                            <div>
                                <x-datetime-picker
                                    id="start_datetime"
                                    name="start_datetime"
                                    label="Date et Heure de D√©but"
                                    :value="old('start_datetime', now()->format('Y-m-d H:i'))"
                                    required
                                />
                                <x-input-error :messages="$errors->get('start_datetime')" class="mt-2" />
                            </div>

                            {{-- Kilom√©trage de D√©but --}}
                            <div>
                                <x-input-label for="start_mileage" value="Kilom√©trage de D√©but" required />
                                <x-text-input id="start_mileage" class="block mt-1 w-full" type="number" name="start_mileage" :value="old('start_mileage')" required />
                                <x-input-error :messages="$errors->get('start_mileage')" class="mt-2" />
                            </div>

                            {{-- Motif et Notes --}}
                            <div class="md:col-span-2">
                                <x-input-label for="reason" value="Motif de l'affectation" />
                                <x-text-input id="reason" name="reason" :value="old('reason')" class="block mt-1 w-full" type="text" />
                                <x-input-error :messages="$errors->get('reason')" class="mt-2" />
                            </div>

                            <div class="md:col-span-2">
                                <x-input-label for="notes" value="Notes" />
                                <textarea id="notes" name="notes" rows="3" class="block mt-1 w-full border-gray-300 focus:border-primary-500 focus:ring-primary-500 rounded-md shadow-sm">{{ old('notes') }}</textarea>
                                <x-input-error :messages="$errors->get('notes')" class="mt-2" />
                            </div>
                        </div>

                        <div class="mt-8 flex items-center justify-end gap-4 border-t pt-6">
                            <a href="{{ route('admin.assignments.index') }}" class="text-sm font-semibold text-gray-600 hover:text-gray-900">Annuler</a>
                            <x-primary-button>
                                <x-lucide-check-circle class="w-5 h-5 mr-2"/>
                                Cr√©er l'Affectation
                            </x-primary-button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    @push('scripts')
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            if (window.TomSelect) {
                const vehicleMileageData = @json($availableVehicles->pluck('current_mileage', 'id'));
                const mileageInput = document.getElementById('start_mileage');

                let tomSelectVehicle = new TomSelect('#select-vehicle',{
                    create: false,
                    sortField: { field: "text", direction: "asc" },
                    onChange: function(value) {
                        if (mileageInput && value && vehicleMileageData[value] !== undefined) {
                            mileageInput.value = vehicleMileageData[value];
                        } else if (mileageInput) {
                            mileageInput.value = '';
                        }
                    }
                });
                
                new TomSelect('#select-driver',{
                    create: false,
                    sortField: { field: "text", direction: "asc" }
                });

                // Si la page est recharg√©e apr√®s une erreur de validation,
                // on s'assure que le kilom√©trage est bien pr√©-rempli pour la valeur "old()".
                if (tomSelectVehicle.getValue()) {
                    tomSelectVehicle.trigger('change', tomSelectVehicle.getValue());
                }
            }
        });
    </script>
    @endpush
</x-app-layout>
--- FIN DU FICHIER : ./resources/views/admin/assignments/create.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/admin/assignments/edit.blade.php
////////////////////////////////////////////////////////////////

<x-app-layout>
    <x-slot name="header">
        <h2 class="font-semibold text-xl text-gray-800 leading-tight">
            {{ __('Modifier l\'Affectation N¬∞') }}{{ $assignment->id }}
        </h2>
    </x-slot>

    <div class="py-12">
        <div class="max-w-4xl mx-auto sm:px-6 lg:px-8">
            <div class="bg-white overflow-hidden shadow-sm sm:rounded-lg">
                 <div class="p-8 text-gray-900">

                    {{-- Section d'information non modifiable --}}
                    <div class="mb-8 border border-gray-200 rounded-lg p-6">
                        <h3 class="text-lg font-semibold text-gray-800 mb-4">R√©sum√© de l'Affectation</h3>
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-6 text-sm">

                            <div class="flex items-center space-x-4">
                                <div class="flex-shrink-0">
                                    <x-lucide-user-circle-2 class="h-10 w-10 text-gray-400"/>
                                </div>
                                <div>
                                    <p class="text-gray-500">Chauffeur</p>
                                    <p class="font-bold text-gray-900">{{ $assignment->driver?->first_name }} {{ $assignment->driver?->last_name }}</p>
                                </div>
                            </div>

                            <div class="flex items-center space-x-4">
                                 <div class="flex-shrink-0">
                                    <x-lucide-truck class="h-10 w-10 text-gray-400"/>
                                </div>
                                <div>
                                     <p class="text-gray-500">V√©hicule</p>
                                     <p class="font-bold text-gray-900">{{ $assignment->vehicle?->brand }} {{ $assignment->vehicle?->model }}</p>
                                     <p class="text-gray-600 font-mono">{{ $assignment->vehicle?->registration_plate }}</p>
                                </div>
                            </div>

                            <div class="p-4 bg-gray-50 rounded-md">
                                <p class="text-gray-500">D√©but de l'affectation</p>
                                <p class="font-semibold text-gray-900">{{ $assignment->start_datetime->format('d/m/Y √† H:i') }}</p>
                            </div>
                            <div class="p-4 bg-gray-50 rounded-md">
                                <p class="text-gray-500">Fin de l'affectation</p>
                                <p class="font-semibold text-gray-900">{{ $assignment->end_datetime ? $assignment->end_datetime->format('d/m/Y √† H:i') : 'En cours' }}</p>
                            </div>
                        </div>
                    </div>

                    {{-- Formulaire de modification --}}
                    <form method="POST" action="{{ route('admin.assignments.update', $assignment) }}">
                        @csrf
                        @method('PUT')
                        <div class="space-y-6">
                            <div>
                                <x-input-label for="reason" value="Motif de l'affectation" />
                                <x-text-input id="reason" class="block mt-1 w-full" type="text" name="reason" :value="old('reason', $assignment->reason)" />
                                <x-input-error :messages="$errors->get('reason')" class="mt-2" />
                            </div>
                            <div>
                                <x-input-label for="notes" value="Notes Compl√©mentaires" />
                                <textarea id="notes" name="notes" rows="4" class="block mt-1 w-full border-gray-300 focus:border-primary-500 focus:ring-primary-500 rounded-md shadow-sm">{{ old('notes', $assignment->notes) }}</textarea>
                                <x-input-error :messages="$errors->get('notes')" class="mt-2" />
                            </div>
                        </div>

                        <div class="mt-8 flex items-center justify-end gap-4 border-t pt-6">
                             <a href="{{ route('admin.assignments.index') }}" class="text-sm font-semibold text-gray-600 hover:text-gray-900">Retour √† la liste</a>
                             <x-primary-button>
                                 <x-lucide-check-circle class="w-5 h-5 mr-2"/>
                                 Enregistrer les Modifications
                             </x-primary-button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</x-app-layout>
--- FIN DU FICHIER : ./resources/views/admin/assignments/edit.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/admin/assignments/index.blade.php
////////////////////////////////////////////////////////////////

<x-app-layout>
    <x-slot name="header">
        <h2 class="font-semibold text-xl text-gray-800 leading-tight">
            {{ __('Gestion des Affectations') }}
        </h2>
    </x-slot>

    <div x-data="{
            showEndModal: false,
            assignmentToEnd: {},
            endFormUrl: '',
            modalErrors: {},
            isSubmitting: false,
            openEndModal(event) {
                const button = event.currentTarget;
                this.assignmentToEnd = JSON.parse(button.dataset.assignment);
                this.endFormUrl = button.dataset.url;
                this.modalErrors = {};
                this.showEndModal = true;
            },
            async submitEndForm() {
                this.isSubmitting = true;
                this.modalErrors = {};
                const formData = new FormData(this.$refs.endForm);
                try {
                    const response = await fetch(this.endFormUrl, {
                        method: 'POST',
                        headers: {
                            'X-CSRF-TOKEN': document.querySelector('meta[name=csrf-token]').content,
                            'X-Requested-With': 'XMLHttpRequest',
                            'Accept': 'application/json',
                        },
                        body: formData,
                    });
                    const data = await response.json();
                    if (!response.ok) {
                        if (response.status === 422) { this.modalErrors = data.errors; }
                        else { throw new Error(data.message || 'Une erreur serveur est survenue.'); }
                    } else {
                        window.dispatchEvent(new CustomEvent('toast', {
                            detail: {
                                type: 'success',
                                message: 'Affectation Termin√©e',
                                description: 'Le statut du v√©hicule et du chauffeur a √©t√© mis √† jour.'
                            }
                        }));
                        this.showEndModal = false;
                        setTimeout(() => window.location.reload(), 1500);
                    }
                } catch (error) {
                    this.modalErrors = { general: [error.message] };
                } finally {
                    this.isSubmitting = false;
                }
            }
        }" class="py-12">
        <div class="max-w-7xl mx-auto sm:px-6 lg:px-8">

            {{-- Section des Filtres --}}
            <div class="mb-6 bg-white p-4 shadow-sm sm:rounded-lg">
                <form action="{{ route('admin.assignments.index') }}" method="GET">
                    <div class="flex flex-col md:flex-row md:items-end md:space-x-4 space-y-2 md:space-y-0">
                        <div class="flex-grow">
                            <label for="search" class="block text-sm font-medium text-gray-700">Recherche</label>
                            <input type="text" name="search" id="search" value="{{ $filters['search'] ?? '' }}" placeholder="Immat, marque, chauffeur..." class="mt-1 block w-full border-gray-300 focus:border-primary-500 focus:ring-primary-500 rounded-md shadow-sm text-sm">
                        </div>
                        <div class="flex-shrink-0">
                            <label for="per_page" class="block text-sm font-medium text-gray-700">Par page</label>
                            <select name="per_page" id="per_page" onchange="this.form.submit()" class="mt-1 block w-full border-gray-300 focus:border-primary-500 focus:ring-primary-500 rounded-md shadow-sm text-sm">
                                @foreach(['15', '30', '50'] as $value)
                                    <option value="{{ $value }}" @selected(($filters['per_page'] ?? '15') == $value)>{{ $value }}</option>
                                @endforeach
                            </select>
                        </div>
                        <div class="flex-shrink-0 flex space-x-2">
                            <button type="submit" class="inline-flex items-center justify-center w-full px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-primary-600 hover:bg-primary-700">Filtrer</button>
                            <a href="{{ route('admin.assignments.index') }}" class="inline-flex items-center justify-center w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50">Reset</a>
                        </div>
                    </div>
                </form>
            </div>

            <div class="bg-white overflow-hidden shadow-sm sm:rounded-lg">
                <div class="p-6 text-gray-900">
                    <div class="flex justify-between items-center mb-6">
                        <h3 class="text-xl font-semibold text-gray-700">Historique des Affectations</h3>
                        @can('create assignments')
                            <a href="{{ route('admin.assignments.create') }}" class="inline-flex items-center px-4 py-2 bg-primary-600 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-primary-700">
                                <x-lucide-plus-circle class="w-4 h-4 mr-2"/>
                                Nouvelle Affectation
                            </a>
                        @endcan
                    </div>

                    <div class="overflow-x-auto border border-gray-200 rounded-lg">
                        <table class="w-full divide-y divide-gray-200">
                            <thead class="bg-gray-100">
                                <tr>
                                    <th class="px-6 py-3 text-left text-xs font-bold text-gray-600 uppercase tracking-wider">Chauffeur</th>
                                    <th class="px-6 py-3 text-left text-xs font-bold text-gray-600 uppercase tracking-wider">V√©hicule</th>
                                    <th class="px-6 py-3 text-left text-xs font-bold text-gray-600 uppercase tracking-wider">P√©riode</th>
                                    <th class="px-6 py-3 text-left text-xs font-bold text-gray-600 uppercase tracking-wider">Statut</th>
                                    <th class="px-6 py-3 text-right text-xs font-bold text-gray-600 uppercase tracking-wider">Actions</th>
                                </tr>
                            </thead>
                            <tbody class="bg-white divide-y divide-gray-200">
                                @forelse ($assignments as $assignment)
                                    <tr class="hover:bg-gray-50">
                                        <td class="px-6 py-2 whitespace-nowrap">
                                            <div class="flex items-center">
                                                <div class="flex-shrink-0 h-10 w-10">
                                                    @if($assignment->driver?->photo_path)
                                                        <img class="h-10 w-10 rounded-full object-cover" src="{{ asset('storage/' . $assignment->driver->photo_path) }}" alt="Photo de {{ $assignment->driver->first_name }}">
                                                    @else
                                                        <span class="h-10 w-10 rounded-full bg-gray-200 flex items-center justify-center">
                                                            <x-lucide-user class="h-6 w-6 text-gray-400"/>
                                                        </span>
                                                    @endif
                                                </div>
                                                <div class="ml-4">
                                                    <div class="text-sm font-semibold text-gray-900">{{ $assignment->driver?->first_name }} {{ $assignment->driver?->last_name }}</div>
                                                    <div class="text-sm text-gray-500">{{ $assignment->driver?->personal_phone ?? '' }}</div>
                                                </div>
                                            </div>
                                        </td>
                                        <td class="px-6 py-2 whitespace-nowrap">
                                            <div class="text-sm font-medium text-gray-900">{{ $assignment->vehicle?->brand }} {{ $assignment->vehicle?->model }}</div>
                                            <div class="text-xs text-gray-500 font-mono">{{ $assignment->vehicle?->registration_plate }}</div>
                                            <div class="text-xs text-primary-600 font-semibold mt-1 flex items-center">
                                                {{-- CORRECTION D√âFINITIVE : Remplacement par une ic√¥ne universelle. --}}
                                                {{-- Apr√®s la mise √† jour du package, vous pourrez utiliser <x-lucide-gauge /> si vous pr√©f√©rez. --}}
                                                <x-lucide-bar-chart class="w-4 h-4 mr-1"/>
                                                {{ number_format($assignment->vehicle?->current_mileage, 0, ',', ' ') }} km
                                            </div>
                                        </td>
                                        <td class="px-6 py-2 whitespace-nowrap text-sm text-gray-500">
                                            <div>De: {{ $assignment->start_datetime->format('d/m/Y H:i') }}</div>
                                            <div>√Ä: @if($assignment->end_datetime) {{ $assignment->end_datetime->format('d/m/Y H:i') }} @else - @endif</div>
                                        </td>
                                        <td class="px-6 py-2 whitespace-nowrap text-sm">
                                            @if(is_null($assignment->end_datetime))
                                                <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
                                                    <x-lucide-play-circle class="w-4 h-4 mr-1.5"/>
                                                    En cours
                                                </span>
                                            @else
                                                <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800">
                                                    <x-lucide-check-circle class="w-4 h-4 mr-1.5"/>
                                                    Termin√©e
                                                </span>
                                            @endif
                                        </td>
                                        <td class="px-6 py-3 whitespace-nowrap text-right text-sm font-medium">
                                            <div class="flex items-center justify-end space-x-2">
                                                @can('create handovers')
                                                    @if($assignment->handoverForm)
                                                        <a href="{{ route('admin.handovers.vehicles.show', $assignment->handoverForm) }}" title="Voir la Fiche de Remise" class="p-2 rounded-full text-gray-400 hover:bg-primary-100 hover:text-primary-600">
                                                            <x-lucide-file-text class="h-5 w-5"/>
                                                        </a>
                                                    @else
                                                        <a href="{{ route('admin.handovers.vehicles.create', ['assignment' => $assignment->id]) }}" title="Cr√©er Fiche de Remise" class="p-2 rounded-full text-gray-400 hover:bg-blue-100 hover:text-blue-600">
                                                            <x-lucide-file-plus class="h-5 w-5"/>
                                                        </a>
                                                    @endif
                                                @endcan
                                                @can('edit assignments')
                                                    <a href="{{ route('admin.assignments.edit', $assignment) }}" title="Modifier les notes/motif" class="p-2 rounded-full text-gray-400 hover:bg-primary-100 hover:text-primary-600">
                                                        <x-lucide-file-pen-line class="h-5 w-5"/>
                                                    </a>
                                                @endcan
                                                @if(is_null($assignment->end_datetime))
                                                    @can('end assignments')
                                                        <button type="button" @click="openEndModal($event)" data-assignment='@json($assignment->load('vehicle'))' data-url="{{ route('admin.assignments.end', $assignment) }}" title="Terminer l'affectation" class="p-2 rounded-full text-gray-400 hover:bg-yellow-100 hover:text-yellow-600">
                                                            <x-lucide-stop-circle class="h-5 w-5"/>
                                                        </button>
                                                    @endcan
                                                @endif
                                            </div>
                                        </td>
                                    </tr>
                                @empty
                                    <tr><td colspan="5" class="px-6 py-4 text-center text-sm text-gray-500">Aucune affectation trouv√©e.</td></tr>
                                @endforelse
                            </tbody>
                        </table>
                    </div>
                    <div class="mt-6">{{ $assignments->withQueryString()->links() }}</div>
                </div>
            </div>
        </div>

        {{-- Modale pour terminer l'affectation --}}
        <div x-show="showEndModal" x-transition:enter="ease-out duration-300" x-transition:enter-start="opacity-0" x-transition:enter-end="opacity-100" x-transition:leave="ease-in duration-200" x-transition:leave-start="opacity-100" x-transition:leave-end="opacity-0" class="fixed inset-0 z-50 flex items-center justify-center bg-gray-900 bg-opacity-60" style="display: none;">
            <div @click.away="showEndModal = false" class="bg-white rounded-lg shadow-xl p-6 sm:p-8 w-full max-w-lg mx-auto transform transition-all" x-show="showEndModal" x-transition:enter="ease-out duration-300" x-transition:enter-start="opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95" x-transition:enter-end="opacity-100 translate-y-0 sm:scale-100" x-transition:leave="ease-in duration-200" x-transition:leave-start="opacity-100 translate-y-0 sm:scale-100" x-transition:leave-end="opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95">
                <h3 class="text-xl font-semibold text-gray-800 mb-4">Terminer l'affectation</h3>
                <p class="text-sm text-gray-600 mb-2">
                    V√©hicule: <strong x-text="`${assignmentToEnd.vehicle?.brand} ${assignmentToEnd.vehicle?.model} (${assignmentToEnd.vehicle?.registration_plate})`"></strong>
                </p>
                <p class="text-sm text-gray-600 mb-6">
                    D√©but: <span x-text="new Date(assignmentToEnd.start_datetime).toLocaleString('fr-FR')"></span>
                    avec <span x-text="assignmentToEnd.start_mileage ? assignmentToEnd.start_mileage.toLocaleString('fr-FR') : 'N/A'"></span> km.
                </p>

                <form x-ref="endForm" @submit.prevent="submitEndForm">
                    <input type="hidden" name="_method" value="PATCH">
                    <div class="space-y-4">
                        <div>
                            <x-datetime-picker
                                id="end_datetime"
                                name="end_datetime"
                                label="Date et heure de fin"
                            />
                            <template x-if="modalErrors.end_datetime"><p class="text-xs text-red-600 mt-1" x-text="modalErrors.end_datetime[0]"></p></template>
                        </div>
                        <div>
                            <label for="end_mileage" class="block text-sm font-medium text-gray-700">Kilom√©trage de fin</label>
                            <input type="number" name="end_mileage" id="end_mileage" :min="assignmentToEnd.start_mileage" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500">
                            <template x-if="modalErrors.end_mileage"><p class="text-xs text-red-600 mt-1" x-text="modalErrors.end_mileage[0]"></p></template>
                        </div>
                        <template x-if="modalErrors.general"><p class="text-sm text-red-600 mt-2" x-text="modalErrors.general[0]"></p></template>
                    </div>

                    <div class="mt-8 flex justify-end space-x-3">
                        <button type="button" @click="showEndModal = false" :disabled="isSubmitting" class="px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 disabled:opacity-50">
                            Annuler
                        </button>
                        <button type="submit" :disabled="isSubmitting" class="inline-flex items-center px-4 py-2 text-sm font-medium text-white bg-primary-600 border border-transparent rounded-md shadow-sm hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 disabled:opacity-50">
                            <span x-show="!isSubmitting">Confirmer la fin</span>
                            <span x-show="isSubmitting" class="flex items-center">
                                <svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"><circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle><path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path></svg>
                                Chargement...
                            </span>
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</x-app-layout>
--- FIN DU FICHIER : ./resources/views/admin/assignments/index.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/admin/document_categories/create.blade.php
////////////////////////////////////////////////////////////////

<x-app-layout>
    <x-slot name="header">
        <h2 class="font-semibold text-xl text-gray-800 leading-tight">
            {{ __('Cr√©er une Nouvelle Cat√©gorie de Document') }}
        </h2>
    </x-slot>

    <div class="py-12">
        <div class="max-w-4xl mx-auto sm:px-6 lg:px-8">
            <div class="bg-white overflow-hidden shadow-sm sm:rounded-lg">
                <div class="p-6 md:p-8 border-b border-gray-200">
                    <form action="{{ route('admin.document-categories.store') }}" method="POST">
                        @csrf
                        
                        <div class="space-y-6">
                            {{-- Name --}}
                            <div>
                                <x-input-label for="name" :value="__('Nom de la cat√©gorie')" />
                                <x-text-input id="name" name="name" type="text" class="mt-1 block w-full" :value="old('name')" required autofocus autocomplete="off" />
                                <x-input-error :messages="$errors->get('name')" class="mt-2" />
                            </div>

                            {{-- Description --}}
                            <div>
                                <x-input-label for="description" :value="__('Description')" />
                                <textarea id="description" name="description" rows="4" class="mt-1 block w-full border-gray-300 focus:border-primary-500 focus:ring-primary-500 rounded-md shadow-sm">{{ old('description') }}</textarea>
                                <x-input-error :messages="$errors->get('description')" class="mt-2" />
                            </div>
                        </div>

                        {{-- Form Actions --}}
                        <div class="mt-8 flex justify-end space-x-4">
                            <a href="{{ route('admin.document-categories.index') }}" class="inline-flex items-center px-4 py-2 bg-white border border-gray-300 rounded-md font-semibold text-xs text-gray-700 uppercase tracking-widest shadow-sm hover:bg-gray-50">
                                Annuler
                            </a>
                            <x-primary-button>
                                {{ __('Sauvegarder') }}
                            </x-primary-button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</x-app-layout>

--- FIN DU FICHIER : ./resources/views/admin/document_categories/create.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/admin/document_categories/edit.blade.php
////////////////////////////////////////////////////////////////

<x-app-layout>
    <x-slot name="header">
        <h2 class="font-semibold text-xl text-gray-800 leading-tight">
            {{ __('Modifier la Cat√©gorie :') }} {{ $documentCategory->name }}
        </h2>
    </x-slot>

    <div class="py-12">
        <div class="max-w-4xl mx-auto sm:px-6 lg:px-8">
            <div class="bg-white overflow-hidden shadow-sm sm:rounded-lg">
                <div class="p-6 md:p-8 border-b border-gray-200">
                    <form action="{{ route('admin.document-categories.update', $documentCategory) }}" method="POST">
                        @csrf
                        @method('PUT')
                        
                        <div class="space-y-6">
                            {{-- Name --}}
                            <div>
                                <x-input-label for="name" :value="__('Nom de la cat√©gorie')" />
                                <x-text-input id="name" name="name" type="text" class="mt-1 block w-full" :value="old('name', $documentCategory->name)" required autofocus autocomplete="off" />
                                <x-input-error :messages="$errors->get('name')" class="mt-2" />
                            </div>

                            {{-- Description --}}
                            <div>
                                <x-input-label for="description" :value="__('Description')" />
                                <textarea id="description" name="description" rows="4" class="mt-1 block w-full border-gray-300 focus:border-primary-500 focus:ring-primary-500 rounded-md shadow-sm">{{ old('description', $documentCategory->description) }}</textarea>
                                <x-input-error :messages="$errors->get('description')" class="mt-2" />
                            </div>
                        </div>

                        {{-- Form Actions --}}
                        <div class="mt-8 flex justify-end space-x-4">
                            <a href="{{ route('admin.document-categories.index') }}" class="inline-flex items-center px-4 py-2 bg-white border border-gray-300 rounded-md font-semibold text-xs text-gray-700 uppercase tracking-widest shadow-sm hover:bg-gray-50">
                                Annuler
                            </a>
                            <x-primary-button>
                                {{ __('Mettre √† jour') }}
                            </x-primary-button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</x-app-layout>

--- FIN DU FICHIER : ./resources/views/admin/document_categories/edit.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/admin/document_categories/index.blade.php
////////////////////////////////////////////////////////////////

<x-app-layout>
    <x-slot name="header">
        <h2 class="font-semibold text-xl text-gray-800 leading-tight">
            {{ __('Cat√©gories de Documents') }}
        </h2>
    </x-slot>

    <div x-data="{
            showConfirmModal: false,
            modalTitle: '',
            modalDescription: '',
            modalButtonText: '',
            modalButtonClass: '',
            modalIconClass: '',
            categoryToProcess: {},
            formUrl: '',

            openModal(event) {
                const button = event.currentTarget;
                this.categoryToProcess = JSON.parse(button.dataset.category);
                this.formUrl = button.dataset.url;
                
                this.modalTitle = 'Supprimer la Cat√©gorie';
                this.modalDescription = `√ätes-vous s√ªr de vouloir supprimer la cat√©gorie <strong>${this.categoryToProcess.name}</strong> ? Cette action est irr√©versible.`;
                this.modalButtonText = 'Supprimer D√©finitivement';
                this.modalButtonClass = 'bg-red-600 hover:bg-red-700';
                this.modalIconClass = 'text-red-600 bg-red-100';

                this.showConfirmModal = true;
            }
        }" class="py-12">
        <div class="max-w-7xl mx-auto sm:px-6 lg:px-8">
            <div class="bg-white overflow-hidden shadow-sm sm:rounded-lg">
                <div class="p-6 text-gray-900">
                    <div class="flex justify-between items-center mb-6">
                        <h3 class="text-xl font-semibold text-gray-700">{{ __('Liste des Cat√©gories') }}</h3>
                        <div class="flex space-x-2">
                            @can('manage document_categories')
                                <a href="{{ route('admin.document-categories.create') }}" class="inline-flex items-center px-4 py-2 bg-primary-600 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-primary-700">
                                    <x-lucide-plus-circle class="w-4 h-4 mr-2" stroke-width="1.5"/>
                                    Ajouter
                                </a>
                            @endcan
                        </div>
                    </div>

                    <div class="overflow-x-auto border border-gray-200 rounded-lg">
                        <table class="w-full divide-y divide-gray-200">
                            <thead class="bg-gray-100">
                                <tr>
                                    <th scope="col" class="px-6 py-3 text-left text-xs font-bold text-gray-600 uppercase tracking-wider">Nom</th>
                                    <th scope="col" class="px-6 py-3 text-left text-xs font-bold text-gray-600 uppercase tracking-wider">Description</th>
                                    <th scope="col" class="px-6 py-3 text-left text-xs font-bold text-gray-600 uppercase tracking-wider">Documents</th>
                                    <th scope="col" class="px-6 py-3 text-right text-xs font-bold text-gray-600 uppercase tracking-wider">Actions</th>
                                </tr>
                            </thead>
                            <tbody class="bg-white divide-y divide-gray-200">
                                @forelse ($categories as $category)
                                    <tr class="hover:bg-gray-50">
                                        <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">{{ $category->name }}</td>
                                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{{ Str::limit($category->description, 70) }}</td>
                                        <td class="px-6 py-4 whitespace-nowrap text-sm">
                                            <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-blue-100 text-blue-800">
                                                {{ $category->documents_count }}
                                            </span>
                                        </td>
                                        <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                                            <div class="flex items-center justify-end space-x-2">
                                                @can('manage document_categories')
                                                    <a href="{{ route('admin.document-categories.edit', $category) }}" title="Modifier" class="p-2 rounded-full text-gray-400 hover:bg-primary-100 hover:text-primary-600">
                                                        <x-lucide-file-pen-line class="h-5 w-5" stroke-width="1.5"/>
                                                    </a>
                                                    <button type="button" @click="openModal($event)" 
                                                            data-category='@json($category->only(['id', 'name']))' 
                                                            data-url="{{ route('admin.document-categories.destroy', $category) }}" 
                                                            title="Supprimer" 
                                                            class="p-2 rounded-full text-gray-400 hover:bg-red-100 hover:text-red-600"
                                                            :disabled="$category->documents_count > 0">
                                                        <x-lucide-trash-2 class="h-5 w-5" stroke-width="1.5"/>
                                                    </button>
                                                @endcan
                                            </div>
                                        </td>
                                    </tr>
                                @empty
                                    <tr>
                                        <td colspan="4" class="px-6 py-12 text-center text-gray-500">
                                            <div class="flex flex-col items-center justify-center">
                                                <x-lucide-folder-open class="w-12 h-12 text-gray-400 mb-4" />
                                                <h3 class="text-lg font-semibold text-gray-800">Aucune cat√©gorie trouv√©e</h3>
                                                <p class="mt-1 text-sm">Commencez par ajouter une nouvelle cat√©gorie de document.</p>
                                            </div>
                                        </td>
                                    </tr>
                                @endforelse
                            </tbody>
                        </table>
                    </div>

                    @if ($categories->hasPages())
                        <div class="mt-6">
                            {{ $categories->links() }}
                        </div>
                    @endif
                </div>
            </div>
        </div>

        {{-- Fen√™tre Modale de Confirmation --}}
        <div x-show="showConfirmModal" x-transition class="fixed inset-0 z-50 flex items-center justify-center bg-gray-900 bg-opacity-60" style="display: none;">
            <div @click.away="showConfirmModal = false" class="bg-white rounded-lg shadow-xl p-6 w-full max-w-md mx-4">
                <div class="sm:flex sm:items-start">
                    <div class="mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full sm:mx-0 sm:h-10 sm:w-10" :class="modalIconClass">
                        <x-lucide-alert-triangle class="h-6 w-6" stroke-width="1.5"/>
                    </div>
                    <div class="mt-3 text-center sm:ml-4 sm:mt-0 sm:text-left">
                        <h3 class="text-base font-semibold leading-6 text-gray-900" x-text="modalTitle"></h3>
                        <div class="mt-2">
                            <p class="text-sm text-gray-600" x-html="modalDescription"></p>
                        </div>
                    </div>
                </div>
                <div class="mt-5 sm:mt-4 sm:flex sm:flex-row-reverse">
                    <form :action="formUrl" method="POST">
                        @csrf
                        @method('DELETE')
                        <button type="submit" class="inline-flex w-full justify-center rounded-md px-4 py-2 text-sm font-semibold text-white shadow-sm sm:ml-3 sm:w-auto" :class="modalButtonClass" x-text="modalButtonText">
                        </button>
                    </form>
                    <button type="button" @click="showConfirmModal = false" class="mt-3 inline-flex w-full justify-center rounded-md bg-white px-4 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50 sm:mt-0 sm:w-auto">
                        Annuler
                    </button>
                </div>
            </div>
        </div>
    </div>
</x-app-layout>
--- FIN DU FICHIER : ./resources/views/admin/document_categories/index.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/admin/documents/_form.blade.php
////////////////////////////////////////////////////////////////

{{--
    This form is used for both creating and editing documents.
    It expects the following variables:
    - $categories: A collection of DocumentCategory models.
    - $vehicles: A collection of vehicle models.
    - $drivers: A collection of user models (drivers).
    - $suppliers: A collection of supplier models.
    - $document (optional): The document model, only present when editing.
--}}

<div x-data="documentForm({
    categories: {{ json_encode($categories) }},
    initialCategoryId: '{{ old('document_category_id', isset($document) ? $document->document_category_id : '') }}',
    initialExtraMetadata: {{ json_encode(old('extra_metadata', isset($document) ? $document->extra_metadata : [])) }},
    allVehicles: {{ json_encode($vehicles->map(fn($v) => ['id' => $v->id, 'name' => "{$v->brand} {$v->model} ({$v->registration_plate})"])) }},
    allDrivers: {{ json_encode($drivers->map(fn($d) => ['id' => $d->id, 'name' => "{$d->first_name} {$d->last_name}"])) }},
    allSuppliers: {{ json_encode($suppliers) }}
})" x-init="init()">

    <form :action="actionUrl" method="POST" enctype="multipart/form-data" class="space-y-8">
        @csrf
        @if(isset($document))
            @method('PUT')
        @endif

        {{-- Section Fichier et Classification --}}
        <div class="p-6 border border-gray-200 rounded-lg">
            <h3 class="text-lg font-semibold leading-6 text-gray-900 mb-6">
                Fichier et Classification
            </h3>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                @if(!isset($document))
                    <div class="md:col-span-2">
                        <x-input-label for="document_file" :value="__('Fichier √† importer')" required />
                        <x-text-input id="document_file" name="document_file" type="file" class="mt-1 block w-full" required />
                        <p class="mt-2 text-sm text-gray-500">Types autoris√©s : PDF, DOCX, JPG, PNG, XLSX. Taille maximale : 10MB.</p>
                        <x-input-error :messages="$errors->get('document_file')" class="mt-2" />
                    </div>
                @endif

                <div>
                    <x-input-label for="document_category_id" :value="__('Cat√©gorie')" required />
                    <select id="document_category_id" name="document_category_id" x-model="selectedCategoryId" @change="onCategoryChange" class="mt-1 block w-full border-gray-300 focus:border-primary-500 focus:ring-primary-500 rounded-md shadow-sm" required>
                        <option value="">-- Choisir une cat√©gorie --</option>
                        @foreach ($categories as $category)
                            <option value="{{ $category->id }}">{{ $category->name }}</option>
                        @endforeach
                    </select>
                    <x-input-error :messages="$errors->get('document_category_id')" class="mt-2" />
                </div>
            </div>
        </div>

        {{-- Section Champs Sp√©cifiques (Dynamique) --}}
        <div x-show="selectedCategoryMetaSchema && selectedCategoryMetaSchema.fields.length > 0" class="p-6 border border-gray-200 rounded-lg bg-gray-50" style="display: none;">
            <h3 class="text-lg font-semibold leading-6 text-gray-900 mb-6">
                Champs Sp√©cifiques √† la Cat√©gorie
            </h3>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <template x-for="field in selectedCategoryMetaSchema.fields" :key="field.name">
                    <div class="form-group" x-show="field.visible">
                        <label :for="field.name" x-text="field.label" class="block font-medium text-sm text-gray-700"></label>
                        
                        <template x-if="field.type === 'string' || field.type === 'number' || field.type === 'date'">
                            <input :type="field.type" :id="field.name" :name="'extra_metadata[' + field.name + ']'" :required="field.required" :disabled="!field.editable" x-model="extraMetadata[field.name]" class="mt-1 block w-full border-gray-300 focus:border-primary-500 focus:ring-primary-500 rounded-md shadow-sm">
                        </template>
                        <template x-if="field.type === 'textarea'">
                            <textarea :id="field.name" :name="'extra_metadata[' + field.name + ']'" :required="field.required" :disabled="!field.editable" x-model="extraMetadata[field.name]" rows="3" class="mt-1 block w-full border-gray-300 focus:border-primary-500 focus:ring-primary-500 rounded-md shadow-sm"></textarea>
                        </template>
                        <template x-if="field.type === 'multiselect'">
                            <select :id="field.name" :name="'extra_metadata[' + field.name + '][]'" :required="field.required" :disabled="!field.editable" x-model="extraMetadata[field.name]" multiple :ref="'multiselect_' + field.name">
                                <template x-for="option in field.options" :key="option">
                                    <option :value="option" x-text="option"></option>
                                </template>
                            </select>
                        </template>
                        <template x-if="field.type === 'entity_select'">
                            <select :id="field.name" :name="'extra_metadata[' + field.name + ']'" :required="field.required" :disabled="!field.editable" x-model="extraMetadata[field.name]" :ref="'entity_select_' + field.name">
                                <option value="">-- S√©lectionner --</option>
                                <template x-for="option in getEntityOptions(field.entity)" :key="option.id">
                                    <option :value="option.id" x-text="option.name"></option>
                                </template>
                            </select>
                        </template>
                    </div>
                </template>
            </div>
        </div>

        {{-- Section Liaisons --}}
        <div class="p-6 border border-gray-200 rounded-lg">
            <h3 class="text-lg font-semibold leading-6 text-gray-900 mb-6">
                Lier le document √† <span class="text-sm font-normal text-gray-500">(optionnel)</span>
            </h3>
            <div class="space-y-6">
                <div>
                    <label for="linked_vehicles" class="block font-medium text-sm text-gray-700">V√©hicules li√©s</label>
                    <select id="linked_vehicles" name="linked_vehicles[]" multiple>
                        @foreach($vehicles as $vehicle)
                            <option value="{{ $vehicle->id }}" @selected(in_array($vehicle->id, old('linked_vehicles', isset($document) ? $document->vehicles->pluck('id')->toArray() : [])))>
                                {{ $vehicle->brand }} {{ $vehicle->model }} ({{ $vehicle->registration_plate }})
                            </option>
                        @endforeach
                    </select>
                </div>
                <div>
                    <label for="linked_drivers" class="block font-medium text-sm text-gray-700">Chauffeurs li√©s</label>
                    <select id="linked_drivers" name="linked_drivers[]" multiple>
                        @foreach($drivers as $driver)
                            <option value="{{ $driver->id }}" @selected(in_array($driver->id, old('linked_drivers', isset($document) ? $document->users->pluck('id')->toArray() : [])))>
                                {{ $driver->first_name }} {{ $driver->last_name }}
                            </option>
                        @endforeach
                    </select>
                </div>
                <div>
                    <label for="linked_suppliers" class="block font-medium text-sm text-gray-700">Fournisseurs li√©s</label>
                    <select id="linked_suppliers" name="linked_suppliers[]" multiple>
                        @foreach($suppliers as $supplier)
                            <option value="{{ $supplier->id }}" @selected(in_array($supplier->id, old('linked_suppliers', isset($document) ? $document->suppliers->pluck('id')->toArray() : [])))>
                                {{ $supplier->name }}
                            </option>
                        @endforeach
                    </select>
                </div>
            </div>
        </div>

        {{-- Section Dates --}}
        <div class="p-6 border border-gray-200 rounded-lg">
            <h3 class="text-lg font-semibold leading-6 text-gray-900 mb-6">
                Dates de Validit√© <span class="text-sm font-normal text-gray-500">(optionnel)</span>
            </h3>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                    <x-date-picker id="issue_date" name="issue_date" label="Date d'√©mission" :value="old('issue_date', isset($document) ? $document->issue_date : null)" />
                    <x-input-error :messages="$errors->get('issue_date')" class="mt-2" />
                </div>
                <div>
                    <x-date-picker id="expiry_date" name="expiry_date" label="Date d'expiration" :value="old('expiry_date', isset($document) ? $document->expiry_date : null)" />
                    <x-input-error :messages="$errors->get('expiry_date')" class="mt-2" />
                </div>
            </div>
        </div>

        {{-- Section Description --}}
        <div class="p-6 border border-gray-200 rounded-lg">
             <h3 class="text-lg font-semibold leading-6 text-gray-900 mb-6">
                Informations Compl√©mentaires <span class="text-sm font-normal text-gray-500">(optionnel)</span>
            </h3>
            <div>
                <x-input-label for="description" :value="__('Description')" />
                <textarea id="description" name="description" rows="4" class="mt-1 block w-full border-gray-300 focus:border-primary-500 focus:ring-primary-500 rounded-md shadow-sm">{{ old('description', isset($document) ? $document->description : '') }}</textarea>
                <x-input-error :messages="$errors->get('description')" class="mt-2" />
            </div>
        </div>

        {{-- Actions --}}
        <div class="flex items-center justify-end mt-8 pt-8 border-t border-gray-200">
            <a href="{{ route('admin.documents.index') }}" class="inline-flex items-center px-4 py-2 bg-white border border-gray-300 rounded-md font-semibold text-xs text-gray-700 uppercase tracking-widest shadow-sm hover:bg-gray-50">
                Annuler
            </a>
            <x-primary-button class="ml-4">
                <x-lucide-upload class="w-4 h-4 mr-2" />
                {{ isset($document) ? __('Mettre √† jour') : __('Importer le Document') }}
            </x-primary-button>
        </div>
    </form>
</div>

@push('scripts')
<script>
document.addEventListener('alpine:init', () => {
    Alpine.data('documentForm', (config) => ({
        // --- Data ---
        categories: config.categories,
        selectedCategoryId: config.initialCategoryId,
        selectedCategoryMetaSchema: null,
        extraMetadata: config.initialExtraMetadata,
        allVehicles: config.allVehicles,
        allDrivers: config.allDrivers,
        allSuppliers: config.allSuppliers,
        actionUrl: @json(isset($document) ? route('admin.documents.update', $document) : route('admin.documents.store')),
        tomSelectInstances: [],

        // --- Methods ---
        init() {
            this.onCategoryChange();
            this.initializeTomSelect();
        },
        
        initializeTomSelect() {
            const tomSelectConfig = {
                plugins: ['remove_button'],
                sortField: { field: 'text', direction: 'asc' }
            };
            this.tomSelectInstances.push(new TomSelect(document.getElementById('linked_vehicles'), tomSelectConfig));
            this.tomSelectInstances.push(new TomSelect(document.getElementById('linked_drivers'), tomSelectConfig));
            this.tomSelectInstances.push(new TomSelect(document.getElementById('linked_suppliers'), tomSelectConfig));
        },

        onCategoryChange() {
            const selectedCategory = Object.values(this.categories).find(cat => cat.id == this.selectedCategoryId);
            this.selectedCategoryMetaSchema = selectedCategory ? selectedCategory.meta_schema : null;
            
            // Initialize dynamic Tom Select fields after DOM update
            this.$nextTick(() => {
                if (this.selectedCategoryMetaSchema && this.selectedCategoryMetaSchema.fields) {
                    this.selectedCategoryMetaSchema.fields.forEach(field => {
                        if (field.type === 'multiselect' || field.type === 'entity_select') {
                            const el = this.$refs[field.type + '_' + field.name];
                            if (el && !el.tomselect) { // Avoid re-initializing
                                this.tomSelectInstances.push(new TomSelect(el, {
                                    plugins: ['remove_button'],
                                    sortField: { field: 'text', direction: 'asc' }
                                }));
                            }
                        }
                    });
                }
            });
        },

        getEntityOptions(entityType) {
            switch (entityType) {
                case 'vehicle': return this.allVehicles;
                case 'driver': return this.allDrivers;
                case 'supplier': return this.allSuppliers;
                default: return [];
            }
        },

        destroy() {
            this.tomSelectInstances.forEach(instance => instance.destroy());
        }
    }));
});
</script>
@endpush

--- FIN DU FICHIER : ./resources/views/admin/documents/_form.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/admin/documents/create.blade.php
////////////////////////////////////////////////////////////////

<x-app-layout>
    <x-slot name="header">
        <h2 class="font-semibold text-xl text-gray-800 leading-tight">
            {{ __('Importer un Nouveau Document') }}
        </h2>
    </x-slot>

    <div class="py-12">
        <div class="max-w-4xl mx-auto sm:px-6 lg:px-8">
            <div class="bg-white overflow-hidden shadow-sm sm:rounded-lg">
                <div class="p-6 md:p-8 border-b border-gray-200">
                    @include('admin.documents._form')
                </div>
            </div>
        </div>
    </div>
</x-app-layout>
--- FIN DU FICHIER : ./resources/views/admin/documents/create.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/admin/documents/edit.blade.php
////////////////////////////////////////////////////////////////

<x-app-layout>
    <x-slot name="header">
        <h2 class="font-semibold text-xl text-gray-800 leading-tight">
            {{ __('Modifier le Document : ') }} {{ $document->original_filename }}
        </h2>
    </x-slot>

    <div class="py-12">
        <div class="max-w-4xl mx-auto sm:px-6 lg:px-8">
            <div class="bg-white overflow-hidden shadow-sm sm:rounded-lg">
                <div class="p-6 md:p-8 border-b border-gray-200">
                    
                    <div class="mb-6 pb-6 border-b border-gray-200">
                        <p class="block text-sm font-medium text-gray-700">Fichier Actuel</p>
                        <div class="flex items-center gap-2 mt-2 text-sm text-gray-600">
                            <x-lucide-file class="w-5 h-5 text-gray-400" stroke-width="1.5"/>
                            <a href="#" class="text-primary-600 hover:underline" onclick="alert('TODO: Implement secure file download link.'); return false;">
                                {{ $document->original_filename }}
                            </a>
                            <span class="text-gray-400">({{ $document->formatted_size }})</span>
                        </div>
                        <p class="mt-2 text-xs text-gray-500">Note: Le remplacement de fichier n'est pas support√©. Pour changer le fichier, veuillez supprimer ce document et en importer un nouveau.</p>
                    </div>

                    @include('admin.documents._form', ['document' => $document])
                </div>
            </div>
        </div>
    </div>
</x-app-layout>

--- FIN DU FICHIER : ./resources/views/admin/documents/edit.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/admin/documents/index.blade.php
////////////////////////////////////////////////////////////////

<x-app-layout>
    <x-slot name="header">
        <h2 class="font-semibold text-xl text-gray-800 leading-tight">
            {{ __('Gestion des Documents') }}
        </h2>
    </x-slot>

    <div x-data="{
            showConfirmModal: false,
            modalTitle: 'Supprimer le Document',
            modalDescription: '',
            modalButtonText: 'Supprimer D√©finitivement',
            modalButtonClass: 'bg-red-600 hover:bg-red-700',
            modalIconClass: 'text-red-600 bg-red-100',
            documentToProcess: {},
            formUrl: '',

            openModal(event) {
                const button = event.currentTarget;
                this.documentToProcess = JSON.parse(button.dataset.document);
                this.formUrl = button.dataset.url;
                this.modalDescription = `√ätes-vous s√ªr de vouloir supprimer le document <strong>${this.documentToProcess.original_filename}</strong> ? Cette action est irr√©versible.`;
                this.showConfirmModal = true;
            }
        }" class="py-12">
        <div class="max-w-7xl mx-auto sm:px-6 lg:px-8">
            <div class="bg-white overflow-hidden shadow-sm sm:rounded-lg">
                <div class="p-6 text-gray-900">
                    <div class="flex justify-between items-center mb-6">
                        <h3 class="text-xl font-semibold text-gray-700">{{ __('Liste des Documents') }}</h3>
                        <div class="flex space-x-2">
                            @can('create documents')
                                <a href="{{ route('admin.documents.create') }}" class="inline-flex items-center px-4 py-2 bg-primary-600 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-primary-700">
                                    <x-lucide-upload class="w-4 h-4 mr-2" stroke-width="1.5"/>
                                    Importer
                                </a>
                            @endcan
                        </div>
                    </div>

                    <div class="overflow-x-auto border border-gray-200 rounded-lg">
                        <table class="w-full divide-y divide-gray-200">
                            <thead class="bg-gray-100">
                                <tr>
                                    <th scope="col" class="px-6 py-3 text-left text-xs font-bold text-gray-600 uppercase tracking-wider">Nom du fichier</th>
                                    <th scope="col" class="px-6 py-3 text-left text-xs font-bold text-gray-600 uppercase tracking-wider">Cat√©gorie</th>
                                    <th scope="col" class="px-6 py-3 text-left text-xs font-bold text-gray-600 uppercase tracking-wider">Taille</th>
                                    <th scope="col" class="px-6 py-3 text-left text-xs font-bold text-gray-600 uppercase tracking-wider">Date d'expiration</th>
                                    <th scope="col" class="px-6 py-3 text-left text-xs font-bold text-gray-600 uppercase tracking-wider">Import√© par</th>
                                    <th scope="col" class="px-6 py-3 text-left text-xs font-bold text-gray-600 uppercase tracking-wider">Date d'import</th>
                                    <th scope="col" class="px-6 py-3 text-right text-xs font-bold text-gray-600 uppercase tracking-wider">Actions</th>
                                </tr>
                            </thead>
                            <tbody class="bg-white divide-y divide-gray-200">
                                @forelse ($documents as $document)
                                    <tr class="hover:bg-gray-50">
                                        <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 flex items-center gap-2">
                                            <x-lucide-file class="w-5 h-5 text-gray-400" stroke-width="1.5"/>
                                            <span>{{ $document->original_filename }}</span>
                                        </td>
                                        <td class="px-6 py-4 whitespace-nowrap text-sm">
                                            <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-gray-100 text-gray-800">
                                                {{ $document->category->name ?? 'N/A' }}
                                            </span>
                                        </td>
                                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{{ $document->formatted_size }}</td>
                                        <td class="px-6 py-4 whitespace-nowrap text-sm">
                                            @if($document->expiry_date)
                                                <span class="{{ $document->expiry_date->isPast() ? 'text-red-500 font-semibold' : 'text-gray-500' }}">
                                                    {{ $document->expiry_date->format('d/m/Y') }}
                                                </span>
                                            @else
                                                <span class="text-gray-400">N/A</span>
                                            @endif
                                        </td>
                                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{{ $document->uploader->name ?? 'N/A' }}</td>
                                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{{ $document->created_at->format('d/m/Y H:i') }}</td>
                                        <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                                            <div class="flex items-center justify-end space-x-2">
                                                @can('download documents')
                                                    <a href="#" title="T√©l√©charger" class="p-2 rounded-full text-gray-400 hover:bg-primary-100 hover:text-primary-600">
                                                        <x-lucide-download class="h-5 w-5" stroke-width="1.5"/>
                                                    </a>
                                                @endcan
                                                @can('edit documents')
                                                    <a href="{{ route('admin.documents.edit', $document) }}" title="Modifier" class="p-2 rounded-full text-gray-400 hover:bg-primary-100 hover:text-primary-600">
                                                        <x-lucide-file-pen-line class="h-5 w-5" stroke-width="1.5"/>
                                                    </a>
                                                @endcan
                                                @can('delete documents')
                                                    <button type="button" @click="openModal($event)"
                                                            data-document='@json($document->only(['id', 'original_filename']))'
                                                            data-url="{{ route('admin.documents.destroy', $document) }}"
                                                            title="Supprimer"
                                                            class="p-2 rounded-full text-gray-400 hover:bg-red-100 hover:text-red-600">
                                                        <x-lucide-trash-2 class="h-5 w-5" stroke-width="1.5"/>
                                                    </button>
                                                @endcan
                                            </div>
                                        </td>
                                    </tr>
                                @empty
                                    <tr>
                                        <td colspan="7" class="px-6 py-12 text-center text-gray-500">
                                            <div class="flex flex-col items-center justify-center">
                                                <x-lucide-file-x class="w-12 h-12 text-gray-400 mb-4" />
                                                <h3 class="text-lg font-semibold text-gray-800">Aucun document trouv√©</h3>
                                                <p class="mt-1 text-sm">Commencez par importer un nouveau document.</p>
                                            </div>
                                        </td>
                                    </tr>
                                @endforelse
                            </tbody>
                        </table>
                    </div>
                    @if ($documents->hasPages())
                        <div class="mt-6">
                            {{ $documents->links() }}
                        </div>
                    @endif
                </div>
            </div>
        </div>

        {{-- Fen√™tre Modale de Confirmation --}}
        <div x-show="showConfirmModal" x-transition class="fixed inset-0 z-50 flex items-center justify-center bg-gray-900 bg-opacity-60" style="display: none;">
            <div @click.away="showConfirmModal = false" class="bg-white rounded-lg shadow-xl p-6 w-full max-w-md mx-4">
                <div class="sm:flex sm:items-start">
                    <div class="mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full sm:mx-0 sm:h-10 sm:w-10" :class="modalIconClass">
                        <x-lucide-alert-triangle class="h-6 w-6" stroke-width="1.5"/>
                    </div>
                    <div class="mt-3 text-center sm:ml-4 sm:mt-0 sm:text-left">
                        <h3 class="text-base font-semibold leading-6 text-gray-900" x-text="modalTitle"></h3>
                        <div class="mt-2">
                            <p class="text-sm text-gray-600" x-html="modalDescription"></p>
                        </div>
                    </div>
                </div>
                <div class="mt-5 sm:mt-4 sm:flex sm:flex-row-reverse">
                    <form :action="formUrl" method="POST">
                        @csrf
                        @method('DELETE')
                        <button type="submit" class="inline-flex w-full justify-center rounded-md px-4 py-2 text-sm font-semibold text-white shadow-sm sm:ml-3 sm:w-auto" :class="modalButtonClass" x-text="modalButtonText">
                        </button>
                    </form>
                    <button type="button" @click="showConfirmModal = false" class="mt-3 inline-flex w-full justify-center rounded-md bg-white px-4 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50 sm:mt-0 sm:w-auto">
                        Annuler
                    </button>
                </div>
            </div>
        </div>
    </div>
</x-app-layout>
--- FIN DU FICHIER : ./resources/views/admin/documents/index.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/admin/drivers/create.blade.php
////////////////////////////////////////////////////////////////

<x-app-layout>
    <x-slot name="header">
        <h2 class="font-semibold text-xl text-gray-800 leading-tight">
            {{ __('Ajouter un Nouveau Chauffeur') }}
        </h2>
    </x-slot>

    <div class="py-12">
        <div class="max-w-4xl mx-auto sm:px-6 lg:px-8">
            <div class="bg-white overflow-hidden shadow-sm sm:rounded-lg">
                <div class="p-8 text-gray-900" x-data="{
                    currentStep: {{ old('current_step', 1) }},
                    photoPreview: null,
                    init() {
                        new TomSelect(this.$refs.status_id, { create: false, placeholder: 'S√©lectionnez un statut...' });
                        new TomSelect(this.$refs.user_id, { create: false, placeholder: 'Rechercher un utilisateur...' });
                    },
                    updatePhotoPreview(event) {
                        const file = event.target.files[0];
                        if (file) {
                            this.photoPreview = URL.createObjectURL(file);
                        }
                    }
                }" x-init="
                    init();
                    @if ($errors->any())
                        let errors = {{ json_encode($errors->messages()) }};
                        let firstErrorStep = null;
                        const fieldToStepMap = { 'first_name': 1, 'last_name': 1, 'birth_date': 1, 'personal_phone': 1, 'address': 1, 'blood_type': 1, 'personal_email': 1, 'photo': 1, 'employee_number': 2, 'recruitment_date': 2, 'contract_end_date': 2, 'status_id': 2, 'user_id': 2, 'license_number': 3, 'license_category': 3, 'license_issue_date': 3, 'license_authority': 3, 'emergency_contact_name': 3, 'emergency_contact_phone': 3 };
                        for (const field in fieldToStepMap) {
                            if (errors.hasOwnProperty(field)) { firstErrorStep = fieldToStepMap[field]; break; }
                        }
                        if (firstErrorStep) { currentStep = firstErrorStep; }
                    @endif
                ">

                    <ol class="flex items-center w-full mb-8">
                        <li :class="currentStep >= 1 ? 'text-primary-600' : 'text-gray-500'" class="flex w-full items-center after:content-[''] after:w-full after:h-1 after:border-b after:border-4 after:inline-block" :class="currentStep > 1 ? 'after:border-primary-600' : 'after:border-gray-200'">
                            <span class="flex items-center justify-center w-10 h-10 rounded-full shrink-0" :class="currentStep >= 1 ? 'bg-primary-100' : 'bg-gray-100'">
                                <x-lucide-user-circle-2 class="w-5 h-5"/>
                            </span>
                        </li>
                        <li :class="currentStep >= 2 ? 'text-primary-600' : 'text-gray-500'" class="flex w-full items-center after:content-[''] after:w-full after:h-1 after:border-b after:border-4 after:inline-block" :class="currentStep > 2 ? 'after:border-primary-600' : 'after:border-gray-200'">
                            <span class="flex items-center justify-center w-10 h-10 rounded-full shrink-0" :class="currentStep >= 2 ? 'bg-primary-100' : 'bg-gray-100'">
                                <x-lucide-briefcase class="w-5 h-5"/>
                            </span>
                        </li>
                        <li :class="currentStep === 3 ? 'text-primary-600' : 'text-gray-500'" class="flex items-center">
                            <span class="flex items-center justify-center w-10 h-10 rounded-full shrink-0" :class="currentStep === 3 ? 'bg-primary-100' : 'bg-gray-100'">
                                <x-lucide-contact class="w-5 h-5"/>
                            </span>
                        </li>
                    </ol>

                    <form method="POST" action="{{ route('admin.drivers.store') }}" enctype="multipart/form-data">
                        @csrf
                        <input type="hidden" name="current_step" x-model="currentStep">

                        <fieldset x-show="currentStep === 1" class="border border-gray-200 p-6 rounded-lg">
                            <legend class="text-lg font-semibold text-gray-800 px-2">√âtape 1: Informations Personnelles</legend>
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mt-4">
                                <div class="md:col-span-2">
                                    <x-input-label for="photo" value="Photo" />
                                    <div class="mt-2 flex items-center space-x-4">
                                        <span class="inline-block h-20 w-20 overflow-hidden rounded-full bg-gray-100" :class="{'hidden': photoPreview}">
                                            <x-lucide-user-circle-2 class="h-full w-full text-gray-300"/>
                                        </span>
                                        <img x-show="photoPreview" :src="photoPreview" class="h-20 w-20 rounded-full object-cover">
                                        <input id="photo" name="photo" type="file" @change="updatePhotoPreview" class="block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-primary-50 file:text-primary-700 hover:file:bg-primary-100"/>
                                    </div>
                                    <x-input-error :messages="$errors->get('photo')" class="mt-2" />
                                </div>
                                <div>
                                    <x-input-label for="first_name" value="Pr√©nom" required />
                                    <x-text-input id="first_name" name="first_name" :value="old('first_name')" class="mt-1 block w-full" />
                                    <x-input-error :messages="$errors->get('first_name')" class="mt-2" />
                                </div>
                                <div>
                                    <x-input-label for="last_name" value="Nom" required />
                                    <x-text-input id="last_name" name="last_name" :value="old('last_name')" class="mt-1 block w-full" />
                                    <x-input-error :messages="$errors->get('last_name')" class="mt-2" />
                                </div>
                                <div>
                                    <x-input-label for="birth_date" value="Date de Naissance" />
                                    <x-text-input id="birth_date" type="date" name="birth_date" :value="old('birth_date')" class="mt-1 block w-full" />
                                    <x-input-error :messages="$errors->get('birth_date')" class="mt-2" />
                                </div>
                                {{-- CHAMP CORRIG√â --}}
                                <div>
                                    <x-input-label for="blood_type" value="Groupe Sanguin" />
                                    <x-text-input id="blood_type" name="blood_type" :value="old('blood_type')" placeholder="Ex: O+" class="mt-1 block w-full" />
                                    <x-input-error :messages="$errors->get('blood_type')" class="mt-2" />
                                </div>
                                <div>
                                    <x-input-label for="personal_phone" value="T√©l√©phone Personnel" />
                                    <x-text-input id="personal_phone" name="personal_phone" :value="old('personal_phone')" class="mt-1 block w-full" />
                                    <x-input-error :messages="$errors->get('personal_phone')" class="mt-2" />
                                </div>
                                {{-- CHAMP CORRIG√â --}}
                                <div>
                                    <x-input-label for="personal_email" value="Email Personnel" />
                                    <x-text-input id="personal_email" name="personal_email" type="email" :value="old('personal_email')" class="mt-1 block w-full" />
                                    <x-input-error :messages="$errors->get('personal_email')" class="mt-2" />
                                </div>
                                <div class="md:col-span-2">
                                    <x-input-label for="address" value="Adresse" />
                                    <textarea id="address" name="address" rows="3" class="block mt-1 w-full border-gray-300 focus:border-primary-500 focus:ring-primary-500 rounded-md shadow-sm">{{ old('address') }}</textarea>
                                    <x-input-error :messages="$errors->get('address')" class="mt-2" />
                                </div>
                            </div>
                        </fieldset>

                        <fieldset x-show="currentStep === 2" style="display: none;" class="border border-gray-200 p-6 rounded-lg">
                            <legend class="text-lg font-semibold text-gray-800 px-2">√âtape 2: Informations Professionnelles</legend>
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mt-4">
                                <div>
                                    <x-input-label for="employee_number" value="Matricule" />
                                    <x-text-input id="employee_number" name="employee_number" :value="old('employee_number')" class="mt-1 block w-full" />
                                    <x-input-error :messages="$errors->get('employee_number')" class="mt-2" />
                                </div>
                                <div>
                                    <x-input-label for="status_id" value="Statut" required />
                                    <select x-ref="status_id" name="status_id" id="status_id">
                                        @foreach($driverStatuses as $status)<option value="{{ $status->id }}" @selected(old('status_id') == $status->id)>{{ $status->name }}</option>@endforeach
                                    </select>
                                    <x-input-error :messages="$errors->get('status_id')" class="mt-2" />
                                </div>
                                <div>
                                    <x-input-label for="recruitment_date" value="Date de Recrutement" />
                                    <x-text-input id="recruitment_date" type="date" name="recruitment_date" :value="old('recruitment_date')" class="mt-1 block w-full" />
                                    <x-input-error :messages="$errors->get('recruitment_date')" class="mt-2" />
                                </div>
                                <div>
                                    <x-input-label for="contract_end_date" value="Date de Fin de Contrat" />
                                    <x-text-input id="contract_end_date" name="contract_end_date" :value="old('contract_end_date')" type="date" class="mt-1 block w-full"/>
                                    <x-input-error :messages="$errors->get('contract_end_date')" class="mt-2" />
                                </div>
                                <div class="md:col-span-2">
                                    <x-input-label for="user_id" value="Lier √† un Compte Utilisateur (Optionnel)" />
                                    <select x-ref="user_id" name="user_id" id="user_id">
                                         <option value="">Ne pas lier de compte</option>
                                        @foreach($linkableUsers as $user)<option value="{{ $user->id }}" @selected(old('user_id') == $user->id)>{{ $user->name }} ({{ $user->email }})</option>@endforeach
                                    </select>
                                    <x-input-error :messages="$errors->get('user_id')" class="mt-2" />
                                </div>
                            </div>
                        </fieldset>

                        <fieldset x-show="currentStep === 3" style="display: none;" class="border border-gray-200 p-6 rounded-lg">
                            <legend class="text-lg font-semibold text-gray-800 px-2">√âtape 3: Permis & Contact d'Urgence</legend>
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mt-4">
                                <div>
                                    <x-input-label for="license_number" value="Num√©ro de Permis" />
                                    <x-text-input id="license_number" name="license_number" :value="old('license_number')" class="mt-1 w-full"/>
                                    <x-input-error :messages="$errors->get('license_number')" class="mt-2" />
                                </div>
                                <div>
                                    <x-input-label for="license_category" value="Cat√©gorie(s)" />
                                    <x-text-input id="license_category" name="license_category" :value="old('license_category')" placeholder="Ex: B, C1E" class="mt-1 w-full"/>
                                    <x-input-error :messages="$errors->get('license_category')" class="mt-2" />
                                </div>
                                <div>
                                    <x-input-label for="license_issue_date" value="Date de D√©livrance" />
                                    <x-text-input id="license_issue_date" name="license_issue_date" :value="old('license_issue_date')" type="date" class="mt-1 w-full"/>
                                    <x-input-error :messages="$errors->get('license_issue_date')" class="mt-2" />
                                </div>
                                <div>
                                    <x-input-label for="license_authority" value="D√©livr√© par" />
                                    <x-text-input id="license_authority" name="license_authority" :value="old('license_authority')" class="mt-1 w-full"/>
                                    <x-input-error :messages="$errors->get('license_authority')" class="mt-2" />
                                </div>
                                <div>
                                    <x-input-label for="emergency_contact_name" value="Nom du Contact d'Urgence" />
                                    <x-text-input id="emergency_contact_name" name="emergency_contact_name" :value="old('emergency_contact_name')" class="mt-1 w-full"/>
                                    <x-input-error :messages="$errors->get('emergency_contact_name')" class="mt-2" />
                                </div>
                                <div>
                                    <x-input-label for="emergency_contact_phone" value="T√©l√©phone d'Urgence" />
                                    <x-text-input id="emergency_contact_phone" name="emergency_contact_phone" :value="old('emergency_contact_phone')" class="mt-1 w-full"/>
                                    <x-input-error :messages="$errors->get('emergency_contact_phone')" class="mt-2" />
                                </div>
                            </div>
                        </fieldset>

                        <div class="mt-8 pt-6 border-t border-gray-200 flex items-center justify-between">
                            <x-secondary-button type="button" x-show="currentStep > 1" @click="currentStep--">Pr√©c√©dent</x-secondary-button>
                            <div class="flex-grow"></div>
                            <div class="flex items-center gap-4">
                                <a href="{{ route('admin.drivers.index') }}" class="text-sm font-semibold text-gray-600 hover:text-gray-900">Annuler</a>
                                <x-primary-button type="button" x-show="currentStep < 3" @click="currentStep++">Suivant</x-primary-button>
                                <button type="submit" x-show="currentStep === 3" class="inline-flex items-center px-4 py-2 bg-green-600 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-green-700">
                                    Cr√©er le Chauffeur
                                </button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</x-app-layout>
--- FIN DU FICHIER : ./resources/views/admin/drivers/create.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/admin/drivers/edit.blade.php
////////////////////////////////////////////////////////////////

<x-app-layout>
    <x-slot name="header">
        <h2 class="font-semibold text-xl text-gray-800 leading-tight">Modifier le Chauffeur : <span class="text-primary-600">{{ $driver->first_name }} {{ $driver->last_name }}</span></h2>
    </x-slot>

    <div class="py-12">
        <div class="max-w-4xl mx-auto sm:px-6 lg:px-8">
            <div class="bg-white overflow-hidden shadow-sm sm:rounded-lg">
                <div class="p-8 text-gray-900" x-data="{
                    currentStep: {{ old('current_step', 1) }},
                    photoPreview: '{{ $driver->photo_path ? asset('storage/' . $driver->photo_path) : null }}',
                    init() {
                        const tomConfig = (selectedValue) => ({
                            create: false,
                            placeholder: 'S√©lectionnez...',
                            items: [selectedValue]
                        });
                        new TomSelect(this.$refs.status_id, tomConfig('{{ old('status_id', $driver->status_id) }}'));
                        new TomSelect(this.$refs.user_id, tomConfig('{{ old('user_id', $driver->user_id) }}'));
                    },
                    updatePhotoPreview(event) {
                        const file = event.target.files[0];
                        if (file) {
                            this.photoPreview = URL.createObjectURL(file);
                        }
                    }
                }" x-init="
                    init();
                    @if ($errors->any())
                        let errors = {{ json_encode($errors->messages()) }};
                        let firstErrorStep = null;
                        const fieldToStepMap = { 'first_name': 1, 'last_name': 1, 'birth_date': 1, 'personal_phone': 1, 'address': 1, 'blood_type': 1, 'personal_email': 1, 'photo': 1, 'employee_number': 2, 'recruitment_date': 2, 'contract_end_date': 2, 'status_id': 2, 'user_id': 2, 'license_number': 3, 'license_category': 3, 'license_issue_date': 3, 'license_authority': 3, 'emergency_contact_name': 3, 'emergency_contact_phone': 3 };
                        for (const field in fieldToStepMap) {
                            if (errors.hasOwnProperty(field)) { firstErrorStep = fieldToStepMap[field]; break; }
                        }
                        if (firstErrorStep) { currentStep = firstErrorStep; }
                    @endif
                ">

                    <ol class="flex items-center w-full mb-8">
                        <li :class="currentStep >= 1 ? 'text-primary-600' : 'text-gray-500'" class="flex w-full items-center after:content-[''] after:w-full after:h-1 after:border-b after:border-4 after:inline-block" :class="currentStep > 1 ? 'after:border-primary-600' : 'after:border-gray-200'">
                            <span class="flex items-center justify-center w-10 h-10 rounded-full shrink-0" :class="currentStep >= 1 ? 'bg-primary-100' : 'bg-gray-100'">
                                <x-lucide-user-circle-2 class="w-5 h-5"/>
                            </span>
                        </li>
                        <li :class="currentStep >= 2 ? 'text-primary-600' : 'text-gray-500'" class="flex w-full items-center after:content-[''] after:w-full after:h-1 after:border-b after:border-4 after:inline-block" :class="currentStep > 2 ? 'after:border-primary-600' : 'after:border-gray-200'">
                            <span class="flex items-center justify-center w-10 h-10 rounded-full shrink-0" :class="currentStep >= 2 ? 'bg-primary-100' : 'bg-gray-100'">
                                <x-lucide-briefcase class="w-5 h-5"/>
                            </span>
                        </li>
                        <li :class="currentStep === 3 ? 'text-primary-600' : 'text-gray-500'" class="flex items-center">
                            <span class="flex items-center justify-center w-10 h-10 rounded-full shrink-0" :class="currentStep === 3 ? 'bg-primary-100' : 'bg-gray-100'">
                                <x-lucide-contact class="w-5 h-5"/>
                            </span>
                        </li>
                    </ol>

                    <form method="POST" action="{{ route('admin.drivers.update', $driver) }}" enctype="multipart/form-data">
                        @csrf
                        @method('PUT')
                        <input type="hidden" name="current_step" x-model="currentStep">

                        <fieldset x-show="currentStep === 1" class="border border-gray-200 p-6 rounded-lg">
                             <legend class="text-lg font-semibold text-gray-800 px-2">√âtape 1: Informations Personnelles</legend>
                             <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mt-4">
                                <div class="md:col-span-2">
                                    <x-input-label for="photo" value="Photo" />
                                    <div class="mt-2 flex items-center space-x-4">
                                        <span x-show="!photoPreview" class="inline-block h-20 w-20 overflow-hidden rounded-full bg-gray-100">
                                            <x-lucide-user-circle-2 class="h-full w-full text-gray-300"/>
                                        </span>
                                        <img x-show="photoPreview" :src="photoPreview" class="h-20 w-20 rounded-full object-cover">
                                        <input id="photo" name="photo" type="file" @change="updatePhotoPreview" class="block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-primary-50 file:text-primary-700 hover:file:bg-primary-100"/>
                                    </div>
                                    <x-input-error :messages="$errors->get('photo')" class="mt-2" />
                                </div>
                                <div>
                                    <x-input-label for="first_name" value="Pr√©nom" required />
                                    <x-text-input id="first_name" name="first_name" :value="old('first_name', $driver->first_name)" class="mt-1 block w-full" />
                                    <x-input-error :messages="$errors->get('first_name')" class="mt-2" />
                                </div>
                                <div>
                                    <x-input-label for="last_name" value="Nom" required />
                                    <x-text-input id="last_name" name="last_name" :value="old('last_name', $driver->last_name)" class="mt-1 block w-full" />
                                    <x-input-error :messages="$errors->get('last_name')" class="mt-2" />
                                </div>
                                <div>
                                    <x-input-label for="birth_date" value="Date de Naissance" />
                                    <x-text-input id="birth_date" type="date" name="birth_date" :value="old('birth_date', $driver->birth_date?->format('Y-m-d'))" class="mt-1 block w-full" />
                                    <x-input-error :messages="$errors->get('birth_date')" class="mt-2" />
                                </div>
                                {{-- CHAMP CORRIG√â --}}
                                <div>
                                    <x-input-label for="blood_type" value="Groupe Sanguin" />
                                    <x-text-input id="blood_type" name="blood_type" :value="old('blood_type', $driver->blood_type)" placeholder="Ex: O+" class="mt-1 block w-full" />
                                    <x-input-error :messages="$errors->get('blood_type')" class="mt-2" />
                                </div>
                                <div>
                                    <x-input-label for="personal_phone" value="T√©l√©phone Personnel" />
                                    <x-text-input id="personal_phone" name="personal_phone" :value="old('personal_phone', $driver->personal_phone)" class="mt-1 block w-full" />
                                    <x-input-error :messages="$errors->get('personal_phone')" class="mt-2" />
                                </div>
                                {{-- CHAMP CORRIG√â --}}
                                
                                <div>
                                    <label for="personal_email" class="block font-medium text-sm text-gray-700">Email Personnelle</label>
                                    <x-text-input id="personal_email" name="personal_email" type="email" :value="old('personal_email', $driver->personal_email)" class="mt-1 w-full" />
                                    <x-input-error :messages="$errors->get('personal_email')" class="mt-2" />
                                </div>
                                <div class="md:col-span-2">
                                    <x-input-label for="address" value="Adresse" />
                                    <textarea id="address" name="address" rows="3" class="block mt-1 w-full border-gray-300 focus:border-primary-500 focus:ring-primary-500 rounded-md shadow-sm">{{ old('address', $driver->address) }}</textarea>
                                    <x-input-error :messages="$errors->get('address')" class="mt-2" />
                                </div>
                            </div>
                        </fieldset>

                        <fieldset x-show="currentStep === 2" style="display: none;" class="border border-gray-200 p-6 rounded-lg">
                             <legend class="text-lg font-semibold text-gray-800 px-2">√âtape 2: Informations Professionnelles</legend>
                             <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mt-4">
                                <div>
                                    <x-input-label for="employee_number" value="Matricule" />
                                    <x-text-input id="employee_number" name="employee_number" :value="old('employee_number', $driver->employee_number)" class="mt-1 block w-full" />
                                    <x-input-error :messages="$errors->get('employee_number')" class="mt-2" />
                                </div>
                                <div>
                                    <x-input-label for="status_id" value="Statut" required />
                                    <select x-ref="status_id" name="status_id" id="status_id">
                                        @foreach($driverStatuses as $status)<option value="{{ $status->id }}">{{ $status->name }}</option>@endforeach
                                    </select>
                                    <x-input-error :messages="$errors->get('status_id')" class="mt-2" />
                                </div>
                                <div>
                                    <x-input-label for="recruitment_date" value="Date de Recrutement" />
                                    <x-text-input id="recruitment_date" type="date" name="recruitment_date" :value="old('recruitment_date', $driver->recruitment_date?->format('Y-m-d'))" class="mt-1 block w-full" />
                                    <x-input-error :messages="$errors->get('recruitment_date')" class="mt-2" />
                                </div>
                                <div>
                                    <x-input-label for="contract_end_date" value="Date de Fin de Contrat" />
                                    <x-text-input id="contract_end_date" name="contract_end_date" :value="old('contract_end_date', $driver->contract_end_date?->format('Y-m-d'))" type="date" class="mt-1 block w-full"/>
                                    <x-input-error :messages="$errors->get('contract_end_date')" class="mt-2" />
                                </div>
                                <div class="md:col-span-2">
                                    <x-input-label for="user_id" value="Lier √† un Compte Utilisateur (Optionnel)" />
                                    <select x-ref="user_id" name="user_id" id="user_id">
                                         <option value="">Ne pas lier de compte</option>
                                        @foreach($linkableUsers as $user)<option value="{{ $user->id }}">{{ $user->name }} ({{ $user->email }})</option>@endforeach
                                    </select>
                                    <x-input-error :messages="$errors->get('user_id')" class="mt-2" />
                                </div>
                            </div>
                        </fieldset>

                        <fieldset x-show="currentStep === 3" style="display: none;" class="border border-gray-200 p-6 rounded-lg">
                             <legend class="text-lg font-semibold text-gray-800 px-2">√âtape 3: Permis & Contact d'Urgence</legend>
                             <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mt-4">
                                <div>
                                    <x-input-label for="license_number" value="Num√©ro de Permis" />
                                    <x-text-input id="license_number" name="license_number" :value="old('license_number', $driver->license_number)" class="mt-1 w-full"/>
                                    <x-input-error :messages="$errors->get('license_number')" class="mt-2" />
                                </div>
                                <div>
                                    <x-input-label for="license_category" value="Cat√©gorie(s)" />
                                    <x-text-input id="license_category" name="license_category" :value="old('license_category', $driver->license_category)" placeholder="Ex: B, C1E" class="mt-1 w-full"/>
                                    <x-input-error :messages="$errors->get('license_category')" class="mt-2" />
                                </div>
                                <div>
                                    <x-input-label for="license_issue_date" value="Date de D√©livrance" />
                                    <x-text-input id="license_issue_date" name="license_issue_date" :value="old('license_issue_date', $driver->license_issue_date?->format('Y-m-d'))" type="date" class="mt-1 w-full"/>
                                    <x-input-error :messages="$errors->get('license_issue_date')" class="mt-2" />
                                </div>
                                <div>
                                    <x-input-label for="license_authority" value="D√©livr√© par" />
                                    <x-text-input id="license_authority" name="license_authority" :value="old('license_authority', $driver->license_authority)" class="mt-1 w-full"/>
                                    <x-input-error :messages="$errors->get('license_authority')" class="mt-2" />
                                </div>
                                <div>
                                    <x-input-label for="emergency_contact_name" value="Nom du Contact d'Urgence" />
                                    <x-text-input id="emergency_contact_name" name="emergency_contact_name" :value="old('emergency_contact_name', $driver->emergency_contact_name)" class="mt-1 w-full"/>
                                    <x-input-error :messages="$errors->get('emergency_contact_name')" class="mt-2" />
                                </div>
                                <div>
                                    <x-input-label for="emergency_contact_phone" value="T√©l√©phone d'Urgence" />
                                    <x-text-input id="emergency_contact_phone" name="emergency_contact_phone" :value="old('emergency_contact_phone', $driver->emergency_contact_phone)" class="mt-1 w-full"/>
                                    <x-input-error :messages="$errors->get('emergency_contact_phone')" class="mt-2" />
                                </div>
                            </div>
                        </fieldset>

                        <div class="mt-8 pt-6 border-t border-gray-200 flex items-center justify-between">
                            <x-secondary-button type="button" x-show="currentStep > 1" @click="currentStep--">Pr√©c√©dent</x-secondary-button>
                            <div class="flex-grow"></div>
                            <div class="flex items-center gap-4">
                                <a href="{{ route('admin.drivers.index') }}" class="text-sm font-semibold text-gray-600 hover:text-gray-900">Annuler</a>
                                <x-primary-button type="button" x-show="currentStep < 3" @click="currentStep++">Suivant</x-primary-button>
                                <button type="submit" x-show="currentStep === 3" class="inline-flex items-center px-4 py-2 bg-green-600 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-green-700">
                                    Enregistrer les Modifications
                                </button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</x-app-layout>
--- FIN DU FICHIER : ./resources/views/admin/drivers/edit.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/admin/drivers/import-results.blade.php
////////////////////////////////////////////////////////////////

<x-app-layout>
    <x-slot name="header">
        <div class="flex justify-between items-center">
            <h2 class="font-semibold text-xl text-gray-800 leading-tight">
                {{ __('R√©sultats de l\'Importation des Chauffeurs') }}
            </h2>
            <a href="{{ route('admin.drivers.index') }}" class="inline-flex items-center px-3 py-1.5 bg-gray-100 border border-gray-300 rounded-md font-medium text-xs text-gray-700 uppercase tracking-widest hover:bg-gray-200 transition">
                <x-lucide-arrow-left class="h-4 w-4 mr-1"/>
                Retour √† la liste
            </a>
        </div>
    </x-slot>

    <div class="py-12">
        <div class="max-w-7xl mx-auto sm:px-6 lg:px-8">
            {{-- Informations sur l'importation --}}
            <div class="bg-white overflow-hidden shadow-sm sm:rounded-lg mb-6">
                <div class="p-6 border-b border-gray-200">
                    <div class="flex items-center">
                        <x-lucide-file-text class="h-8 w-8 text-primary-500 mr-3"/>
                        <div>
                            <h3 class="text-lg font-medium text-gray-900">D√©tails de l'importation</h3>
                            <div class="mt-1 text-sm text-gray-600">
                                <p><span class="font-medium">Fichier :</span> {{ $fileName ?? 'Fichier CSV' }}</p>
                                <p><span class="font-medium">Encodage d√©tect√© :</span> {{ ucfirst($encoding ?? 'utf8') }}</p>
                                <p><span class="font-medium">Identifiant d'importation :</span> <span class="font-mono text-xs">{{ $importId ?? 'N/A' }}</span></p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            {{-- Carte de R√©sum√© Statistique --}}
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
                <div class="bg-white overflow-hidden shadow-sm sm:rounded-lg">
                    <div class="p-6 bg-gradient-to-br from-green-50 to-green-100 border-l-4 border-green-500">
                        <div class="flex items-center">
                            <div class="p-3 rounded-full bg-green-100 bg-opacity-60">
                                <x-lucide-check-circle-2 class="h-8 w-8 text-green-600"/>
                            </div>
                            <div class="ml-4">
                                <p class="text-3xl font-bold text-green-800">{{ $successCount }}</p>
                                <p class="text-sm font-medium text-green-700">Chauffeur(s) import√©(s) avec succ√®s</p>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="bg-white overflow-hidden shadow-sm sm:rounded-lg">
                    <div class="p-6 bg-gradient-to-br from-red-50 to-red-100 border-l-4 border-red-500">
                        <div class="flex items-center">
                            <div class="p-3 rounded-full bg-red-100 bg-opacity-60">
                                <x-lucide-x-circle class="h-8 w-8 text-red-600"/>
                            </div>
                            <div class="ml-4">
                                <p class="text-3xl font-bold text-red-800">{{ count($errorRows) }}</p>
                                <p class="text-sm font-medium text-red-700">Ligne(s) en erreur</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            {{-- Section des Erreurs (si applicable) --}}
            @if (!empty($errorRows))
                <div class="bg-white overflow-hidden shadow-sm sm:rounded-lg mb-6">
                    <div class="p-6 md:p-8 text-gray-900">
                        <div class="flex items-center mb-4">
                            <x-lucide-alert-triangle class="h-6 w-6 text-amber-500 mr-2"/>
                            <h3 class="text-xl font-semibold text-gray-800">D√©tail des Lignes en Erreur</h3>
                        </div>
                        
                        <p class="text-sm text-gray-600 mb-6">
                            Les lignes suivantes n'ont pas √©t√© import√©es en raison d'erreurs. Veuillez corriger ces probl√®mes dans votre fichier CSV et r√©essayer l'importation.
                        </p>

                        <div class="overflow-x-auto border border-gray-200 rounded-lg">
                            <table class="w-full divide-y divide-gray-200">
                                <thead class="bg-gray-50">
                                    <tr>
                                        <th class="px-6 py-3 text-left text-xs font-bold text-gray-600 uppercase tracking-wider">Ligne</th>
                                        <th class="px-6 py-3 text-left text-xs font-bold text-gray-600 uppercase tracking-wider">Erreur(s)</th>
                                        <th class="px-6 py-3 text-left text-xs font-bold text-gray-600 uppercase tracking-wider">Donn√©es</th>
                                    </tr>
                                </thead>
                                <tbody class="bg-white divide-y divide-gray-200">
                                    @foreach ($errorRows as $error)
                                        <tr class="hover:bg-gray-50">
                                            <td class="px-6 py-4 whitespace-nowrap font-mono text-sm text-center">
                                                <span class="px-2 py-1 bg-gray-100 rounded-md">{{ $error['line'] }}</span>
                                            </td>
                                            <td class="px-6 py-4">
                                                <ul class="list-disc list-inside space-y-1 text-sm text-red-700">
                                                    @foreach ($error['errors'] as $message)
                                                        <li>{{ $message }}</li>
                                                    @endforeach
                                                </ul>
                                            </td>
                                            <td class="px-6 py-4">
                                                <div class="text-xs text-gray-600 max-w-md overflow-hidden">
                                                    @foreach ($error['data'] as $key => $value)
                                                        <div class="mb-1">
                                                            <span class="font-medium">{{ $key }}:</span> 
                                                            <span class="font-mono">{{ $value ?? 'NULL' }}</span>
                                                        </div>
                                                    @endforeach
                                                </div>
                                            </td>
                                        </tr>
                                    @endforeach
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            @endif

            {{-- Actions --}}
            <div class="flex items-center justify-end gap-4">
                <a href="{{ route('admin.drivers.import.show') }}" class="inline-flex items-center px-4 py-2 bg-white border border-gray-300 rounded-md font-semibold text-xs text-gray-700 uppercase tracking-widest shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 transition">
                    <x-lucide-rotate-cw class="h-4 w-4 mr-2"/>
                    Nouvelle Importation
                </a>
                <a href="{{ route('admin.drivers.index') }}" class="inline-flex items-center px-4 py-2 bg-primary-600 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 transition">
                    <x-lucide-users class="h-4 w-4 mr-2"/>
                    Voir tous les Chauffeurs
                </a>
            </div>
        </div>
    </div>
</x-app-layout>
--- FIN DU FICHIER : ./resources/views/admin/drivers/import-results.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/admin/drivers/import.blade.php
////////////////////////////////////////////////////////////////

<x-app-layout>
    <x-slot name="header">
        <h2 class="font-semibold text-xl text-gray-800 leading-tight">
            {{ __('Importer des Chauffeurs par Fichier CSV') }}
        </h2>
    </x-slot>

    <div class="py-12">
        <div class="max-w-4xl mx-auto sm:px-6 lg:px-8">
            <div class="bg-white overflow-hidden shadow-sm sm:rounded-lg">
                <div class="p-8 text-gray-900">
                    <div class="mb-6 p-4 bg-primary-50 border border-primary-200 rounded-lg">
                        
                        <div class="flex">
                            <div class="flex-shrink-0">
                                <x-lucide-info class="h-6 w-6 text-primary-500"/>
                            </div>
                            <div class="ml-3">
                                <h4 class="text-lg font-bold text-primary-800">Instructions</h4>
                                <ol class="list-decimal list-inside mt-2 text-sm text-violet-700 space-y-1">
                                    <li>T√©l√©chargez le fichier mod√®le pour voir le format exact des colonnes.</li>
                                    <li>Remplissez le fichier avec vos donn√©es. Les colonnes <strong>nom, prenom, et date_naissance</strong> sont obligatoires.</li>
                                    <li>Le format pour toutes les dates doit √™tre <strong>AAAA-MM-JJ</strong> (ex: 1990-05-25).</li>
                                    <li>Enregistrez votre fichier au format CSV (s√©parateur virgule, encodage UTF-8).</li>
                                    <li>T√©l√©versez le fichier compl√©t√© ci-dessous.</li>
                                </ol>
                            </div>
                        </div>
                    </div>

                    <form action="{{ route('admin.drivers.import.handle') }}" method="POST" enctype="multipart/form-data">
                        @csrf
                        <div>
                            <label for="csv_file" class="block font-medium text-sm text-gray-700">Votre Fichier CSV <span class="text-red-500">*</span></label>
                            <input type="file" name="csv_file" id="csv_file" class="block w-full text-sm text-gray-500 mt-1 file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-violet-50 file:text-violet-700 hover:file:bg-violet-100" required>
                            <x-input-error :messages="$errors->get('csv_file')" class="mt-2" />
                        </div>

                        <div class="mt-8 pt-6 border-t flex items-center justify-between">
                            <a href="{{ route('admin.drivers.import.template') }}" class="inline-flex items-center text-sm font-semibold text-primary-600 hover:text-primary-800">
                                <x-lucide-download class="h-5 w-5 mr-2"/>
                                T√©l√©charger le mod√®le (.csv)
                            </a>
                            <div class="flex items-center gap-4">
                                <a href="{{ route('admin.drivers.index') }}" class="text-sm font-semibold text-gray-600 hover:text-gray-900">Annuler</a>
                                <button type="submit" class="inline-flex items-center px-4 py-2 bg-primary-600 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-primary-700">
                                    Lancer l'Importation
                                </button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</x-app-layout>
--- FIN DU FICHIER : ./resources/views/admin/drivers/import.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/admin/drivers/index.blade.php
////////////////////////////////////////////////////////////////

<x-app-layout>
    <x-slot name="header">
        <h2 class="font-semibold text-xl text-gray-800 leading-tight">
            {{ __('Gestion des Chauffeurs') }}
        </h2>
    </x-slot>

    {{-- Initialisation d'Alpine.js pour g√©rer la modale dynamique --}}
    <div x-data="{
            showConfirmModal: false,
            modalAction: '', // 'archive' ou 'delete'
            modalTitle: '',
            modalDescription: '',
            modalButtonText: '',
            modalButtonClass: '',
            modalIconClass: '',
            driverToProcess: {},
            formUrl: '',

            openModal(event, action) {
                const button = event.currentTarget;
                this.driverToProcess = JSON.parse(button.dataset.driver);
                this.formUrl = button.dataset.url;
                this.modalAction = action;

                if (action === 'archive') {
                    this.modalTitle = 'Archiver le Chauffeur';
                    this.modalDescription = `√ätes-vous s√ªr de vouloir archiver le chauffeur <strong>${this.driverToProcess.first_name} ${this.driverToProcess.last_name}</strong> ? Il pourra √™tre restaur√© plus tard.`;
                    this.modalButtonText = 'Confirmer l\'Archivage';
                    this.modalButtonClass = 'bg-yellow-600 hover:bg-yellow-700';
                    this.modalIconClass = 'text-yellow-600 bg-yellow-100';
                } else if (action === 'delete') {
                    this.modalTitle = 'Suppression D√©finitive';
                    this.modalDescription = `Cette action est irr√©versible et supprimera d√©finitivement le chauffeur <strong>${this.driverToProcess.first_name} ${this.driverToProcess.last_name}</strong>. Confirmez-vous cette action ?`;
                    this.modalButtonText = 'Supprimer D√©finitivement';
                    this.modalButtonClass = 'bg-red-600 hover:bg-red-700';
                    this.modalIconClass = 'text-red-600 bg-red-100';
                }
                this.showConfirmModal = true;
            }
        }" class="py-12">
        <div class="max-w-7xl mx-auto sm:px-6 lg:px-8">
            {{-- Section des Filtres et de la Recherche --}}
            <div class="mb-6 bg-white p-4 shadow-sm sm:rounded-lg">
                <form action="{{ route('admin.drivers.index') }}" method="GET">
                    <div class="flex flex-col md:flex-row md:items-end md:space-x-4 space-y-2 md:space-y-0">
                        <div class="flex-grow">
                            <label for="search" class="block text-sm font-medium text-gray-700">Recherche</label>
                            <input type="text" name="search" id="search" value="{{ $filters['search'] ?? '' }}" placeholder="Nom, matricule, N¬∞ permis..." class="mt-1 block w-full border-gray-300 focus:border-primary-500 focus:ring-primary-500 rounded-md shadow-sm text-sm">
                        </div>
                        <div class="flex-shrink-0">
                            <label for="status_id" class="block text-sm font-medium text-gray-700">Statut</label>
                            <select name="status_id" id="status_id" class="mt-1 block w-full border-gray-300 focus:border-primary-500 focus:ring-primary-500 rounded-md shadow-sm text-sm">
                                <option value="">Tous</option>
                                @foreach($driverStatuses as $status)
                                    <option value="{{ $status->id }}" @selected(($filters['status_id'] ?? '') == $status->id)>{{ $status->name }}</option>
                                @endforeach
                            </select>
                        </div>
                        <div class="flex-shrink-0">
                            <label for="per_page" class="block text-sm font-medium text-gray-700">Par page</label>
                            <select name="per_page" id="per_page" onchange="this.form.submit()" class="mt-1 block w-full border-gray-300 focus:border-primary-500 focus:ring-primary-500 rounded-md shadow-sm text-sm">
                                @foreach(['15', '30', '50', '100'] as $value)
                                    <option value="{{ $value }}" @selected(($filters['per_page'] ?? '15') == $value)>{{ $value }}</option>
                                @endforeach
                            </select>
                        </div>
                        <div>
                            <label for="view_deleted" class="block text-sm font-medium text-gray-700">Affichage</label>
                            <select name="view_deleted" id="view_deleted" onchange="this.form.submit()" class="mt-1 block w-full border-gray-300 focus:border-primary-500 focus:ring-primary-500 rounded-md shadow-sm text-sm">
                                <option value="">Actifs</option>
                                <option value="true" @selected(request('view_deleted'))>Archiv√©s</option>
                            </select>
                        </div>
                        <div class="flex-shrink-0 flex space-x-2">
                            <button type="submit" class="inline-flex items-center justify-center w-full px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-primary-600 hover:bg-primary-700">Filtrer</button>
                            <a href="{{ route('admin.drivers.index') }}" class="inline-flex items-center justify-center w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50">Reset</a>
                        </div>
                    </div>
                </form>
            </div>

            

            <div class="bg-white overflow-hidden shadow-sm sm:rounded-lg">
                <div class="p-6 text-gray-900">
                    <div class="flex flex-col sm:flex-row justify-between items-center mb-6 gap-4">
                        <h3 class="text-xl font-semibold text-gray-700">{{ __('Liste des Chauffeurs') }}</h3>
                        <div class="flex space-x-2">
                            @can('create drivers')
                                <a href="{{ route('admin.drivers.import.show') }}" class="inline-flex items-center px-4 py-2 bg-white border border-gray-300 rounded-md font-semibold text-xs text-gray-700 uppercase tracking-widest shadow-sm hover:bg-gray-50 transition">
                                    <x-lucide-upload class="w-4 h-4 mr-2" stroke-width="1.5"/>
                                    Importer
                                </a>
                                <a href="{{ route('admin.drivers.create') }}" class="inline-flex items-center px-4 py-2 bg-primary-600 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-primary-700">
                                    <x-lucide-plus-circle class="w-4 h-4 mr-2" stroke-width="1.5"/>
                                    Ajouter
                                </a>
                            @endcan
                        </div>
                    </div>

                    <div class="overflow-x-auto border border-gray-200 rounded-lg">
                        <table class="w-full divide-y divide-gray-200">
                            <thead class="bg-gray-100">
                                <tr>
                                    <th class="px-6 py-3 text-left text-xs font-bold text-gray-600 uppercase tracking-wider">Chauffeur</th>
                                    <th class="px-6 py-3 text-left text-xs font-bold text-gray-600 uppercase tracking-wider">Matricule</th>
                                    <th class="px-6 py-3 text-left text-xs font-bold text-gray-600 uppercase tracking-wider">Statut</th>
                                    <th class="px-6 py-3 text-left text-xs font-bold text-gray-600 uppercase tracking-wider">Utilisateur Li√©</th>
                                    <th class="px-6 py-3 text-right text-xs font-bold text-gray-600 uppercase tracking-wider">Actions</th>
                                </tr>
                            </thead>
                            <tbody class="bg-white divide-y divide-gray-200">
                                @forelse ($drivers as $driver)
                                    <tr class="hover:bg-gray-50">
                                        <td class="px-6 py-2 whitespace-nowrap">
                                            <div class="flex items-center">
                                                <div class="flex-shrink-0 h-10 w-10">
                                                    @if($driver->photo_path)
                                                        <img class="h-10 w-10 rounded-full object-cover" src="{{ asset('storage/' . $driver->photo_path) }}" alt="Photo de {{ $driver->first_name }}">
                                                    @else
                                                        <span class="h-10 w-10 rounded-full bg-gray-200 flex items-center justify-center">
                                                            <x-lucide-user-circle-2 class="h-6 w-6 text-gray-400" stroke-width="1.5"/>
                                                        </span>
                                                    @endif
                                                </div>
                                                <div class="ml-4">
                                                    <div class="text-sm font-semibold text-gray-900">{{ $driver->last_name }} {{ $driver->first_name }}</div>
                                                    <div class="text-sm text-gray-500">{{ $driver->personal_phone ?? '' }}</div>
                                                </div>
                                            </div>
                                        </td>
                                        <td class="px-6 py-2 whitespace-nowrap text-sm text-gray-500 font-mono">{{ $driver->employee_number ?? '-' }}</td>
                                        <td class="px-6 py-2 whitespace-nowrap text-sm">
                                            @php
                                                $statusName = $driver->driverStatus?->name ?? 'Ind√©fini';
                                                $statusClass = 'bg-gray-100 text-gray-800'; // Default
                                                if ($driver->trashed()) {
                                                    $statusName = 'Archiv√©';
                                                    $statusClass = 'bg-gray-200 text-gray-600';
                                                } else {
                                                    switch ($statusName) {
                                                        case 'Disponible': $statusClass = 'bg-green-100 text-green-800'; break;
                                                        case 'En mission': $statusClass = 'bg-blue-100 text-blue-800'; break;
                                                        case 'En cong√©': $statusClass = 'bg-indigo-100 text-indigo-800'; break;
                                                        case 'Suspendu': $statusClass = 'bg-yellow-100 text-yellow-800'; break;
                                                        case 'Inactif':
                                                        case 'Ex-employ√©':
                                                            $statusClass = 'bg-red-100 text-red-800'; break;
                                                    }
                                                }
                                            @endphp
                                            <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full {{ $statusClass }}">{{ $statusName }}</span>
                                        </td>
                                        <td class="px-6 py-2 whitespace-nowrap text-sm text-gray-500">{{ $driver->user?->email ?? 'Non li√©' }}</td>
                                        <td class="px-6 py-2 whitespace-nowrap text-right text-sm font-medium">
                                            <div class="flex items-center justify-end space-x-2">
                                                @if ($driver->trashed())
                                                    @can('restore drivers')
                                                        <form method="POST" action="{{ route('admin.drivers.restore', $driver->id) }}">
                                                            @csrf @method('PATCH')
                                                            <button type="submit" title="Restaurer" class="p-2 rounded-full text-gray-400 hover:bg-green-100 hover:text-green-600">
                                                                <x-lucide-rotate-ccw class="h-5 w-5" stroke-width="1.5"/>
                                                            </button>
                                                        </form>
                                                    @endcan
                                                    @can('force delete drivers')
                                                        <button type="button" @click="openModal($event, 'delete')" data-driver='@json($driver->only(['id', 'first_name', 'last_name']))' data-url="{{ route('admin.drivers.force-delete', $driver->id) }}" title="Supprimer D√©finitivement" class="p-2 rounded-full text-gray-400 hover:bg-red-100 hover:text-red-600">
                                                            <x-lucide-trash-2 class="h-5 w-5" stroke-width="1.5"/>
                                                        </button>
                                                    @endcan
                                                @else
                                                    @can('edit drivers')
                                                        <a href="{{ route('admin.drivers.edit', $driver) }}" title="Modifier" class="p-2 rounded-full text-gray-400 hover:bg-primary-100 hover:text-primary-600">
                                                            <x-lucide-file-pen-line class="h-5 w-5" stroke-width="1.5"/>
                                                        </a>
                                                    @endcan
                                                    @can('delete drivers')
                                                        <button type="button" @click="openModal($event, 'archive')" data-driver='@json($driver->only(['id', 'first_name', 'last_name']))' data-url="{{ route('admin.drivers.destroy', $driver->id) }}" title="Archiver" class="p-2 rounded-full text-gray-400 hover:bg-yellow-100 hover:text-yellow-600">
                                                            <x-lucide-archive class="h-5 w-5" stroke-width="1.5"/>
                                                        </button>
                                                    @endcan
                                                @endif
                                            </div>
                                        </td>
                                    </tr>
                                @empty
                                    <tr><td colspan="5" class="px-6 py-4 text-center text-sm text-gray-500">Aucun chauffeur trouv√©.</td></tr>
                                @endforelse
                            </tbody>
                        </table>
                    </div>
                    <div class="mt-6">{{ $drivers->withQueryString()->links() }}</div>
                </div>
            </div>
        </div>

        {{-- Fen√™tre Modale de Confirmation --}}
        <div x-show="showConfirmModal" x-transition class="fixed inset-0 z-50 flex items-center justify-center bg-gray-900 bg-opacity-60" style="display: none;">
            <div @click.away="showConfirmModal = false" class="bg-white rounded-lg shadow-xl p-6 w-full max-w-md mx-4">
                <div class="sm:flex sm:items-start">
                    <div class="mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full sm:mx-0 sm:h-10 sm:w-10" :class="modalIconClass">
                        <x-lucide-alert-triangle class="h-6 w-6" stroke-width="1.5"/>
                    </div>
                    <div class="mt-3 text-center sm:ml-4 sm:mt-0 sm:text-left">
                        <h3 class="text-base font-semibold leading-6 text-gray-900" x-text="modalTitle"></h3>
                        <div class="mt-2">
                            <p class="text-sm text-gray-600" x-html="modalDescription"></p>
                        </div>
                    </div>
                </div>
                <div class="mt-5 sm:mt-4 sm:flex sm:flex-row-reverse">
                    <form :action="formUrl" method="POST">
                        @csrf
                        @method('DELETE')
                        <button type="submit" class="inline-flex w-full justify-center rounded-md px-4 py-2 text-sm font-semibold text-white shadow-sm sm:ml-3 sm:w-auto" :class="modalButtonClass" x-text="modalButtonText">
                        </button>
                    </form>
                    <button type="button" @click="showConfirmModal = false" class="mt-3 inline-flex w-full justify-center rounded-md bg-white px-4 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50 sm:mt-0 sm:w-auto">
                        Annuler
                    </button>
                </div>
            </div>
        </div>
    </div>
</x-app-layout>
--- FIN DU FICHIER : ./resources/views/admin/drivers/index.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/admin/handovers/vehicles/create.blade.php
////////////////////////////////////////////////////////////////

<x-app-layout>
   <x-slot name="header">
       <h2 class="font-semibold text-xl text-gray-800 leading-tight">
           {{ __('Nouvelle Fiche de Remise de V√©hicule') }}
       </h2>
   </x-slot>

   <div class="py-12">
       <div class="max-w-5xl mx-auto sm:px-6 lg:px-8">
           <form action="{{ route('admin.handovers.vehicles.store') }}" method="POST" class="space-y-6">
               @csrf
               <input type="hidden" name="assignment_id" value="{{ $assignment->id }}">

               <div class="bg-white p-6 shadow-sm sm:rounded-lg">
                   <h3 class="text-lg font-semibold text-gray-900 border-b border-gray-200 pb-4 mb-6">Informations G√©n√©rales</h3>
                   <div class="grid grid-cols-1 md:grid-cols-2 gap-6 text-sm">
                       <div class="p-4 border rounded-lg flex items-center space-x-4">
                           <div class="flex-shrink-0">
                               <x-lucide-user-circle-2 class="h-10 w-10 text-gray-400"/>
                           </div>
                           <div>
                               <p class="text-gray-500 font-semibold">Chauffeur</p>
                               <p class="font-bold text-gray-900">{{ $assignment->driver->first_name }} {{ $assignment->driver->last_name }}</p>
                               <p class="text-gray-600">Matricule: {{ $assignment->driver->employee_number ?? 'N/A' }}</p>
                           </div>
                       </div>
                       <div class="p-4 border rounded-lg flex items-center space-x-4">
                           <div class="flex-shrink-0">
                               <x-lucide-truck class="h-10 w-10 text-gray-400"/>
                           </div>
                           <div>
                               <p class="text-gray-500 font-semibold">V√©hicule</p>
                               <p class="font-bold text-gray-900">{{ $assignment->vehicle->brand }} {{ $assignment->vehicle->model }}</p>
                               <p class="text-gray-600 font-mono">{{ $assignment->vehicle->registration_plate }}</p>
                           </div>
                       </div>
                       <div class="p-4 bg-gray-50 rounded-md">
                           <x-input-label for="issue_date" value="Date de Remise" required />
                           <x-text-input id="issue_date" name="issue_date" type="date" class="mt-1 block w-full" :value="old('issue_date', now()->format('Y-m-d'))" required />
                           <x-input-error :messages="$errors->get('issue_date')" class="mt-2" />
                       </div>
                       <div class="p-4 bg-gray-50 rounded-md">
                            <x-input-label for="current_mileage" value="Kilom√©trage Actuel" />
                            <p class="text-lg font-semibold text-gray-800 mt-1">{{ number_format($assignment->vehicle->current_mileage, 0, ',', ' ') }} km</p>
                       </div>
                   </div>
               </div>

               <div class="bg-white p-6 shadow-sm sm:rounded-lg">
                    <h3 class="text-lg font-semibold text-gray-900 border-b border-gray-200 pb-4 mb-6">√âtat Visuel et Observations</h3>
                    <div class="flex flex-col md:flex-row gap-6">
                        <div class="flex-shrink-0 mx-auto bg-gray-100 p-2 rounded-lg shadow-inner">
                             @if($assignment->vehicle->vehicleType->name === 'Moto')
                                <img src="{{ asset('images/scooter_sketch.png') }}" alt="Croquis Scooter" class="w-32 rounded">
                            @else
                                <img src="{{ asset('images/car_sketch.png') }}" alt="Croquis Voiture" class="w-48 rounded">
                            @endif
                        </div>
                        <div class="flex-1">
                            <x-input-label for="general_observations" value="Observations sur l'√©tat ext√©rieur (rayures, bosses, etc.)" />
                            <textarea name="general_observations" id="general_observations" rows="5" class="mt-1 block w-full border-gray-300 focus:border-primary-500 focus:ring-primary-500 rounded-md shadow-sm">{{ old('general_observations') }}</textarea>
                            <x-input-error :messages="$errors->get('general_observations')" class="mt-2" />
                        </div>
                    </div>
               </div>

               <div class="bg-white p-6 shadow-sm sm:rounded-lg">
                   <h3 class="text-lg font-semibold text-gray-900 border-b border-gray-200 pb-4 mb-6">Checklist des √âquipements</h3>
                   @php
                       $isMoto = $assignment->vehicle->vehicleType->name === 'Moto';
                       $checklist = $isMoto ? [
                           'Papiers & Accessoires' => ['Carte Grise', 'Assurance', 'Carte Carburant', 'Cl√©', 'Casque', 'Top-case'],
                           '√âtat G√©n√©ral' => ['Pneu Avant', 'Pneu Arri√®re', 'Saute-vent', 'R√©troviseur Gauche', 'R√©troviseur Droit', 'Verrouillage', 'Feux avant', 'Feux arri√®res', 'Carrosserie G√©n√©rale', 'Propret√©']
                       ] : [
                           'Papiers du v√©hicule' => ['Carte Grise', 'Assurance', 'Vignette', 'Contr√¥le technique', 'Permis de circuler', 'Carte Carburant'],
                           'Accessoires Int√©rieur' => ['Triangle', 'Cric', 'Manivelle/Cl√©', 'Gilet', 'Tapis', 'Extincteur', 'Trousse de secours', 'R√©troviseur int√©rieur', 'Pare-soleil', 'Autoradio', 'Propret√©'],
                           'Pneumatiques' => ['Roue AV Gauche', 'Roue AV Droite', 'Roue AR Gauche', 'Roue AR Droite', 'Roue de Secours', 'Enjoliveurs'],
                           '√âtat Ext√©rieur' => ['Vitres', 'Pare-brise', 'R√©troviseur Gauche', 'R√©troviseur Droit', 'Verrouillage', 'Poign√©es', 'Feux avant', 'Feux arri√®res', 'Essuie-glaces', 'Carrosserie G√©n√©rale']
                       ];
                       $binaryStatuses = ['Oui', 'Non', 'N/A'];
                       $conditionStatuses = ['Bon', 'Moyen', 'Mauvais', 'N/A'];
                   @endphp

                   <div class="space-y-8">
                       @if($isMoto)
                           <div class="grid grid-cols-1 md:grid-cols-2 gap-x-8 gap-y-6">
                               @foreach($checklist as $category => $items)
                                   <div class="space-y-3">
                                       <h4 class="font-semibold text-gray-700">{{ $category }}</h4>
                                       @foreach($items as $item)
                                           @php $statusesToUse = in_array($category, ['Papiers & Accessoires']) ? $binaryStatuses : $conditionStatuses; @endphp
                                           <div class="bg-gray-50 rounded-md p-2 border border-gray-200">
                                               <x-handover-status-switcher :item="$item" :category="$category" :statuses="$statusesToUse" />
                                           </div>
                                       @endforeach
                                   </div>
                               @endforeach
                           </div>
                       @else
                           @php
                               $rows = [
                                   ['Papiers du v√©hicule', 'Pneumatiques'],
                                   ['Accessoires Int√©rieur', '√âtat Ext√©rieur']
                               ];
                           @endphp
                           @foreach($rows as $row)
                           <div class="grid grid-cols-1 md:grid-cols-2 gap-x-8">
                               @foreach($row as $categoryName)
                                   <div class="space-y-3">
                                       <h4 class="font-semibold text-gray-700">{{ $categoryName }}</h4>
                                       @foreach($checklist[$categoryName] as $item)
                                           @php $statusesToUse = in_array($categoryName, ['Papiers du v√©hicule', 'Accessoires Int√©rieur']) ? $binaryStatuses : $conditionStatuses; @endphp
                                           <div class="bg-gray-50 rounded-md p-2 border border-gray-200">
                                                <x-handover-status-switcher :item="$item" :category="$categoryName" :statuses="$statusesToUse" />
                                           </div>
                                       @endforeach
                                   </div>
                               @endforeach
                           </div>
                           @endforeach
                       @endif
                   </div>
               </div>

               <div class="flex items-center justify-end mt-8 gap-4">
                   <a href="{{ route('admin.assignments.index') }}" class="text-sm font-semibold text-gray-600 hover:text-gray-900">Annuler</a>
                   <x-primary-button>
                        <x-lucide-check-circle class="w-5 h-5 mr-2"/>
                        Cr√©er la Fiche
                   </x-primary-button>
               </div>
           </form>
       </div>
   </div>
</x-app-layout>
--- FIN DU FICHIER : ./resources/views/admin/handovers/vehicles/create.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/admin/handovers/vehicles/edit.blade.php
////////////////////////////////////////////////////////////////

<x-app-layout>
    <x-slot name="header">
        <h2 class="font-semibold text-xl text-gray-800 leading-tight">
            {{ __("Modifier la Fiche de Remise N¬∞") }} {{ $handover->id }}
        </h2>
    </x-slot>

    <div class="py-12">
        <div class="max-w-5xl mx-auto sm:px-6 lg:px-8">
            <form action="{{ route('admin.handovers.vehicles.update', $handover) }}" method="POST" class="space-y-6">
                @csrf
                @method('PUT')

                {{-- CARTE 1: INFORMATIONS G√âN√âRALES --}}
                <div class="bg-white p-6 shadow-sm sm:rounded-lg">
                    <div class="text-center mb-6">
                        <h3 class="text-3xl font-bold text-gray-900 mb-2">MODIFICATION FICHE DE REMISE</h3>
                        <p class="text-sm text-gray-500">Pour l'Affectation N¬∞ {{ $handover->assignment->id }}</p>
                    </div>

                    <div class="flex flex-col md:flex-row justify-between gap-x-8 text-sm">
                        
                        <div class="flex-grow">
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-x-8 gap-y-6 border rounded-md p-6">
                                <div>
                                    <p class="text-gray-500 font-semibold">Chauffeur</p>
                                    <p class="font-bold text-lg text-gray-900">{{ $handover->assignment->driver->first_name }} {{ $handover->assignment->driver->last_name }}</p>
                                    <p class="text-gray-600">Matricule: {{ $handover->assignment->driver->employee_number ?? 'N/A' }}</p>
                                    <p class="text-gray-600">T√©l√©phone: {{ $handover->assignment->driver->personal_phone ?? 'N/A' }}</p>
                                </div>
                                <div>
                                    <p class="text-gray-500 font-semibold">V√©hicule</p>
                                    <p class="font-bold text-lg text-gray-900">{{ $handover->assignment->vehicle->brand }} {{ $handover->assignment->vehicle->model }}</p>
                                    <p class="text-gray-600 font-mono">{{ $handover->assignment->vehicle->registration_plate }}</p>
                                    <p class="text-gray-600">Kilom√©trage (√† la remise): {{ $handover->current_mileage }} km</p>
                                </div>
                            </div>
                        </div>

                        <div class="flex-shrink-0 w-full md:w-1/3 mt-6 md:mt-0">
                             <div class="border rounded-md p-6 h-full">
                                <label for="issue_date" class="block font-medium text-sm text-gray-700">Date de Remise <span class="text-red-500">*</span></label>
                                <x-text-input id="issue_date" name="issue_date" type="date" class="mt-1 block w-full" :value="old('issue_date', $handover->issue_date->format('Y-m-d'))" required />
                                <x-input-error :messages="$errors->get('issue_date')" class="mt-2" />
                            </div>
                        </div>

                    </div>
                </div>

                {{-- CARTE 2: √âTAT VISUEL ET OBSERVATIONS --}}
                <div class="bg-white p-6 shadow-sm sm:rounded-lg">
                    <h3 class="text-lg font-semibold text-gray-900 border-b border-gray-200 pb-4 mb-6">√âtat Visuel du V√©hicule</h3>
                    <div class="flex flex-col md:flex-row gap-6 border rounded-md p-6">
                        <div class="flex-shrink-0 mx-auto bg-gray-100 p-4 rounded-md shadow-inner">
                            @if($handover->assignment->vehicle->vehicleType->name === 'Moto')
                                <img src="{{ asset('images/scooter_sketch.png') }}" alt="Croquis Scooter" class="w-32 rounded">
                            @else
                                <img src="{{ asset('images/car_sketch.png') }}" alt="Croquis Voiture" class="w-48 rounded">
                            @endif
                        </div>
                        <div class="flex-1">
                            <label for="general_observations" class="block font-medium text-sm text-gray-700">Observations sur l'√©tat ext√©rieur (rayures, bosses, etc.)</label>
                            <textarea name="general_observations" id="general_observations" rows="5" class="mt-1 block w-full border-gray-300 focus:border-violet-500 focus:ring-violet-500 rounded-md shadow-sm">{{ old('general_observations', $handover->general_observations) }}</textarea>
                            <x-input-error :messages="$errors->get('general_observations')" class="mt-2" />
                        </div>
                    </div>
                </div>

                {{-- CARTE 3: CHECKLIST D√âTAILL√âE --}}
                <div class="bg-white p-6 shadow-sm sm:rounded-lg">
                    <h3 class="text-lg font-semibold text-gray-900 border-b border-gray-200 pb-4 mb-6">Checklist des √âquipements</h3>
                    @php
                        $isMoto = $handover->assignment->vehicle->vehicleType->name === 'Moto';
                        // Important: Utiliser des cl√©s qui matchent le slug dans le contr√¥leur (ex: 'Papiers_&_Accessoires')
                        $checklistConfig = $isMoto ? [
                            'Papiers_&_Accessoires' => ['Carte Grise', 'Assurance', 'Carte Carburant', 'Cl√©', 'Casque', 'Top-case'],
                            '√âtat_G√©n√©ral' => ['Pneu Avant', 'Pneu Arri√®re', 'Saute-vent', 'R√©troviseur Gauche', 'R√©troviseur Droit', 'Verrouillage', 'Feux avant', 'Feux arri√®res', 'Carrosserie G√©n√©rale', 'Propret√©']
                        ] : [
                            'Papiers_du_v√©hicule' => ['Carte Grise', 'Assurance', 'Vignette', 'Contr√¥le technique', 'Permis de circuler', 'Carte Carburant'],
                            'Accessoires_Int√©rieur' => ['Triangle', 'Cric', 'Manivelle/Cl√©', 'Gilet', 'Tapis', 'Extincteur', 'Trousse de secours', 'R√©troviseur int√©rieur', 'Pare-soleil', 'Autoradio', 'Propret√©'],
                            'Pneumatiques' => ['Roue AV Gauche', 'Roue AV Droite', 'Roue AR Gauche', 'Roue AR Droite', 'Roue de Secours', 'Enjoliveurs'],
                            '√âtat_Ext√©rieur' => ['Vitres', 'Pare-brise', 'R√©troviseur Gauche', 'R√©troviseur Droit', 'Verrouillage', 'Poign√©es', 'Feux avant', 'Feux arri√®res', 'Essuie-glaces', 'Carrosserie G√©n√©rale']
                        ];
                        $binaryStatuses = ['Oui', 'Non', 'N/A'];
                        $conditionStatuses = ['Bon', 'Moyen', 'Mauvais', 'N/A'];
                    @endphp

                    @if($isMoto)
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                             @foreach($checklistConfig as $categoryKey => $items)
                                <div class="bg-gray-50 rounded-md p-4 border border-gray-200">
                                    <h4 class="font-semibold text-gray-700 mb-3">{{ str_replace('_', ' ', $categoryKey) }}</h4>
                                    <div class="space-y-2">
                                        @foreach($items as $item)
                                            @php
                                                $statusesToUse = $categoryKey === 'Papiers_&_Accessoires' ? $binaryStatuses : $conditionStatuses;
                                                $itemKey = Str::slug($item, '_');
                                                $currentStatus = $detailsMap->get($categoryKey . '.' . $itemKey);
                                            @endphp
                                            <div class="bg-white rounded-md shadow-sm p-2">
                                                <x-handover-status-switcher :item="$item" :category="$categoryKey" :statuses="$statusesToUse" :currentStatus="$currentStatus" />
                                            </div>
                                        @endforeach
                                    </div>
                                </div>
                            @endforeach
                        </div>
                    @else
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                            <div class="space-y-6">
                                @foreach(['Papiers_du_v√©hicule', 'Accessoires_Int√©rieur'] as $categoryKey)
                                <div class="bg-gray-50 rounded-md p-4 border border-gray-200">
                                    <h4 class="font-semibold text-gray-700 mb-3">{{ str_replace('_', ' ', $categoryKey) }}</h4>
                                    <div class="space-y-2">
                                        @foreach($checklistConfig[$categoryKey] as $item)
                                            @php
                                                $itemKey = Str::slug($item, '_');
                                                $currentStatus = $detailsMap->get($categoryKey . '.' . $itemKey);
                                            @endphp
                                            <div class="bg-white rounded-md shadow-sm p-2">
                                                 <x-handover-status-switcher :item="$item" :category="$categoryKey" :statuses="$binaryStatuses" :currentStatus="$currentStatus" />
                                            </div>
                                        @endforeach
                                    </div>
                                </div>
                                @endforeach
                            </div>

                            <div class="space-y-6">
                                @foreach(['Pneumatiques', '√âtat_Ext√©rieur'] as $categoryKey)
                                <div class="bg-gray-50 rounded-md p-4 border border-gray-200">
                                    <h4 class="font-semibold text-gray-700 mb-3">{{ str_replace('_', ' ', $categoryKey) }}</h4>
                                    <div class="space-y-2">
                                        @foreach($checklistConfig[$categoryKey] as $item)
                                             @php
                                                $itemKey = Str::slug($item, '_');
                                                $currentStatus = $detailsMap->get($categoryKey . '.' . $itemKey);
                                            @endphp
                                            <div class="bg-white rounded-md shadow-sm p-2">
                                                 <x-handover-status-switcher :item="$item" :category="$categoryKey" :statuses="$conditionStatuses" :currentStatus="$currentStatus" />
                                            </div>
                                        @endforeach
                                    </div>
                                </div>
                                @endforeach
                            </div>
                        </div>
                    @endif
                </div>

                <div class="bg-white p-6 shadow-sm sm:rounded-lg">
                    <div class="flex items-center justify-end mt-8 gap-4 border-t border-gray-200 pt-6">
                        <a href="{{ route('admin.handovers.vehicles.show', $handover) }}" class="text-sm font-semibold text-gray-600 hover:text-gray-900">Annuler</a>
                        <button type="submit" class="inline-flex items-center px-6 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-violet-600 hover:bg-violet-700">
                            Mettre √† jour la Fiche
                        </button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</x-app-layout>
--- FIN DU FICHIER : ./resources/views/admin/handovers/vehicles/edit.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/admin/handovers/vehicles/pdf.blade.php
////////////////////////////////////////////////////////////////

<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Fiche de Remise N¬∞ {{ $handoverForm->id }}</title>
    <style>
        /* Reset et Styles de Base */
        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
        }
        body {
            font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;
            font-size: 10pt;
            color: #333;
            background-color: #fff;
            -webkit-print-color-adjust: exact;
            print-color-adjust: exact;
        }
        #print-area {
            width: 210mm;
            min-height: 297mm;
            padding: 15mm;
            margin: 0 auto;
            display: flex;
            flex-direction: column;
        }
        h1, h2, h3 {
            font-weight: bold;
            color: #000;
        }
        h1 { font-size: 20pt; margin-bottom: 5mm; }
        h2 { font-size: 14pt; margin-bottom: 4mm; border-bottom: 1px solid #eee; padding-bottom: 2mm; }
        h3 { font-size: 11pt; margin-bottom: 2mm; color: #444; }

        /* En-t√™te */
        header {
            border-bottom: 2px solid #000;
            padding-bottom: 5mm;
        }
        header .header-details {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
        }
        header .meta {
            font-size: 9pt;
            color: #666;
        }
        header .company-info p, header .document-info p {
            margin: 0;
        }
        header .company-info {
            font-weight: bold;
            font-size: 12pt;
        }
        header .document-info {
            text-align: right;
        }

        /* Contenu Principal */
        main {
            flex-grow: 1;
            margin-top: 8mm;
        }

        /* Section des Parties (Conducteur/V√©hicule) */
        #parties {
            display: flex;
            justify-content: space-between;
            background-color: #f8f9fa;
            padding: 4mm;
            border-radius: 4px;
            border: 1px solid #dee2e6;
        }
        .party-info { width: 48%; }
        .party-info .name { font-weight: bold; font-size: 11pt; }
        .party-info .role { font-size: 8pt; color: #555; text-transform: uppercase; margin-bottom: 1mm; }
        .party-info .contact { font-size: 9pt; color: #666; }
        .party-info.vehicle { text-align: right; }

        /* Section d'Inspection */
        #inspection {
            margin-top: 8mm;
            display: flex;
            gap: 8mm;
            align-items: flex-start;
        }
        .visuals { flex: 1; }
        .visuals .content {
            display: flex;
            gap: 5mm;
            border: 1px solid #dee2e6;
            padding: 4mm;
            border-radius: 4px;
        }
        .sketch {
            flex: 0 0 45%;
            text-align: center;
        }
        .sketch img {
            max-width: 100%;
            border: 1px solid #ccc;
        }
        .sketch .caption {
            font-size: 8pt;
            color: #777;
            margin-top: 2mm;
        }
        .observations { flex: 1; }
        .observations strong { font-size: 10pt; }
        .observation-text {
            background-color: #f8f9fa;
            padding: 3mm;
            border-radius: 3px;
            min-height: 40mm;
            font-size: 9pt;
            white-space: pre-wrap;
            margin-top: 1mm;
            border: 1px solid #e9ecef;
        }

        .checklist { flex: 1; }
        .checklist .categories { column-count: 1; }
        .checklist .category {
            break-inside: avoid;
            margin-bottom: 5mm;
        }
        .checklist ul { list-style: none; }
        .checklist li {
            display: flex;
            justify-content: space-between;
            padding: 1.5mm 0;
            border-bottom: 1px dotted #ccc;
        }
        .checklist .item { color: #333; }
        .checklist .status { font-weight: bold; color: #000; }

        /* Pied de page */
        footer {
            margin-top: auto;
            padding-top: 10mm;
        }
        .signatures {
            display: flex;
            justify-content: space-between;
            text-align: center;
        }
        .signature-box {
            width: 30%;
            padding-top: 5mm;
            border-top: 1.5px solid #000;
        }
        .signature-box .name {
            font-weight: bold;
            margin-bottom: 1mm;
            min-height: 12pt;
        }
        .signature-box .role {
            font-size: 8pt;
            color: #666;
        }

        /* Media print pour ajustements fins */
        @media print {
            body {
                background-color: white;
            }
            #print-area {
                margin: 0;
                padding: 10mm; /* Marges d'impression */
                box-shadow: none;
                width: 100%;
                height: auto;
                min-height: 0;
            }
        }
    </style>
</head>
<body>

    {{-- Ce conteneur repr√©sente la page A4 et contient tout le contenu √† imprimer. --}}
    <div id="print-area">

        <header>
            <h1>FICHE DE REMISE V√âHICULE</h1>
            <div class="header-details">
                <div class="company-info">
                    <p>{{ $handoverForm->assignment->organization->name }}</p>
                    <p class="meta">Affectation N¬∞: {{ $handoverForm->assignment->id }}</p>
                </div>
                <div class="document-info">
                    <p class="meta">Document g√©n√©r√© le {{ now()->format('d/m/Y') }}</p>
                </div>
            </div>
        </header>

        <main>
            <section id="parties">
                <div class="party-info driver">
                    <p class="name">{{ $handoverForm->assignment->driver->first_name }} {{ $handoverForm->assignment->driver->last_name }}</p>
                    <p class="role">Conducteur</p>
                    <p class="contact">{{ $handoverForm->assignment->driver->personal_phone ?? 'N/A' }}</p>
                </div>
                <div class="party-info vehicle">
                    <p class="name">{{ $handoverForm->assignment->vehicle->brand }} {{ $handoverForm->assignment->vehicle->model }} ({{ $handoverForm->assignment->vehicle->registration_plate }})</p>
                    <p class="role">V√©hicule</p>
                    <p class="contact">Remis le: {{ $handoverForm->issue_date->format('d/m/Y') }} | {{ number_format($handoverForm->current_mileage, 0, ',', ' ') }} km</p>
                </div>
            </section>

            <section id="inspection">
                <div class="visuals">
                    <h2>√âtat Visuel et Observations</h2>
                    <div class="content">
                        <div class="sketch">
                            @php
                                // La conversion en base64 se fera dans le contr√¥leur
                                $sketchAsset = $handoverForm->assignment->vehicle->vehicleType->name === 'Moto' ? 'images/scooter_sketch.png' : 'images/car_sketch.png';
                            @endphp
                            <img src="{{ $vehicle_sketch_base64 ?? '' }}" alt="Croquis du v√©hicule">
                            <p class="caption">Cocher les d√©fauts constat√©s</p>
                        </div>
                        <div class="observations">
                            <strong>Observations g√©n√©rales:</strong>
                            <p class="observation-text">{{ $handoverForm->general_observations ?: 'Aucune observation particuli√®re.' }}</p>
                        </div>
                    </div>
                </div>

                <div class="checklist">
                    <h2>Checklist de Contr√¥le</h2>
                    <div class="categories">
                    @foreach($checklist as $category => $items)
                        <div class="category">
                            <h3>{{ $category }}</h3>
                            <ul>
                            @foreach($items as $detail)
                                <li>
                                    <span class="item">{{ $detail->item }}</span>
                                    <span class="status">{{ $detail->status }}</span>
                                </li>
                            @endforeach
                            </ul>
                        </div>
                    @endforeach
                    </div>
                </div>
            </section>
        </main>

        <footer>
            <div class="signatures">
                <div class="signature-box">
                    <p class="name">{{ $handoverForm->assignment->driver->first_name }} {{ $handoverForm->assignment->driver->last_name }}</p>
                    <p class="role">(Chauffeur)</p>
                </div>
                <div class="signature-box">
                    <p class="name">(Nom & Pr√©nom)</p>
                    <p class="role">(Responsable Hi√©rarchique)</p>
                </div>
                <div class="signature-box">
                    <p class="name">(Nom & Pr√©nom)</p>
                    <p class="role">(Responsable Parc)</p>
                </div>
            </div>
        </footer>

    </div>

</body>
</html>

--- FIN DU FICHIER : ./resources/views/admin/handovers/vehicles/pdf.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/admin/handovers/vehicles/pdf.blade.php:Zone.Identifier
////////////////////////////////////////////////////////////////


--- FIN DU FICHIER : ./resources/views/admin/handovers/vehicles/pdf.blade.php:Zone.Identifier ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/admin/handovers/vehicles/show.blade.php
////////////////////////////////////////////////////////////////

<x-app-layout>
    {{-- Le header contient les boutons d'action, qui seront masqu√©s √† l'impression --}}
    <x-slot name="header">
    <div class="flex justify-between items-center">
        <h2 class="font-semibold text-xl text-gray-800 leading-tight">
            Aper√ßu de la Fiche de Remise N¬∞ {{ $handoverForm->id }}
        </h2>
        <div class="space-x-2">
            <a href="{{ route('admin.handovers.vehicles.edit', $handoverForm) }}" class="inline-flex items-center px-4 py-2 bg-white border border-gray-300 rounded-md font-semibold text-xs text-gray-700 uppercase tracking-widest shadow-sm hover:bg-gray-50">
                <x-lucide-file-pen-line class="h-4 w-4 mr-2"/>
                Modifier
            </a>
            {{-- Le bouton est maintenant un lien vers notre nouvelle route --}}
            <a href="{{ route('admin.handovers.vehicles.downloadPdf', $handoverForm) }}" class="inline-flex items-center px-4 py-2 bg-primary-600 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-primary-700">
                <x-lucide-download class="h-4 w-4 mr-2"/>
                T√©l√©charger PDF
            </a>
        </div>
    </div>
</x-slot>

    {{-- Le conteneur principal avec un fond gris pour l'aper√ßu √† l'√©cran --}}
    <div class="py-12 bg-gray-200 print:bg-white">
        
        {{-- Le conteneur #print-area simule la page A4 et contient tout ce qui doit √™tre imprim√© --}}
        <div id="print-area" class="max-w-[210mm] min-h-[297mm] mx-auto bg-white shadow-lg p-10 print:p-0 print:shadow-none flex flex-col">

            <main class="flex-grow">
                <header class="flex justify-between items-start pb-4 border-b-2 border-black">
                    <div>
                        <h1 class="text-2xl font-bold text-black">FICHE DE REMISE V√âHICULE</h1>
                        <p class="text-sm text-gray-600">Affectation N¬∞: {{ $handoverForm->assignment->id }}</p>
                    </div>
                    <div class="text-right">
                        <p class="font-semibold text-lg">{{ $handoverForm->assignment->organization->name }}</p>
                        <p class="text-xs text-gray-500">Document g√©n√©r√© le {{ now()->format('d/m/Y') }}</p>
                    </div>
                </header>

                <section class="mt-6 grid grid-cols-2 gap-x-8 text-sm">
                    {{-- Colonne de gauche --}}
                    <div>
                        <p class="font-bold">{{ $handoverForm->assignment->driver->first_name }} {{ $handoverForm->assignment->driver->last_name }}</p>
                        <p class="text-gray-600">{{ $handoverForm->assignment->driver->personal_phone ?? 'N/A' }}</p>
                    </div>
                    {{-- Colonne de droite --}}
                    <div class="text-right">
                        <p class="text-gray-600 mt-2">Remis le: {{ $handoverForm->issue_date->format('d/m/Y') }}</p>
                        <p class="font-bold">{{ $handoverForm->assignment->vehicle->brand }} {{ $handoverForm->assignment->vehicle->model }} ({{ $handoverForm->assignment->vehicle->registration_plate }})</p>
                        <p class="text-gray-600">Kilom√©trage: {{ number_format($handoverForm->current_mileage, 0, ',', ' ') }} km</p>
                        
                    </div>
                </section>


                <section class="mt-6">
                    <h2 class="text-base font-bold mb-3 text-gray-800 uppercase tracking-wider border-b pb-1">√âtat Visuel et Observations</h2>
                    <div class="flex gap-6 p-2 border rounded-lg">
                        <div class="w-1/3 flex-shrink-0 text-center self-center">
                            @php
                                $sketchAsset = $handoverForm->assignment->vehicle->vehicleType->name === 'Moto' ? 'images/scooter_sketch.png' : 'images/car_sketch.png';
                            @endphp
                            <img src="{{ asset($sketchAsset) }}" alt="Croquis" class="border mx-auto max-w-full">
                            <p class="text-xs text-gray-500 mt-2">Cocher les d√©fauts constat√©s</p>
                        </div>
                        <div class="w-2/3">
                            <strong>Observations g√©n√©rales:</strong>
                            <p class="text-gray-700 p-2 bg-gray-50 min-h-[120px] mt-1 border rounded whitespace-pre-wrap text-sm">{{ $handoverForm->general_observations ?: 'Aucune observation particuli√®re.' }}</p>
                        </div>
                    </div>
                </section>

                <section class="mt-6">
                    <h2 class="text-base font-bold mb-3 text-gray-800 uppercase tracking-wider border-b pb-1">Checklist de Contr√¥le</h2>
                    <div class="space-y-4 text-xs">
                        @php
                            $isMoto = $handoverForm->assignment->vehicle->vehicleType->name === 'Moto';
                            $rows = $isMoto ? [
                                ['Papiers & Accessoires', '√âtat G√©n√©ral']
                            ] : [
                                ['Papiers du v√©hicule', 'Pneumatiques'],
                                ['Accessoires Int√©rieur', '√âtat Ext√©rieur']
                            ];
                        @endphp

                        @foreach($rows as $row)
                        <div class="grid grid-cols-2 gap-x-8">
                            @foreach($row as $categoryName)
                                @if(isset($checklist[$categoryName]))
                                <div class="break-inside-avoid">
                                    <h3 class="font-semibold text-gray-700 mb-2 border-b">{{ $categoryName }}</h3>
                                    <div class="space-y-1">
                                    @foreach($checklist[$categoryName] as $detail)
                                        <div class="flex justify-between border-b border-dotted">
                                            <span>{{ $detail->item }}</span>
                                            <span class="font-bold">{{ $detail->status }}</span>
                                        </div>
                                    @endforeach
                                    </div>
                                </div>
                                @endif
                            @endforeach
                        </div>
                        @endforeach
                    </div>
                </section>
            </main>

            <footer class="mt-auto pt-12">
                <div class="grid grid-cols-3 gap-12">
                    <div class="border-t-2 border-black pt-2 text-center text-sm">
                        <p class="font-semibold">{{ $handoverForm->assignment->driver->first_name }} {{ $handoverForm->assignment->driver->last_name }}</p>
                        <p class="text-xs text-gray-600">(Chauffeur)</p>
                    </div>
                    <div class="border-t-2 border-black pt-2 text-center text-sm">
                        <p class="font-semibold">(Nom & Pr√©nom)</p>
                        <p class="text-xs text-gray-600">(Responsable Hi√©rarchique)</p>
                    </div>
                    <div class="border-t-2 border-black pt-2 text-center text-sm">
                        <p class="font-semibold">(Nom & Pr√©nom)</p>
                        <p class="text-xs text-gray-600">(Responsable Parc)</p>
                    </div>
                </div>
            </footer>

        </div>
    </div>

    {{-- /////////// SECTION CSS CORRIG√âE /////////// --}}
    <style>
        @media print {
            body {
                background-color: white !important;
                -webkit-print-color-adjust: exact; /* For Chrome, Safari */
                print-color-adjust: exact; /* For Firefox */
            }

            /* 1. Rendre tout invisible par d√©faut */
            body * {
                visibility: hidden;
            }

            /* 2. Rendre la zone d'impression et son contenu visibles */
            #print-area, #print-area * {
                visibility: visible;
            }

            /* 3. Positionner la zone d'impression pour qu'elle occupe toute la page */
            #print-area {
                position: absolute;
                left: 0;
                top: 0;
                width: 100%;
                height: auto;
                padding: 10mm; /* Marges d'impression r√©duites */
                margin: 0;
                box-shadow: none;
                font-size: 10pt;
            }

            /* Classes utilitaires pour l'impression */
            .print\:hidden {
                display: none !important;
            }
            .break-inside-avoid {
                break-inside: avoid;
            }
        }
    </style>
</x-app-layout>
--- FIN DU FICHIER : ./resources/views/admin/handovers/vehicles/show.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/admin/maintenance/dashboard.blade.php
////////////////////////////////////////////////////////////////

<x-app-layout>
    <x-slot name="header">
        <h2 class="font-semibold text-xl text-gray-800 leading-tight">
            {{ __('Tableau de Bord de la Maintenance') }}
        </h2>
    </x-slot>

    <div class="py-12">
        <div class="max-w-7xl mx-auto sm:px-6 lg:px-8">

            {{-- SECTION DES STATISTIQUES CL√âS --}}
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-6">
                {{-- Carte √âtat de la Flotte --}}
                <div class="bg-white overflow-hidden shadow-sm rounded-lg col-span-1 md:col-span-2 p-6">
                    <h3 class="text-lg font-semibold text-gray-800 mb-4">√âtat Actuel de la Flotte</h3>
                    <div id="fleet-status-chart"></div>
                </div>
                {{-- Cartes KPI --}}
                <div class="bg-white overflow-hidden shadow-sm rounded-lg p-6 flex flex-col justify-center">
                    <h4 class="text-sm font-medium text-gray-500">Maintenance Urgente</h4>
                    <p class="mt-1 text-3xl font-semibold text-orange-600">{{ $urgentPlans->count() }}</p>
                    <p class="text-xs text-gray-500">Plans n√©cessitant une attention</p>
                </div>
                 <div class="bg-white overflow-hidden shadow-sm rounded-lg p-6 flex flex-col justify-center">
                    <h4 class="text-sm font-medium text-gray-500">Total V√©hicules</h4>
                    <p class="mt-1 text-3xl font-semibold text-primary-600">{{ $vehicleStats->sum() }}</p>
                    <p class="text-xs text-gray-500">actifs dans la flotte</p>
                </div>
            </div>

            {{-- SECTION DES JAUGES D'URGENCE --}}
            <div class="bg-white overflow-hidden shadow-sm sm:rounded-lg">
                <div class="p-6 text-gray-900">
                    <h3 class="text-xl font-semibold text-gray-700 mb-4">√âch√©ances de Maintenance Prioritaires</h3>
                    @if($urgentPlans->isEmpty())
                        <div class="text-center py-8 text-gray-500">Aucune maintenance urgente √† signaler.</div>
                    @else
                        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                            @foreach($urgentPlans as $plan)
                                <div class="border rounded-lg p-4 flex flex-col">
                                    <div class="text-center">
                                        {{-- Placeholder pour la jauge ApexCharts --}}
                                        <div id="gauge-{{ $plan['id'] }}"></div>
                                    </div>
                                    <div class="mt-2 text-center">
                                        <p class="font-semibold text-gray-800">{{ $plan['vehicle_name'] }}</p>
                                        <p class="text-sm text-gray-600">{{ $plan['maintenance_type'] }}</p>
                                        <p class="text-xs font-mono text-gray-500">{{ $plan['plate'] }}</p>
                                        <p class="mt-2 text-sm font-bold {{ $plan['urgency_percent'] >= 90 ? 'text-red-600' : 'text-gray-700' }}">
                                            √âch√©ance : {{ $plan['next_due'] }}
                                        </p>
                                    </div>
                                </div>
                            @endforeach
                        </div>
                    @endif
                </div>
            </div>

        </div>
    </div>

    @push('scripts')
    <script>
    document.addEventListener('DOMContentLoaded', function() {
        if (window.ApexCharts) {
            // --- Configuration du Graphique Circulaire (Donut) ---
            const fleetStatusData = @json($vehicleStats);
            const donutOptions = {
                series: Object.values(fleetStatusData),
                labels: Object.keys(fleetStatusData),
                chart: { type: 'donut', height: 250 },
                colors: ['#10B981', '#F59E0B', '#3B82F6', '#EF4444', '#6B7280'], // Vert, Orange, Bleu, Rouge, Gris
                legend: { position: 'bottom' },
                responsive: [{ breakpoint: 480, options: { chart: { width: 200 }, legend: { position: 'bottom' } } }]
            };
            new ApexCharts(document.querySelector("#fleet-status-chart"), donutOptions).render();

            // --- Configuration des Jauges Radiales ---
            const urgentPlansData = @json($urgentPlans);
            urgentPlansData.forEach(plan => {
                const gaugeOptions = {
                    series: [plan.urgency_percent],
                    chart: { type: 'radialBar', height: 200, sparkline: { enabled: true } },
                    plotOptions: {
                        radialBar: {
                            startAngle: -90,
                            endAngle: 90,
                            hollow: { margin: 5, size: '60%' },
                            track: { background: '#e7e7e7', strokeWidth: '97%' },
                            dataLabels: {
                                name: { show: false },
                                value: { offsetY: -2, fontSize: '22px' }
                            }
                        }
                    },
                    grid: { padding: { top: -10 } },
                    fill: {
                        type: 'gradient',
                        gradient: {
                            shade: 'light',
                            type: 'horizontal',
                            shadeIntensity: 0.5,
                            gradientToColors: [plan.urgency_percent > 85 ? '#EF4444' : '#F59E0B'], // Rouge si > 85%, sinon Orange
                            inverseColors: false,
                            opacityFrom: 1,
                            opacityTo: 1,
                            stops: [0, 100]
                        },
                    },
                    labels: ['Progression'],
                };
                new ApexCharts(document.querySelector(`#gauge-${plan.id}`), gaugeOptions).render();
            });
        }
    });
    </script>
    @endpush
</x-app-layout>
--- FIN DU FICHIER : ./resources/views/admin/maintenance/dashboard.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/admin/maintenance/plans/create.blade.php
////////////////////////////////////////////////////////////////

<x-app-layout>
    <x-slot name="header">
        <h2 class="font-semibold text-xl text-gray-800 leading-tight">
            {{ __('Programmer un Plan de Maintenance') }}
        </h2>
    </x-slot>

    <div class="py-12">
        <div class="max-w-4xl mx-auto sm:px-6 lg:px-8">
            <div class="bg-white overflow-hidden shadow-sm sm:rounded-lg">
                <script>
                    // On pr√©pare les donn√©es PHP pour les rendre accessibles √† notre script Alpine.js
                    const vehiclesData = @json($vehicles->keyBy('id')->map->only('current_mileage'));
                    const recurrenceUnitsData = @json($recurrenceUnits);
                </script>

                <div class="p-8 text-gray-900"
                     x-data="{
                        selectedVehicleId: '{{ old('vehicle_id') }}',
                        selectedRecurrenceUnitId: '{{ old('recurrence_unit_id') }}',
                        recurrenceValue: {{ old('recurrence_value', 10000) }},
                        currentMileageText: 'N/A',
                        recurrenceUnitName: '',

                        init() {
                            this.updateAllDisplays();
                            // Initialisation des s√©lecteurs TomSelect
                            let tomVehicle = new TomSelect('#select-vehicle', {create: false});
                            let tomMaintenance = new TomSelect('#select-maintenance-type', {create: false});

                            // Synchroniser Alpine avec TomSelect pour les v√©hicules
                            tomVehicle.on('change', (value) => { this.selectedVehicleId = value; this.updateAllDisplays(); });
                            if(this.selectedVehicleId) { tomVehicle.setValue(this.selectedVehicleId, true); }
                        },
                        updateAllDisplays() {
                            this.updateMileageDisplay();
                            this.updateRecurrenceUnitNameDisplay();
                            this.calculateAndSetDueDate();
                        },
                        updateMileageDisplay() {
                            const vehicle = vehiclesData[this.selectedVehicleId];
                            this.currentMileageText = vehicle ? new Intl.NumberFormat('fr-FR').format(vehicle.current_mileage) + ' km' : 'N/A';
                        },
                        updateRecurrenceUnitNameDisplay() {
                            const unit = recurrenceUnitsData.find(u => u.id == this.selectedRecurrenceUnitId);
                            this.recurrenceUnitName = unit ? unit.name : '';
                        },
                        calculateAndSetDueDate() {
                            if (this.recurrenceUnitName === 'Kilom√®tres') {
                                const vehicle = vehiclesData[this.selectedVehicleId];
                                const mileageInput = document.getElementById('next_due_mileage');
                                if (vehicle && mileageInput && this.recurrenceValue > 0) {
                                    mileageInput.value = parseInt(vehicle.current_mileage) + parseInt(this.recurrenceValue);
                                }
                            }
                        }
                     }"
                     x-init="init()">

                    <h3 class="text-xl font-semibold text-gray-700 mb-6">Nouveau Plan de Maintenance Pr√©ventive</h3>

                    @if ($errors->any())
                        <div class="mb-4 bg-red-100 border-l-4 border-red-500 text-red-700 p-4" role="alert">
                            <p class="font-bold">Veuillez corriger les erreurs :</p>
                            <ul class="mt-2 list-disc list-inside">@foreach ($errors->all() as $error)<li>{{ $error }}</li>@endforeach</ul>
                        </div>
                    @endif

                    <form method="POST" action="{{ route('admin.maintenance.plans.store') }}">
                        @csrf
                        <div class="space-y-6">
                            <div>
                                <label for="select-vehicle" class="block font-medium text-sm text-gray-700">V√©hicule <span class="text-red-500">*</span></label>
                                <select name="vehicle_id" id="select-vehicle" required>
                                    <option value="">S√©lectionnez un v√©hicule</option>
                                    @foreach($vehicles as $vehicle)
                                        <option value="{{ $vehicle->id }}">{{ $vehicle->brand }} {{ $vehicle->model }} ({{ $vehicle->registration_plate }})</option>
                                    @endforeach
                                </select>
                            </div>
                            <div>
                                <label for="select-maintenance-type" class="block font-medium text-sm text-gray-700">Type de Maintenance <span class="text-red-500">*</span></label>
                                <select name="maintenance_type_id" id="select-maintenance-type" placeholder="Rechercher un type..." required>
                                    <option value="">S√©lectionnez un type</option>
                                    @foreach($maintenanceTypes as $type)
                                        <option value="{{ $type->id }}" @selected(old('maintenance_type_id') == $type->id)>{{ $type->name }}</option>
                                    @endforeach
                                </select>
                            </div>
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                                <div>
                                    <label for="recurrence_value" class="block font-medium text-sm text-gray-700">R√©p√©ter tous les <span class="text-red-500">*</span></label>
                                    <input type="number" name="recurrence_value" id="recurrence_value" x-model.number="recurrenceValue" @input.debounce.500ms="calculateAndSetDueDate()" class="mt-1 block w-full border-gray-300 focus:border-violet-500 focus:ring-violet-500 rounded-md shadow-sm" required>
                                </div>
                                <div>
                                    <label for="recurrence_unit_id" class="block font-medium text-sm text-gray-700">Unit√© <span class="text-red-500">*</span></label>
                                    <select name="recurrence_unit_id" id="recurrence_unit_id" x-model="selectedRecurrenceUnitId" @change="updateRecurrenceUnitNameDisplay(); calculateAndSetDueDate();" class="mt-1 block w-full border-gray-300 focus:border-violet-500 focus:ring-violet-500 rounded-md shadow-sm" required>
                                        <option value="">S√©lectionnez</option>
                                        @foreach($recurrenceUnits as $unit)
                                            <option value="{{ $unit->id }}">{{ $unit->name }}</option>
                                        @endforeach
                                    </select>
                                </div>
                            </div>

                            <div x-show="recurrenceUnitName === 'Jours' || recurrenceUnitName === 'Mois'" style="display: none;" x-transition>
                                <label for="next_due_date" class="block font-medium text-sm text-gray-700">Prochaine √âch√©ance (Date)</label>
                                <p class="text-xs text-gray-500">Laissez vide pour un calcul automatique.</p>
                                <input type="date" name="next_due_date" id="next_due_date" class="mt-1 block w-full border-gray-300 focus:border-violet-500 focus:ring-violet-500 rounded-md shadow-sm">
                            </div>
                            <div x-show="recurrenceUnitName === 'Kilom√®tres'" style="display: none;" x-transition>
                                <label for="next_due_mileage" class="block font-medium text-sm text-gray-700">Prochaine √âch√©ance (Kilom√©trage)</label>
                                <p class="mt-1 text-xs text-gray-500">R√©f√©rence (km actuel) : <span class="font-semibold" x-text="currentMileageText"></span></p>
                                <input type="number" name="next_due_mileage" id="next_due_mileage" class="mt-1 block w-full border-gray-300 focus:border-violet-500 focus:ring-violet-500 rounded-md shadow-sm">
                            </div>
                            {{-- AJOUT DU CHAMP NOTES --}}
                            <div>
                                <label for="notes" class="block font-medium text-sm text-gray-700">Notes / Instructions</label>
                                <textarea name="notes" id="notes" rows="3" class="mt-1 block w-full border-gray-300 focus:border-violet-500 focus:ring-violet-500 rounded-md shadow-sm">{{ old('notes') }}</textarea>
                            </div>
                        </div>

                        <div class="mt-8 flex items-center justify-end gap-4 border-t border-gray-200 pt-6">
                            <a href="{{ route('admin.maintenance.plans.index') }}" class="text-sm font-semibold text-gray-600 hover:text-gray-900">Annuler</a>
                            <button type="submit" class="inline-flex items-center px-4 py-2 bg-violet-600 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-violet-700">Enregistrer le Plan</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</x-app-layout>

--- FIN DU FICHIER : ./resources/views/admin/maintenance/plans/create.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/admin/maintenance/plans/index.blade.php
////////////////////////////////////////////////////////////////

<x-app-layout>
    <x-slot name="header">
        <h2 class="font-semibold text-xl text-gray-800 leading-tight">
            {{ __('Plans de Maintenance Pr√©ventive') }}
        </h2>
    </x-slot>

    {{-- SOLUTION AM√âLIOR√âE : Injection des donn√©es avant l'initialisation d'Alpine.js --}}
    <script>
        // Donn√©es inject√©es de mani√®re s√©curis√©e
        window.maintenancePlansData = {!! json_encode($plansForJs, JSON_HEX_TAG | JSON_HEX_APOS | JSON_HEX_AMP | JSON_HEX_QUOT) !!};
        window.recurrenceUnits = {!! json_encode($recurrenceUnits->keyBy('id'), JSON_HEX_TAG | JSON_HEX_APOS | JSON_HEX_AMP | JSON_HEX_QUOT) !!};
        
        // D√©finition UNIQUE du composant Alpine.js
        document.addEventListener('alpine:init', () => {
            Alpine.data('maintenancePlansPage', () => ({
                // √âtat des modales
                showEditModal: false,
                showLogModal: false,
                
                // Donn√©es des plans
                plans: window.maintenancePlansData || {},
                recurrenceUnits: window.recurrenceUnits || {},
                
                // Plan en cours d'√©dition/logging
                planToEdit: {},
                planToLog: {},
                
                // URLs des formulaires
                editFormUrl: '',
                logFormUrl: '',

                // Initialisation des composants
                init() {
                    this.$nextTick(() => {
                        this.initTomSelect();
                    });
                },

                // Initialisation de TomSelect
                initTomSelect() {
                    if (window.TomSelect && this.$refs.vehicleFilter) {
                        new TomSelect(this.$refs.vehicleFilter, { 
                            create: false, 
                            placeholder: 'Rechercher un v√©hicule...' 
                        });
                    }
                    if (window.TomSelect && this.$refs.typeFilter) {
                        new TomSelect(this.$refs.typeFilter, { 
                            create: false, 
                            placeholder: 'Rechercher un type...' 
                        });
                    }
                },

                // Ouverture de la modale d'√©dition
                openEditModal(planId) {
                    const plan = this.plans[planId];
                    if (!plan) {
                        console.error('Plan non trouv√©:', planId);
                        return;
                    }
                    
                    // Cr√©e une copie profonde pour l'√©dition
                    this.planToEdit = JSON.parse(JSON.stringify(plan));
                    
                    // S'assurer que l'unit√© de r√©currence est correctement d√©finie
                    if (!this.planToEdit.recurrence_unit_id && plan.recurrence_unit_id) {
                        this.planToEdit.recurrence_unit_id = plan.recurrence_unit_id;
                    }
                    
                    this.editFormUrl = `/admin/maintenance/plans/${planId}`;
                    this.showEditModal = true;
                },

                // Ouverture de la modale de logging
                openLogModal(planId) {
                    const plan = this.plans[planId];
                    if (!plan) {
                        console.error('Plan non trouv√©:', planId);
                        return;
                    }
                    
                    // Cr√©e une copie profonde pour le logging
                    this.planToLog = JSON.parse(JSON.stringify(plan));
                    this.logFormUrl = '/admin/maintenance/logs';
                    this.showLogModal = true;
                },

                // Fermeture des modales
                closeEditModal() {
                    this.showEditModal = false;
                    this.planToEdit = {};
                    this.editFormUrl = '';
                },

                closeLogModal() {
                    this.showLogModal = false;
                    this.planToLog = {};
                    this.logFormUrl = '';
                },

                // Met √† jour le nom de l'unit√© quand l'ID change dans la modale d'√©dition
                updateEditRecurrenceUnitName() {
                    const unit = this.recurrenceUnits[this.planToEdit.recurrence_unit_id];
                    if (unit) {
                        if (!this.planToEdit.recurrence_unit) {
                            this.planToEdit.recurrence_unit = {};
                        }
                        this.planToEdit.recurrence_unit.name = unit.name;
                    }
                },

                // Obtient le nom de l'unit√© de r√©currence pour l'affichage
                getRecurrenceUnitName(unitId) {
                    const unit = this.recurrenceUnits[unitId];
                    return unit ? unit.name : '';
                },

                // Formate le kilom√©trage avec des espaces
                formatMileage(mileage) {
                    if (!mileage) return '0';
                    return new Intl.NumberFormat('fr-FR').format(mileage);
                },

                // Soumission du formulaire d'√©dition
                submitEditForm() {
                    if (this.editFormUrl && this.$refs.editForm) {
                        this.$refs.editForm.submit();
                    }
                },

                // Soumission du formulaire de logging
                submitLogForm() {
                    if (this.logFormUrl && this.$refs.logForm) {
                        this.$refs.logForm.submit();
                    }
                }
            }));
        });
    </script>

    <div x-data="maintenancePlansPage" x-init="init()" class="py-12">
        <div class="max-w-7xl mx-auto sm:px-6 lg:px-8">

            {{-- Section des Filtres --}}
            <div class="mb-6 bg-white p-4 shadow-sm sm:rounded-lg">
                <form action="{{ route('admin.maintenance.plans.index') }}" method="GET">
                    <div class="flex flex-col md:flex-row md:items-end md:space-x-4 space-y-2 md:space-y-0">
                        <div class="flex-grow">
                            <label for="select-vehicle-filter" class="block text-sm font-medium text-gray-700">Filtrer par V√©hicule</label>
                            <select x-ref="vehicleFilter" name="vehicle_id" class="mt-1">
                                <option value="">Tous les v√©hicules</option>
                                @foreach($vehicles as $vehicle)
                                    <option value="{{ $vehicle->id }}" @selected(($filters['vehicle_id'] ?? '') == $vehicle->id)>
                                        {{ $vehicle->brand }} {{ $vehicle->model }} ({{ $vehicle->registration_plate }})
                                    </option>
                                @endforeach
                            </select>
                        </div>
                        <div class="flex-grow">
                            <label for="select-maintenance-type-filter" class="block text-sm font-medium text-gray-700">Filtrer par Type</label>
                            <select x-ref="typeFilter" name="maintenance_type_id" class="mt-1">
                                <option value="">Tous les types</option>
                                @foreach($maintenanceTypes as $type)
                                    <option value="{{ $type->id }}" @selected(($filters['maintenance_type_id'] ?? '') == $type->id)>{{ $type->name }}</option>
                                @endforeach
                            </select>
                        </div>
                        <div class="flex-shrink-0 flex space-x-2">
                            <button type="submit" class="inline-flex items-center justify-center w-full px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-violet-600 hover:bg-violet-700">Filtrer</button>
                            <a href="{{ route('admin.maintenance.plans.index') }}" class="inline-flex items-center justify-center w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50">Reset</a>
                        </div>
                    </div>
                </form>
            </div>

            @if (session('success'))
                <div class="mb-4 bg-green-100 border-l-4 border-green-500 text-green-700 p-4" role="alert">
                    <p class="font-bold">{{ session('success') }}</p>
                </div>
            @endif

            <div class="bg-white overflow-hidden shadow-sm sm:rounded-lg">
                <div class="p-6 text-gray-900">
                    <div class="flex justify-between items-center mb-6">
                        <h3 class="text-xl font-semibold text-gray-700">Tous les Plans Programm√©s</h3>
                        @can('manage maintenance plans')
                            <a href="{{ route('admin.maintenance.plans.create') }}" class="inline-flex items-center px-4 py-2 bg-violet-600 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-violet-700">
                                Ajouter un Plan
                            </a>
                        @endcan
                    </div>

                    <div class="overflow-x-auto border border-gray-200 rounded-lg">
                        <table class="w-full divide-y divide-gray-200">
                            <thead class="bg-gray-100">
                                <tr>
                                    <th class="px-6 py-3 text-left text-xs font-bold text-gray-600 uppercase">V√©hicule</th>
                                    <th class="px-6 py-3 text-left text-xs font-bold text-gray-600 uppercase">Plan</th>
                                    <th class="px-6 py-3 text-left text-xs font-bold text-gray-600 uppercase">√âch√©ance</th>
                                    <th class="px-6 py-3 text-right text-xs font-bold text-gray-600 uppercase">Actions</th>
                                </tr>
                            </thead>
                            <tbody class="bg-white divide-y divide-gray-200">
                                @forelse ($plans as $plan)
                                    <tr class="hover:bg-gray-50">
                                        <td class="px-6 py-3">
                                            <div class="text-sm font-medium text-gray-900">{{ $plan->vehicle?->brand }} {{ $plan->vehicle?->model }}</div>
                                            <div class="text-xs text-gray-500 font-mono">{{ $plan->vehicle?->registration_plate }}</div>
                                        </td>
                                        <td class="px-6 py-3">
                                            <div class="text-sm text-gray-800">{{ $plan->maintenanceType?->name }}</div>
                                            <div class="text-xs text-gray-500">Tous les {{ $plan->recurrence_value }} {{ $plan->recurrenceUnit?->name }}</div>
                                        </td>
                                        <td class="px-6 py-3 whitespace-nowrap text-sm">
                                            @php
                                                $isDateOverdue = $plan->next_due_date && $plan->next_due_date->isPast();
                                                $isMileageOverdue = $plan->next_due_mileage && $plan->vehicle?->current_mileage >= $plan->next_due_mileage;
                                                $isUrgent = $plan->next_due_date && !$isDateOverdue && $plan->next_due_date->isBefore(now()->addDays(30));
                                                $overdueClass = 'text-red-600 font-bold';
                                                $urgentClass = 'text-orange-600 font-semibold';
                                                $defaultClass = 'text-gray-600';
                                            @endphp

                                            @if($plan->next_due_date)
                                                <div class="{{ $isDateOverdue ? $overdueClass : ($isUrgent ? $urgentClass : $defaultClass) }}">
                                                    {{ $plan->next_due_date->format('d/m/Y') }}
                                                    @if($isDateOverdue) <span class="text-xs">(D√©pass√©)</span> @endif
                                                    @if($isUrgent) <span class="text-xs">(Urgent)</span> @endif
                                                </div>
                                            @endif
                                            @if($plan->next_due_mileage)
                                                <div class="text-xs {{ $isMileageOverdue ? $overdueClass : 'text-gray-500' }}">
                                                    (√† {{ number_format($plan->next_due_mileage, 0, ',', ' ') }} km)
                                                    @if($isMileageOverdue) <span class="font-bold">(D√©pass√©)</span> @endif
                                                </div>
                                            @endif
                                        </td>
                                        <td class="px-6 py-3 whitespace-nowrap text-right text-sm font-medium">
                                            <div class="flex items-center justify-end space-x-2">
                                                @can('log maintenance')
                                                    <button type="button" @click="openLogModal({{ $plan->id }})" title="Enregistrer une intervention" class="p-2 rounded-full text-gray-400 hover:bg-green-100 hover:text-green-600">
                                                        <svg class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                                                            <path stroke-linecap="round" stroke-linejoin="round" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                                                        </svg>
                                                    </button>
                                                @endcan
                                                @can('manage maintenance plans')
                                                    <button type="button" @click="openEditModal({{ $plan->id }})" title="Modifier le plan" class="p-2 rounded-full text-gray-400 hover:bg-violet-100 hover:text-violet-600">
                                                        <svg class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                                                            <path stroke-linecap="round" stroke-linejoin="round" d="M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.536L16.732 3.732z" />
                                                        </svg>
                                                    </button>
                                                @endcan
                                            </div>
                                        </td>
                                    </tr>
                                @empty
                                    <tr>
                                        <td colspan="4" class="px-6 py-4 text-center text-sm text-gray-500">Aucun plan de maintenance trouv√©.</td>
                                    </tr>
                                @endforelse
                            </tbody>
                        </table>
                    </div>
                    <div class="mt-6 px-6 pb-6">{{ $plans->withQueryString()->links() }}</div>
                </div>
            </div>
        </div>

        {{-- Modale pour Modifier un Plan --}}
        <div x-show="showEditModal" 
             x-transition:enter="transition ease-out duration-300"
             x-transition:enter-start="opacity-0 transform scale-90"
             x-transition:enter-end="opacity-100 transform scale-100"
             x-transition:leave="transition ease-in duration-200"
             x-transition:leave-start="opacity-100 transform scale-100"
             x-transition:leave-end="opacity-0 transform scale-90"
             class="fixed inset-0 z-50 flex items-center justify-center bg-gray-900 bg-opacity-60" 
             style="display: none;">
            <div @click.away="closeEditModal()" class="bg-white rounded-lg shadow-xl p-6 w-full max-w-2xl mx-4 max-h-[90vh] overflow-y-auto">
                <div class="flex justify-between items-center mb-4">
                    <h3 class="text-lg font-semibold text-gray-900">
                        Modifier le Plan #<span x-text="planToEdit.id"></span>
                    </h3>
                    <button @click="closeEditModal()" class="text-gray-400 hover:text-gray-600">
                        <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                        </svg>
                    </button>
                </div>

                {{-- Informations du v√©hicule --}}
                <div class="mb-4 p-3 bg-blue-50 border border-blue-200 rounded-md">
                    <div class="flex items-center">
                        <svg class="h-5 w-5 text-blue-600 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                        </svg>
                        <div class="text-sm">
                            <span class="font-medium text-blue-900">
                                <span x-text="planToEdit.vehicle?.brand"></span> 
                                <span x-text="planToEdit.vehicle?.model"></span>
                                (<span x-text="planToEdit.vehicle?.registration_plate"></span>)
                            </span>
                            <span class="text-blue-700 ml-2">
                                ‚Ä¢ Kilom√©trage actuel : <span x-text="formatMileage(planToEdit.vehicle?.current_mileage)"></span> km
                            </span>
                        </div>
                    </div>
                </div>

                <form x-ref="editForm" :action="editFormUrl" method="POST" class="space-y-4">
                    @csrf
                    @method('PATCH')

                    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                        <div>
                            <label class="block text-sm font-medium text-gray-700">Type de Maintenance</label>
                            <div class="mt-1 p-2 bg-gray-50 rounded-md text-sm text-gray-600">
                                <span x-text="planToEdit.maintenance_type?.name"></span>
                            </div>
                        </div>

                        <div>
                            <label for="edit_recurrence_value" class="block text-sm font-medium text-gray-700">Valeur de R√©currence <span class="text-red-500">*</span></label>
                            <input id="edit_recurrence_value" 
                                   type="number" 
                                   name="recurrence_value" 
                                   x-model="planToEdit.recurrence_value"
                                   min="1" 
                                   required 
                                   class="mt-1 block w-full border-gray-300 focus:border-violet-500 focus:ring-violet-500 rounded-md shadow-sm">
                        </div>

                        <div class="md:col-span-2">
                            <label for="edit_recurrence_unit_id" class="block text-sm font-medium text-gray-700">Unit√© de R√©currence <span class="text-red-500">*</span></label>
                            <select id="edit_recurrence_unit_id" 
                                    name="recurrence_unit_id" 
                                    x-model="planToEdit.recurrence_unit_id"
                                    @change="updateEditRecurrenceUnitName()"
                                    required 
                                    class="mt-1 block w-full border-gray-300 focus:border-violet-500 focus:ring-violet-500 rounded-md shadow-sm">
                                <option value="">S√©lectionner une unit√©</option>
                                @foreach($recurrenceUnits as $unit)
                                    <option value="{{ $unit->id }}">{{ $unit->name }}</option>
                                @endforeach
                            </select>
                        </div>

                        <div>
                            <label for="edit_next_due_date" class="block text-sm font-medium text-gray-700">Prochaine √âch√©ance (Date)</label>
                            <input id="edit_next_due_date" 
                                   type="date" 
                                   name="next_due_date" 
                                   x-model="planToEdit.next_due_date"
                                   class="mt-1 block w-full border-gray-300 focus:border-violet-500 focus:ring-violet-500 rounded-md shadow-sm">
                        </div>

                        <div>
                            <label for="edit_next_due_mileage" class="block text-sm font-medium text-gray-700">Prochaine √âch√©ance (Kilom√©trage)</label>
                            <input id="edit_next_due_mileage" 
                                   type="number" 
                                   name="next_due_mileage" 
                                   x-model="planToEdit.next_due_mileage"
                                   min="0" 
                                   class="mt-1 block w-full border-gray-300 focus:border-violet-500 focus:ring-violet-500 rounded-md shadow-sm">
                        </div>
                    </div>

                    <div>
                        <label for="edit_notes" class="block text-sm font-medium text-gray-700">Notes</label>
                        <textarea id="edit_notes" 
                                  name="notes" 
                                  x-model="planToEdit.notes"
                                  rows="3" 
                                  maxlength="2000"
                                  class="mt-1 block w-full border-gray-300 focus:border-violet-500 focus:ring-violet-500 rounded-md shadow-sm"></textarea>
                    </div>

                    <div class="flex justify-end space-x-3 pt-4">
                        <button type="button" @click="closeEditModal()" class="px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50">
                            Annuler
                        </button>
                        <button type="submit" class="px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-violet-600 hover:bg-violet-700">
                            Mettre √† jour
                        </button>
                    </div>
                </form>
            </div>
        </div>

        {{-- Modale pour Enregistrer une Intervention --}}
        <div x-show="showLogModal" 
             x-transition:enter="transition ease-out duration-300"
             x-transition:enter-start="opacity-0 transform scale-90"
             x-transition:enter-end="opacity-100 transform scale-100"
             x-transition:leave="transition ease-in duration-200"
             x-transition:leave-start="opacity-100 transform scale-100"
             x-transition:leave-end="opacity-0 transform scale-90"
             class="fixed inset-0 z-50 flex items-center justify-center bg-gray-900 bg-opacity-60" 
             style="display: none;">
            <div @click.away="closeLogModal()" class="bg-white rounded-lg shadow-xl p-6 w-full max-w-2xl mx-4 max-h-[90vh] overflow-y-auto">
                <div class="sm:flex sm:items-start mb-4">
                    <div class="mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-green-100 sm:mx-0 sm:h-10 sm:w-10">
                        <svg class="h-6 w-6 text-green-600" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" d="M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                        </svg>
                    </div>
                    <div class="mt-3 text-center sm:ml-4 sm:mt-0 sm:text-left flex-grow">
                        <h3 class="text-lg font-semibold leading-6 text-gray-900">Enregistrer une Intervention</h3>
                        <div class="mt-2">
                            <p class="text-sm text-gray-600">
                                Intervention de type <strong x-text="planToLog.maintenance_type?.name"></strong> 
                                pour le v√©hicule <strong x-text="planToLog.vehicle?.registration_plate"></strong>.
                            </p>
                        </div>
                    </div>
                    <button @click="closeLogModal()" class="text-gray-400 hover:text-gray-600">
                        <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                        </svg>
                    </button>
                </div>

                {{-- Informations du v√©hicule --}}
                <div class="mb-4 p-3 bg-green-50 border border-green-200 rounded-md">
                    <div class="flex items-center">
                        <svg class="h-5 w-5 text-green-600 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 17a2 2 0 11-4 0 2 2 0 014 0zM19 17a2 2 0 11-4 0 2 2 0 014 0z" />
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16V6a1 1 0 00-1-1H4a1 1 0 00-1 1v10a1 1 0 001 1h1m8-1a1 1 0 01-1 1H9m4-1V8a1 1 0 011-1h2.586a1 1 0 01.707.293l2.414 2.414a1 1 0 01.293.707V16a1 1 0 01-1 1h-1m-6-1a1 1 0 001 1h1M5 17a2 2 0 104 0M15 17a2 2 0 104 0" />
                        </svg>
                        <div class="text-sm">
                            <span class="font-medium text-green-900">
                                <span x-text="planToLog.vehicle?.brand"></span> 
                                <span x-text="planToLog.vehicle?.model"></span>
                                (<span x-text="planToLog.vehicle?.registration_plate"></span>)
                            </span>
                            <span class="text-green-700 ml-2">
                                ‚Ä¢ Kilom√©trage actuel : <span x-text="formatMileage(planToLog.vehicle?.current_mileage)"></span> km
                            </span>
                        </div>
                    </div>
                </div>

                <form x-ref="logForm" :action="logFormUrl" method="POST" class="space-y-4">
                    @csrf
                    {{-- Champs cach√©s pour passer les IDs n√©cessaires au contr√¥leur --}}
                    <input type="hidden" name="maintenance_plan_id" x-model="planToLog.id">
                    <input type="hidden" name="vehicle_id" x-model="planToLog.vehicle_id">
                    <input type="hidden" name="maintenance_type_id" x-model="planToLog.maintenance_type_id">

                    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                        <div>
                            <label for="performed_on_date" class="block font-medium text-sm text-gray-700">Date de l'intervention <span class="text-red-500">*</span></label>
                            <input id="performed_on_date" 
                                   type="date" 
                                   name="performed_on_date" 
                                   value="{{ now()->format('Y-m-d') }}" 
                                   required 
                                   class="block mt-1 w-full border-gray-300 focus:border-violet-500 focus:ring-violet-500 rounded-md shadow-sm">
                        </div>

                        <div>
                            <label for="performed_at_mileage" class="block font-medium text-sm text-gray-700">Kilom√©trage lors de l'intervention <span class="text-red-500">*</span></label>
                            <input id="performed_at_mileage" 
                                   type="number" 
                                   name="performed_at_mileage" 
                                   x-model="planToLog.vehicle?.current_mileage"
                                   required 
                                   class="block mt-1 w-full border-gray-300 focus:border-violet-500 focus:ring-violet-500 rounded-md shadow-sm">
                        </div>

                        <div>
                            <label for="cost" class="block font-medium text-sm text-gray-700">Co√ªt (DA)</label>
                            <input id="cost" 
                                   type="number" 
                                   name="cost" 
                                   step="0.01" 
                                   class="block mt-1 w-full border-gray-300 focus:border-violet-500 focus:ring-violet-500 rounded-md shadow-sm">
                        </div>

                        <div>
                            <label for="performed_by" class="block font-medium text-sm text-gray-700">R√©alis√© par (ex: Garage ABC)</label>
                            <input id="performed_by" 
                                   type="text" 
                                   name="performed_by" 
                                   class="block mt-1 w-full border-gray-300 focus:border-violet-500 focus:ring-violet-500 rounded-md shadow-sm">
                        </div>
                    </div>

                    <div>
                        <label for="details" class="block font-medium text-sm text-gray-700">D√©tails de l'intervention / Notes</label>
                        <textarea name="details" 
                                  id="details" 
                                  rows="3" 
                                  class="mt-1 block w-full border-gray-300 focus:border-violet-500 focus:ring-violet-500 rounded-md shadow-sm"></textarea>
                    </div>

                    <div class="flex justify-end space-x-3 pt-4">
                        <button type="button" @click="closeLogModal()" class="px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50">
                            Annuler
                        </button>
                        <button type="submit" class="px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-green-600 hover:bg-green-700">
                            Enregistrer l'Intervention
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</x-app-layout>

--- FIN DU FICHIER : ./resources/views/admin/maintenance/plans/index.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/admin/organizations/create.blade.php
////////////////////////////////////////////////////////////////

@extends('layouts.admin')

@section('title', 'Nouvelle Organisation')

@section('content')
<div class="container-fluid">
    {{-- Header --}}
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h1 class="h3 mb-0 text-gray-800">
                <i class="fas fa-plus-circle me-2 text-success"></i>
                Nouvelle Organisation
            </h1>
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="{{ route('admin.dashboard') }}">Dashboard</a></li>
                    <li class="breadcrumb-item"><a href="{{ route('admin.organizations.index') }}">Organisations</a></li>
                    <li class="breadcrumb-item active">Nouvelle</li>
                </ol>
            </nav>
        </div>
        <div>
            <a href="{{ route('admin.organizations.index') }}" class="btn btn-outline-secondary">
                <i class="fas fa-arrow-left me-1"></i>
                Retour √† la Liste
            </a>
        </div>
    </div>

    <form method="POST" action="{{ route('admin.organizations.store') }}" enctype="multipart/form-data" id="organizationForm">
        @csrf
        
        <div class="row">
            {{-- Formulaire principal --}}
            <div class="col-lg-8">
                
                {{-- Informations G√©n√©rales --}}
                <div class="card shadow mb-4">
                    <div class="card-header bg-primary text-white">
                        <h6 class="m-0 font-weight-bold">
                            <i class="fas fa-info-circle me-2"></i>
                            Informations G√©n√©rales
                        </h6>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="name" class="form-label required">Nom de l'Organisation *</label>
                                <input type="text" class="form-control @error('name') is-invalid @enderror" 
                                       name="name" id="name" value="{{ old('name') }}" required>
                                @error('name')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="legal_name" class="form-label required">Raison Sociale *</label>
                                <input type="text" class="form-control @error('legal_name') is-invalid @enderror" 
                                       name="legal_name" id="legal_name" value="{{ old('legal_name') }}" required>
                                @error('legal_name')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>
                        </div>
                        
                        <div class="row">
                            <div class="col-md-4 mb-3">
                                <label for="organization_type" class="form-label required">Type d'Organisation *</label>
                                <select class="form-select @error('organization_type') is-invalid @enderror" 
                                        name="organization_type" id="organization_type" required>
                                    <option value="">S√©lectionnez...</option>
                                    @foreach($organizationTypes as $key => $label)
                                        <option value="{{ $key }}" {{ old('organization_type') === $key ? 'selected' : '' }}>
                                            {{ $label }}
                                        </option>
                                    @endforeach
                                </select>
                                @error('organization_type')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>
                            <div class="col-md-4 mb-3">
                                <label for="industry" class="form-label">Secteur d'Activit√©</label>
                                <input type="text" class="form-control @error('industry') is-invalid @enderror" 
                                       name="industry" id="industry" value="{{ old('industry') }}"
                                       placeholder="ex: Transport, Logistique...">
                                @error('industry')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>
                            <div class="col-md-4 mb-3">
                                <label for="legal_form" class="form-label">Forme Juridique</label>
                                <select class="form-select" name="legal_form" id="legal_form">
                                    <option value="">S√©lectionnez...</option>
                                    <option value="SA" {{ old('legal_form') === 'SA' ? 'selected' : '' }}>SA - Soci√©t√© Anonyme</option>
                                    <option value="SAS" {{ old('legal_form') === 'SAS' ? 'selected' : '' }}>SAS - Soci√©t√© par Actions Simplifi√©e</option>
                                    <option value="SARL" {{ old('legal_form') === 'SARL' ? 'selected' : '' }}>SARL - Soci√©t√© √† Responsabilit√© Limit√©e</option>
                                    <option value="SNC" {{ old('legal_form') === 'SNC' ? 'selected' : '' }}>SNC - Soci√©t√© en Nom Collectif</option>
                                    <option value="EURL" {{ old('legal_form') === 'EURL' ? 'selected' : '' }}>EURL - Entreprise Unipersonnelle</option>
                                    <option value="Association" {{ old('legal_form') === 'Association' ? 'selected' : '' }}>Association</option>
                                    <option value="Other" {{ old('legal_form') === 'Other' ? 'selected' : '' }}>Autre</option>
                                </select>
                            </div>
                        </div>
                        
                        <div class="mb-3">
                            <label for="description" class="form-label">Description</label>
                            <textarea class="form-control @error('description') is-invalid @enderror" 
                                      name="description" id="description" rows="3" 
                                      placeholder="Description de l'activit√© de l'organisation...">{{ old('description') }}</textarea>
                            @error('description')
                                <div class="invalid-feedback">{{ $message }}</div>
                            @enderror
                            <div class="form-text">Maximum 1000 caract√®res</div>
                        </div>
                    </div>
                </div>

                {{-- Informations L√©gales --}}
                <div class="card shadow mb-4">
                    <div class="card-header bg-info text-white">
                        <h6 class="m-0 font-weight-bold">
                            <i class="fas fa-gavel me-2"></i>
                            Informations L√©gales
                        </h6>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-4 mb-3">
                                <label for="siret" class="form-label">SIRET</label>
                                <input type="text" class="form-control @error('siret') is-invalid @enderror" 
                                       name="siret" id="siret" value="{{ old('siret') }}"
                                       placeholder="12345678901234">
                                @error('siret')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>
                            <div class="col-md-4 mb-3">
                                <label for="vat_number" class="form-label">Num√©ro TVA</label>
                                <input type="text" class="form-control @error('vat_number') is-invalid @enderror" 
                                       name="vat_number" id="vat_number" value="{{ old('vat_number') }}"
                                       placeholder="FR12345678901">
                                @error('vat_number')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>
                            <div class="col-md-4 mb-3">
                                <label for="registration_number" class="form-label">N¬∞ d'Immatriculation</label>
                                <input type="text" class="form-control @error('registration_number') is-invalid @enderror" 
                                       name="registration_number" id="registration_number" value="{{ old('registration_number') }}">
                                @error('registration_number')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>
                        </div>
                        
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="registration_date" class="form-label">Date d'Immatriculation</label>
                                <input type="date" class="form-control @error('registration_date') is-invalid @enderror" 
                                       name="registration_date" id="registration_date" value="{{ old('registration_date') }}">
                                @error('registration_date')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>
                        </div>
                    </div>
                </div>

                {{-- Contact et Communication --}}
                <div class="card shadow mb-4">
                    <div class="card-header bg-success text-white">
                        <h6 class="m-0 font-weight-bold">
                            <i class="fas fa-address-book me-2"></i>
                            Contact et Communication
                        </h6>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="email" class="form-label required">Email Principal *</label>
                                <input type="email" class="form-control @error('email') is-invalid @enderror" 
                                       name="email" id="email" value="{{ old('email') }}" required>
                                @error('email')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="phone" class="form-label">T√©l√©phone</label>
                                <input type="tel" class="form-control @error('phone') is-invalid @enderror" 
                                       name="phone" id="phone" value="{{ old('phone') }}"
                                       placeholder="+33 1 23 45 67 89">
                                @error('phone')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>
                        </div>
                        
                        <div class="mb-3">
                            <label for="website" class="form-label">Site Web</label>
                            <input type="url" class="form-control @error('website') is-invalid @enderror" 
                                   name="website" id="website" value="{{ old('website') }}"
                                   placeholder="https://www.exemple.com">
                            @error('website')
                                <div class="invalid-feedback">{{ $message }}</div>
                            @enderror
                        </div>
                    </div>
                </div>

                {{-- Adresse du Si√®ge --}}
                <div class="card shadow mb-4">
                    <div class="card-header bg-warning text-dark">
                        <h6 class="m-0 font-weight-bold">
                            <i class="fas fa-map-marker-alt me-2"></i>
                            Adresse du Si√®ge Social
                        </h6>
                    </div>
                    <div class="card-body">
                        <div class="mb-3">
                            <label for="address" class="form-label required">Adresse *</label>
                            <input type="text" class="form-control @error('address') is-invalid @enderror" 
                                   name="address" id="address" value="{{ old('address') }}" required
                                   placeholder="123 Rue de la Paix">
                            @error('address')
                                <div class="invalid-feedback">{{ $message }}</div>
                            @enderror
                        </div>
                        
                        <div class="mb-3">
                            <label for="address_line_2" class="form-label">Compl√©ment d'adresse</label>
                            <input type="text" class="form-control @error('address_line_2') is-invalid @enderror" 
                                   name="address_line_2" id="address_line_2" value="{{ old('address_line_2') }}"
                                   placeholder="B√¢timent A, 3√®me √©tage">
                            @error('address_line_2')
                                <div class="invalid-feedback">{{ $message }}</div>
                            @enderror
                        </div>
                        
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="city" class="form-label required">Ville *</label>
                                <input type="text" class="form-control @error('city') is-invalid @enderror" 
                                       name="city" id="city" value="{{ old('city') }}" required>
                                @error('city')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="postal_code" class="form-label required">Code Postal *</label>
                                <input type="text" class="form-control @error('postal_code') is-invalid @enderror" 
                                       name="postal_code" id="postal_code" value="{{ old('postal_code') }}" required>
                                @error('postal_code')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>
                        </div>
                        
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="state_province" class="form-label">R√©gion/Province</label>
                                <input type="text" class="form-control @error('state_province') is-invalid @enderror" 
                                       name="state_province" id="state_province" value="{{ old('state_province') }}">
                                @error('state_province')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="country" class="form-label required">Pays *</label>
                                <select class="form-select @error('country') is-invalid @enderror" 
                                        name="country" id="country" required>
                                    <option value="">S√©lectionnez un pays...</option>
                                    @foreach($countries as $code => $name)
                                        <option value="{{ $code }}" {{ old('country', 'FR') === $code ? 'selected' : '' }}>
                                            {{ $name }}
                                        </option>
                                    @endforeach
                                </select>
                                @error('country')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>
                        </div>
                    </div>
                </div>

                {{-- Contact Administratif --}}
                <div class="card shadow mb-4">
                    <div class="card-header bg-secondary text-white">
                        <h6 class="m-0 font-weight-bold">
                            <i class="fas fa-user-tie me-2"></i>
                            Contact Administratif (Premier Utilisateur)
                        </h6>
                    </div>
                    <div class="card-body">
                        <div class="alert alert-info">
                            <i class="fas fa-info-circle me-2"></i>
                            <strong>Information :</strong> Cette personne sera cr√©√©e comme premier administrateur de l'organisation 
                            et recevra un email de bienvenue avec ses identifiants.
                        </div>
                        
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="admin_first_name" class="form-label required">Pr√©nom *</label>
                                <input type="text" class="form-control @error('admin_first_name') is-invalid @enderror" 
                                       name="admin_first_name" id="admin_first_name" value="{{ old('admin_first_name') }}" required>
                                @error('admin_first_name')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="admin_last_name" class="form-label required">Nom *</label>
                                <input type="text" class="form-control @error('admin_last_name') is-invalid @enderror" 
                                       name="admin_last_name" id="admin_last_name" value="{{ old('admin_last_name') }}" required>
                                @error('admin_last_name')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>
                        </div>
                        
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="admin_email" class="form-label required">Email *</label>
                                <input type="email" class="form-control @error('admin_email') is-invalid @enderror" 
                                       name="admin_email" id="admin_email" value="{{ old('admin_email') }}" required>
                                @error('admin_email')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="admin_phone" class="form-label">T√©l√©phone</label>
                                <input type="tel" class="form-control @error('admin_phone') is-invalid @enderror" 
                                       name="admin_phone" id="admin_phone" value="{{ old('admin_phone') }}">
                                @error('admin_phone')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>
                        </div>
                        
                        <div class="mb-3">
                            <label for="admin_title" class="form-label">Titre/Fonction</label>
                            <input type="text" class="form-control @error('admin_title') is-invalid @enderror" 
                                   name="admin_title" id="admin_title" value="{{ old('admin_title', 'Administrateur') }}">
                            @error('admin_title')
                                <div class="invalid-feedback">{{ $message }}</div>
                            @enderror
                        </div>
                    </div>
                </div>
            </div>

            {{-- Sidebar Configuration --}}
            <div class="col-lg-4">
                
                {{-- Logo et Branding --}}
                <div class="card shadow mb-4">
                    <div class="card-header bg-primary text-white">
                        <h6 class="m-0 font-weight-bold">
                            <i class="fas fa-image me-2"></i>
                            Logo et Branding
                        </h6>
                    </div>
                    <div class="card-body text-center">
                        <div class="mb-3">
                            <div id="logo-preview" class="mb-3" style="display: none;">
                                <img id="logo-image" src="" alt="Aper√ßu du logo" 
                                     class="img-thumbnail" style="max-width: 150px; max-height: 150px;">
                            </div>
                            <div id="logo-placeholder" class="bg-light border rounded d-flex align-items-center justify-content-center" 
                                 style="width: 150px; height: 150px; margin: 0 auto;">
                                <i class="fas fa-image fa-3x text-muted"></i>
                            </div>
                        </div>
                        
                        <div class="mb-3">
                            <input type="file" class="form-control @error('logo') is-invalid @enderror" 
                                   name="logo" id="logo" accept="image/jpeg,image/png,image/svg+xml">
                            @error('logo')
                                <div class="invalid-feedback">{{ $message }}</div>
                            @enderror
                            <div class="form-text">
                                Formats accept√©s: JPG, PNG, SVG<br>
                                Taille max: 2MB<br>
                                Recommand√©: 200x200px
                            </div>
                        </div>
                    </div>
                </div>

                {{-- Param√®tres Op√©rationnels --}}
                <div class="card shadow mb-4">
                    <div class="card-header bg-info text-white">
                        <h6 class="m-0 font-weight-bold">
                            <i class="fas fa-cog me-2"></i>
                            Param√®tres Op√©rationnels
                        </h6>
                    </div>
                    <div class="card-body">
                        <div class="mb-3">
                            <label for="timezone" class="form-label required">Fuseau Horaire *</label>
                            <select class="form-select @error('timezone') is-invalid @enderror" 
                                    name="timezone" id="timezone" required>
                                @foreach($timezones as $tz => $label)
                                    <option value="{{ $tz }}" {{ old('timezone', 'Europe/Paris') === $tz ? 'selected' : '' }}>
                                        {{ $label }}
                                    </option>
                                @endforeach
                            </select>
                            @error('timezone')
                                <div class="invalid-feedback">{{ $message }}</div>
                            @enderror
                        </div>
                        
                        <div class="row">
                            <div class="col-6 mb-3">
                                <label for="currency" class="form-label required">Devise *</label>
                                <select class="form-select @error('currency') is-invalid @enderror" 
                                        name="currency" id="currency" required>
                                    @foreach($currencies as $code => $label)
                                        <option value="{{ $code }}" {{ old('currency', 'EUR') === $code ? 'selected' : '' }}>
                                            {{ $label }}
                                        </option>
                                    @endforeach
                                </select>
                                @error('currency')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>
                            <div class="col-6 mb-3">
                                <label for="language" class="form-label required">Langue *</label>
                                <select class="form-select @error('language') is-invalid @enderror" 
                                        name="language" id="language" required>
                                    <option value="fr" {{ old('language', 'fr') === 'fr' ? 'selected' : '' }}>Fran√ßais</option>
                                    <option value="en" {{ old('language') === 'en' ? 'selected' : '' }}>English</option>
                                    <option value="es" {{ old('language') === 'es' ? 'selected' : '' }}>Espa√±ol</option>
                                    <option value="de" {{ old('language') === 'de' ? 'selected' : '' }}>Deutsch</option>
                                </select>
                                @error('language')
                                    <div class="invalid-feedback">{{ $message }}</div>
                                @enderror
                            </div>
                        </div>
                        
                        <div class="row">
                            <div class="col-6 mb-3">
                                <label for="date_format" class="form-label">Format Date</label>
                                <select class="form-select" name="date_format" id="date_format">
                                    <option value="d/m/Y" {{ old('date_format', 'd/m/Y') === 'd/m/Y' ? 'selected' : '' }}>DD/MM/YYYY</option>
                                    <option value="m/d/Y" {{ old('date_format') === 'm/d/Y' ? 'selected' : '' }}>MM/DD/YYYY</option>
                                    <option value="Y-m-d" {{ old('date_format') === 'Y-m-d' ? 'selected' : '' }}>YYYY-MM-DD</option>
                                </select>
                            </div>
                            <div class="col-6 mb-3">
                                <label for="time_format" class="form-label">Format Heure</label>
                                <select class="form-select" name="time_format" id="time_format">
                                    <option value="H:i" {{ old('time_format', 'H:i') === 'H:i' ? 'selected' : '' }}>24H</option>
                                    <option value="g:i A" {{ old('time_format') === 'g:i A' ? 'selected' : '' }}>12H (AM/PM)</option>
                                </select>
                            </div>
                        </div>
                    </div>
                </div>

                {{-- Limites et Quotas --}}
                <div class="card shadow mb-4">
                    <div class="card-header bg-warning text-dark">
                        <h6 class="m-0 font-weight-bold">
                            <i class="fas fa-chart-bar me-2"></i>
                            Limites et Quotas
                        </h6>
                    </div>
                    <div class="card-body">
                        <div class="mb-3">
                            <label for="max_vehicles" class="form-label required">Max V√©hicules *</label>
                            <input type="number" class="form-control @error('max_vehicles') is-invalid @enderror" 
                                   name="max_vehicles" id="max_vehicles" value="{{ old('max_vehicles', 100) }}" 
                                   min="1" max="10000" required>
                            @error('max_vehicles')
                                <div class="invalid-feedback">{{ $message }}</div>
                            @enderror
                        </div>
                        
                        <div class="mb-3">
                            <label for="max_drivers" class="form-label required">Max Chauffeurs *</label>
                            <input type="number" class="form-control @error('max_drivers') is-invalid @enderror" 
                                   name="max_drivers" id="max_drivers" value="{{ old('max_drivers', 50) }}" 
                                   min="1" max="5000" required>
                            @error('max_drivers')
                                <div class="invalid-feedback">{{ $message }}</div>
                            @enderror
                        </div>
                        
                        <div class="mb-3">
                            <label for="max_users" class="form-label required">Max Utilisateurs *</label>
                            <input type="number" class="form-control @error('max_users') is-invalid @enderror" 
                                   name="max_users" id="max_users" value="{{ old('max_users', 20) }}" 
                                   min="1" max="1000" required>
                            @error('max_users')
                                <div class="invalid-feedback">{{ $message }}</div>
                            @enderror
                        </div>
                    </div>
                </div>

                {{-- Horaires de Travail --}}
                <div class="card shadow mb-4">
                    <div class="card-header bg-success text-white">
                        <h6 class="m-0 font-weight-bold">
                            <i class="fas fa-clock

--- FIN DU FICHIER : ./resources/views/admin/organizations/create.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/admin/organizations/edit.blade.php
////////////////////////////////////////////////////////////////

<x-app-layout>
    <x-slot name="header"><h2 class="font-semibold text-xl text-gray-800 leading-tight">Modifier : {{ $organization->name }}</h2></x-slot>
    <div class="py-12">
        <div class="max-w-4xl mx-auto sm:px-6 lg:px-8">
            <div class="bg-white overflow-hidden shadow-sm sm:rounded-lg">
                <div class="p-8 text-gray-900">
                    <form method="POST" action="{{ route('admin.organizations.update', $organization) }}">
                        @csrf
                        @method('PUT')
                        <div class="space-y-6">
                            <div>
                                <label for="name">Nom de l'Organisation <span class="text-red-500">*</span></label>
                                <x-text-input id="name" name="name" :value="old('name', $organization->name)" required class="mt-1 block w-full" />
                                <x-input-error :messages="$errors->get('name')" class="mt-2" />
                            </div>
                        </div>
                        <div class="mt-8 flex items-center justify-end gap-4">
                            <a href="{{ route('admin.organizations.index') }}" class="text-sm ...">Annuler</a>
                            <button type="submit" class="... bg-violet-600 ...">Enregistrer les Modifications</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</x-app-layout>

--- FIN DU FICHIER : ./resources/views/admin/organizations/edit.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/admin/organizations/index.blade.php
////////////////////////////////////////////////////////////////

@extends('layouts.admin')

@section('title', 'Gestion des Organisations')

@section('content')
<div class="container-fluid">
    {{-- Header avec statistiques --}}
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h1 class="h3 mb-0 text-gray-800">
                <i class="fas fa-building me-2 text-primary"></i>
                Organisations
            </h1>
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="{{ route('dashboard') }}">Dashboard</a></li>
                    <li class="breadcrumb-item active">Organisations</li>
                </ol>
            </nav>
        </div>
        <div class="d-flex gap-2">
            <button type="button" class="btn btn-outline-secondary" data-bs-toggle="modal" data-bs-target="#exportModal">
                <i class="fas fa-download me-1"></i>
                Exporter
            </button>
            <a href="{{ route('admin.organizations.create') }}" class="btn btn-primary">
                <i class="fas fa-plus me-1"></i>
                Nouvelle Organisation
            </a>
        </div>
    </div>

    {{-- Statistiques Cards --}}
    <div class="row mb-4">
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-primary shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">
                                Total Organisations
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">{{ $stats['total'] }}</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-building fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-success shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-success text-uppercase mb-1">
                                Organisations Actives
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">{{ $stats['active'] }}</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-check-circle fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-info shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-info text-uppercase mb-1">
                                Utilisateurs Total
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">{{ number_format($stats['total_users']) }}</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-users fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-warning shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-warning text-uppercase mb-1">
                                V√©hicules Total
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">{{ number_format($stats['total_vehicles']) }}</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-truck fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    {{-- Filtres avanc√©s --}}
    <div class="card shadow mb-4">
        <div class="card-header py-3 d-flex justify-content-between align-items-center">
            <h6 class="m-0 font-weight-bold text-primary">Filtres et Recherche</h6>
            <button type="button" class="btn btn-sm btn-outline-primary" id="toggleFilters">
                <i class="fas fa-filter me-1"></i>
                Filtres Avanc√©s
            </button>
        </div>
        <div class="card-body" id="filtersPanel">
            <form method="GET" action="{{ route('admin.organizations.index') }}">
                <div class="row">
                    <div class="col-md-3 mb-3">
                        <label for="search" class="form-label">Recherche</label>
                        <div class="input-group">
                            <span class="input-group-text"><i class="fas fa-search"></i></span>
                            <input type="text" class="form-control" name="search" id="search" 
                                   value="{{ request('search') }}" 
                                   placeholder="Nom, SIRET, email...">
                        </div>
                    </div>
                    <div class="col-md-2 mb-3">
                        <label for="status" class="form-label">Statut</label>
                        <select class="form-select" name="status" id="status">
                            <option value="">Tous</option>
                            <option value="active" {{ request('status') === 'active' ? 'selected' : '' }}>Actif</option>
                            <option value="inactive" {{ request('status') === 'inactive' ? 'selected' : '' }}>Inactif</option>
                            <option value="pending" {{ request('status') === 'pending' ? 'selected' : '' }}>En Attente</option>
                        </select>
                    </div>
                    <div class="col-md-2 mb-3">
                        <label for="country" class="form-label">Pays</label>
                        <select class="form-select" name="country" id="country">
                            <option value="">Tous</option>
                            @foreach($stats['countries'] as $country)
                                <option value="{{ $country }}" {{ request('country') === $country ? 'selected' : '' }}>
                                    {{ $country }}
                                </option>
                            @endforeach
                        </select>
                    </div>
                    <div class="col-md-3 mb-3">
                        <label for="type" class="form-label">Type d'Organisation</label>
                        <select class="form-select" name="type" id="type">
                            <option value="">Tous</option>
                            @foreach($stats['types'] as $type)
                                <option value="{{ $type }}" {{ request('type') === $type ? 'selected' : '' }}>
                                    {{ ucfirst($type) }}
                                </option>
                            @endforeach
                        </select>
                    </div>
                    <div class="col-md-2 mb-3 d-flex align-items-end">
                        <div class="d-grid gap-2 w-100">
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-search me-1"></i>
                                Filtrer
                            </button>
                            <a href="{{ route('admin.organizations.index') }}" class="btn btn-outline-secondary btn-sm">
                                R√©initialiser
                            </a>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>

    {{-- Table des organisations --}}
    <div class="card shadow mb-4">
        <div class="card-header py-3 d-flex justify-content-between align-items-center">
            <h6 class="m-0 font-weight-bold text-primary">
                Liste des Organisations ({{ $organizations->total() }} r√©sultats)
            </h6>
            <div class="d-flex align-items-center gap-3">
                <small class="text-muted">
                    Affichage de {{ $organizations->firstItem() }} √† {{ $organizations->lastItem() }}
                </small>
                <div class="dropdown">
                    <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" 
                            data-bs-toggle="dropdown">
                        <i class="fas fa-sort me-1"></i>
                        Trier par
                    </button>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" href="?sort=name&direction=asc">Nom (A-Z)</a></li>
                        <li><a class="dropdown-item" href="?sort=name&direction=desc">Nom (Z-A)</a></li>
                        <li><a class="dropdown-item" href="?sort=created_at&direction=desc">Plus r√©cent</a></li>
                        <li><a class="dropdown-item" href="?sort=created_at&direction=asc">Plus ancien</a></li>
                        <li><a class="dropdown-item" href="?sort=users_count&direction=desc">Plus d'utilisateurs</a></li>
                    </ul>
                </div>
            </div>
        </div>
        <div class="card-body p-0">
            @if($organizations->count() > 0)
                <div class="table-responsive">
                    <table class="table table-hover mb-0">
                        <thead class="table-light">
                            <tr>
                                <th style="width: 50px;">Logo</th>
                                <th>Organisation</th>
                                <th>Contact</th>
                                <th>Localisation</th>
                                <th>Statistiques</th>
                                <th>Statut</th>
                                <th>Cr√©√© le</th>
                                <th style="width: 120px;">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach($organizations as $organization)
                                <tr>
                                    <td>
                                        @if($organization->logo_path)
                                            <img src="{{ asset('storage/' . $organization->logo_path) }}" 
                                                 alt="Logo {{ $organization->name }}" 
                                                 class="rounded-circle" 
                                                 style="width: 40px; height: 40px; object-fit: cover;">
                                        @else
                                            <div class="bg-primary rounded-circle d-flex align-items-center justify-content-center text-white" 
                                                 style="width: 40px; height: 40px;">
                                                {{ strtoupper(substr($organization->name, 0, 1)) }}
                                            </div>
                                        @endif
                                    </td>
                                    <td>
                                        <div class="fw-bold">{{ $organization->name }}</div>
                                        <small class="text-muted">{{ $organization->organization_type }}</small>
                                        @if($organization->siret)
                                            <br><small class="text-muted">SIRET: {{ $organization->siret }}</small>
                                        @endif
                                    </td>
                                    <td>
                                        <div>
                                            <i class="fas fa-envelope me-1 text-muted"></i>
                                            <a href="mailto:{{ $organization->email }}">{{ $organization->email }}</a>
                                        </div>
                                        @if($organization->phone)
                                            <div class="mt-1">
                                                <i class="fas fa-phone me-1 text-muted"></i>
                                                {{ $organization->phone }}
                                            </div>
                                        @endif
                                        @if($organization->website)
                                            <div class="mt-1">
                                                <i class="fas fa-globe me-1 text-muted"></i>
                                                <a href="{{ $organization->website }}" target="_blank" rel="noopener">Site web</a>
                                            </div>
                                        @endif
                                    </td>
                                    <td>
                                        <div>
                                            <i class="fas fa-map-marker-alt me-1 text-muted"></i>
                                            {{ $organization->city }}, {{ $organization->country }}
                                        </div>
                                        <small class="text-muted">{{ $organization->timezone }}</small>
                                    </td>
                                    <td>
                                        <div class="d-flex flex-wrap gap-1">
                                            <span class="badge bg-primary rounded-pill">
                                                <i class="fas fa-users me-1"></i>
                                                {{ $organization->users_count }}
                                            </span>
                                            <span class="badge bg-info rounded-pill">
                                                <i class="fas fa-truck me-1"></i>
                                                {{ $organization->vehicles_count }}
                                            </span>
                                            <span class="badge bg-secondary rounded-pill">
                                                <i class="fas fa-user-tie me-1"></i>
                                                {{ $organization->drivers_count }}
                                            </span>
                                        </div>
                                    </td>
                                    <td>
                                        @if($organization->status === 'active')
                                            <span class="badge bg-success">
                                                <i class="fas fa-check-circle me-1"></i>
                                                Actif
                                            </span>
                                        @elseif($organization->status === 'inactive')
                                            <span class="badge bg-secondary">
                                                <i class="fas fa-pause-circle me-1"></i>
                                                Inactif
                                            </span>
                                        @else
                                            <span class="badge bg-warning">
                                                <i class="fas fa-clock me-1"></i>
                                                En Attente
                                            </span>
                                        @endif
                                    </td>
                                    <td>
                                        <div>{{ $organization->created_at->format('d/m/Y') }}</div>
                                        <small class="text-muted">{{ $organization->created_at->diffForHumans() }}</small>
                                    </td>
                                    <td>
                                        <div class="dropdown">
                                            <button class="btn btn-sm btn-outline-secondary dropdown-toggle" 
                                                    type="button" data-bs-toggle="dropdown">
                                                <i class="fas fa-ellipsis-v"></i>
                                            </button>
                                            <ul class="dropdown-menu">
                                                <li>
                                                    <a class="dropdown-item" href="{{ route('admin.organizations.show', $organization) }}">
                                                        <i class="fas fa-eye me-2"></i>
                                                        Voir D√©tails
                                                    </a>
                                                </li>
                                                <li>
                                                    <a class="dropdown-item" href="{{ route('admin.organizations.edit', $organization) }}">
                                                        <i class="fas fa-edit me-2"></i>
                                                        Modifier
                                                    </a>
                                                </li>
                                                <li><hr class="dropdown-divider"></li>
                                                <li>
                                                    <form method="POST" action="{{ route('admin.organizations.destroy', $organization) }}" 
                                                          class="d-inline"
                                                          onsubmit="return confirm('√ätes-vous s√ªr de vouloir supprimer cette organisation ?')">
                                                        @csrf
                                                        @method('DELETE')
                                                        <button type="submit" class="dropdown-item text-danger">
                                                            <i class="fas fa-trash me-2"></i>
                                                            Supprimer
                                                        </button>
                                                    </form>
                                                </li>
                                            </ul>
                                        </div>
                                    </td>
                                </tr>
                            @endforeach
                        </tbody>
                    </table>
                </div>
                
                {{-- Pagination --}}
                <div class="card-footer">
                    {{ $organizations->links() }}
                </div>
            @else
                <div class="text-center py-5">
                    <div class="mb-3">
                        <i class="fas fa-building fa-3x text-muted"></i>
                    </div>
                    <h5 class="text-muted">Aucune organisation trouv√©e</h5>
                    <p class="text-muted">Aucune organisation ne correspond √† vos crit√®res de recherche.</p>
                    <a href="{{ route('admin.organizations.create') }}" class="btn btn-primary">
                        <i class="fas fa-plus me-1"></i>
                        Cr√©er une Organisation
                    </a>
                </div>
            @endif
        </div>
    </div>

    {{-- Analytics Chart --}}
    @if($monthlyStats->isNotEmpty())
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">
                    <i class="fas fa-chart-line me-2"></i>
                    √âvolution des Organisations (12 derniers mois)
                </h6>
            </div>
            <div class="card-body">
                <canvas id="organizationsChart" width="100" height="30"></canvas>
            </div>
        </div>
    @endif
</div>

{{-- Modal Export --}}
<div class="modal fade" id="exportModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="fas fa-download me-2"></i>
                    Exporter les Organisations
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form method="GET" action="{{ route('admin.organizations.export') }}">
                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label">Format d'Export</label>
                        <select class="form-select" name="format" required>
                            <option value="xlsx">Excel (.xlsx)</option>
                            <option value="csv">CSV (.csv)</option>
                            <option value="pdf">PDF (.pdf)</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Donn√©es √† Inclure</label>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" name="include[]" value="contact" id="includeContact" checked>
                            <label class="form-check-label" for="includeContact">
                                Informations de Contact
                            </label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" name="include[]" value="address" id="includeAddress" checked>
                            <label class="form-check-label" for="includeAddress">
                                Adresse Compl√®te
                            </label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" name="include[]" value="stats" id="includeStats">
                            <label class="form-check-label" for="includeStats">
                                Statistiques (Utilisateurs, V√©hicules...)
                            </label>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-download me-1"></i>
                        Exporter
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>
@endsection

@push('scripts')
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
document.addEventListener('DOMContentLoaded', function() {
    // Toggle filters
    const toggleFiltersBtn = document.getElementById('toggleFilters');
    const filtersPanel = document.getElementById('filtersPanel');
    
    toggleFiltersBtn.addEventListener('click', function() {
        filtersPanel.classList.toggle('d-none');
    });

    // Chart.js pour les analytics
    @if($monthlyStats->isNotEmpty())
        const ctx = document.getElementById('organizationsChart').getContext('2d');
        const monthlyData = @json($monthlyStats);
        
        new Chart(ctx, {
            type: 'line',
            data: {
                labels: monthlyData.map(item => new Date(item.month).toLocaleDateString('fr-FR', {month: 'short', year: 'numeric'})),
                datasets: [{
                    label: 'Nouvelles Organisations',
                    data: monthlyData.map(item => item.count),
                    borderColor: '#4e73df',
                    backgroundColor: 'rgba(78, 115, 223, 0.1)',
                    tension: 0.3
                }]
            },
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    @endif
});
</script>
@endpush

--- FIN DU FICHIER : ./resources/views/admin/organizations/index.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/admin/planning/index.blade.php
////////////////////////////////////////////////////////////////

<x-app-layout>
    <x-slot name="header">
        <h2 class="font-semibold text-xl text-gray-800 leading-tight">
            {{ __('Planning des Affectations') }}
        </h2>
    </x-slot>

    <div class="py-12" x-data="planningGantt()">
        <div class="max-w-full mx-auto sm:px-6 lg:px-8">
            <div class="bg-white overflow-hidden shadow-sm sm:rounded-lg">
                <div class="p-4 sm:p-6 border-b border-gray-200">
                    <div class="flex flex-col md:flex-row items-center justify-between gap-4">
                        <!-- Left Controls -->
                        <div class="flex items-center gap-2">
                            <form action="{{ route('admin.planning.index') }}" method="GET" class="relative">
                                <input type="hidden" name="view_mode" :value="viewMode">
                                <input type="hidden" name="date" :value="baseDate">
                                <x-lucide-search class="absolute left-3 top-1/2 -translate-y-1/2 h-5 w-5 text-gray-400" />
                                <input type="text" name="search" value="{{ $filters['search'] ?? '' }}" placeholder="Rechercher un actif ou un chauffeur..." class="pl-10 pr-4 py-2 w-64 border-gray-300 focus:border-primary-500 focus:ring-primary-500 rounded-md shadow-sm text-sm">
                            </form>
                            <button @click="showFilterPanel = true" class="inline-flex items-center gap-2 px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50">
                                <x-lucide-sliders-horizontal class="h-5 w-5" />
                                <span>Filtres</span>
                            </button>
                        </div>

                        <!-- Center Controls -->
                        <div class="flex items-center gap-2 text-lg font-semibold text-gray-800">
                            <button @click="previousPeriod()" class="p-2 rounded-md hover:bg-gray-100"><x-lucide-chevron-left class="h-6 w-6" /></button>
                            <h3 class="w-48 text-center">
                                @if($viewMode === 'month') {{ $baseDate->isoFormat('MMMM YYYY') }}
                                @elseif($viewMode === 'week') {{ $dateRange['start']->isoFormat('D MMM') }} - {{ $dateRange['end']->isoFormat('D MMM, YYYY') }}
                                @elseif($viewMode === 'day') {{ $baseDate->isoFormat('D MMMM YYYY') }}
                                @else {{ $baseDate->isoFormat('YYYY') }}
                                @endif
                            </h3>
                            <button @click="nextPeriod()" class="p-2 rounded-md hover:bg-gray-100"><x-lucide-chevron-right class="h-6 w-6" /></button>
                        </div>

                        <!-- Right Controls -->
                        <div class="flex items-center gap-2">
                            <button @click="goToday()" class="px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50">Aujourd'hui</button>
                            <div class="relative" x-data="{ open: false }">
                                <button @click="open = !open" class="inline-flex items-center gap-2 px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50">
                                    <span class="capitalize">{{ $viewMode }}</span>
                                    <x-lucide-chevron-down class="h-5 w-5" />
                                </button>
                                <div x-show="open" @click.away="open = false" class="absolute right-0 mt-2 w-32 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 z-20">
                                    <div class="py-1">
                                        <a href="#" @click.prevent="changeView('day')" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100">Jour</a>
                                        <a href="#" @click.prevent="changeView('week')" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100">Semaine</a>
                                        <a href="#" @click.prevent="changeView('month')" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100">Mois</a>
                                        <a href="#" @click.prevent="changeView('year')" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100">Ann√©e</a>
                                    </div>
                                </div>
                            </div>
                            <div class="p-1 bg-gray-200 rounded-lg flex items-center">
                                <button @click="activeView = 'gantt'" :class="activeView === 'gantt' ? 'bg-white shadow' : ''" class="p-1.5 rounded-md text-gray-600 hover:bg-white"><x-lucide-layout-grid class="h-5 w-5" /></button>
                                <button @click="activeView = 'table'" :class="activeView === 'table' ? 'bg-white shadow' : ''" class="p-1.5 rounded-md text-gray-600 hover:bg-white"><x-lucide-list class="h-5 w-5" /></button>
                            </div>
                            <button @click="openNewModal()" class="inline-flex items-center gap-2 px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-green-600 hover:bg-green-700">
                                <x-lucide-plus class="h-5 w-5" />
                                <span>Ajouter une Affectation</span>
                            </button>
                        </div>
                    </div>
                </div>

                <div class="p-6 text-gray-900 space-y-6" x-show="activeView === 'gantt'">
                    @php
                        if ($viewMode === 'day') {
                            $period = \Carbon\CarbonPeriod::create($dateRange['start'], '1 hour', $dateRange['end']);
                            $totalUnits = 24;
                        } else {
                            $period = \Carbon\CarbonPeriod::create($dateRange['start'], $dateRange['end']);
                            $totalUnits = $dateRange['start']->diffInDays($dateRange['end']) + 1;
                        }
                        $today = \Carbon\Carbon::today();
                    @endphp

                    {{-- Grille GANTT --}}
                    <div class="overflow-x-auto border border-gray-200 rounded-lg bg-white">
                        <div class="grid" style="grid-template-columns: minmax(250px, 1.5fr) repeat({{ $totalUnits }}, minmax(60px, 1fr));">

                            {{-- En-t√™te de Colonne Asset --}}
                            <div class="sticky left-0 z-20 bg-gray-100 border-b border-r border-gray-200 p-2 flex items-center justify-between">
                                <span class="font-semibold text-gray-600 text-sm">Asset</span>
                                <button @click="toggleSort('alpha_asc')" class="inline-flex items-center gap-1 text-xs font-medium text-gray-500 hover:text-gray-800" :class="{'text-primary-600': filters.sort === 'alpha_asc'}">
                                    A-Z
                                    <x-lucide-arrow-down-a-z class="h-4 w-4" />
                                </button>
                            </div>

                            {{-- En-t√™tes des Jours/Heures --}}
                            @foreach ($period as $date)
                                <div class="border-b border-r border-gray-200 p-2 text-center {{ $date->isSameDay($today) ? 'bg-primary-50' : 'bg-gray-50' }}">
                                    @if($viewMode === 'day')
                                        <div class="font-bold text-xs uppercase text-gray-500">{{ $date->format('H:i') }}</div>
                                    @else
                                        <div class="font-bold text-xs uppercase text-gray-500">{{ $date->isoFormat('ddd') }}</div>
                                        <div class="text-lg font-semibold {{ $date->isSameDay($today) ? 'text-primary-600' : 'text-gray-800' }}">{{ $date->format('j') }}</div>
                                    @endif
                                </div>
                            @endforeach

                            {{-- Lignes des V√©hicules --}}
                            @forelse ($vehicles as $vehicle)
                                <div class="sticky left-0 z-10 bg-white border-b border-r border-gray-200 p-2 flex items-center gap-3">
                                    <img src="{{ $vehicle->photo_path ? asset('storage/' . $vehicle->photo_path) : 'https://ui-avatars.com/api/?name=' . urlencode($vehicle->brand) . '&color=7F9CF5&background=EBF4FF' }}" alt="Photo of {{ $vehicle->brand }}" class="h-10 w-10 rounded-md object-cover">
                                    <div class="flex-grow">
                                        <p class="font-bold text-sm text-gray-800 flex items-center">
                                            <span class="mr-2 w-2 h-2 rounded-full {{ match($vehicle->vehicleStatus->name ?? 'default') { 'Parking' => 'bg-blue-500', 'En mission' => 'bg-green-500', 'En maintenance' => 'bg-orange-500', 'Hors service' => 'bg-red-500', default => 'bg-gray-400' } }}"></span>
                                            {{ $vehicle->brand }} {{ $vehicle->model }}
                                        </p>
                                        <p class="text-xs text-gray-500">
                                            {{ $vehicle->vehicleStatus->name ?? 'N/A' }} &bull; {{ $vehicle->vehicleType->name ?? 'N/A' }}
                                        </p>
                                    </div>
                                </div>

                                <div x-ref="gridRow_{{ $vehicle->id }}" data-vehicle-id="{{ $vehicle->id }}" class="col-span-{{ $totalUnits }} grid relative" style="grid-template-columns: repeat({{ $totalUnits }}, minmax(60px, 1fr));">
                                    {{-- Ligne de fond de la grille --}}
                                    @foreach ($period as $index => $date)
                                        <div class="border-r border-b border-gray-200 {{ $date->isSameDay($today) ? 'bg-primary-50/50' : '' }}" data-date-index="{{ $index }}"></div>
                                    @endforeach

                                    {{-- Barres d'affectation --}}
                                    @foreach ($vehicle->assignments as $assignment)
                                        @php
                                            $start = \Carbon\Carbon::parse($assignment->start_datetime);
                                            $isOngoing = is_null($assignment->end_datetime);
                                            // Si pas de date de fin, on la fait courir jusqu'√† la fin de la p√©riode visible pour le calcul
                                            $end = $isOngoing ? $dateRange['end']->copy()->endOfDay() : \Carbon\Carbon::parse($assignment->end_datetime);

                                            // On ne processe que les affectations visibles dans la p√©riode
                                            if ($end->isBefore($dateRange['start']) || $start->isAfter($dateRange['end'])) {
                                                continue;
                                            }

                                            $viewStart = $dateRange['start']->copy()->startOfDay();
                                            $viewEnd = $dateRange['end']->copy()->endOfDay();
                                            $totalMinutesInView = $viewStart->diffInMinutes($viewEnd);

                                            // On s'assure que les barres ne d√©passent pas de la vue
                                            $barStart = $start->max($viewStart);
                                            $barEnd = $end->min($viewEnd);

                                            $startOffsetMinutes = $viewStart->diffInMinutes($barStart);
                                            $durationMinutes = $barStart->diffInMinutes($barEnd);

                                            // S√©curit√© pour √©viter les divisions par z√©ro ou les dur√©es n√©gatives
                                            if ($totalMinutesInView <= 0 || $durationMinutes <= 0) {
                                                continue;
                                            }

                                            $leftPercentage = ($startOffsetMinutes / $totalMinutesInView) * 100;
                                            $widthPercentage = ($durationMinutes / $totalMinutesInView) * 100;
                                        @endphp

                                        <div id="assignment_{{ $assignment->id }}"
                                             data-assignment-id="{{ $assignment->id }}"
                                             data-duration-minutes="{{ $start->diffInMinutes($end) }}"
                                             @click="openEditModal({{ $assignment->id }})"
                                             class="absolute h-full p-1 z-10"
                                             style="left: {{ $leftPercentage }}%; width: {{ $widthPercentage }}%;">
                                            <div @class([
                                                    'relative h-full w-full border-l-4 border-blue-600 rounded-md shadow-sm text-blue-900 text-xs flex flex-col justify-center px-2 truncate cursor-pointer hover:ring-2 hover:ring-blue-500',
                                                    'bg-blue-200' => !$isOngoing,
                                                    'ongoing-assignment-bar' => $isOngoing,
                                                ])>
                                                <p class="font-bold truncate">{{ $assignment->driver->full_name ?? 'N/A' }}</p>
                                                <p class="font-normal">
                                                    {{ $start->format('H:i') }}
                                                    @if (!$isOngoing)
                                                        - {{ $end->format('H:i') }}
                                                    @else
                                                        - No end date
                                                    @endif
                                                </p>
                                            </div>
                                        </div>
                                    @endforeach
                                </div>
                            @empty
                                <div class="col-span-{{ $totalUnits + 1 }} text-center py-12 text-gray-500">
                                    Aucun v√©hicule trouv√© pour les filtres s√©lectionn√©s.
                                </div>
                            @endforelse
                        </div>
                    </div>
                     <div class="mt-4">
                        {{ $vehicles->withQueryString()->links() }}
                    </div>
                </div>
            </div>
        </div>
    </div>

        {{-- Placeholders for Modals and Side Panels --}}
        <div x-show="showFilterPanel" @click.away="showFilterPanel = false" class="fixed inset-0 z-40 bg-gray-900 bg-opacity-50" x-transition>
            <div class="absolute top-0 right-0 h-full bg-white w-96 p-6 shadow-lg">
                <h3 class="text-lg font-semibold mb-4">Filtres Avanc√©s</h3>
                <p class="text-gray-600">Les options de filtre seront ici.</p>
            </div>
        </div>

        <div x-show="showAssignmentModal" class="fixed inset-0 z-40 flex items-center justify-center bg-gray-900 bg-opacity-50" x-transition>
            <div @click.away="showAssignmentModal = false" class="bg-white rounded-lg shadow-xl p-6 w-full max-w-2xl">
                 <h3 class="text-xl font-semibold text-gray-800 mb-4" x-text="modalTitle"></h3>
                 <p class="text-gray-600">Le formulaire de cr√©ation/√©dition d'affectation sera ici.</p>
                 <div class="mt-6 flex justify-end">
                     <button @click="showAssignmentModal = false" class="px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md shadow-sm hover:bg-gray-50">Annuler</button>
                 </div>
            </div>
        </div>
    </div>

    @push('scripts')
    <script>
        function planningGantt() {
            return {
                viewMode: @json($viewMode),
                activeView: 'gantt', // or 'table'
                baseDate: @json($baseDate->toDateString()),
                filters: @json($filters),
                showFilterPanel: false,
                showAssignmentModal: false,
                modalTitle: '',

                init() {
                    console.log('Planning component initialized.');
                    this.initSortable();
                },

                initSortable() {
                    this.$nextTick(() => {
                        const ganttRows = this.$el.querySelectorAll('[x-ref^="gridRow_"]');
                        ganttRows.forEach(row => {
                            new Sortable(row, {
                                group: 'gantt-assignments',
                                animation: 150,
                                onEnd: (evt) => {
                                    const item = evt.item;
                                    const toRow = evt.to;
                                    const assignmentId = item.dataset.assignmentId;
                                    const newVehicleId = toRow.dataset.vehicleId;

                                    const ganttStartDate = new Date(this.baseDate);
                                    const totalWidth = toRow.offsetWidth;
                                    const leftPosition = item.offsetLeft;

                                    const totalMinutesInView = (new Date('{{ $dateRange['end']->toDateTimeString() }}') - new Date('{{ $dateRange['start']->toDateTimeString() }}')) / 60000;
                                    const minutesOffset = (leftPosition / totalWidth) * totalMinutesInView;

                                    let newStartDate = new Date('{{ $dateRange['start']->toDateTimeString() }}');
                                    newStartDate.setMinutes(newStartDate.getMinutes() + minutesOffset);

                                    let durationMinutes = parseInt(item.dataset.durationMinutes, 10);
                                    let newEndDate = new Date(newStartDate.getTime() + durationMinutes * 60000);

                                    this.updateAssignment(assignmentId, newVehicleId, newStartDate, newEndDate);
                                }
                            });
                        });
                    });
                },

                updateAssignment(id, vehicleId, startDate, endDate) {
                    const data = {
                        vehicle_id: vehicleId,
                        start_datetime: startDate.toISOString().slice(0, 19).replace('T', ' '),
                        end_datetime: endDate.toISOString().slice(0, 19).replace('T', ' '),
                        _token: '{{ csrf_token() }}'
                    };

                    fetch(`/api/admin/assignments/${id}/move`, {
                        method: 'PATCH',
                        headers: { 'Content-Type': 'application/json', 'Accept': 'application/json' },
                        body: JSON.stringify(data)
                    })
                    .then(async response => {
                        if (!response.ok) {
                            const errorData = await response.json();
                            throw new Error(errorData.message || `Erreur ${response.status}`);
                        }
                        return response.json();
                    })
                    .then(data => {
                        console.log('Assignment updated:', data);
                        window.dispatchEvent(new CustomEvent('toast', { detail: { type: 'success', message: 'Affectation mise √† jour !' } }));
                    })
                    .catch(error => {
                        console.error('Error updating assignment:', error);
                        window.dispatchEvent(new CustomEvent('toast', { detail: { type: 'error', message: error.message } }));
                        // We reload to revert the visual change on failure
                        setTimeout(() => window.location.reload(), 1500);
                    });
                },

                openNewModal() {
                    this.modalTitle = 'Ajouter une Affectation';
                    // Here you would typically clear any form data
                    this.showAssignmentModal = true;
                },

                async openEditModal(assignmentId) {
                    this.modalTitle = 'Modifier l\'Affectation';
                    // Here you would fetch assignment data from the API
                    // For now, we just open the modal
                    console.log('Fetching data for assignment', assignmentId);
                    this.showAssignmentModal = true;
                },

                toggleSort(type) {
                    let newSort = this.filters.sort === type ? '' : type;
                    const url = new URL(window.location.href);
                    if (newSort) {
                        url.searchParams.set('sort', newSort);
                    } else {
                        url.searchParams.delete('sort');
                    }
                    window.location.href = url.toString();
                },

                navigateTo(newDate) {
                    const url = new URL(window.location.href);
                    url.searchParams.set('date', newDate);
                    url.searchParams.set('view_mode', this.viewMode);
                    // Persist search filters
                    for (const key in this.filters) {
                        if (this.filters[key]) {
                            url.searchParams.set(key, this.filters[key]);
                        }
                    }
                    window.location.href = url.toString();
                },

                changeView(mode) {
                    this.viewMode = mode;
                    const url = new URL(window.location.href);
                    url.searchParams.set('view_mode', this.viewMode);
                    url.searchParams.delete('date'); // Reset date to today
                    window.location.href = url.toString();
                },

                goToday() {
                    const url = new URL(window.location.href);
                    url.searchParams.delete('date');
                    url.searchParams.set('view_mode', this.viewMode);
                    window.location.href = url.toString();
                },

                previousPeriod() {
                    let newDate = new Date(this.baseDate);
                    if (this.viewMode === 'week') newDate.setDate(newDate.getDate() - 7);
                    else if (this.viewMode === 'month') newDate.setMonth(newDate.getMonth() - 1);
                    else if (this.viewMode === 'year') newDate.setFullYear(newDate.getFullYear() - 1);
                    else if (this.viewMode === 'day') newDate.setDate(newDate.getDate() - 1);
                    this.navigateTo(newDate.toISOString().split('T')[0]);
                },

                nextPeriod() {
                    let newDate = new Date(this.baseDate);
                    if (this.viewMode === 'week') newDate.setDate(newDate.getDate() + 7);
                    else if (this.viewMode === 'month') newDate.setMonth(newDate.getMonth() + 1);
                    else if (this.viewMode === 'year') newDate.setFullYear(newDate.getFullYear() + 1);
                    else if (this.viewMode === 'day') newDate.setDate(newDate.getDate() + 1);
                    this.navigateTo(newDate.toISOString().split('T')[0]);
                }
            }
        }
    </script>
    @endpush
</x-app-layout>
--- FIN DU FICHIER : ./resources/views/admin/planning/index.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/admin/roles/edit.blade.php
////////////////////////////////////////////////////////////////

{{-- resources/views/admin/roles/edit.blade.php --}}
<x-app-layout>
    <x-slot name="header">
        <h2 class="font-semibold text-xl text-gray-800 leading-tight">
            {{ __('Modifier le R√¥le :') }} <span class="text-violet-700">{{ $role->name }}</span>
        </h2>
    </x-slot>

    <div class="py-12">
        <div class="max-w-4xl mx-auto sm:px-6 lg:px-8">
            <div class="bg-white overflow-hidden shadow-sm sm:rounded-lg">
                <div class="p-8 text-gray-900">
                    <h3 class="text-xl font-semibold text-gray-700 mb-6">{{ __('Assigner les Permissions') }}</h3>

                    <form method="POST" action="{{ route('admin.roles.update', $role) }}">
                        @csrf
                        @method('PUT')

                        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                            @forelse ($permissions as $permission)
                                <div class="flex items-center p-2 border rounded-md">
                                    <input type="checkbox"
                                           name="permissions[]"
                                           id="permission_{{ $permission->id }}"
                                           value="{{ $permission->id }}"
                                           class="h-4 w-4 rounded border-gray-300 text-violet-600 focus:ring-violet-500"
                                           @if($role->hasPermissionTo($permission)) checked @endif>
                                    <label for="permission_{{ $permission->id }}" class="ml-3 block text-sm font-medium text-gray-700">
                                        {{ $permission->name }}
                                    </label>
                                </div>
                            @empty
                                <p class="text-gray-500">Aucune permission trouv√©e. Veuillez ex√©cuter le seeder.</p>
                            @endforelse
                        </div>

                        <div class="mt-8 flex items-center justify-end gap-4">
                            <a href="{{ route('admin.roles.index') }}" class="inline-flex items-center px-4 py-2 bg-white border border-gray-300 rounded-md font-semibold text-xs text-gray-700 uppercase tracking-widest shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-violet-500 focus:ring-offset-2 disabled:opacity-25 transition ease-in-out duration-150">
                                {{ __('Annuler') }}
                            </a>

                            <button type="submit" class="inline-flex items-center px-4 py-2 bg-violet-600 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-violet-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-violet-500 transition ease-in-out duration-150">
                                {{ __('Mettre √† jour les Permissions') }}
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</x-app-layout>

--- FIN DU FICHIER : ./resources/views/admin/roles/edit.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/admin/roles/index.blade.php
////////////////////////////////////////////////////////////////

{{-- resources/views/admin/roles/index.blade.php --}}
<x-app-layout>
    <x-slot name="header">
        <h2 class="font-semibold text-xl text-gray-800 leading-tight">
            {{ __('Administration - Gestion des R√¥les') }}
        </h2>
    </x-slot>

    <div class="py-12">
        <div class="max-w-7xl mx-auto sm:px-6 lg:px-8">
            @if (session('success'))
                <div class="mb-4 bg-green-100 border-l-4 border-green-500 text-green-700 p-4" role="alert">
                    <p class="font-bold">{{ session('success') }}</p>
                </div>
            @endif

            <div class="bg-white overflow-hidden shadow-sm sm:rounded-lg">
                <div class="p-6 text-gray-900">
                    <h3 class="text-xl font-semibold text-gray-700 mb-6">{{ __('Liste des R√¥les') }}</h3>
                    <div class="overflow-x-auto border border-gray-200 rounded-lg">
                        <table class="min-w-full divide-y divide-gray-200">
                            <thead class="bg-gray-100">
                                <tr>
                                    <th scope="col" class="px-6 py-3 text-left text-xs font-bold text-gray-600 uppercase tracking-wider">ID</th>
                                    <th scope="col" class="px-6 py-3 text-left text-xs font-bold text-gray-600 uppercase tracking-wider">Nom du R√¥le</th>
                                    <th scope="col" class="relative px-6 py-3"><span class="sr-only">Actions</span></th>
                                </tr>
                            </thead>
                            <tbody class="bg-white divide-y divide-gray-200">
                                @foreach ($roles as $role)
                                    <tr class="hover:bg-gray-50">
                                        <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">{{ $role->id }}</td>
                                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-800">{{ $role->name }}</td>
                                        <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                                            <a href="{{ route('admin.roles.edit', $role) }}" class="text-violet-600 hover:text-violet-900">G√©rer les Permissions</a>
                                        </td>
                                    </tr>
                                @endforeach
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</x-app-layout>

--- FIN DU FICHIER : ./resources/views/admin/roles/index.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/admin/suppliers/create.blade.php
////////////////////////////////////////////////////////////////

<x-app-layout>
    <x-slot name="header">
        <h2 class="font-semibold text-xl text-gray-800 leading-tight">{{ __('Ajouter un Fournisseur') }}</h2>
    </x-slot>

    <div class="py-12">
        <div class="max-w-4xl mx-auto sm:px-6 lg:px-8">
            <div class="bg-white overflow-hidden shadow-sm sm:rounded-lg">
                <div class="p-8 text-gray-900" x-data="supplierForm()">
                    <!-- MODAL POUR AJOUTER UNE CAT√âGORIE -->
                    <div x-show="showCategoryModal" 
                         class="fixed inset-0 bg-black bg-opacity-50 backdrop-blur-sm flex items-center justify-center z-50" 
                         @click.away="showCategoryModal = false"
                         style="display: none;">

                        <div class="bg-white p-8 rounded-lg shadow-xl w-full max-w-md" @click.stop>
                            {{-- Le reste du contenu de votre modale est d√©j√† parfait --}}
                            <h4 class="text-lg font-semibold mb-4">Ajouter une Cat√©gorie</h4>
                            <form @submit.prevent="submitCategory">
                                <div>
                                    <x-input-label for="new_category_name" value="Nom de la cat√©gorie" required />
                                    <x-text-input id="new_category_name" x-model="newCategoryName" class="mt-1 block w-full" />
                                    <span x-show="categoryError" x-text="categoryError" class="text-sm text-red-600 mt-2"></span>
                                </div>
                                <div class="mt-6 flex justify-end gap-4">
                                    <x-secondary-button @click.prevent="showCategoryModal = false">Annuler</x-secondary-button>
                                    <x-primary-button type="submit">Enregistrer</x-primary-button>
                                </div>
                            </form>
                        </div>
                    </div>

                    <form method="POST" action="{{ route('admin.suppliers.store') }}">
                        @csrf
                        <fieldset class="border border-gray-200 p-6 rounded-lg">
                            <legend class="text-lg font-semibold text-gray-800 px-2">Informations sur le Fournisseur</legend>
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mt-4">
                                <div class="md:col-span-2">
                                    <x-input-label for="name" value="Nom du Fournisseur" required />
                                    <x-text-input id="name" name="name" :value="old('name')" class="mt-1 block w-full" />
                                    <x-input-error :messages="$errors->get('name')" class="mt-2" />
                                </div>
                                <div>
                                    <x-input-label for="contact_name" value="Nom du Contact" />
                                    <x-text-input id="contact_name" name="contact_name" :value="old('contact_name')" class="mt-1 block w-full" />
                                    <x-input-error :messages="$errors->get('contact_name')" class="mt-2" />
                                </div>
                                <div>
                                    <x-input-label for="phone" value="T√©l√©phone" />
                                    <x-text-input id="phone" name="phone" :value="old('phone')" class="mt-1 block w-full" />
                                    <x-input-error :messages="$errors->get('phone')" class="mt-2" />
                                </div>
                                <div class="md:col-span-2">
                                    <x-input-label for="email" value="Email" />
                                    <x-text-input id="email" name="email" type="email" :value="old('email')" class="mt-1 block w-full" />
                                    <x-input-error :messages="$errors->get('email')" class="mt-2" />
                                </div>
                                <div class="md:col-span-2">
                                    <x-input-label for="address" value="Adresse" />
                                    <textarea id="address" name="address" rows="3" class="block mt-1 w-full border-gray-300 focus:border-primary-500 focus:ring-primary-500 rounded-md shadow-sm">{{ old('address') }}</textarea>
                                    <x-input-error :messages="$errors->get('address')" class="mt-2" />
                                </div>
                                <div class="md:col-span-2">
                                    <x-input-label for="supplier_category_id" value="Cat√©gorie" />
                                    <div class="flex items-center gap-2 mt-1">
                                        <select x-ref="categorySelect" name="supplier_category_id" id="supplier_category_id" class="flex-grow">
                                            <option value="">Aucune</option>
                                            @foreach($categories as $category)
                                            <option value="{{ $category->id }}" @selected(old('supplier_category_id')==$category->id)>{{ $category->name }}</option>
                                            @endforeach
                                        </select>
                                        <x-primary-button type="button" @click.prevent="showCategoryModal = true" title="Ajouter une cat√©gorie">
                                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                                                <path fill-rule="evenodd" d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z" clip-rule="evenodd" />
                                            </svg>
                                        </x-primary-button>
                                    </div>
                                    <x-input-error :messages="$errors->get('supplier_category_id')" class="mt-2" />
                                </div>
                            </div>
                        </fieldset>

                        <div class="mt-8 pt-6 border-t border-gray-200 flex items-center justify-end gap-4">
                            <a href="{{ route('admin.suppliers.index') }}" class="text-sm font-semibold text-gray-600 hover:text-gray-900">Annuler</a>
                            <x-primary-button type="submit">
                                Enregistrer le Fournisseur
                            </x-primary-button>
                        </div>
                    </form>
                </div>

                @push('scripts')
                <script>
                    function supplierForm() {
                        return {
                            showCategoryModal: false,
                            newCategoryName: '',
                            categoryError: '',
                            tomSelect: null,

                            init() {
                                this.tomSelect = new TomSelect(this.$refs.categorySelect, {
                                    create: false,
                                    placeholder: 'S√©lectionnez une cat√©gorie...'
                                });

                                // Pour la synchronisation si la valeur old() est pr√©sente
                                const selectedValue = this.$refs.categorySelect.value;
                                if (selectedValue) {
                                    this.tomSelect.setValue(selectedValue);
                                }
                            },

                            async submitCategory() {
                                this.categoryError = '';
                                if (!this.newCategoryName.trim()) {
                                    this.categoryError = "Le nom de la cat√©gorie ne peut pas √™tre vide.";
                                    return;
                                }

                                try {
                                    const response = await fetch('{{ route('admin.supplier-categories.store') }}', {
                                        method: 'POST',
                                        headers: {
                                            'Content-Type': 'application/json',
                                            'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').getAttribute('content'),
                                            'Accept': 'application/json'
                                        },
                                        body: JSON.stringify({
                                            name: this.newCategoryName
                                        })
                                    });

                                    const result = await response.json();

                                    if (response.ok && result.success) {
                                        const newCategory = result.category;
                                        this.tomSelect.addOption({
                                            value: newCategory.id,
                                            text: newCategory.name
                                        });
                                        this.tomSelect.setValue(newCategory.id); // S√©lectionne la nouvelle cat√©gorie

                                        this.showCategoryModal = false;
                                        this.newCategoryName = '';

                                        // Afficher un toast/notification de succ√®s
                                        window.dispatchEvent(new CustomEvent('toast-message', {
                                            detail: {
                                                message: 'Cat√©gorie ajout√©e avec succ√®s !',
                                                type: 'success'
                                            }
                                        }));

                                    } else {
                                        this.categoryError = result.message || 'Une erreur est survenue.';
                                        if (result.errors && result.errors.name) {
                                            this.categoryError = result.errors.name[0];
                                        }
                                    }
                                } catch (error) {
                                    console.error('Erreur:', error);
                                    this.categoryError = 'Une erreur r√©seau est survenue.';
                                }
                            }
                        }
                    }
                </script>
                @endpush
            </div>
        </div>
    </div>
</x-app-layout>
--- FIN DU FICHIER : ./resources/views/admin/suppliers/create.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/admin/suppliers/edit.blade.php
////////////////////////////////////////////////////////////////

<x-app-layout>
    <x-slot name="header">
        <h2 class="font-semibold text-xl text-gray-800 leading-tight">{{ __('Modifier : ') . $supplier->name }}</h2>
    </x-slot>

    <div class="py-12">
        <div class="max-w-4xl mx-auto sm:px-6 lg:px-8">
            <div class="bg-white overflow-hidden shadow-sm sm:rounded-lg">
                <div class="p-8 text-gray-900" x-data="supplierForm()">
                    <!-- MODAL POUR AJOUTER UNE CAT√âGORIE -->
                    <div x-show="showCategoryModal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50" @click.away="showCategoryModal = false">
                        <div class="bg-white p-8 rounded-lg shadow-xl w-full max-w-md" @click.stop>
                            <h4 class="text-lg font-semibold mb-4">Ajouter une Cat√©gorie</h4>
                            <form @submit.prevent="submitCategory">
                                <div>
                                    <x-input-label for="new_category_name" value="Nom de la cat√©gorie" required />
                                    <x-text-input id="new_category_name" x-model="newCategoryName" class="mt-1 block w-full" />
                                    <span x-show="categoryError" x-text="categoryError" class="text-sm text-red-600 mt-2"></span>
                                </div>
                                <div class="mt-6 flex justify-end gap-4">
                                    <x-secondary-button @click.prevent="showCategoryModal = false">Annuler</x-secondary-button>
                                    <x-primary-button type="submit">Enregistrer</x-primary-button>
                                </div>
                            </form>
                        </div>
                    </div>

                    <form method="POST" action="{{ route('admin.suppliers.update', $supplier) }}">
                        @csrf
                        @method('PUT')
                        <fieldset class="border border-gray-200 p-6 rounded-lg">
                            <legend class="text-lg font-semibold text-gray-800 px-2">Informations sur le Fournisseur</legend>
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mt-4">
                                <div class="md:col-span-2">
                                    <x-input-label for="name" value="Nom du Fournisseur" required />
                                    <x-text-input id="name" name="name" :value="old('name', $supplier->name)" class="mt-1 block w-full" />
                                    <x-input-error :messages="$errors->get('name')" class="mt-2" />
                                </div>
                                <div>
                                    <x-input-label for="contact_name" value="Nom du Contact" />
                                    <x-text-input id="contact_name" name="contact_name" :value="old('contact_name', $supplier->contact_name)" class="mt-1 block w-full" />
                                    <x-input-error :messages="$errors->get('contact_name')" class="mt-2" />
                                </div>
                                <div>
                                    <x-input-label for="phone" value="T√©l√©phone" />
                                    <x-text-input id="phone" name="phone" :value="old('phone', $supplier->phone)" class="mt-1 block w-full" />
                                    <x-input-error :messages="$errors->get('phone')" class="mt-2" />
                                </div>
                                <div class="md:col-span-2">
                                    <x-input-label for="email" value="Email" />
                                    <x-text-input id="email" name="email" type="email" :value="old('email', $supplier->email)" class="mt-1 block w-full" />
                                    <x-input-error :messages="$errors->get('email')" class="mt-2" />
                                </div>
                                <div class="md:col-span-2">
                                    <x-input-label for="address" value="Adresse" />
                                    <textarea id="address" name="address" rows="3" class="block mt-1 w-full border-gray-300 focus:border-primary-500 focus:ring-primary-500 rounded-md shadow-sm">{{ old('address', $supplier->address) }}</textarea>
                                    <x-input-error :messages="$errors->get('address')" class="mt-2" />
                                </div>
                                <div class="md:col-span-2">
                                    <x-input-label for="supplier_category_id" value="Cat√©gorie" />
                                    <div class="flex items-center gap-2 mt-1">
                                        <select x-ref="categorySelect" name="supplier_category_id" id="supplier_category_id" class="flex-grow">
                                            <option value="">Aucune</option>
                                            @foreach($categories as $category)
                                            <option value="{{ $category->id }}" @selected(old('supplier_category_id', $supplier->supplier_category_id) == $category->id)>{{ $category->name }}</option>
                                            @endforeach
                                        </select>
                                        <x-primary-button type="button" @click.prevent="showCategoryModal = true" title="Ajouter une cat√©gorie">
                                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                                                <path fill-rule="evenodd" d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z" clip-rule="evenodd" />
                                            </svg>
                                        </x-primary-button>
                                    </div>
                                    <x-input-error :messages="$errors->get('supplier_category_id')" class="mt-2" />
                                </div>
                            </div>
                        </fieldset>

                        <div class="mt-8 pt-6 border-t border-gray-200 flex items-center justify-end gap-4">
                            <a href="{{ route('admin.suppliers.index') }}" class="text-sm font-semibold text-gray-600 hover:text-gray-900">Annuler</a>
                            <x-primary-button type="submit">
                                Enregistrer les Modifications
                            </x-primary-button>
                        </div>
                    </form>
                </div>

                @push('scripts')
                <script>
                    function supplierForm() {
                        return {
                            showCategoryModal: false,
                            newCategoryName: '',
                            categoryError: '',
                            tomSelect: null,

                            init() {
                                this.tomSelect = new TomSelect(this.$refs.categorySelect, {
                                    create: false,
                                    placeholder: 'S√©lectionnez une cat√©gorie...'
                                });

                                const selectedValue = '{{ old('supplier_category_id', $supplier->supplier_category_id) }}';
                                if (selectedValue) {
                                    this.tomSelect.setValue(selectedValue);
                                }
                            },

                            async submitCategory() {
                                this.categoryError = '';
                                if (!this.newCategoryName.trim()) {
                                    this.categoryError = "Le nom de la cat√©gorie ne peut pas √™tre vide.";
                                    return;
                                }

                                try {
                                    const response = await fetch('{{ route('admin.supplier-categories.store') }}', {
                                        method: 'POST',
                                        headers: {
                                            'Content-Type': 'application/json',
                                            'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').getAttribute('content'),
                                            'Accept': 'application/json'
                                        },
                                        body: JSON.stringify({
                                            name: this.newCategoryName
                                        })
                                    });

                                    const result = await response.json();

                                    if (response.ok && result.success) {
                                        const newCategory = result.category;
                                        this.tomSelect.addOption({
                                            value: newCategory.id,
                                            text: newCategory.name
                                        });
                                        this.tomSelect.setValue(newCategory.id);

                                        this.showCategoryModal = false;
                                        this.newCategoryName = '';

                                        window.dispatchEvent(new CustomEvent('toast-message', {
                                            detail: {
                                                message: 'Cat√©gorie ajout√©e avec succ√®s !',
                                                type: 'success'
                                            }
                                        }));

                                    } else {
                                        this.categoryError = result.message || 'Une erreur est survenue.';
                                        if (result.errors && result.errors.name) {
                                            this.categoryError = result.errors.name[0];
                                        }
                                    }
                                } catch (error) {
                                    console.error('Erreur:', error);
                                    this.categoryError = 'Une erreur r√©seau est survenue.';
                                }
                            }
                        }
                    }
                </script>
                @endpush
            </div>
        </div>
    </div>
</x-app-layout>
--- FIN DU FICHIER : ./resources/views/admin/suppliers/edit.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/admin/suppliers/index.blade.php
////////////////////////////////////////////////////////////////

<x-app-layout>
    <x-slot name="header">
        <h2 class="font-semibold text-xl text-gray-800 leading-tight">
            {{ __('Gestion des Fournisseurs') }}
        </h2>
    </x-slot>

    <div x-data="{
        showConfirmModal: false,
        modalTitle: '',
        modalDescription: '',
        modalButtonText: '',
        modalButtonClass: '',
        modalIconClass: '',
        formUrl: '',

        openModal(event) {
            const button = event.currentTarget;
            const supplier = JSON.parse(button.dataset.supplier);
            this.formUrl = button.dataset.url;

            this.modalTitle = 'Supprimer le Fournisseur';
            this.modalDescription = `√ätes-vous s√ªr de vouloir supprimer le fournisseur <strong>${supplier.name}</strong> ? Cette action est irr√©versible.`;
            this.modalButtonText = 'Confirmer la Suppression';
            this.modalButtonClass = 'bg-red-600 hover:bg-red-700';
            this.modalIconClass = 'text-red-600 bg-red-100';

            this.showConfirmModal = true;
        }
    }" class="py-12">
        <div class="max-w-7xl mx-auto sm:px-6 lg:px-8">
            <div class="bg-white overflow-hidden shadow-sm sm:rounded-lg">
                <div class="p-6 text-gray-900">
                    <div class="flex justify-between items-center mb-6">
                        <h3 class="text-xl font-semibold text-gray-700">{{ __('Liste des Fournisseurs') }}</h3>
                        @can('create suppliers')
                            <a href="{{ route('admin.suppliers.create') }}" class="inline-flex items-center px-4 py-2 bg-primary-600 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-primary-700">
                                <x-lucide-plus-circle class="w-4 h-4 mr-2" stroke-width="1.5"/>
                                Ajouter
                            </a>
                        @endcan
                    </div>

                    <div class="overflow-x-auto border border-gray-200 rounded-lg">
                        <table class="w-full divide-y divide-gray-200">
                            <thead class="bg-gray-100">
                                <tr>
                                    <th scope="col" class="px-6 py-3 text-left text-xs font-bold text-gray-600 uppercase tracking-wider">Nom</th>
                                    <th scope="col" class="px-6 py-3 text-left text-xs font-bold text-gray-600 uppercase tracking-wider">Cat√©gorie</th>
                                    <th scope="col" class="px-6 py-3 text-left text-xs font-bold text-gray-600 uppercase tracking-wider">Contact</th>
                                    <th scope="col" class="px-6 py-3 text-left text-xs font-bold text-gray-600 uppercase tracking-wider">T√©l√©phone</th>
                                    <th scope="col" class="px-6 py-3 text-right text-xs font-bold text-gray-600 uppercase tracking-wider">Actions</th>
                                </tr>
                            </thead>
                            <tbody class="bg-white divide-y divide-gray-200">
                                @forelse ($suppliers as $supplier)
                                    <tr class="hover:bg-gray-50">
                                        <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">{{ $supplier->name }}</td>
                                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{{ $supplier->category->name ?? 'N/A' }}</td>
                                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{{ $supplier->contact_name }}</td>
                                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{{ $supplier->phone }}</td>
                                        <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                                            <div class="flex items-center justify-end space-x-2">
                                                @can('edit suppliers')
                                                    <a href="{{ route('admin.suppliers.edit', $supplier) }}" title="Modifier" class="p-2 rounded-full text-gray-400 hover:bg-primary-100 hover:text-primary-600">
                                                        <x-lucide-file-pen-line class="h-5 w-5" stroke-width="1.5"/>
                                                    </a>
                                                @endcan
                                                @can('delete suppliers')
                                                    <button type="button"
                                                            @click="openModal($event)"
                                                            data-supplier='@json($supplier)'
                                                            data-url="{{ route('admin.suppliers.destroy', $supplier) }}"
                                                            title="Supprimer"
                                                            class="p-2 rounded-full text-gray-400 hover:bg-red-100 hover:text-red-600">
                                                        <x-lucide-trash-2 class="h-5 w-5" stroke-width="1.5"/>
                                                    </button>
                                                @endcan
                                            </div>
                                        </td>
                                    </tr>
                                @empty
                                    <tr>
                                        <td colspan="5" class="px-6 py-4 text-center text-sm text-gray-500">
                                            Aucun fournisseur trouv√©.
                                        </td>
                                    </tr>
                                @endforelse
                            </tbody>
                        </table>
                    </div>
                     @if ($suppliers->hasPages())
                        <div class="mt-6">
                            {{ $suppliers->links() }}
                        </div>
                    @endif
                </div>
            </div>
        </div>

        {{-- Fen√™tre Modale de Confirmation --}}
        <div x-show="showConfirmModal" x-transition class="fixed inset-0 z-50 flex items-center justify-center bg-gray-900 bg-opacity-60" style="display: none;">
            <div @click.away="showConfirmModal = false" class="bg-white rounded-lg shadow-xl p-6 w-full max-w-md mx-4">
                <div class="sm:flex sm:items-start">
                    <div class="mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full sm:mx-0 sm:h-10 sm:w-10" :class="modalIconClass">
                        <x-lucide-alert-triangle class="h-6 w-6" stroke-width="1.5"/>
                    </div>
                    <div class="mt-3 text-center sm:ml-4 sm:mt-0 sm:text-left">
                        <h3 class="text-base font-semibold leading-6 text-gray-900" x-text="modalTitle"></h3>
                        <div class="mt-2">
                            <p class="text-sm text-gray-600" x-html="modalDescription"></p>
                        </div>
                    </div>
                </div>
                <div class="mt-5 sm:mt-4 sm:flex sm:flex-row-reverse">
                    <form :action="formUrl" method="POST">
                        @csrf
                        @method('DELETE')
                        <button type="submit" class="inline-flex w-full justify-center rounded-md px-4 py-2 text-sm font-semibold text-white shadow-sm sm:ml-3 sm:w-auto" :class="modalButtonClass" x-text="modalButtonText">
                        </button>
                    </form>
                    <button type="button" @click="showConfirmModal = false" class="mt-3 inline-flex w-full justify-center rounded-md bg-white px-4 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50 sm:mt-0 sm:w-auto">
                        Annuler
                    </button>
                </div>
            </div>
        </div>
    </div>
</x-app-layout>
--- FIN DU FICHIER : ./resources/views/admin/suppliers/index.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/admin/users/create.blade.php
////////////////////////////////////////////////////////////////

{{-- resources/views/admin/users/create.blade.php --}}
<x-app-layout>
    <x-slot name="header">
        <h2 class="font-semibold text-xl text-gray-800 leading-tight">
            {{ __('Cr√©er un Nouvel Utilisateur') }}
        </h2>
    </x-slot>

    <div class="py-12">
        <div class="max-w-4xl mx-auto sm:px-6 lg:px-8">
            <div class="bg-white overflow-hidden shadow-sm sm:rounded-lg">
                <div class="p-8 text-gray-900">

                    @if ($errors->any())
                        <div class="mb-4 bg-red-100 border-l-4 border-red-500 text-red-700 p-4" role="alert">
                            <p class="font-bold">Erreurs de validation</p>
                            <ul>
                                @foreach ($errors->all() as $error)
                                    <li>{{ $error }}</li>
                                @endforeach
                            </ul>
                        </div>
                    @endif

                    <form method="POST" action="{{ route('admin.users.store') }}">
                        @csrf
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                            <div>
                                <x-input-label for="first_name" :value="__('Pr√©nom')" />
                                <x-text-input id="first_name" class="block mt-1 w-full" type="text" name="first_name" :value="old('first_name')" required autofocus />
                            </div>
                            <div>
                                <x-input-label for="last_name" :value="__('Nom de famille')" />
                                <x-text-input id="last_name" class="block mt-1 w-full" type="text" name="last_name" :value="old('last_name')" required />
                            </div>
                            <div class="md:col-span-2">
                                <x-input-label for="email" :value="__('Email')" />
                                <x-text-input id="email" class="block mt-1 w-full" type="email" name="email" :value="old('email')" required />
                            </div>
                            <div class="md:col-span-2">
                                <x-input-label for="phone" :value="__('T√©l√©phone (optionnel)')" />
                                <x-text-input id="phone" class="block mt-1 w-full" type="text" name="phone" :value="old('phone')" />
                            </div>
                            <div class="md:col-span-2">
                                <label for="organization_id" class="block font-medium text-sm text-gray-700">Organisation <span class="text-red-500">*</span></label>
                                <select name="organization_id" id="organization_id" class="mt-1 block w-full ..." required>
                                    <option value="">S√©lectionnez une organisation</option>
                                    @foreach($organizations as $org)
                                        <option value="{{ $org->id }}" @selected(old('organization_id') == $org->id)>{{ $org->name }}</option>
                                    @endforeach
                                </select>
                                <x-input-error :messages="$errors->get('organization_id')" class="mt-2" />
                            </div>
                            <div>
                                <x-input-label for="password" :value="__('Mot de passe')" />
                                <x-text-input id="password" class="block mt-1 w-full" type="password" name="password" required />
                            </div>
                            <div>
                                <x-input-label for="password_confirmation" :value="__('Confirmer le mot de passe')" />
                                <x-text-input id="password_confirmation" class="block mt-1 w-full" type="password" name="password_confirmation" required />
                            </div>
                        </div>

                        <div class="mt-6 border-t border-gray-200 pt-6">
                            <p class="font-medium text-gray-800">Assigner des R√¥les :</p>
                            <div class="mt-4 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                                @foreach ($roles as $role)
                                    <div class="flex items-center">
                                        <input type="checkbox" name="roles[]" id="role_{{ $role->id }}" value="{{ $role->id }}" class="h-4 w-4 rounded border-gray-300 text-violet-600 focus:ring-violet-500">
                                        <label for="role_{{ $role->id }}" class="ml-3 block text-sm font-medium text-gray-700">{{ $role->name }}</label>
                                    </div>
                                @endforeach
                            </div>
                        </div>

                        <div class="mt-8 flex items-center justify-end gap-4">
                            <a href="{{ route('admin.users.index') }}" class="text-sm font-semibold text-gray-600 hover:text-gray-900">{{ __('Annuler') }}</a>
                            <button type="submit" class="inline-flex items-center px-4 py-2 bg-violet-600 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-violet-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-violet-500 transition ease-in-out duration-150">
                                {{ __('Cr√©er l\'Utilisateur') }}
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</x-app-layout>

--- FIN DU FICHIER : ./resources/views/admin/users/create.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/admin/users/edit.blade.php
////////////////////////////////////////////////////////////////

<x-app-layout>
    <x-slot name="header">
        <h2 class="font-semibold text-xl text-gray-800 leading-tight">
            {{ __('Modifier l\'Utilisateur :') }} <span class="text-violet-700">{{ $user->name }}</span>
        </h2>
    </x-slot>

    <div class="py-12">
        <div class="max-w-4xl mx-auto sm:px-6 lg:px-8">
            <div class="bg-white overflow-hidden shadow-sm sm:rounded-lg">
                <div class="p-8 text-gray-900">
                    
                    @if ($errors->any())
                        <div class="mb-4 bg-red-100 border-l-4 border-red-500 text-red-700 p-4" role="alert">
                            <p class="font-bold">Veuillez corriger les erreurs ci-dessous.</p>
                        </div>
                    @endif

                    <form method="POST" action="{{ route('admin.users.update', $user) }}">
                        @csrf
                        @method('PUT')
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                            
                            {{-- Pr√©nom --}}
                            <div>
                                <label for="first_name" class="block font-medium text-sm text-gray-700">Pr√©nom <span class="text-red-500">*</span></label>
                                <x-text-input id="first_name" class="block mt-1 w-full" type="text" name="first_name" :value="old('first_name', $user->first_name)" required autofocus />
                                <x-input-error :messages="$errors->get('first_name')" class="mt-2" />
                            </div>

                            {{-- Nom --}}
                            <div>
                                <label for="last_name" class="block font-medium text-sm text-gray-700">Nom <span class="text-red-500">*</span></label>
                                <x-text-input id="last_name" class="block mt-1 w-full" type="text" name="last_name" :value="old('last_name', $user->last_name)" required />
                                <x-input-error :messages="$errors->get('last_name')" class="mt-2" />
                            </div>

                            {{-- Email --}}
                            <div class="md:col-span-2">
                                <label for="email" class="block font-medium text-sm text-gray-700">Email <span class="text-red-500">*</span></label>
                                <x-text-input id="email" class="block mt-1 w-full" type="email" name="email" :value="old('email', $user->email)" required />
                                <x-input-error :messages="$errors->get('email')" class="mt-2" />
                            </div>

                             {{-- Organisation --}}
                            <div class="md:col-span-2">
                                <label for="organization_id" class="block font-medium text-sm text-gray-700">Organisation <span class="text-red-500">*</span></label>
                                <select name="organization_id" id="organization_id" class="mt-1 block w-full border-gray-300 focus:border-violet-500 focus:ring-violet-500 rounded-md shadow-sm" required>
                                    @foreach($organizations as $org)
                                        <option value="{{ $org->id }}" @selected(old('organization_id', $user->organization_id) == $org->id)>
                                            {{ $org->name }}
                                        </option>
                                    @endforeach
                                </select>
                                <x-input-error :messages="$errors->get('organization_id')" class="mt-2" />
                            </div>

                            {{-- Mot de passe --}}
                            <div class="border-t pt-6 md:col-span-2">
                                <p class="text-sm text-gray-500">Laissez les champs de mot de passe vides si vous ne souhaitez pas le modifier.</p>
                            </div>
                            <div>
                                <label for="password" class="block font-medium text-sm text-gray-700">Nouveau Mot de passe</label>
                                <x-text-input id="password" class="block mt-1 w-full" type="password" name="password" autocomplete="new-password" />
                                <x-input-error :messages="$errors->get('password')" class="mt-2" />
                            </div>
                            <div>
                                <label for="password_confirmation" class="block font-medium text-sm text-gray-700">Confirmation du Mot de passe</label>
                                <x-text-input id="password_confirmation" class="block mt-1 w-full" type="password" name="password_confirmation" />
                            </div>
                        </div>

                        {{-- R√¥les --}}
                        <div class="mt-6 border-t pt-6">
                            <label class="block font-medium text-sm text-gray-700">R√¥les</label>
                            <div class="mt-2 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4">
                                @foreach ($roles as $role)
                                    <div class="flex items-center">
                                        <input type="checkbox" name="roles[]" id="role_{{ $role->id }}" value="{{ $role->id }}" class="h-4 w-4 rounded border-gray-300 text-violet-600 focus:ring-violet-500"
                                            @checked(in_array($role->id, old('roles', $user->roles->pluck('id')->toArray())))>
                                        <label for="role_{{ $role->id }}" class="ml-3 block text-sm font-medium text-gray-700">{{ $role->name }}</label>
                                    </div>
                                @endforeach
                            </div>
                            <x-input-error :messages="$errors->get('roles')" class="mt-2" />
                        </div>

                        <div class="mt-8 flex items-center justify-end gap-4">
                            <a href="{{ route('admin.users.index') }}" class="text-sm font-semibold text-gray-600 hover:text-gray-900">Annuler</a>
                            <button type="submit" class="inline-flex items-center px-4 py-2 bg-violet-600 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-violet-700">
                                Mettre √† Jour
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</x-app-layout>
--- FIN DU FICHIER : ./resources/views/admin/users/edit.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/admin/users/index.blade.php
////////////////////////////////////////////////////////////////

{{-- resources/views/admin/users/index.blade.php --}}
<x-app-layout>
    <x-slot name="header">
        <h2 class="font-semibold text-xl text-gray-800 leading-tight">
            {{ __('Administration - Gestion des Utilisateurs') }}
        </h2>
    </x-slot>

    {{-- Initialisation d'Alpine.js pour la modale de confirmation --}}
    <div x-data="{ showConfirmModal: false, userToDelete: {}, deleteFormUrl: '' }" class="py-12">
        <div class="max-w-7xl mx-auto sm:px-6 lg:px-8">
            @if (session('success'))
                <div class="mb-4 bg-green-100 border-l-4 border-green-500 text-green-700 p-4" role="alert">
                    <p class="font-bold">{{ session('success') }}</p>
                </div>
            @endif

            <div class="bg-white overflow-hidden shadow-sm sm:rounded-lg">
                <div class="p-6 text-gray-900">

                    <div class="flex justify-between items-center mb-6">
                        <h3 class="text-xl font-semibold text-gray-700">{{ __('Liste des Utilisateurs') }}</h3>
                        @can('create users')
                            <a href="{{ route('admin.users.create') }}" class="inline-flex items-center px-4 py-2 bg-primary-600 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 transition ease-in-out duration-150">
                                <x-lucide-plus-circle class="w-5 h-5 mr-2"/>
                                {{ __('Ajouter un Utilisateur') }}
                            </a>
                        @endcan
                    </div>

                    <div class="overflow-x-auto border border-gray-200 rounded-lg">
                        <table class="w-full divide-y divide-gray-200">
                            <thead class="bg-gray-100">
                                <tr>
                                    <th scope="col" class="px-6 py-3 text-left text-xs font-bold text-gray-600 uppercase tracking-wider">Nom Complet</th>
                                    <th scope="col" class="px-6 py-3 text-left text-xs font-bold text-gray-600 uppercase tracking-wider">Email</th>
                                    <th scope="col" class="px-6 py-3 text-left text-xs font-bold text-gray-600 uppercase tracking-wider">R√¥les</th>
                                    <th scope="col" class="px-6 py-3 text-left text-xs font-bold text-gray-600 uppercase tracking-wider">Inscrit le</th>
                                    <th scope="col" class="px-6 py-3 text-right text-xs font-bold text-gray-600 uppercase tracking-wider">Actions</th>
                                </tr>
                            </thead>
                            <tbody class="bg-white divide-y divide-gray-200">
                                @forelse ($users as $user)
                                    <tr class="hover:bg-gray-50">
                                        <td class="px-6 py-4 text-sm text-gray-800">{{ $user->name }}</td>
                                        <td class="px-6 py-4 text-sm text-gray-500">{{ $user->email }}</td>
                                        <td class="px-6 py-4 text-sm text-gray-500">
                                            @forelse($user->roles as $role)
                                                <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-primary-100 text-primary-800">
                                                    {{ $role->name }}
                                                </span>
                                            @empty
                                                <span class="text-xs italic text-gray-400">Aucun r√¥le</span>
                                            @endforelse
                                        </td>
                                        <td class="px-6 py-4 text-sm text-gray-500">{{ $user->created_at->format('d/m/Y') }}</td>

                                        <td class="px-6 py-4 text-right text-sm font-medium">
                                            <div class="flex items-center justify-end space-x-2">
                                                @can('edit users')
                                                    <a href="{{ route('admin.users.edit', $user) }}" title="Modifier" class="p-2 rounded-full text-gray-400 hover:bg-primary-100 hover:text-primary-600 transition-colors duration-200">
                                                        <x-lucide-file-pen-line class="h-5 w-5"/>
                                                    </a>
                                                @endcan
                                                @can('delete users')
                                                    <button type="button" 
                                                            @click="showConfirmModal = true; userToDelete = {{ json_encode($user->only(['id', 'name'])) }}; deleteFormUrl = '{{ route('admin.users.destroy', $user->id) }}'" 
                                                            title="Supprimer" 
                                                            class="p-2 rounded-full text-gray-400 hover:bg-red-100 hover:text-red-600 transition-colors duration-200">
                                                        <x-lucide-trash-2 class="h-5 w-5"/>
                                                    </button>
                                                @endcan
                                            </div>
                                        </td>

                                    </tr>
                                @empty
                                    <tr><td colspan="5" class="px-6 py-4 text-center text-sm text-gray-500">Aucun utilisateur trouv√©.</td></tr>
                                @endforelse
                            </tbody>
                        </table>
                    </div>
                    <div class="mt-6">{{ $users->links() }}</div>
                </div>
            </div>
        </div>

        {{-- Fen√™tre Modale de Confirmation de Suppression --}}
        <div x-show="showConfirmModal" x-transition:enter="ease-out duration-300" x-transition:enter-start="opacity-0" x-transition:enter-end="opacity-100" x-transition:leave="ease-in duration-200" x-transition:leave-start="opacity-100" x-transition:leave-end="opacity-0" class="fixed inset-0 z-50 flex items-center justify-center bg-gray-900 bg-opacity-60" style="display: none;">
            <div @click.away="showConfirmModal = false" class="bg-white rounded-lg shadow-xl p-6 md:p-8 w-full max-w-md mx-4">
                <div class="sm:flex sm:items-start">
                    <div class="mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10">
                        <x-lucide-alert-triangle class="h-6 w-6 text-red-600"/>
                    </div>
                    <div class="mt-3 text-center sm:ml-4 sm:mt-0 sm:text-left">
                        <h3 class="text-base font-semibold leading-6 text-gray-900" id="modal-title">Confirmer la Suppression</h3>
                        <div class="mt-2">
                            <p class="text-sm text-gray-600">√ätes-vous s√ªr de vouloir supprimer l'utilisateur <strong class="font-bold" x-text="userToDelete.name"></strong> ?</p>
                            <p class="mt-1 text-sm text-gray-500">Cette action est d√©finitive et irr√©versible.</p>
                        </div>
                    </div>
                </div>
                <div class="mt-5 sm:mt-4 sm:flex sm:flex-row-reverse">
                    <form :action="deleteFormUrl" method="POST" x-ref="deleteForm">
                        @csrf
                        @method('DELETE')
                        <button type="submit" class="inline-flex w-full justify-center rounded-md bg-red-600 px-4 py-2 text-sm font-semibold text-white shadow-sm hover:bg-red-700 sm:ml-3 sm:w-auto">
                            Confirmer la Suppression
                        </button>
                    </form>
                    <button type="button" @click="showConfirmModal = false" class="mt-3 inline-flex w-full justify-center rounded-md bg-white px-4 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50 sm:mt-0 sm:w-auto">
                        Annuler
                    </button>
                </div>
            </div>
        </div>

    </div>
</x-app-layout>
--- FIN DU FICHIER : ./resources/views/admin/users/index.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/admin/vehicles/create.blade.php
////////////////////////////////////////////////////////////////

<x-app-layout>
    <x-slot name="header">
        <h2 class="font-semibold text-xl text-gray-800 leading-tight">{{ __('Ajouter un Nouveau V√©hicule') }}</h2>
    </x-slot>

    <div class="py-12">
        <div class="max-w-4xl mx-auto sm:px-6 lg:px-8">
            <div class="bg-white overflow-hidden shadow-sm sm:rounded-lg">
                <div class="p-8 text-gray-900" x-data="{
                    currentStep: {{ old('current_step', 1) }},
                    initTomSelect() {
                        new TomSelect(this.$refs.vehicle_type_id, { create: false, placeholder: 'S√©lectionnez un type...' });
                        new TomSelect(this.$refs.fuel_type_id, { create: false, placeholder: 'S√©lectionnez un carburant...' });
                        new TomSelect(this.$refs.transmission_type_id, { create: false, placeholder: 'S√©lectionnez une transmission...' });
                        new TomSelect(this.$refs.status_id, { create: false, placeholder: 'S√©lectionnez un statut...' });
                        
                        // Configuration TomSelect pour les utilisateurs
                        if (this.$refs.users && window.initUserTomSelect) {
                            window.initUserTomSelect(this.$refs.users);
                        }
                    }
                }" x-init="
                    initTomSelect();
                    @if ($errors->any())
                        let errors = {{ json_encode($errors->messages()) }};
                        let firstErrorStep = null;
                        const fieldToStepMap = { 'registration_plate': 1, 'vin': 1, 'brand': 1, 'model': 1, 'color': 1, 'vehicle_type_id': 2, 'fuel_type_id': 2, 'transmission_type_id': 2, 'manufacturing_year': 2, 'seats': 2, 'power_hp': 2, 'engine_displacement_cc': 2, 'acquisition_date': 3, 'purchase_price': 3, 'current_value': 3, 'initial_mileage': 3, 'status_id': 3, 'notes': 3 };
                        for (const field in fieldToStepMap) {
                            if (errors.hasOwnProperty(field)) { firstErrorStep = fieldToStepMap[field]; break; }
                        }
                        if (firstErrorStep) { currentStep = firstErrorStep; }
                    @endif
                ">

                    <ol class="flex items-center w-full mb-8">
                        <li :class="currentStep >= 1 ? 'text-primary-600' : 'text-gray-500'" class="flex w-full items-center after:content-[''] after:w-full after:h-1 after:border-b after:border-4 after:inline-block" :class="currentStep > 1 ? 'after:border-primary-600' : 'after:border-gray-200'">
                            <span class="flex items-center justify-center w-10 h-10 rounded-full shrink-0" :class="currentStep >= 1 ? 'bg-primary-100' : 'bg-gray-100'">
                                <x-lucide-contact class="w-5 h-5"/>
                            </span>
                        </li>
                        <li :class="currentStep >= 2 ? 'text-primary-600' : 'text-gray-500'" class="flex w-full items-center after:content-[''] after:w-full after:h-1 after:border-b after:border-4 after:inline-block" :class="currentStep > 2 ? 'after:border-primary-600' : 'after:border-gray-200'">
                            <span class="flex items-center justify-center w-10 h-10 rounded-full shrink-0" :class="currentStep >= 2 ? 'bg-primary-100' : 'bg-gray-100'">
                                <x-lucide-wrench class="w-5 h-5"/>
                            </span>
                        </li>
                        <li :class="currentStep === 3 ? 'text-primary-600' : 'text-gray-500'" class="flex items-center">
                            <span class="flex items-center justify-center w-10 h-10 rounded-full shrink-0" :class="currentStep === 3 ? 'bg-primary-100' : 'bg-gray-100'">
                                <x-lucide-key-round class="w-5 h-5"/>
                            </span>
                        </li>
                    </ol>

                    <form method="POST" action="{{ route('admin.vehicles.store') }}" enctype="multipart/form-data">
                        @csrf
                        <input type="hidden" name="current_step" x-model="currentStep">

                        <fieldset x-show="currentStep === 1" class="border border-gray-200 p-6 rounded-lg">
                            <legend class="text-lg font-semibold text-gray-800 px-2">√âtape 1: Identification</legend>
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mt-4">
                                <div>
                                    <x-input-label for="registration_plate" value="Immatriculation" required />
                                    <x-text-input id="registration_plate" name="registration_plate" :value="old('registration_plate')" class="mt-1 block w-full" />
                                    <x-input-error :messages="$errors->get('registration_plate')" class="mt-2" />
                                </div>
                                <div>
                                    <x-input-label for="vin" value="Num√©ro de s√©rie (VIN)" />
                                    <x-text-input id="vin" name="vin" :value="old('vin')" class="mt-1 block w-full" />
                                    <x-input-error :messages="$errors->get('vin')" class="mt-2" />
                                </div>
                                <div>
                                    <x-input-label for="brand" value="Marque" required />
                                    <x-text-input id="brand" name="brand" :value="old('brand')" class="mt-1 block w-full" />
                                    <x-input-error :messages="$errors->get('brand')" class="mt-2" />
                                </div>
                                <div>
                                    <x-input-label for="model" value="Mod√®le" required />
                                    <x-text-input id="model" name="model" :value="old('model')" class="mt-1 block w-full" />
                                    <x-input-error :messages="$errors->get('model')" class="mt-2" />
                                </div>
                                <div class="md:col-span-2">
                                    <x-input-label for="color" value="Couleur" />
                                    <x-text-input id="color" name="color" :value="old('color')" class="mt-1 block w-full" />
                                    <x-input-error :messages="$errors->get('color')" class="mt-2" />
                                </div>
                            </div>
                        </fieldset>

                        <fieldset x-show="currentStep === 2" style="display: none;" class="border border-gray-200 p-6 rounded-lg">
                            <legend class="text-lg font-semibold text-gray-800 px-2">√âtape 2: Caract√©ristiques Techniques</legend>
                            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mt-4">
                                <div>
                                    <x-input-label for="vehicle_type_id" value="Type de V√©hicule" required />
                                    <select x-ref="vehicle_type_id" name="vehicle_type_id" id="vehicle_type_id">
                                        @foreach($vehicleTypes as $type)<option value="{{ $type->id }}" @selected(old('vehicle_type_id') == $type->id)>{{ $type->name }}</option>@endforeach
                                    </select>
                                    <x-input-error :messages="$errors->get('vehicle_type_id')" class="mt-2" />
                                </div>
                                <div>
                                    <x-input-label for="fuel_type_id" value="Type de Carburant" required />
                                    <select x-ref="fuel_type_id" name="fuel_type_id" id="fuel_type_id">
                                        @foreach($fuelTypes as $type)<option value="{{ $type->id }}" @selected(old('fuel_type_id') == $type->id)>{{ $type->name }}</option>@endforeach
                                    </select>
                                    <x-input-error :messages="$errors->get('fuel_type_id')" class="mt-2" />
                                </div>
                                <div>
                                    <x-input-label for="transmission_type_id" value="Type de Transmission" required />
                                    <select x-ref="transmission_type_id" name="transmission_type_id" id="transmission_type_id">
                                        @foreach($transmissionTypes as $type)<option value="{{ $type->id }}" @selected(old('transmission_type_id') == $type->id)>{{ $type->name }}</option>@endforeach
                                    </select>
                                    <x-input-error :messages="$errors->get('transmission_type_id')" class="mt-2" />
                                </div>
                                <div>
                                    <x-input-label for="manufacturing_year" value="Ann√©e de Fabrication" />
                                    <x-text-input id="manufacturing_year" type="number" name="manufacturing_year" :value="old('manufacturing_year')" class="mt-1 block w-full" />
                                    <x-input-error :messages="$errors->get('manufacturing_year')" class="mt-2" />
                                </div>
                                <div>
                                    <x-input-label for="seats" value="Nombre de places" />
                                    <x-text-input id="seats" type="number" name="seats" :value="old('seats')" class="mt-1 block w-full" />
                                    <x-input-error :messages="$errors->get('seats')" class="mt-2" />
                                </div>
                                <div>
                                    <x-input-label for="power_hp" value="Puissance (CV)" />
                                    <x-text-input id="power_hp" type="number" name="power_hp" :value="old('power_hp')" class="mt-1 block w-full" />
                                    <x-input-error :messages="$errors->get('power_hp')" class="mt-2" />
                                </div>
                                <div class="lg:col-span-3">
                                    <x-input-label for="engine_displacement_cc" value="Cylindr√©e (cc)" />
                                    <x-text-input id="engine_displacement_cc" type="number" name="engine_displacement_cc" :value="old('engine_displacement_cc')" class="mt-1 block w-full" />
                                    <x-input-error :messages="$errors->get('engine_displacement_cc')" class="mt-2" />
                                </div>
                            </div>
                        </fieldset>

                        <fieldset x-show="currentStep === 3" style="display: none;" class="border border-gray-200 p-6 rounded-lg">
                            <legend class="text-lg font-semibold text-gray-800 px-2">√âtape 3: Acquisition & Statut</legend>
                             <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mt-4">
                                <div>
                                    <x-input-label for="acquisition_date" value="Date d'acquisition" />
                                    <x-text-input id="acquisition_date" type="date" name="acquisition_date" :value="old('acquisition_date')" class="mt-1 block w-full" />
                                    <x-input-error :messages="$errors->get('acquisition_date')" class="mt-2" />
                                </div>
                                <div>
                                    <x-input-label for="purchase_price" value="Prix d'achat (DA)" />
                                    <x-text-input id="purchase_price" type="number" step="0.01" name="purchase_price" :value="old('purchase_price')" class="mt-1 block w-full" />
                                    <x-input-error :messages="$errors->get('purchase_price')" class="mt-2" />
                                </div>
                                <div>
                                    <x-input-label for="current_value" value="Valeur actuelle (DA)" />
                                    <x-text-input id="current_value" type="number" step="0.01" name="current_value" :value="old('current_value')" class="mt-1 block w-full" />
                                    <x-input-error :messages="$errors->get('current_value')" class="mt-2" />
                                </div>
                                <div>
                                    <x-input-label for="initial_mileage" value="Kilom√©trage Initial" />
                                    <x-text-input id="initial_mileage" type="number" name="initial_mileage" :value="old('initial_mileage', 0)" class="mt-1 block w-full" />
                                    <x-input-error :messages="$errors->get('initial_mileage')" class="mt-2" />
                                </div>
                                <div class="md:col-span-2">
                                    <x-input-label for="status_id" value="Statut Initial" required />
                                    <select x-ref="status_id" name="status_id" id="status_id">
                                        @foreach($vehicleStatuses as $status)<option value="{{ $status->id }}" @selected(old('status_id') == $status->id)>{{ $status->name }}</option>@endforeach
                                    </select>
                                    <x-input-error :messages="$errors->get('status_id')" class="mt-2" />
                                </div>
                                {{-- --- CHAMP UTILISATEURS AM√âLIOR√â --- --}}
                                <div class="md:col-span-2">
                                    <x-input-label for="users" value="Utilisateurs Autoris√©s" />
                                    <select name="users[]" id="users" multiple x-ref="users" class="tomselect-users">
                                        @foreach($users as $user)
                                            <option value="{{ $user->id }}" 
                                                    data-name="{{ $user->name }}" 
                                                    data-email="{{ $user->email }}"
                                                    @selected(in_array($user->id, old('users', [])))>
                                                {{ $user->name }} ({{ $user->email }})
                                            </option>
                                        @endforeach
                                    </select>
                                    <p class="mt-1 text-xs text-gray-500">
                                        Recherchez et s√©lectionnez les utilisateurs autoris√©s √† utiliser ce v√©hicule.
                                    </p>
                                    <x-input-error :messages="$errors->get('users')" class="mt-2" />
                                </div>
                                {{-- --- FIN CHAMP UTILISATEURS --- --}}
                                <div class="md:col-span-2">
                                    <x-input-label for="notes" value="Notes" />
                                    <textarea id="notes" name="notes" rows="3" class="block mt-1 w-full border-gray-300 focus:border-primary-500 focus:ring-primary-500 rounded-md shadow-sm">{{ old('notes') }}</textarea>
                                    <x-input-error :messages="$errors->get('notes')" class="mt-2" />
                                </div>
                             </div>
                        </fieldset>

                        <div class="mt-8 pt-6 border-t border-gray-200 flex items-center justify-between">
                            <x-secondary-button type="button" x-show="currentStep > 1" @click="currentStep--">Pr√©c√©dent</x-secondary-button>
                            <div class="flex-grow"></div> <div class="flex items-center gap-4">
                                <a href="{{ route('admin.vehicles.index') }}" class="text-sm font-semibold text-gray-600 hover:text-gray-900">Annuler</a>
                                <x-primary-button type="button" x-show="currentStep < 3" @click="currentStep++">Suivant</x-primary-button>
                                <button type="submit" x-show="currentStep === 3" class="inline-flex items-center px-4 py-2 bg-green-600 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-green-700">
                                    Enregistrer le V√©hicule
                                </button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</x-app-layout>
--- FIN DU FICHIER : ./resources/views/admin/vehicles/create.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/admin/vehicles/edit.blade.php
////////////////////////////////////////////////////////////////

<x-app-layout>
    <x-slot name="header">
        <h2 class="font-semibold text-xl text-gray-800 leading-tight">Modifier le V√©hicule : <span class="text-primary-600">{{ $vehicle->registration_plate }}</span></h2>
    </x-slot>

    <div class="py-12">
        <div class="max-w-4xl mx-auto sm:px-6 lg:px-8">
            <div class="bg-white overflow-hidden shadow-sm sm:rounded-lg">
                <div class="p-8 text-gray-900" x-data="{
                    currentStep: {{ old('current_step', 1) }},
                    initTomSelect() {
                        const tomConfig = (selectedValue) => ({
                            create: false,
                            placeholder: 'S√©lectionnez...',
                            items: [selectedValue]
                        });
                        new TomSelect(this.$refs.vehicle_type_id, tomConfig('{{ old('vehicle_type_id', $vehicle->vehicle_type_id) }}'));
                        new TomSelect(this.$refs.fuel_type_id, tomConfig('{{ old('fuel_type_id', $vehicle->fuel_type_id) }}'));
                        new TomSelect(this.$refs.transmission_type_id, tomConfig('{{ old('transmission_type_id', $vehicle->transmission_type_id) }}'));
                        new TomSelect(this.$refs.status_id, tomConfig('{{ old('status_id', $vehicle->status_id) }}'));
                        
                        // Configuration TomSelect pour les utilisateurs avec pr√©s√©lection
                        if (this.$refs.users && window.initUserTomSelect) {
                            const assignedUserIds = @json(old('users', $vehicle->users->pluck('id')->toArray()));
                            window.initUserTomSelect(this.$refs.users, assignedUserIds);
                        }
                    }
                }" x-init="
                    initTomSelect();
                     @if ($errors->any())
                        let errors = {{ json_encode($errors->messages()) }};
                        let firstErrorStep = null;
                        const fieldToStepMap = { 'registration_plate': 1, 'vin': 1, 'brand': 1, 'model': 1, 'color': 1, 'vehicle_type_id': 2, 'fuel_type_id': 2, 'transmission_type_id': 2, 'manufacturing_year': 2, 'seats': 2, 'power_hp': 2, 'engine_displacement_cc': 2, 'acquisition_date': 3, 'purchase_price': 3, 'current_value': 3, 'initial_mileage': 3, 'status_id': 3, 'notes': 3 };
                        for (const field in fieldToStepMap) {
                            if (errors.hasOwnProperty(field)) { firstErrorStep = fieldToStepMap[field]; break; }
                        }
                        if (firstErrorStep) { currentStep = firstErrorStep; }
                    @endif
                ">

                    <ol class="flex items-center w-full mb-8">
                        <li :class="currentStep >= 1 ? 'text-primary-600' : 'text-gray-500'" class="flex w-full items-center after:content-[''] after:w-full after:h-1 after:border-b after:border-4 after:inline-block" :class="currentStep > 1 ? 'after:border-primary-600' : 'after:border-gray-200'">
                            <span class="flex items-center justify-center w-10 h-10 rounded-full shrink-0" :class="currentStep >= 1 ? 'bg-primary-100' : 'bg-gray-100'">
                                <x-lucide-contact class="w-5 h-5"/>
                            </span>
                        </li>
                        <li :class="currentStep >= 2 ? 'text-primary-600' : 'text-gray-500'" class="flex w-full items-center after:content-[''] after:w-full after:h-1 after:border-b after:border-4 after:inline-block" :class="currentStep > 2 ? 'after:border-primary-600' : 'after:border-gray-200'">
                            <span class="flex items-center justify-center w-10 h-10 rounded-full shrink-0" :class="currentStep >= 2 ? 'bg-primary-100' : 'bg-gray-100'">
                                <x-lucide-wrench class="w-5 h-5"/>
                            </span>
                        </li>
                        <li :class="currentStep === 3 ? 'text-primary-600' : 'text-gray-500'" class="flex items-center">
                            <span class="flex items-center justify-center w-10 h-10 rounded-full shrink-0" :class="currentStep === 3 ? 'bg-primary-100' : 'bg-gray-100'">
                                <x-lucide-key-round class="w-5 h-5"/>
                            </span>
                        </li>
                    </ol>

                    <form method="POST" action="{{ route('admin.vehicles.update', $vehicle->id) }}" enctype="multipart/form-data">
                        @csrf
                        @method('PUT')
                        <input type="hidden" name="current_step" x-model="currentStep">

                        <fieldset x-show="currentStep === 1" class="border border-gray-200 p-6 rounded-lg">
                             <legend class="text-lg font-semibold text-gray-800 px-2">√âtape 1: Identification</legend>
                             <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mt-4">
                                <div>
                                    <x-input-label for="registration_plate" value="Immatriculation" required />
                                    <x-text-input id="registration_plate" name="registration_plate" :value="old('registration_plate', $vehicle->registration_plate)" class="mt-1 block w-full" />
                                    <x-input-error :messages="$errors->get('registration_plate')" class="mt-2" />
                                </div>
                                <div>
                                    <x-input-label for="vin" value="Num√©ro de s√©rie (VIN)" />
                                    <x-text-input id="vin" name="vin" :value="old('vin', $vehicle->vin)" class="mt-1 block w-full" />
                                    <x-input-error :messages="$errors->get('vin')" class="mt-2" />
                                </div>
                                <div>
                                    <x-input-label for="brand" value="Marque" required />
                                    <x-text-input id="brand" name="brand" :value="old('brand', $vehicle->brand)" class="mt-1 block w-full" />
                                    <x-input-error :messages="$errors->get('brand')" class="mt-2" />
                                </div>
                                <div>
                                    <x-input-label for="model" value="Mod√®le" required />
                                    <x-text-input id="model" name="model" :value="old('model', $vehicle->model)" class="mt-1 block w-full" />
                                    <x-input-error :messages="$errors->get('model')" class="mt-2" />
                                </div>
                                 <div class="md:col-span-2">
                                    <x-input-label for="color" value="Couleur" />
                                    <x-text-input id="color" name="color" :value="old('color', $vehicle->color)" class="mt-1 block w-full" />
                                    <x-input-error :messages="$errors->get('color')" class="mt-2" />
                                </div>
                            </div>
                        </fieldset>

                        <fieldset x-show="currentStep === 2" style="display: none;" class="border border-gray-200 p-6 rounded-lg">
                             <legend class="text-lg font-semibold text-gray-800 px-2">√âtape 2: Caract√©ristiques Techniques</legend>
                             <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mt-4">
                                <div>
                                    <x-input-label for="vehicle_type_id" value="Type de V√©hicule" required />
                                    <select x-ref="vehicle_type_id" name="vehicle_type_id" id="vehicle_type_id">
                                        @foreach($vehicleTypes as $type)<option value="{{ $type->id }}">{{ $type->name }}</option>@endforeach
                                    </select>
                                    <x-input-error :messages="$errors->get('vehicle_type_id')" class="mt-2" />
                                </div>
                                <div>
                                    <x-input-label for="fuel_type_id" value="Type de Carburant" required />
                                    <select x-ref="fuel_type_id" name="fuel_type_id" id="fuel_type_id">
                                        @foreach($fuelTypes as $type)<option value="{{ $type->id }}">{{ $type->name }}</option>@endforeach
                                    </select>
                                    <x-input-error :messages="$errors->get('fuel_type_id')" class="mt-2" />
                                </div>
                                <div>
                                    <x-input-label for="transmission_type_id" value="Type de Transmission" required />
                                    <select x-ref="transmission_type_id" name="transmission_type_id" id="transmission_type_id">
                                        @foreach($transmissionTypes as $type)<option value="{{ $type->id }}">{{ $type->name }}</option>@endforeach
                                    </select>
                                    <x-input-error :messages="$errors->get('transmission_type_id')" class="mt-2" />
                                </div>
                                <div>
                                    <x-input-label for="manufacturing_year" value="Ann√©e de Fabrication" />
                                    <x-text-input id="manufacturing_year" type="number" name="manufacturing_year" :value="old('manufacturing_year', $vehicle->manufacturing_year)" class="mt-1 block w-full" />
                                    <x-input-error :messages="$errors->get('manufacturing_year')" class="mt-2" />
                                </div>
                                <div>
                                    <x-input-label for="seats" value="Nombre de places" />
                                    <x-text-input id="seats" type="number" name="seats" :value="old('seats', $vehicle->seats)" class="mt-1 block w-full" />
                                    <x-input-error :messages="$errors->get('seats')" class="mt-2" />
                                </div>
                                 <div>
                                    <x-input-label for="power_hp" value="Puissance (CV)" />
                                    <x-text-input id="power_hp" type="number" name="power_hp" :value="old('power_hp', $vehicle->power_hp)" class="mt-1 block w-full" />
                                    <x-input-error :messages="$errors->get('power_hp')" class="mt-2" />
                                </div>
                                <div class="lg:col-span-3">
                                    <x-input-label for="engine_displacement_cc" value="Cylindr√©e (cc)" />
                                    <x-text-input id="engine_displacement_cc" type="number" name="engine_displacement_cc" :value="old('engine_displacement_cc', $vehicle->engine_displacement_cc)" class="mt-1 block w-full" />
                                    <x-input-error :messages="$errors->get('engine_displacement_cc')" class="mt-2" />
                                </div>
                            </div>
                        </fieldset>

                        <fieldset x-show="currentStep === 3" style="display: none;" class="border border-gray-200 p-6 rounded-lg">
                             <legend class="text-lg font-semibold text-gray-800 px-2">√âtape 3: Acquisition & Statut</legend>
                             <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mt-4">
                                <div>
                                    <x-input-label for="acquisition_date" value="Date d'acquisition" />
                                    <x-text-input id="acquisition_date" type="date" name="acquisition_date" :value="old('acquisition_date', $vehicle->acquisition_date?->format('Y-m-d'))" class="mt-1 block w-full" />
                                    <x-input-error :messages="$errors->get('acquisition_date')" class="mt-2" />
                                </div>
                                 <div>
                                    <x-input-label for="purchase_price" value="Prix d'achat (DA)" />
                                    <x-text-input id="purchase_price" type="number" step="0.01" name="purchase_price" :value="old('purchase_price', $vehicle->purchase_price)" class="mt-1 block w-full" />
                                    <x-input-error :messages="$errors->get('purchase_price')" class="mt-2" />
                                </div>
                                <div>
                                    <x-input-label for="current_value" value="Valeur actuelle (DA)" />
                                    <x-text-input id="current_value" type="number" step="0.01" name="current_value" :value="old('current_value', $vehicle->current_value)" class="mt-1 block w-full" />
                                    <x-input-error :messages="$errors->get('current_value')" class="mt-2" />
                                </div>
                                <div>
                                    <x-input-label for="current_mileage" value="Kilom√©trage Actuel" />
                                    <x-text-input id="current_mileage" type="number" name="current_mileage" :value="old('current_mileage', $vehicle->current_mileage)" class="mt-1 block w-full" />
                                    <x-input-error :messages="$errors->get('current_mileage')" class="mt-2" />
                                </div>
                                <div class="md:col-span-2">
                                    <x-input-label for="status_id" value="Statut" required />
                                    <select x-ref="status_id" name="status_id" id="status_id">
                                        @foreach($vehicleStatuses as $status)<option value="{{ $status->id }}">{{ $status->name }}</option>@endforeach
                                    </select>
                                    <x-input-error :messages="$errors->get('status_id')" class="mt-2" />
                                </div>
                                {{-- --- CHAMP UTILISATEURS AM√âLIOR√â --- --}}
                                <div class="md:col-span-2">
                                    <x-input-label for="users" value="Utilisateurs Autoris√©s" />
                                    
                                    <select name="users[]" id="users" multiple x-ref="users" class="tomselect-users">
                                        {{-- On pr√©pare en PHP la liste des IDs d√©j√† assign√©s --}}
                                        @php
                                            $assignedUserIds = old('users', $vehicle->users->pluck('id')->toArray());
                                        @endphp

                                        {{-- On boucle sur tous les utilisateurs disponibles pour cr√©er les options --}}
                                        @foreach($users as $user)
                                            <option value="{{ $user->id }}" 
                                                    data-name="{{ $user->name }}" 
                                                    data-email="{{ $user->email }}"
                                                    @selected(in_array($user->id, $assignedUserIds))>
                                                {{ $user->name }} ({{ $user->email }})
                                            </option>
                                        @endforeach
                                    </select>
                                    <p class="mt-1 text-xs text-gray-500">
                                        Recherchez et s√©lectionnez les utilisateurs autoris√©s √† utiliser ce v√©hicule.
                                    </p>
                                    <x-input-error :messages="$errors->get('users')" class="mt-2" />
                                </div>
                                {{-- --- FIN CHAMP UTILISATEURS --- --}}
                                 <div class="md:col-span-2">
                                    <x-input-label for="notes" value="Notes" />
                                    <textarea id="notes" name="notes" rows="3" class="block mt-1 w-full border-gray-300 focus:border-primary-500 focus:ring-primary-500 rounded-md shadow-sm">{{ old('notes', $vehicle->notes) }}</textarea>
                                    <x-input-error :messages="$errors->get('notes')" class="mt-2" />
                                </div>
                                
                             </div>
                        </fieldset>

                        <div class="mt-8 pt-6 border-t border-gray-200 flex items-center justify-between">
                            <x-secondary-button type="button" x-show="currentStep > 1" @click="currentStep--">Pr√©c√©dent</x-secondary-button>
                            <div class="flex-grow"></div>
                            <div class="flex items-center gap-4">
                                <a href="{{ route('admin.vehicles.index') }}" class="text-sm font-semibold text-gray-600 hover:text-gray-900">Annuler</a>
                                <x-primary-button type="button" x-show="currentStep < 3" @click="currentStep++">Suivant</x-primary-button>
                                <button type="submit" x-show="currentStep === 3" class="inline-flex items-center px-4 py-2 bg-green-600 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-green-700">
                                    Enregistrer les Modifications
                                </button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</x-app-layout>
--- FIN DU FICHIER : ./resources/views/admin/vehicles/edit.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/admin/vehicles/import-results.blade.php
////////////////////////////////////////////////////////////////

<x-app-layout>
    <x-slot name="header">
        <div class="flex justify-between items-center">
            <h2 class="font-semibold text-xl text-gray-800 leading-tight">
                {{ __('R√©sultats de l\'Importation des V√©hicules') }}
            </h2>
            <a href="{{ route('admin.vehicles.index') }}" class="inline-flex items-center px-3 py-1.5 bg-gray-100 border border-gray-300 rounded-md font-medium text-xs text-gray-700 uppercase tracking-widest hover:bg-gray-200 transition">
                <x-lucide-arrow-left class="h-4 w-4 mr-1"/>
                Retour √† la liste
            </a>
        </div>
    </x-slot>

    <div class="py-12">
        <div class="max-w-7xl mx-auto sm:px-6 lg:px-8">
            {{-- Informations sur l'importation --}}
            <div class="bg-white overflow-hidden shadow-sm sm:rounded-lg mb-6">
                <div class="p-6 border-b border-gray-200">
                    <div class="flex items-center">
                        <x-lucide-file-text class="h-8 w-8 text-primary-500 mr-3"/>
                        <div>
                            <h3 class="text-lg font-medium text-gray-900">D√©tails de l'importation</h3>
                            <div class="mt-1 text-sm text-gray-600">
                                <p><span class="font-medium">Fichier :</span> {{ $fileName ?? 'Fichier CSV' }}</p>
                                <p><span class="font-medium">Encodage d√©tect√© :</span> {{ ucfirst($encoding ?? 'utf8') }}</p>
                                <p><span class="font-medium">Identifiant d'importation :</span> <span class="font-mono text-xs">{{ $importId ?? 'N/A' }}</span></p>
                                <p><span class="font-medium">Date et heure :</span> {{ now()->format('d/m/Y H:i:s') }}</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            {{-- Carte de R√©sum√© Statistique --}}
            <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-6">
                <div class="bg-white overflow-hidden shadow-sm sm:rounded-lg">
                    <div class="p-6 bg-gradient-to-br from-green-50 to-green-100 border-l-4 border-green-500">
                        <div class="flex items-center">
                            <div class="p-3 rounded-full bg-green-100 bg-opacity-60">
                                <x-lucide-check-circle-2 class="h-8 w-8 text-green-600"/>
                            </div>
                            <div class="ml-4">
                                <p class="text-3xl font-bold text-green-800">{{ $successCount }}</p>
                                <p class="text-sm font-medium text-green-700">V√©hicule(s) import√©(s) avec succ√®s</p>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="bg-white overflow-hidden shadow-sm sm:rounded-lg">
                    <div class="p-6 bg-gradient-to-br from-red-50 to-red-100 border-l-4 border-red-500">
                        <div class="flex items-center">
                            <div class="p-3 rounded-full bg-red-100 bg-opacity-60">
                                <x-lucide-x-circle class="h-8 w-8 text-red-600"/>
                            </div>
                            <div class="ml-4">
                                <p class="text-3xl font-bold text-red-800">{{ count($errorRows) }}</p>
                                <p class="text-sm font-medium text-red-700">Ligne(s) en erreur</p>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="bg-white overflow-hidden shadow-sm sm:rounded-lg">
                    <div class="p-6 bg-gradient-to-br from-blue-50 to-blue-100 border-l-4 border-blue-500">
                        <div class="flex items-center">
                            <div class="p-3 rounded-full bg-blue-100 bg-opacity-60">
                                <x-lucide-bar-chart-3 class="h-8 w-8 text-blue-600"/>
                            </div>
                            <div class="ml-4">
                                <p class="text-3xl font-bold text-blue-800">{{ $successCount + count($errorRows) }}</p>
                                <p class="text-sm font-medium text-blue-700">Total de lignes trait√©es</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            {{-- Section des Erreurs (si applicable) --}}
            @if (!empty($errorRows))
                <div class="bg-white overflow-hidden shadow-sm sm:rounded-lg mb-6">
                    <div class="p-6 md:p-8 text-gray-900">
                        <div class="flex items-center mb-4">
                            <x-lucide-alert-triangle class="h-6 w-6 text-amber-500 mr-2"/>
                            <h3 class="text-xl font-semibold text-gray-800">D√©tail des Lignes en Erreur</h3>
                        </div>
                        
                        <p class="text-sm text-gray-600 mb-6">
                            Les lignes suivantes n'ont pas √©t√© import√©es en raison d'erreurs. Veuillez corriger ces probl√®mes dans votre fichier CSV et r√©essayer l'importation.
                        </p>

                        <div class="overflow-x-auto border border-gray-200 rounded-lg">
                            <table class="w-full divide-y divide-gray-200">
                                <thead class="bg-gray-50">
                                    <tr>
                                        <th class="px-6 py-3 text-left text-xs font-bold text-gray-600 uppercase tracking-wider">Ligne</th>
                                        <th class="px-6 py-3 text-left text-xs font-bold text-gray-600 uppercase tracking-wider">Erreur(s)</th>
                                        <th class="px-6 py-3 text-left text-xs font-bold text-gray-600 uppercase tracking-wider">Donn√©es</th>
                                    </tr>
                                </thead>
                                <tbody class="bg-white divide-y divide-gray-200">
                                    @foreach ($errorRows as $error)
                                        <tr class="hover:bg-gray-50">
                                            <td class="px-6 py-4 whitespace-nowrap font-mono text-sm text-center">
                                                <span class="px-2 py-1 bg-gray-100 rounded-md">{{ $error['line'] }}</span>
                                            </td>
                                            <td class="px-6 py-4">
                                                <ul class="list-disc list-inside space-y-1 text-sm text-red-700">
                                                    @foreach ($error['errors'] as $message)
                                                        <li>{{ $message }}</li>
                                                    @endforeach
                                                </ul>
                                            </td>
                                            <td class="px-6 py-4">
                                                <div class="text-xs text-gray-600 max-w-md overflow-hidden">
                                                    <div class="grid grid-cols-2 gap-1">
                                                        @foreach ($error['data'] as $key => $value)
                                                            <div class="mb-1 @if(in_array($key, array_map('trim', explode(',', $error['problematic_fields'] ?? '')))) bg-red-50 rounded px-1 @endif">
                                                                <span class="font-medium">{{ $key }}:</span> 
                                                                <span class="font-mono">{{ $value ?? 'NULL' }}</span>
                                                            </div>
                                                        @endforeach
                                                    </div>
                                                </div>
                                            </td>
                                        </tr>
                                    @endforeach
                                </tbody>
                            </table>
                        </div>
                        
                        <div class="mt-6 p-4 bg-amber-50 border border-amber-200 rounded-lg">
                            <div class="flex">
                                <div class="flex-shrink-0">
                                    <x-lucide-lightbulb class="h-5 w-5 text-amber-500"/>
                                </div>
                                <div class="ml-3">
                                    <h4 class="text-sm font-medium text-amber-800">Conseils pour r√©soudre les erreurs</h4>
                                    <ul class="mt-2 text-sm text-amber-700 list-disc list-inside space-y-1">
                                        <li>V√©rifiez que les valeurs des champs obligatoires sont bien renseign√©es</li>
                                        <li>Assurez-vous que les types de v√©hicules, carburants et statuts correspondent exactement √† ceux d√©finis dans le syst√®me</li>
                                        <li>V√©rifiez le format des dates (AAAA-MM-JJ) et des nombres</li>
                                        <li>Corrigez les probl√®mes d'encodage si des caract√®res sp√©ciaux sont mal affich√©s</li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                
                {{-- Option d'export des erreurs --}}
                <div class="bg-white overflow-hidden shadow-sm sm:rounded-lg mb-6">
                    <div class="p-6 border-b border-gray-200">
                        <div class="flex items-center justify-between">
                            <div class="flex items-center">
                                <x-lucide-download class="h-6 w-6 text-primary-500 mr-2"/>
                                <h3 class="text-lg font-medium text-gray-900">Exporter les erreurs</h3>
                            </div>
                            <a href="{{ route('admin.vehicles.import.export-errors', ['import_id' => $importId]) }}" class="inline-flex items-center px-4 py-2 bg-primary-100 border border-primary-200 rounded-md font-semibold text-xs text-primary-700 uppercase tracking-widest hover:bg-primary-200 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 transition">
                                <x-lucide-file-down class="h-4 w-4 mr-2"/>
                                T√©l√©charger le rapport d'erreurs
                            </a>
                        </div>
                        <p class="mt-2 text-sm text-gray-600">
                            T√©l√©chargez un fichier CSV contenant uniquement les lignes en erreur pour faciliter leur correction.
                        </p>
                    </div>
                </div>
            @else
                {{-- Cas parfait : aucune erreur --}}
                <div class="bg-white overflow-hidden shadow-sm sm:rounded-lg mb-6">
                    <div class="p-6 md:p-8 text-gray-900">
                        <div class="text-center py-12">
                            <x-lucide-sparkles class="mx-auto h-16 w-16 text-green-500"/>
                            <h3 class="mt-4 text-2xl font-bold text-gray-900">Importation Parfaite !</h3>
                            <p class="mt-2 text-base text-gray-600">
                                Tous les v√©hicules de votre fichier ont √©t√© import√©s avec succ√®s dans votre flotte.
                            </p>
                        </div>
                    </div>
                </div>
            @endif

            {{-- Actions --}}
            <div class="flex flex-col sm:flex-row items-center justify-end gap-4">
                <a href="{{ route('admin.vehicles.import.show') }}" class="w-full sm:w-auto inline-flex items-center justify-center px-4 py-2 bg-white border border-gray-300 rounded-md font-semibold text-xs text-gray-700 uppercase tracking-widest shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 transition">
                    <x-lucide-rotate-cw class="h-4 w-4 mr-2"/>
                    Nouvelle Importation
                </a>
                <a href="{{ route('admin.vehicles.index') }}" class="w-full sm:w-auto inline-flex items-center justify-center px-4 py-2 bg-primary-600 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 transition">
                    <x-lucide-truck class="h-4 w-4 mr-2"/>
                    Voir tous les V√©hicules
                </a>
            </div>
        </div>
    </div>
</x-app-layout>
--- FIN DU FICHIER : ./resources/views/admin/vehicles/import-results.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/admin/vehicles/import.blade.php
////////////////////////////////////////////////////////////////

<x-app-layout>
    <x-slot name="header">
        <div class="flex justify-between items-center">
            <h2 class="font-semibold text-xl text-gray-800 leading-tight">
                {{ __('Importer des V√©hicules par Fichier CSV') }}
            </h2>
            <a href="{{ route('admin.vehicles.index') }}" class="inline-flex items-center px-3 py-1.5 bg-gray-100 border border-gray-300 rounded-md font-medium text-xs text-gray-700 uppercase tracking-widest shadow-sm hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 transition">
                <x-lucide-arrow-left class="h-4 w-4 mr-1"/>
                Retour
            </a>
        </div>
    </x-slot>

    <div class="py-12">
        <div class="max-w-4xl mx-auto sm:px-6 lg:px-8">
            @if (session('error'))
                <div class="mb-6 p-4 bg-red-50 border border-red-200 rounded-lg flex items-start">
                    <div class="flex-shrink-0 mt-0.5">
                        <x-lucide-alert-triangle class="h-5 w-5 text-red-500"/>
                    </div>
                    <div class="ml-3">
                        <h4 class="text-sm font-medium text-red-800">{{ session('error') }}</h4>
                    </div>
                </div>
            @endif

            <div class="bg-white overflow-hidden shadow-sm sm:rounded-lg">
                <div class="p-8 text-gray-900">
                    <div class="mb-8 p-5 bg-primary-50 border border-primary-200 rounded-lg">
                        <div class="flex">
                            <div class="flex-shrink-0">
                                <x-lucide-info class="h-6 w-6 text-primary-500"/>
                            </div>
                            <div class="ml-3">
                                <h4 class="text-lg font-bold text-primary-800">Instructions d'importation</h4>
                                <ol class="list-decimal list-inside mt-3 text-sm text-primary-700 space-y-2">
                                    <li>T√©l√©chargez le fichier mod√®le pour voir le format exact des colonnes.</li>
                                    <li>Remplissez le fichier avec vos donn√©es. Les colonnes <strong>Immatriculation*, Marque*, Mod√®le*, Type de V√©hicule*, Type de Carburant*, Type de Transmission*, et Statut Initial*</strong> sont obligatoires.</li>
                                    <li>Le format pour toutes les dates doit √™tre <strong>AAAA-MM-JJ</strong> (ex: 2023-05-25).</li>
                                    <li>Les valeurs pour les types et statuts (ex: "Berline", "En service") doivent correspondre exactement √† celles d√©finies dans le syst√®me.</li>
                                    <li>Enregistrez votre fichier au format CSV.</li>
                                    <li>S√©lectionnez l'encodage appropri√© si votre fichier contient des caract√®res accentu√©s.</li>
                                </ol>
                                <div class="mt-4 p-3 bg-primary-100 rounded-md">
                                    <p class="text-sm font-medium text-primary-800">
                                        <x-lucide-lightbulb class="inline-block h-4 w-4 mr-1"/>
                                        Conseil : Pour les fichiers Excel, utilisez "Enregistrer sous" et choisissez le format "CSV UTF-8" pour une compatibilit√© optimale.
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>

                    <form action="{{ route('admin.vehicles.import.handle') }}" method="POST" enctype="multipart/form-data" class="space-y-6" id="importForm">
                        @csrf
                        <div>
                            <label for="csv_file" class="block font-medium text-sm text-gray-700">Votre Fichier CSV <span class="text-red-500">*</span></label>
                            <div class="mt-2">
                                <input type="file" name="csv_file" id="csv_file" 
                                    class="block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-primary-50 file:text-primary-700 hover:file:bg-primary-100 focus:outline-none"
                                    required 
                                    accept=".csv,.txt">
                                <p class="mt-1 text-xs text-gray-500">Formats accept√©s : .csv, .txt</p>
                            </div>
                            <x-input-error :messages="$errors->get('csv_file')" class="mt-2" />
                        </div>

                        <div>
                            <label for="encoding" class="block font-medium text-sm text-gray-700">Encodage du fichier</label>
                            <select name="encoding" id="encoding" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring focus:ring-primary-200 focus:ring-opacity-50">
                                <option value="auto" selected>D√©tection automatique (recommand√©)</option>
                                <option value="utf8">UTF-8</option>
                                <option value="iso">ISO-8859-1</option>
                                <option value="windows">Windows-1252</option>
                            </select>
                            <p class="mt-1 text-xs text-gray-500">S√©lectionnez l'encodage appropri√© si vous rencontrez des probl√®mes avec les caract√®res accentu√©s.</p>
                        </div>

                        <div class="mt-8 pt-6 border-t flex items-center justify-between">
                            <a href="{{ route('admin.vehicles.import.template') }}" class="inline-flex items-center text-sm font-semibold text-primary-600 hover:text-primary-800 transition">
                                <x-lucide-download class="h-5 w-5 mr-2"/>
                                T√©l√©charger le mod√®le (.csv)
                            </a>
                            <div class="flex items-center gap-4">
                                <a href="{{ route('admin.vehicles.index') }}" class="text-sm font-semibold text-gray-600 hover:text-gray-900">Annuler</a>
                                <button type="submit" class="inline-flex items-center px-4 py-2 bg-primary-600 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 transition" id="submitBtn">
                                    <x-lucide-upload class="h-4 w-4 mr-2"/>
                                    Lancer l'Importation
                                </button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    @push('scripts')
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.getElementById('importForm');
            const submitBtn = document.getElementById('submitBtn');
            const fileInput = document.getElementById('csv_file');
            
            form.addEventListener('submit', function(e) {
                if (fileInput.files.length > 0) {
                    submitBtn.disabled = true;
                    submitBtn.innerHTML = `<svg class="animate-spin -ml-1 mr-2 h-4 w-4 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                    </svg> Traitement en cours...`;
                }
            });
            
            fileInput.addEventListener('change', function() {
                const fileName = this.files[0]?.name;
                if (fileName) {
                    // V√©rifier l'extension du fichier
                    const extension = fileName.split('.').pop().toLowerCase();
                    if (extension !== 'csv' && extension !== 'txt') {
                        alert("Format de fichier non valide. Veuillez s√©lectionner un fichier CSV ou TXT.");
                        this.value = '';
                    }
                }
            });
        });
    </script>
    @endpush
</x-app-layout>
--- FIN DU FICHIER : ./resources/views/admin/vehicles/import.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/admin/vehicles/index.blade.php
////////////////////////////////////////////////////////////////

<x-app-layout>
    <x-slot name="header">
        <h2 class="font-semibold text-xl text-gray-800 leading-tight">
            {{ __('Gestion de la Flotte - V√©hicules') }}
        </h2>
    </x-slot>

    {{-- Initialisation d'Alpine.js pour g√©rer la modale de suppression/archivage --}}
    <div x-data="{
            showConfirmModal: false,
            modalAction: '', // 'archive' ou 'delete'
            modalTitle: '',
            modalDescription: '',
            modalButtonText: '',
            modalButtonClass: '',
            modalIconClass: '',
            vehicleToProcess: {},
            formUrl: '',
            isForceDelete: false,

            openModal(event, action) {
                const button = event.currentTarget;
                this.vehicleToProcess = JSON.parse(button.dataset.vehicle);
                this.formUrl = button.dataset.url;
                this.modalAction = action;

                if (action === 'archive') {
                    this.modalTitle = 'Archiver le V√©hicule';
                    this.modalDescription = `√ätes-vous s√ªr de vouloir archiver le v√©hicule ${this.vehicleToProcess.brand} ${this.vehicleToProcess.model} (${this.vehicleToProcess.registration_plate}) ? Il pourra √™tre restaur√© plus tard.`;
                    this.modalButtonText = 'Confirmer l\'Archivage';
                    this.modalButtonClass = 'bg-yellow-600 hover:bg-yellow-700';
                    this.modalIconClass = 'text-yellow-600 bg-yellow-100';
                    this.isForceDelete = false;
                } else if (action === 'delete') {
                    this.modalTitle = 'Suppression D√©finitive';
                    this.modalDescription = `Cette action est irr√©versible. Toutes les donn√©es associ√©es √† ce v√©hicule (maintenances, affectations...) seront d√©finitivement perdues. Confirmez-vous la suppression du v√©hicule ${this.vehicleToProcess.brand} ${this.vehicleToProcess.model} (${this.vehicleToProcess.registration_plate}) ?`;
                    this.modalButtonText = 'Supprimer D√©finitivement';
                    this.modalButtonClass = 'bg-red-600 hover:bg-red-700';
                    this.modalIconClass = 'text-red-600 bg-red-100';
                    this.isForceDelete = true;
                }
                this.showConfirmModal = true;
            }
        }" class="py-12">

        <div class="max-w-7xl mx-auto sm:px-6 lg:px-8">

            {{-- Section des Filtres et de la Recherche --}}
            <div class="mb-6 bg-white p-4 shadow-sm sm:rounded-lg">
                <form action="{{ route('admin.vehicles.index') }}" method="GET">
                    <div class="flex flex-col md:flex-row md:items-end md:space-x-4 space-y-2 md:space-y-0">
                        <div class="flex-grow">
                            <label for="search" class="block text-sm font-medium text-gray-700">Recherche</label>
                            <input type="text" name="search" id="search" value="{{ $filters['search'] ?? '' }}" placeholder="Immat, marque, mod√®le..." class="mt-1 block w-full border-gray-300 focus:border-primary-500 focus:ring-primary-500 rounded-md shadow-sm text-sm">
                        </div>
                        <div class="flex-shrink-0">
                            <label for="status_id" class="block text-sm font-medium text-gray-700">Statut</label>
                            <select name="status_id" id="status_id" class="mt-1 block w-full border-gray-300 focus:border-primary-500 focus:ring-primary-500 rounded-md shadow-sm text-sm">
                                <option value="">Tous</option>
                                @foreach($vehicleStatuses as $status)
                                    <option value="{{ $status->id }}" @selected(($filters['status_id'] ?? '') == $status->id)>{{ $status->name }}</option>
                                @endforeach
                            </select>
                        </div>
                        <div class="flex-shrink-0">
                            <label for="per_page" class="block text-sm font-medium text-gray-700">Par page</label>
                            <select name="per_page" id="per_page" onchange="this.form.submit()" class="mt-1 block w-full border-gray-300 focus:border-primary-500 focus:ring-primary-500 rounded-md shadow-sm text-sm">
                                @foreach(['15', '30', '50', '100'] as $value)
                                    <option value="{{ $value }}" @selected(($filters['per_page'] ?? '15') == $value)>{{ $value }}</option>
                                @endforeach
                            </select>
                        </div>
                        <div>
                            <label for="view_deleted" class="block text-sm font-medium text-gray-700">Affichage</label>
                            <select name="view_deleted" id="view_deleted" onchange="this.form.submit()" class="mt-1 block w-full border-gray-300 focus:border-primary-500 focus:ring-primary-500 rounded-md shadow-sm text-sm">
                                <option value="">Actifs</option>
                                <option value="true" @selected(request('view_deleted'))>Archiv√©s</option>
                            </select>
                        </div>
                        <div class="flex-shrink-0 flex space-x-2">
                            <button type="submit" class="inline-flex items-center justify-center w-full px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-primary-600 hover:bg-primary-700">Filtrer</button>
                            <a href="{{ route('admin.vehicles.index') }}" class="inline-flex items-center justify-center w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50">Reset</a>
                        </div>
                    </div>
                </form>
            </div>

            

            <div class="bg-white overflow-hidden shadow-sm sm:rounded-lg">
                <div class="p-6 text-gray-900">
                    <div class="flex justify-between items-center mb-6">
                        <h3 class="text-xl font-semibold text-gray-700">{{ __('Liste des V√©hicules') }}</h3>
                        <div class="flex space-x-2">
                            @can('create vehicles')
                                <a href="{{ route('admin.vehicles.import.show') }}" class="inline-flex items-center px-4 py-2 bg-white border border-gray-300 rounded-md font-semibold text-xs text-gray-700 uppercase tracking-widest shadow-sm hover:bg-gray-50">
                                    <x-lucide-upload class="w-4 h-4 mr-2" stroke-width="1.5"/>
                                    Importer
                                </a>
                                <a href="{{ route('admin.vehicles.create') }}" class="inline-flex items-center px-4 py-2 bg-primary-600 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-primary-700">
                                    <x-lucide-plus-circle class="w-4 h-4 mr-2" stroke-width="1.5"/>
                                    Ajouter
                                </a>
                            @endcan
                        </div>
                    </div>

                    <div class="overflow-x-auto border border-gray-200 rounded-lg">
                        <table class="w-full divide-y divide-gray-200">
                            <thead class="bg-gray-100">
                                <tr>
                                    <th scope="col" class="px-6 py-3 text-left text-xs font-bold text-gray-600 uppercase tracking-wider">Immatriculation</th>
                                    <th scope="col" class="px-6 py-3 text-left text-xs font-bold text-gray-600 uppercase tracking-wider">Marque & Mod√®le</th>
                                    <th scope="col" class="px-6 py-3 text-left text-xs font-bold text-gray-600 uppercase tracking-wider">Kilom√©trage</th>
                                    <th scope="col" class="px-6 py-3 text-left text-xs font-bold text-gray-600 uppercase tracking-wider">Statut</th>
                                    <th scope="col" class="px-6 py-3 text-right text-xs font-bold text-gray-600 uppercase tracking-wider">Actions</th>
                                </tr>
                            </thead>
                            <tbody class="bg-white divide-y divide-gray-200">
                                @forelse ($vehicles as $vehicle)
                                    <tr class="hover:bg-gray-50">
                                        <td class="px-6 py-3 whitespace-nowrap text-sm font-mono text-gray-900">{{ $vehicle->registration_plate }}</td>
                                        <td class="px-6 py-3 whitespace-nowrap text-sm text-gray-800">{{ $vehicle->brand }} {{ $vehicle->model }}</td>
                                        <td class="px-6 py-3 whitespace-nowrap text-sm text-gray-500">{{ number_format($vehicle->current_mileage, 0, ',', ' ') }} km</td>
                                        <td class="px-6 py-3 whitespace-nowrap text-sm">
                                            @php
                                                $statusName = $vehicle->vehicleStatus?->name ?? 'Ind√©fini';
                                                $statusClass = 'bg-gray-100 text-gray-800'; // Default
                                                if ($vehicle->trashed()) {
                                                    $statusName = 'Archiv√©';
                                                    $statusClass = 'bg-gray-200 text-gray-600';
                                                } else {
                                                    switch ($statusName) {
                                                        case 'Parking': $statusClass = 'bg-blue-100 text-blue-800'; break;
                                                        case 'En mission': $statusClass = 'bg-green-100 text-green-800'; break;
                                                        case 'En maintenance': $statusClass = 'bg-yellow-100 text-yellow-800'; break;
                                                        case 'Hors service': $statusClass = 'bg-red-100 text-red-800'; break;
                                                    }
                                                }
                                            @endphp
                                            <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full {{ $statusClass }}">{{ $statusName }}</span>
                                        </td>
                                        <td class="px-6 py-3 whitespace-nowrap text-right text-sm font-medium">
                                            <div class="flex items-center justify-end space-x-2">
                                                @if ($vehicle->trashed())
                                                    @can('restore vehicles')
                                                        <form method="POST" action="{{ route('admin.vehicles.restore', $vehicle->id) }}">
                                                            @csrf @method('PATCH')
                                                            <button type="submit" title="Restaurer" class="p-2 rounded-full text-gray-400 hover:bg-green-100 hover:text-green-600">
                                                                <x-lucide-rotate-ccw class="h-5 w-5" stroke-width="1.5"/>
                                                            </button>
                                                        </form>
                                                    @endcan
                                                    @can('force delete vehicles')
                                                        <button type="button" @click="openModal($event, 'delete')" data-vehicle='@json($vehicle)' data-url="{{ route('admin.vehicles.force-delete', $vehicle->id) }}" title="Supprimer D√©finitivement" class="p-2 rounded-full text-gray-400 hover:bg-red-100 hover:text-red-600">
                                                            <x-lucide-trash-2 class="h-5 w-5" stroke-width="1.5"/>
                                                        </button>
                                                    @endcan
                                                @else
                                                    @can('edit vehicles')
                                                        <a href="{{ route('admin.vehicles.edit', $vehicle) }}" title="Modifier" class="p-2 rounded-full text-gray-400 hover:bg-primary-100 hover:text-primary-600">
                                                            <x-lucide-file-pen-line class="h-5 w-5" stroke-width="1.5"/>
                                                        </a>
                                                    @endcan
                                                    @can('delete vehicles')
                                                        <button type="button" @click="openModal($event, 'archive')" data-vehicle='@json($vehicle)' data-url="{{ route('admin.vehicles.destroy', $vehicle->id) }}" title="Archiver" class="p-2 rounded-full text-gray-400 hover:bg-yellow-100 hover:text-yellow-600">
                                                            <x-lucide-archive class="h-5 w-5" stroke-width="1.5"/>
                                                        </button>
                                                    @endcan
                                                @endif
                                            </div>
                                        </td>
                                    </tr>
                                @empty
                                    <tr><td colspan="5" class="px-6 py-4 text-center text-sm text-gray-500">Aucun v√©hicule ne correspond √† vos crit√®res.</td></tr>
                                @endforelse
                            </tbody>
                        </table>
                    </div>
                    <div class="mt-6">
                        {{ $vehicles->withQueryString()->links() }}
                    </div>
                </div>
            </div>
        </div>

        {{-- Fen√™tre Modale de Confirmation --}}
        <div x-show="showConfirmModal" x-transition class="fixed inset-0 z-50 flex items-center justify-center bg-gray-900 bg-opacity-60" style="display: none;">
            <div @click.away="showConfirmModal = false" class="bg-white rounded-lg shadow-xl p-6 w-full max-w-md mx-4">
                <div class="sm:flex sm:items-start">
                    <div class="mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full sm:mx-0 sm:h-10 sm:w-10" :class="modalIconClass">
                        <x-lucide-alert-triangle x-show="modalAction === 'archive' || modalAction === 'delete'" class="h-6 w-6" stroke-width="1.5"/>
                    </div>
                    <div class="mt-3 text-center sm:ml-4 sm:mt-0 sm:text-left">
                        <h3 class="text-base font-semibold leading-6 text-gray-900" x-text="modalTitle"></h3>
                        <div class="mt-2">
                            <p class="text-sm text-gray-600" x-html="modalDescription"></p>
                        </div>
                    </div>
                </div>
                <div class="mt-5 sm:mt-4 sm:flex sm:flex-row-reverse">
                    <form :action="formUrl" method="POST">
                        @csrf
                        @method('DELETE')
                        <button type="submit" class="inline-flex w-full justify-center rounded-md px-4 py-2 text-sm font-semibold text-white shadow-sm sm:ml-3 sm:w-auto" :class="modalButtonClass" x-text="modalButtonText">
                        </button>
                    </form>
                    <button type="button" @click="showConfirmModal = false" class="mt-3 inline-flex w-full justify-center rounded-md bg-white px-4 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50 sm:mt-0 sm:w-auto">
                        Annuler
                    </button>
                </div>
            </div>
        </div>
    </div>
</x-app-layout>
--- FIN DU FICHIER : ./resources/views/admin/vehicles/index.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/auth/confirm-password.blade.php
////////////////////////////////////////////////////////////////

<x-guest-layout>
    <div class="mb-4 text-sm text-gray-600">
        {{ __('This is a secure area of the application. Please confirm your password before continuing.') }}
    </div>

    <form method="POST" action="{{ route('password.confirm') }}">
        @csrf

        <!-- Password -->
        <div>
            <x-input-label for="password" :value="__('Password')" />

            <x-text-input id="password" class="block mt-1 w-full"
                            type="password"
                            name="password"
                            required autocomplete="current-password" />

            <x-input-error :messages="$errors->get('password')" class="mt-2" />
        </div>

        <div class="flex justify-end mt-4">
            <x-primary-button>
                {{ __('Confirm') }}
            </x-primary-button>
        </div>
    </form>
</x-guest-layout>

--- FIN DU FICHIER : ./resources/views/auth/confirm-password.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/auth/forgot-password.blade.php
////////////////////////////////////////////////////////////////

<x-guest-layout>
    <div class="mb-4 text-sm text-gray-600">
        {{ __('Forgot your password? No problem. Just let us know your email address and we will email you a password reset link that will allow you to choose a new one.') }}
    </div>

    <!-- Session Status -->
    <x-auth-session-status class="mb-4" :status="session('status')" />

    <form method="POST" action="{{ route('password.email') }}">
        @csrf

        <!-- Email Address -->
        <div>
            <x-input-label for="email" :value="__('Email')" />
            <x-text-input id="email" class="block mt-1 w-full" type="email" name="email" :value="old('email')" required autofocus />
            <x-input-error :messages="$errors->get('email')" class="mt-2" />
        </div>

        <div class="flex items-center justify-end mt-4">
            <x-primary-button>
                {{ __('Email Password Reset Link') }}
            </x-primary-button>
        </div>
    </form>
</x-guest-layout>

--- FIN DU FICHIER : ./resources/views/auth/forgot-password.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/auth/login.blade.php
////////////////////////////////////////////////////////////////

<x-guest-layout>
    <!-- Session Status -->
    <x-auth-session-status class="mb-4" :status="session('status')" />

    <form method="POST" action="{{ route('login') }}">
        @csrf

        <!-- Email Address -->
        <div>
            <x-input-label for="email" :value="__('Email')" />
            <x-text-input id="email" class="block mt-1 w-full" type="email" name="email" :value="old('email')" required autofocus autocomplete="username" />
            <x-input-error :messages="$errors->get('email')" class="mt-2" />
        </div>

        <!-- Password -->
        <div class="mt-4">
            <x-input-label for="password" :value="__('Password')" />

            <x-text-input id="password" class="block mt-1 w-full"
                            type="password"
                            name="password"
                            required autocomplete="current-password" />

            <x-input-error :messages="$errors->get('password')" class="mt-2" />
        </div>

        <!-- Remember Me -->
        <div class="block mt-4">
            <label for="remember_me" class="inline-flex items-center">
                <input id="remember_me" type="checkbox" class="rounded border-gray-300 text-indigo-600 shadow-sm focus:ring-indigo-500" name="remember">
                <span class="ms-2 text-sm text-gray-600">{{ __('Remember me') }}</span>
            </label>
        </div>

        <div class="flex items-center justify-end mt-4">
            @if (Route::has('password.request'))
                <a class="underline text-sm text-gray-600 hover:text-gray-900 rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500" href="{{ route('password.request') }}">
                    {{ __('Forgot your password?') }}
                </a>
            @endif

            <x-primary-button class="ms-3">
                {{ __('Log in') }}
            </x-primary-button>
        </div>
    </form>
</x-guest-layout>

--- FIN DU FICHIER : ./resources/views/auth/login.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/auth/register.blade.php
////////////////////////////////////////////////////////////////

<x-guest-layout>
    <form method="POST" action="{{ route('register') }}">
        @csrf

        <!-- First Name -->
        <div>
            <x-input-label for="first_name" :value="__('Pr√©nom')" />
            <x-text-input id="first_name" class="block mt-1 w-full" type="text" name="first_name" :value="old('first_name')" required autofocus autocomplete="given-name" />
            <x-input-error :messages="$errors->get('first_name')" class="mt-2" />
        </div>
       <!-- Last Name -->

	<div class="mt-4">
            <x-input-label for="last_name" :value="__('Nom de famille')" />
            <x-text-input id="last_name" class="block mt-1 w-full" type="text" name="last_name" :value="old('last_name')" required autocomplete="family-name" />
            <x-input-error :messages="$errors->get('last_name')" class="mt-2" />
        </div>


        <!-- Email Address -->
        <div class="mt-4">
            <x-input-label for="email" :value="__('Email')" />
            <x-text-input id="email" class="block mt-1 w-full" type="email" name="email" :value="old('email')" required autocomplete="username" />
            <x-input-error :messages="$errors->get('email')" class="mt-2" />
        </div>

        <!-- Password -->
        <div class="mt-4">
            <x-input-label for="password" :value="__('Password')" />

            <x-text-input id="password" class="block mt-1 w-full"
                            type="password"
                            name="password"
                            required autocomplete="new-password" />

            <x-input-error :messages="$errors->get('password')" class="mt-2" />
        </div>

        <!-- Confirm Password -->
        <div class="mt-4">
            <x-input-label for="password_confirmation" :value="__('Confirm Password')" />

            <x-text-input id="password_confirmation" class="block mt-1 w-full"
                            type="password"
                            name="password_confirmation" required autocomplete="new-password" />

            <x-input-error :messages="$errors->get('password_confirmation')" class="mt-2" />
        </div>

        <div class="flex items-center justify-end mt-4">
            <a class="underline text-sm text-gray-600 hover:text-gray-900 rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500" href="{{ route('login') }}">
                {{ __('Already registered?') }}
            </a>

            <x-primary-button class="ms-4">
                {{ __('Register') }}
            </x-primary-button>
        </div>
    </form>
</x-guest-layout>

--- FIN DU FICHIER : ./resources/views/auth/register.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/auth/reset-password.blade.php
////////////////////////////////////////////////////////////////

<x-guest-layout>
    <form method="POST" action="{{ route('password.store') }}">
        @csrf

        <!-- Password Reset Token -->
        <input type="hidden" name="token" value="{{ $request->route('token') }}">

        <!-- Email Address -->
        <div>
            <x-input-label for="email" :value="__('Email')" />
            <x-text-input id="email" class="block mt-1 w-full" type="email" name="email" :value="old('email', $request->email)" required autofocus autocomplete="username" />
            <x-input-error :messages="$errors->get('email')" class="mt-2" />
        </div>

        <!-- Password -->
        <div class="mt-4">
            <x-input-label for="password" :value="__('Password')" />
            <x-text-input id="password" class="block mt-1 w-full" type="password" name="password" required autocomplete="new-password" />
            <x-input-error :messages="$errors->get('password')" class="mt-2" />
        </div>

        <!-- Confirm Password -->
        <div class="mt-4">
            <x-input-label for="password_confirmation" :value="__('Confirm Password')" />

            <x-text-input id="password_confirmation" class="block mt-1 w-full"
                                type="password"
                                name="password_confirmation" required autocomplete="new-password" />

            <x-input-error :messages="$errors->get('password_confirmation')" class="mt-2" />
        </div>

        <div class="flex items-center justify-end mt-4">
            <x-primary-button>
                {{ __('Reset Password') }}
            </x-primary-button>
        </div>
    </form>
</x-guest-layout>

--- FIN DU FICHIER : ./resources/views/auth/reset-password.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/auth/verify-email.blade.php
////////////////////////////////////////////////////////////////

<x-guest-layout>
    <div class="mb-4 text-sm text-gray-600">
        {{ __('Thanks for signing up! Before getting started, could you verify your email address by clicking on the link we just emailed to you? If you didn\'t receive the email, we will gladly send you another.') }}
    </div>

    @if (session('status') == 'verification-link-sent')
        <div class="mb-4 font-medium text-sm text-green-600">
            {{ __('A new verification link has been sent to the email address you provided during registration.') }}
        </div>
    @endif

    <div class="mt-4 flex items-center justify-between">
        <form method="POST" action="{{ route('verification.send') }}">
            @csrf

            <div>
                <x-primary-button>
                    {{ __('Resend Verification Email') }}
                </x-primary-button>
            </div>
        </form>

        <form method="POST" action="{{ route('logout') }}">
            @csrf

            <button type="submit" class="underline text-sm text-gray-600 hover:text-gray-900 rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                {{ __('Log Out') }}
            </button>
        </form>
    </div>
</x-guest-layout>

--- FIN DU FICHIER : ./resources/views/auth/verify-email.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/components/admin/sidebar.blade.php
////////////////////////////////////////////////////////////////

{{-- resources/views/partials/admin/sidebar.blade.php --}}
<aside class="w-64 bg-gray-800 text-gray-200 min-h-screen flex flex-col" aria-label="Sidebar Navigation">
    <div class="px-6 py-4 flex items-center border-b border-gray-700">
        <h1 class="text-lg font-semibold tracking-widest uppercase">
            {{ config('app.name', 'ZenFleet') }} Admin
        </h1>
    </div>

    <nav class="flex-grow overflow-y-auto px-4 py-6 space-y-3" role="navigation" aria-label="Main Navigation">
        {{-- Exemple liens principaux --}}
        <x-sidebar.sidebar-group label="Tableau de bord">
            <x-sidebar.sidebar-link :active="request()->routeIs('admin.dashboard')" href="{{ route('admin.dashboard') }}">
                Dashboard
            </x-sidebar.sidebar-link>
        </x-sidebar.sidebar-group>

        <x-sidebar.sidebar-group label="Gestion">
            <x-sidebar.sidebar-link :active="request()->routeIs('admin.organizations.*')" href="{{ route('admin.organizations.index') }}">
                Organisations
            </x-sidebar.sidebar-link>
            <x-sidebar.sidebar-link :active="request()->routeIs('admin.users.*')" href="{{ route('admin.users.index') }}">
                Utilisateurs
            </x-sidebar.sidebar-link>
            <x-sidebar.sidebar-link :active="request()->routeIs('admin.vehicles.*')" href="{{ route('admin.vehicles.index') }}">
                V√©hicules
            </x-sidebar.sidebar-link>
            <x-sidebar.sidebar-link :active="request()->routeIs('admin.drivers.*')" href="{{ route('admin.drivers.index') }}">
                Chauffeurs
            </x-sidebar.sidebar-link>
        </x-sidebar.sidebar-group>

        <x-sidebar.sidebar-group label="Maintenance">
            <x-sidebar.sidebar-link :active="request()->routeIs('maintenance.*')" href="{{ route('maintenance.dashboard') }}">
                Dashboard Maintenance
            </x-sidebar.sidebar-link>
            <x-sidebar.sidebar-link :active="request()->routeIs('maintenance.plans.*')" href="{{ route('maintenance.plans.index') }}">
                Plans de maintenance
            </x-sidebar.sidebar-link>
            <x-sidebar.sidebar-link :active="request()->routeIs('maintenance.logs.*')" href="{{ route('maintenance.logs.index') }}">
                Logs de maintenance
            </x-sidebar.sidebar-link>
        </x-sidebar.sidebar-group>

        <x-sidebar.sidebar-group label="Fiches de remise">
            <x-sidebar.sidebar-link :active="request()->routeIs('handovers.*')" href="{{ route('handovers.index') }}">
                Fiches de remise
            </x-sidebar.sidebar-link>
        </x-sidebar.sidebar-group>

        <x-sidebar.sidebar-group label="Param√®tres">
            <x-sidebar.sidebar-link :active="request()->routeIs('admin.settings.*')" href="{{ route('admin.settings.index') }}">
                Param√®tres syst√®me
            </x-sidebar.sidebar-link>
        </x-sidebar.sidebar-group>
    </nav>

    <div class="px-6 py-4 border-t border-gray-700 flex items-center" role="contentinfo">
        <div class="flex-grow truncate" title="{{ Auth::user()->email }}">
            <p class="text-sm font-semibold truncate">{{ Auth::user()->name }}</p>
            <p class="text-xs text-gray-400 truncate">{{ Auth::user()->email }}</p>
        </div>
        <form method="POST" action="{{ route('logout') }}" class="inline">
            @csrf
            <button type="submit" class="text-red-500 hover:text-red-700 focus:outline-none focus:ring-2 focus:ring-red-600 rounded px-2 py-1" aria-label="D√©connexion">
                D√©connexion
            </button>
        </form>
    </div>
</aside>


--- FIN DU FICHIER : ./resources/views/components/admin/sidebar.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/components/application-logo.blade.php
////////////////////////////////////////////////////////////////

<svg viewBox="0 0 316 316" xmlns="http://www.w3.org/2000/svg" {{ $attributes }}>
    <path d="M305.8 81.125C305.77 80.995 305.69 80.885 305.65 80.755C305.56 80.525 305.49 80.285 305.37 80.075C305.29 79.935 305.17 79.815 305.07 79.685C304.94 79.515 304.83 79.325 304.68 79.175C304.55 79.045 304.39 78.955 304.25 78.845C304.09 78.715 303.95 78.575 303.77 78.475L251.32 48.275C249.97 47.495 248.31 47.495 246.96 48.275L194.51 78.475C194.33 78.575 194.19 78.725 194.03 78.845C193.89 78.955 193.73 79.045 193.6 79.175C193.45 79.325 193.34 79.515 193.21 79.685C193.11 79.815 192.99 79.935 192.91 80.075C192.79 80.285 192.71 80.525 192.63 80.755C192.58 80.875 192.51 80.995 192.48 81.125C192.38 81.495 192.33 81.875 192.33 82.265V139.625L148.62 164.795V52.575C148.62 52.185 148.57 51.805 148.47 51.435C148.44 51.305 148.36 51.195 148.32 51.065C148.23 50.835 148.16 50.595 148.04 50.385C147.96 50.245 147.84 50.125 147.74 49.995C147.61 49.825 147.5 49.635 147.35 49.485C147.22 49.355 147.06 49.265 146.92 49.155C146.76 49.025 146.62 48.885 146.44 48.785L93.99 18.585C92.64 17.805 90.98 17.805 89.63 18.585L37.18 48.785C37 48.885 36.86 49.035 36.7 49.155C36.56 49.265 36.4 49.355 36.27 49.485C36.12 49.635 36.01 49.825 35.88 49.995C35.78 50.125 35.66 50.245 35.58 50.385C35.46 50.595 35.38 50.835 35.3 51.065C35.25 51.185 35.18 51.305 35.15 51.435C35.05 51.805 35 52.185 35 52.575V232.235C35 233.795 35.84 235.245 37.19 236.025L142.1 296.425C142.33 296.555 142.58 296.635 142.82 296.725C142.93 296.765 143.04 296.835 143.16 296.865C143.53 296.965 143.9 297.015 144.28 297.015C144.66 297.015 145.03 296.965 145.4 296.865C145.5 296.835 145.59 296.775 145.69 296.745C145.95 296.655 146.21 296.565 146.45 296.435L251.36 236.035C252.72 235.255 253.55 233.815 253.55 232.245V174.885L303.81 145.945C305.17 145.165 306 143.725 306 142.155V82.265C305.95 81.875 305.89 81.495 305.8 81.125ZM144.2 227.205L100.57 202.515L146.39 176.135L196.66 147.195L240.33 172.335L208.29 190.625L144.2 227.205ZM244.75 114.995V164.795L226.39 154.225L201.03 139.625V89.825L219.39 100.395L244.75 114.995ZM249.12 57.105L292.81 82.265L249.12 107.425L205.43 82.265L249.12 57.105ZM114.49 184.425L96.13 194.995V85.305L121.49 70.705L139.85 60.135V169.815L114.49 184.425ZM91.76 27.425L135.45 52.585L91.76 77.745L48.07 52.585L91.76 27.425ZM43.67 60.135L62.03 70.705L87.39 85.305V202.545V202.555V202.565C87.39 202.735 87.44 202.895 87.46 203.055C87.49 203.265 87.49 203.485 87.55 203.695V203.705C87.6 203.875 87.69 204.035 87.76 204.195C87.84 204.375 87.89 204.575 87.99 204.745C87.99 204.745 87.99 204.755 88 204.755C88.09 204.905 88.22 205.035 88.33 205.175C88.45 205.335 88.55 205.495 88.69 205.635L88.7 205.645C88.82 205.765 88.98 205.855 89.12 205.965C89.28 206.085 89.42 206.225 89.59 206.325C89.6 206.325 89.6 206.325 89.61 206.335C89.62 206.335 89.62 206.345 89.63 206.345L139.87 234.775V285.065L43.67 229.705V60.135ZM244.75 229.705L148.58 285.075V234.775L219.8 194.115L244.75 179.875V229.705ZM297.2 139.625L253.49 164.795V114.995L278.85 100.395L297.21 89.825V139.625H297.2Z"/>
</svg>

--- FIN DU FICHIER : ./resources/views/components/application-logo.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/components/auth-session-status.blade.php
////////////////////////////////////////////////////////////////

@props(['status'])

@if ($status)
    <div {{ $attributes->merge(['class' => 'font-medium text-sm text-green-600']) }}>
        {{ $status }}
    </div>
@endif

--- FIN DU FICHIER : ./resources/views/components/auth-session-status.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/components/danger-button.blade.php
////////////////////////////////////////////////////////////////

<button {{ $attributes->merge(['type' => 'submit', 'class' => 'inline-flex items-center px-4 py-2 bg-red-600 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-red-500 active:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 transition ease-in-out duration-150']) }}>
    {{ $slot }}
</button>

--- FIN DU FICHIER : ./resources/views/components/danger-button.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/components/date-picker.blade.php
////////////////////////////////////////////////////////////////

@props([
    'name' => '',
    'id' => '',
    'value' => '',
    'label' => '',
    'required' => false,
])

<div x-data="datePicker({ value: '{{ $value }}' })" x-init="init()" class="w-full">
    <x-input-label :for="$id" :value="$label" :required="$required" />
    <div class="relative">
        <input
            id="{{ $id }}"
            name="{{ $name }}"
            x-ref="datePicker"
            type="text"
            value="{{ $value }}"
            placeholder="S√©lectionnez une date..."
            class="mt-1 block w-full border-gray-300 focus:border-primary-500 focus:ring-primary-500 rounded-md shadow-sm"
        />
        <div class="absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none">
            <x-lucide-calendar class="h-5 w-5 text-gray-400" />
        </div>
    </div>
</div>

@pushOnce('scripts')
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
<script>
    function datePicker(config) {
        return {
            value: config.value,
            instance: null,
            init() {
                this.instance = flatpickr(this.$refs.datePicker, {
                    dateFormat: 'Y-m-d',
                    altInput: true,
                    altFormat: 'j F Y',
                    defaultDate: this.value,
                });
            }
        }
    }
</script>
@endPushOnce
--- FIN DU FICHIER : ./resources/views/components/date-picker.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/components/datetime-picker.blade.php
////////////////////////////////////////////////////////////////

@props([
    'name' => '',
    'id' => '',
    'value' => '',
    'label' => '',
    'required' => false,
])

<div
    x-data="dateTimePicker({
        value: '{{ $value }}',
        name: '{{ $name }}',
        id: '{{ $id }}'
    })"
    x-init="init()"
    class="flex w-full items-center"
>
    <div class="ml-3 flex items-center first:ml-0 flex-1 min-w-0">
        <div class="relative trigger w-full">
            <x-input-label :for="$id . '-date'" :value="$label" />
            <div class="relative">
                <input
                    x-ref="datePicker"
                    id="{{ $id }}-date"
                    type="text"
                    class="form-input block w-full h-8 text-md pl-10 pr-4 py-3 text-left"
                    placeholder="Select Date"
                />
                <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                    <svg class="h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                        <path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm10 5H4v8h12V7z" clip-rule="evenodd" />
                    </svg>
                </div>
            </div>
            <input x-ref="hiddenInput" name="{{ $name }}" id="{{ $id }}" type="hidden" value="{{ $value }}">
        </div>
    </div>
    <div class="ml-3 flex items-center first:ml-0">
        <div class="relative trigger w-full" style="max-width: 175px;">
            <x-input-label for="{{ $id }}-time" value="Time" />
            <div class="relative">
                <input
                    x-ref="timePicker"
                    id="{{ $id }}-time"
                    type="text"
                    class="form-input block w-full h-8 text-md pl-10 pr-4 py-3 text-left"
                    placeholder="Select Time"
                    disabled
                />
                <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                    <svg class="h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l3 3a1 1 0 001.414-1.414L11 10.586V6z" clip-rule="evenodd" />
                    </svg>
                </div>
            </div>
        </div>
    </div>
</div>

@push('scripts')
<script>
    function dateTimePicker(config) {
        return {
            value: config.value,
            name: config.name,
            id: config.id,
            datePicker: null,
            timePicker: null,

            init() {
                const now = new Date();
                const minutes = now.getMinutes();
                const roundedMinutes = Math.round(minutes / 30) * 30;
                now.setMinutes(roundedMinutes);
                now.setSeconds(0);

                this.datePicker = flatpickr(this.$refs.datePicker, {
                    dateFormat: 'Y-m-d',
                    onChange: (selectedDates, dateStr, instance) => {
                        if (selectedDates.length > 0) {
                            this.timePicker.set('minDate', dateStr);
                            this.timePicker.set('maxDate', dateStr);
                            this.$refs.timePicker.disabled = false;
                            if (!this.timePicker.selectedDates.length) {
                                this.timePicker.setDate(now, false);
                            }
                        } else {
                            this.$refs.timePicker.disabled = true;
                            this.timePicker.clear();
                        }
                        this.updateHiddenInput();
                    }
                });

                this.timePicker = flatpickr(this.$refs.timePicker, {
                    enableTime: true,
                    noCalendar: true,
                    dateFormat: 'H:i',
                    minuteIncrement: 30,
                    time_24hr: true,
                    allowInput: true,
                    onChange: (selectedDates, dateStr, instance) => {
                        this.updateHiddenInput();
                    }
                });

                if (this.value) {
                    const [date, time] = this.value.split(' ');
                    this.datePicker.setDate(date);
                    this.timePicker.setDate(time);
                    this.$refs.timePicker.disabled = false;
                } else {
                    // Set default time when no value is provided
                    this.timePicker.setDate(now, false);
                }
            },

            updateHiddenInput() {
                const date = this.$refs.datePicker.value;
                const time = this.$refs.timePicker.value;

                if (date && time) {
                    this.$refs.hiddenInput.value = `${date} ${time}`;
                } else {
                    this.$refs.hiddenInput.value = '';
                }
            }
        }
    }
</script>
@endpush
--- FIN DU FICHIER : ./resources/views/components/datetime-picker.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/components/dropdown-link.blade.php
////////////////////////////////////////////////////////////////

<a {{ $attributes->merge(['class' => 'block w-full px-4 py-2 text-start text-sm leading-5 text-gray-700 hover:bg-gray-100 focus:outline-none focus:bg-gray-100 transition duration-150 ease-in-out']) }}>{{ $slot }}</a>

--- FIN DU FICHIER : ./resources/views/components/dropdown-link.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/components/dropdown.blade.php
////////////////////////////////////////////////////////////////

@props(['align' => 'right', 'width' => '48', 'contentClasses' => 'py-1 bg-white'])

@php
switch ($align) {
    case 'left':
        $alignmentClasses = 'ltr:origin-top-left rtl:origin-top-right start-0';
        break;
    case 'top':
        $alignmentClasses = 'origin-top';
        break;
    case 'right':
    default:
        $alignmentClasses = 'ltr:origin-top-right rtl:origin-top-left end-0';
        break;
}

switch ($width) {
    case '48':
        $width = 'w-48';
        break;
}
@endphp

<div class="relative" x-data="{ open: false }" @click.outside="open = false" @close.stop="open = false">
    <div @click="open = ! open">
        {{ $trigger }}
    </div>

    <div x-show="open"
            x-transition:enter="transition ease-out duration-200"
            x-transition:enter-start="opacity-0 scale-95"
            x-transition:enter-end="opacity-100 scale-100"
            x-transition:leave="transition ease-in duration-75"
            x-transition:leave-start="opacity-100 scale-100"
            x-transition:leave-end="opacity-0 scale-95"
            class="absolute z-50 mt-2 {{ $width }} rounded-md shadow-lg {{ $alignmentClasses }}"
            style="display: none;"
            @click="open = false">
        <div class="rounded-md ring-1 ring-black ring-opacity-5 {{ $contentClasses }}">
            {{ $content }}
        </div>
    </div>
</div>

--- FIN DU FICHIER : ./resources/views/components/dropdown.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/components/flash-message.blade.php
////////////////////////////////////////////////////////////////

@props(['type' => 'success', 'message'])

@php
    $isVisible = $message ? true : false;
    $bgColor = [
        'success' => 'bg-green-100 border-green-500',
        'error' => 'bg-red-100 border-red-500',
        'warning' => 'bg-yellow-100 border-yellow-500',
        'info' => 'bg-blue-100 border-blue-500',
    ][$type];
    $textColor = [
        'success' => 'text-green-700',
        'error' => 'text-red-700',
        'warning' => 'text-yellow-700',
        'info' => 'text-blue-700',
    ][$type];
@endphp

<div x-data="{ show: @json($isVisible) }"
     x-show="show"
     x-transition
     x-init="setTimeout(() => show = false, 5000)"
     {{ $attributes->merge(['class' => 'mb-4 border-l-4 p-4 ' . $bgColor . ' ' . $textColor]) }}
     role="alert">
    <p class="font-bold">{{ $message }}</p>
</div>

--- FIN DU FICHIER : ./resources/views/components/flash-message.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/components/handover-status-switcher.blade.php
////////////////////////////////////////////////////////////////

{{-- /resources/views/components/handover-status-switcher.blade.php --}}
@props([
    'item',                                 // Le nom de l'item √† v√©rifier (ex: "Carte Grise")
    'category',                             // La cat√©gorie de l'item (ex: "Papiers du v√©hicule")
    'statuses' => ['Bon', 'Moyen', 'Mauvais', 'N/A'], // Les options de statut possibles
    'selected' => null                      // Le statut actuellement s√©lectionn√© (pour l'√©dition)
])

@php
    // CL√â DE LA CORRECTION :
    // On d√©termine l'√©tat initial. Priorit√© √† la prop 'selected' (valeur de la BDD),
    // sinon √† l'ancien input en cas d'erreur de validation, sinon 'N/A' par d√©faut.
    $initialStatus = $selected ?? old('checklist.' . $category . '.' . Str::slug($item, '_'), 'N/A');

    // On transforme les noms d'item et de cat√©gorie en slugs pour les attributs HTML
    $itemSlug = Str::slug($item, '_');
@endphp

{{-- 
    La valeur calcul√©e en PHP est inject√©e dans x-data pour initialiser l'√©tat d'Alpine.js.
    C'est le pont entre le backend (Laravel) et le frontend (JavaScript).
--}}
<div x-data="{ status: '{{ $initialStatus }}' }" class="flex items-center justify-between py-2">
    <label class="text-sm text-gray-800 font-medium" for="status-switcher-{{ $category }}-{{ $itemSlug }}">{{ $item }}</label>

    <div class="flex items-center space-x-1 p-0.5 bg-gray-200 rounded-full" id="status-switcher-{{ $category }}-{{ $itemSlug }}">
        
        {{-- Input cach√© qui enverra la valeur au serveur. Son nom est dynamique. --}}
        <input type="hidden" name="checklist[{{ $category }}][{{ $itemSlug }}]" x-model="status">

        {{-- Boucle sur les statuts pour g√©n√©rer les boutons --}}
        @foreach($statuses as $buttonStatus)
            <button 
                type="button" 
                @click="status = '{{ $buttonStatus }}'"
                :class="{
                    'bg-green-500 text-white shadow-md': status === '{{ $buttonStatus }}' && ('{{ $buttonStatus }}' === 'Bon' || '{{ $buttonStatus }}' === 'Oui'),
                    'bg-red-500 text-white shadow-md': status === '{{ $buttonStatus }}' && ('{{ $buttonStatus }}' === 'Mauvais' || '{{ $buttonStatus }}' === 'Non'),
                    'bg-yellow-500 text-white shadow-md': status === '{{ $buttonStatus }}' && '{{ $buttonStatus }}' === 'Moyen',
                    'bg-gray-400 text-white shadow-md': status === '{{ $buttonStatus }}' && '{{ $buttonStatus }}' === 'N/A',
                    'bg-transparent text-gray-500 hover:bg-gray-300': status !== '{{ $buttonStatus }}'
                }"
                class="px-3 py-1 text-xs font-bold rounded-full transition-all duration-200 ease-in-out"
                aria-label="D√©finir le statut de {{ $item }} √† {{ $buttonStatus }}"
            >
                {{ $buttonStatus }}
            </button>
        @endforeach
    </div>
</div>
--- FIN DU FICHIER : ./resources/views/components/handover-status-switcher.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/components/input-error.blade.php
////////////////////////////////////////////////////////////////

@props(['messages'])

@if ($messages)
    <ul {{ $attributes->merge(['class' => 'text-sm text-red-600 space-y-1']) }}>
        @foreach ((array) $messages as $message)
            <li>{{ $message }}</li>
        @endforeach
    </ul>
@endif

--- FIN DU FICHIER : ./resources/views/components/input-error.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/components/input-label.blade.php
////////////////////////////////////////////////////////////////

@props(['value'])

<label {{ $attributes->merge(['class' => 'block font-medium text-sm text-gray-700']) }}>
    {{ $value ?? $slot }}
</label>

--- FIN DU FICHIER : ./resources/views/components/input-label.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/components/modal.blade.php
////////////////////////////////////////////////////////////////

@props([
    'name',
    'show' => false,
    'maxWidth' => '2xl'
])

@php
$maxWidth = [
    'sm' => 'sm:max-w-sm',
    'md' => 'sm:max-w-md',
    'lg' => 'sm:max-w-lg',
    'xl' => 'sm:max-w-xl',
    '2xl' => 'sm:max-w-2xl',
][$maxWidth];
@endphp

<div
    x-data="{
        show: @js($show),
        focusables() {
            // All focusable element types...
            let selector = 'a, button, input:not([type=\'hidden\']), textarea, select, details, [tabindex]:not([tabindex=\'-1\'])'
            return [...$el.querySelectorAll(selector)]
                // All non-disabled elements...
                .filter(el => ! el.hasAttribute('disabled'))
        },
        firstFocusable() { return this.focusables()[0] },
        lastFocusable() { return this.focusables().slice(-1)[0] },
        nextFocusable() { return this.focusables()[this.nextFocusableIndex()] || this.firstFocusable() },
        prevFocusable() { return this.focusables()[this.prevFocusableIndex()] || this.lastFocusable() },
        nextFocusableIndex() { return (this.focusables().indexOf(document.activeElement) + 1) % (this.focusables().length + 1) },
        prevFocusableIndex() { return Math.max(0, this.focusables().indexOf(document.activeElement)) -1 },
    }"
    x-init="$watch('show', value => {
        if (value) {
            document.body.classList.add('overflow-y-hidden');
            {{ $attributes->has('focusable') ? 'setTimeout(() => firstFocusable().focus(), 100)' : '' }}
        } else {
            document.body.classList.remove('overflow-y-hidden');
        }
    })"
    x-on:open-modal.window="$event.detail == '{{ $name }}' ? show = true : null"
    x-on:close-modal.window="$event.detail == '{{ $name }}' ? show = false : null"
    x-on:close.stop="show = false"
    x-on:keydown.escape.window="show = false"
    x-on:keydown.tab.prevent="$event.shiftKey || nextFocusable().focus()"
    x-on:keydown.shift.tab.prevent="prevFocusable().focus()"
    x-show="show"
    class="fixed inset-0 overflow-y-auto px-4 py-6 sm:px-0 z-50"
    style="display: {{ $show ? 'block' : 'none' }};"
>
    <div
        x-show="show"
        class="fixed inset-0 transform transition-all"
        x-on:click="show = false"
        x-transition:enter="ease-out duration-300"
        x-transition:enter-start="opacity-0"
        x-transition:enter-end="opacity-100"
        x-transition:leave="ease-in duration-200"
        x-transition:leave-start="opacity-100"
        x-transition:leave-end="opacity-0"
    >
        <div class="absolute inset-0 bg-gray-500 opacity-75"></div>
    </div>

    <div
        x-show="show"
        class="mb-6 bg-white rounded-lg overflow-hidden shadow-xl transform transition-all sm:w-full {{ $maxWidth }} sm:mx-auto"
        x-transition:enter="ease-out duration-300"
        x-transition:enter-start="opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
        x-transition:enter-end="opacity-100 translate-y-0 sm:scale-100"
        x-transition:leave="ease-in duration-200"
        x-transition:leave-start="opacity-100 translate-y-0 sm:scale-100"
        x-transition:leave-end="opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
    >
        {{ $slot }}
    </div>
</div>

--- FIN DU FICHIER : ./resources/views/components/modal.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/components/nav-link.blade.php
////////////////////////////////////////////////////////////////

@props(['active'])

@php
$classes = ($active ?? false)
            ? 'inline-flex items-center px-1 pt-1 border-b-2 border-indigo-400 text-sm font-medium leading-5 text-gray-900 focus:outline-none focus:border-indigo-700 transition duration-150 ease-in-out'
            : 'inline-flex items-center px-1 pt-1 border-b-2 border-transparent text-sm font-medium leading-5 text-gray-500 hover:text-gray-700 hover:border-gray-300 focus:outline-none focus:text-gray-700 focus:border-gray-300 transition duration-150 ease-in-out';
@endphp

<a {{ $attributes->merge(['class' => $classes]) }}>
    {{ $slot }}
</a>

--- FIN DU FICHIER : ./resources/views/components/nav-link.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/components/primary-button.blade.php
////////////////////////////////////////////////////////////////

<button {{ $attributes->merge(['type' => 'submit', 'class' => 'inline-flex items-center px-4 py-2 bg-gray-800 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-gray-700 focus:bg-gray-700 active:bg-gray-900 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 transition ease-in-out duration-150']) }}>
    {{ $slot }}
</button>

--- FIN DU FICHIER : ./resources/views/components/primary-button.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/components/responsive-nav-link.blade.php
////////////////////////////////////////////////////////////////

@props(['active'])

@php
$classes = ($active ?? false)
            ? 'group flex items-center px-3 py-2 text-sm font-medium rounded-lg bg-violet-50 text-violet-700'
            : 'group flex items-center px-3 py-2 text-sm font-medium rounded-lg text-gray-600 hover:bg-gray-50 hover:text-gray-900';
@endphp

<a {{ $attributes->merge(['class' => $classes]) }}>
    {{ $slot }}
</a>

--- FIN DU FICHIER : ./resources/views/components/responsive-nav-link.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/components/secondary-button.blade.php
////////////////////////////////////////////////////////////////

<button {{ $attributes->merge(['type' => 'button', 'class' => 'inline-flex items-center px-4 py-2 bg-white border border-gray-300 rounded-md font-semibold text-xs text-gray-700 uppercase tracking-widest shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 disabled:opacity-25 transition ease-in-out duration-150']) }}>
    {{ $slot }}
</button>

--- FIN DU FICHIER : ./resources/views/components/secondary-button.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/components/sidebar/sidebar-group.blade.php
////////////////////////////////////////////////////////////////

@props(['title', 'active'])

<div x-data="{ open: {{ $active ? 'true' : 'false' }} }" class="relative">
    <button @click="open = !open" class="w-full flex items-center p-2 text-sm text-gray-700 rounded-lg hover:bg-gray-100 group">
        @if(isset($icon))
            <span class="mr-3 text-gray-500 group-hover:text-gray-700">
                {{ $icon }}
            </span>
        @endif
        <span class="flex-1 ml-1 text-left whitespace-nowrap">{{ $title }}</span>
        <x-lucide-chevron-down class="h-4 w-4 transform transition-transform" ::class="{'rotate-180': open}" stroke-width="1.5"/>
    </button>
    <div x-show="open" x-transition class="mt-1 space-y-1 pl-4 border-l-2 border-dotted border-gray-300 ml-4">
        {{ $slot }}
    </div>
</div>

--- FIN DU FICHIER : ./resources/views/components/sidebar/sidebar-group.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/components/sidebar/sidebar-link.blade.php
////////////////////////////////////////////////////////////////

@props(['active'])

@php
$classes = ($active ?? false)
            ? 'flex items-center p-2 text-sm font-medium text-indigo-600 bg-indigo-50 rounded-lg'
            : 'flex items-center p-2 text-sm text-gray-700 rounded-lg hover:bg-gray-100 group';
@endphp

<a {{ $attributes->merge(['class' => $classes]) }}>
    @if(isset($icon))
        <span class="mr-3 text-gray-500 group-hover:text-gray-700 {{ ($active ?? false) ? 'text-indigo-600' : '' }}">
            {{ $icon }}
        </span>
    @endif
    <span class="flex-1 ml-1 whitespace-nowrap">{{ $slot }}</span>
</a>

--- FIN DU FICHIER : ./resources/views/components/sidebar/sidebar-link.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/components/sidebar/sidebar-sub-link.blade.php
////////////////////////////////////////////////////////////////

@props(['active'])

@php
$classes = ($active ?? false)
            ? 'flex items-center w-full p-2 pl-4 text-sm font-medium text-indigo-600 rounded-lg bg-indigo-50 active'
            : 'flex items-center w-full p-2 pl-4 text-sm text-gray-600 rounded-lg hover:bg-gray-100';

$iconWrapperClasses = ($active ?? false)
    ? 'flex items-center justify-center h-7 w-7 rounded-full mr-3 bg-indigo-600 text-white'
    : 'flex items-center justify-center h-7 w-7 rounded-full mr-3 bg-gray-100 text-gray-500 border border-gray-300 hover:bg-white hover:border-gray-300';
@endphp

<a {{ $attributes->merge(['class' => $classes]) }}>
    @if(isset($icon))
        <span class="{{ $iconWrapperClasses }}">
            @php
                $newIcon = clone $icon;
                $newIcon->attributes['class'] = 'h-2.5 w-2.5'; // Force 10px
            @endphp
            {{ $newIcon }}
        </span>
    @else
        <span class="mr-3 w-7"></span>
    @endif
    <span class="truncate">{{ $slot }}</span>
</a>

--- FIN DU FICHIER : ./resources/views/components/sidebar/sidebar-sub-link.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/components/sub-nav-link.blade.php
////////////////////////////////////////////////////////////////

@props(['active' => false])

@php
// ----- CLASSES DE CONFIGURATION -----

// Classes de base pour le lien <a>
$linkClasses = 'flex items-center w-full px-3 py-2 text-sm rounded-lg transition-colors group';

// Classes pour l'√©tat ACTIF du lien
$activeLinkClasses = 'font-semibold text-primary-600 bg-primary-50';

// Classes pour l'√©tat INACTIF du lien
$inactiveLinkClasses = 'text-gray-600 hover:bg-gray-100 hover:text-gray-900';


// Classes de base pour le conteneur de l'ic√¥ne (le cercle)
$iconWrapperClasses = 'flex items-center justify-center h-6 w-6 mr-3 rounded-full';

// Classes pour l'√©tat ACTIF du cercle (fond plein)
$activeIconWrapperClasses = 'bg-primary-600';

// Classes pour l'√©tat INACTIF du cercle (bordure fine)
$inactiveIconWrapperClasses = 'ring-1 ring-inset ring-gray-400 group-hover:ring-gray-500';


// Classes de base pour l'ic√¥ne <svg>
$iconBaseClasses = 'h-4 w-4';

// Classe pour la couleur de l'ic√¥ne √† l'√©tat ACTIF
$activeIconColor = 'text-white';

// Classe pour la couleur de l'ic√¥ne √† l'√©tat INACTIF
$inactiveIconColor = 'text-gray-500 group-hover:text-gray-700';

// ----- LOGIQUE D'APPLICATION DES CLASSES -----

// On fusionne les classes du lien
$finalLinkClasses = $attributes->merge(['class' => $linkClasses . ' ' . ($active ? $activeLinkClasses : $inactiveLinkClasses)]);

// On fusionne les classes du conteneur de l'ic√¥ne
$finalIconWrapperClasses = $iconWrapperClasses . ' ' . ($active ? $activeIconWrapperClasses : $inactiveIconWrapperClasses);

// On pr√©pare les classes √† appliquer √† l'ic√¥ne qui sera pass√©e dans le slot
$iconAttributes = ['class' => $iconBaseClasses . ' ' . ($active ? $activeIconColor : $inactiveIconColor)];

@endphp

<a {{ $finalLinkClasses }}>
    {{-- Le conteneur du cercle pour l'ic√¥ne --}}
    <span class="{{ $finalIconWrapperClasses }}">
        {{-- On applique les classes dynamiques √† l'ic√¥ne pass√©e dans le slot --}}
        {{ $icon->withAttributes($iconAttributes) }}
    </span>

    {{-- Le texte du lien --}}
    <span>{{ $slot }}</span>
</a>
--- FIN DU FICHIER : ./resources/views/components/sub-nav-link.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/components/text-input.blade.php
////////////////////////////////////////////////////////////////

@props(['disabled' => false])

<input {{ $disabled ? 'disabled' : '' }} {!! $attributes->merge(['class' => 'border-gray-300 focus:border-indigo-500 focus:ring-indigo-500 rounded-md shadow-sm']) !!}>

--- FIN DU FICHIER : ./resources/views/components/text-input.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/components/toast.blade.php
////////////////////////////////////////////////////////////////

<div
    x-data="{
        show: false,
        type: 'success',
        message: '',
        description: '',
        timer: null,
        init() {
            window.addEventListener('toast', event => {
                this.type = event.detail.type || 'success';
                this.message = event.detail.message || 'Action r√©ussie.';
                this.description = event.detail.description || '';
                this.show = true;
                clearTimeout(this.timer);
                this.timer = setTimeout(() => {
                    this.show = false;
                }, 8000);
            });
        },
        typeClasses() {
            switch (this.type) {
                case 'success': return 'bg-green-50 border-green-400 text-green-700';
                case 'error': return 'bg-red-50 border-red-400 text-red-700';
                case 'warning': return 'bg-yellow-50 border-yellow-400 text-yellow-700';
                default: return 'bg-blue-50 border-blue-400 text-blue-700';
            }
        },
        iconClasses() {
            switch (this.type) {
                case 'success': return 'text-green-500';
                case 'error': return 'text-red-500';
                case 'warning': return 'text-yellow-500';
                default: return 'text-blue-500';
            }
        }
    }"
    x-show="show"
    x-transition:enter="transform ease-out duration-300 transition"
    x-transition:enter-start="translate-y-2 opacity-0 sm:translate-y-0 sm:translate-x-2"
    x-transition:enter-end="translate-y-0 opacity-100 sm:translate-x-0"
    x-transition:leave="transition ease-in duration-100"
    x-transition:leave-start="opacity-100"
    x-transition:leave-end="opacity-0"
    class="fixed top-5 right-5 z-[100] w-full max-w-sm"
    style="display: none;"
>
    <div class="rounded-lg shadow-lg border-l-4 p-4" :class="typeClasses()">
        <div class="flex items-start">
            <div class="flex-shrink-0" :class="iconClasses()">
                <template x-if="type === 'success'"><x-lucide-check-circle class="h-6 w-6" /></template>
                <template x-if="type === 'error'"><x-lucide-x-circle class="h-6 w-6" /></template>
                <template x-if="type === 'warning'"><x-lucide-alert-triangle class="h-6 w-6" /></template>
                <template x-if="type === 'info'"><x-lucide-info class="h-6 w-6" /></template>
            </div>
            <div class="ml-3 w-0 flex-1 pt-0.5">
                <p class="text-sm font-bold" x-text="message"></p>
                <p class="mt-1 text-sm" x-show="description" x-text="description"></p>
            </div>
            <div class="ml-4 flex-shrink-0 flex">
                <button @click="show = false" class="inline-flex rounded-md text-gray-400 hover:text-gray-500 focus:outline-none">
                    <span class="sr-only">Close</span>
                    <x-lucide-x class="h-5 w-5" />
                </button>
            </div>
        </div>
    </div>
</div>
--- FIN DU FICHIER : ./resources/views/components/toast.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/components/toast.blade.php.OK.php
////////////////////////////////////////////////////////////////

{{-- Ce composant g√®re l'affichage des notifications Toast via Alpine.js --}}
<div
    x-data="{
        show: false,
        type: 'success',
        message: '',
        description: '',
        timer: null,
        init() {
            // On √©coute un √©v√©nement global 'toast' qui peut √™tre d√©clench√© n'importe o√π
            window.addEventListener('toast', event => {
                this.type = event.detail.type || 'success';
                this.message = event.detail.message || 'Action r√©ussie.';
                this.description = event.detail.description || '';
                this.show = true;

                // On annule le timer pr√©c√©dent s'il y en a un
                clearTimeout(this.timer);

                // La notification dispara√Æt apr√®s 5 secondes
                this.timer = setTimeout(() => {
                    this.show = false;
                }, 5000);
            });
        },
        // Classes dynamiques pour les couleurs en fonction du type de notification
        typeClasses() {
            switch (this.type) {
                case 'success':
                    return 'bg-green-50 border-green-400 text-green-700';
                case 'error':
                    return 'bg-red-50 border-red-400 text-red-700';
                case 'warning':
                    return 'bg-yellow-50 border-yellow-400 text-yellow-700';
                default:
                    return 'bg-blue-50 border-blue-400 text-blue-700';
            }
        },
        iconClasses() {
             switch (this.type) {
                case 'success':
                    return 'text-green-500';
                case 'error':
                    return 'text-red-500';
                case 'warning':
                    return 'text-yellow-500';
                default:
                    return 'text-blue-500';
            }
        }
    }"
    x-show="show"
    x-transition:enter="transform ease-out duration-300 transition"
    x-transition:enter-start="translate-y-2 opacity-0 sm:translate-y-0 sm:translate-x-2"
    x-transition:enter-end="translate-y-0 opacity-100 sm:translate-x-0"
    x-transition:leave="transition ease-in duration-100"
    x-transition:leave-start="opacity-100"
    x-transition:leave-end="opacity-0"
    class="fixed top-5 right-5 z-[100] w-full max-w-sm"
    style="display: none;"
>
    <div class="rounded-lg shadow-lg border-l-4 p-4" :class="typeClasses()">
        <div class="flex items-start">
            <div class="flex-shrink-0" :class="iconClasses()">
                {{-- Ic√¥ne dynamique --}}
                <template x-if="type === 'success'"><x-heroicon-s-check-circle class="h-6 w-6" /></template>
                <template x-if="type === 'error'"><x-heroicon-s-x-circle class="h-6 w-6" /></template>
                <template x-if="type === 'warning'"><x-heroicon-s-exclamation-triangle class="h-6 w-6" /></template>
                <template x-if="type === 'info'"><x-heroicon-s-information-circle class="h-6 w-6" /></template>
            </div>
            <div class="ml-3 w-0 flex-1 pt-0.5">
                <p class="text-sm font-bold" x-text="message"></p>
                <p class="mt-1 text-sm" x-show="description" x-text="description"></p>
            </div>
            <div class="ml-4 flex-shrink-0 flex">
                <button @click="show = false" class="inline-flex rounded-md text-gray-400 hover:text-gray-500 focus:outline-none">
                    <span class="sr-only">Close</span>
                    <x-heroicon-s-x-mark class="h-5 w-5" />
                </button>
            </div>
        </div>
    </div>
</div>

--- FIN DU FICHIER : ./resources/views/components/toast.blade.php.OK.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/dashboard.blade.php
////////////////////////////////////////////////////////////////

<x-app-layout>
    <x-slot name="header">
        <h2 class="font-semibold text-xl text-gray-800 leading-tight">
            {{ __('Dashboard') }}
        </h2>
    </x-slot>

    <div class="py-12">
        <div class="max-w-7xl mx-auto sm:px-6 lg:px-8">
            <div class="bg-white overflow-hidden shadow-sm sm:rounded-lg">
                <div class="p-6 text-gray-900">
                    {{ __("You're logged in!") }}
                </div>
            </div>
        </div>
    </div>
</x-app-layout>

--- FIN DU FICHIER : ./resources/views/dashboard.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/layouts/admin.blade.php
////////////////////////////////////////////////////////////////

<!DOCTYPE html>
<html lang="{{ str_replace('_', '-', app()->getLocale()) }}">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="csrf-token" content="{{ csrf_token() }}" />
    <title>{{ config('app.name', 'ZenFleet') }} - @yield('title', 'Administration')</title>

    {{-- Favicon --}}
    <link rel="shortcut icon" href="{{ asset('favicon.ico') }}" type="image/x-icon" />

    {{-- Styles --}}
    <link href="{{ asset('css/app.css') }}" rel="stylesheet" />
    @stack('styles')

    {{-- Scripts --}}
    <script src="{{ asset('js/app.js') }}" defer></script>
    @stack('scripts')
</head>
<body class="min-h-screen flex bg-gray-100 font-sans text-gray-900">

    {{-- Sidebar admin --}}
    {{-- @include('partials.admin.sidebar') --}}
    <x-admin.sidebar />

    <div class="flex-grow flex flex-col">
        
        {{-- Header / Navbar --}}
        @include('partials.admin.navigation')

        <main class="flex-grow p-4 max-w-full mx-auto">
            @include('partials.flash-messages')
            @yield('content')
        </main>

        {{-- Footer --}}
        @include('partials.admin.footer')
    </div>

</body>
</html>

--- FIN DU FICHIER : ./resources/views/layouts/admin.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/layouts/app.blade.php
////////////////////////////////////////////////////////////////

<!DOCTYPE html>
<html lang="{{ str_replace('_', '-', app()->getLocale()) }}">
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <meta name="csrf-token" content="{{ csrf_token() }}">
        <title>{{ config('app.name', 'Laravel') }}</title>

        <link rel="preconnect" href="https://fonts.googleapis.com">
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
        <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">

        @vite(['resources/css/app.css', 'resources/js/app.js'])
        <style>
            .ongoing-assignment-bar {
                background-image: linear-gradient(to right, #93c5fd, #bfdbfe);
            }
        </style>
    </head>
    <body class="font-sans antialiased">
        <div x-data="{ sidebarOpen: false }" class="min-h-screen bg-gray-100">
            <div class="flex h-screen bg-gray-100">
                
                <aside class="hidden w-72 flex-shrink-0 bg-white border-r md:block">
                    @include('layouts.navigation')
                </aside>

                <div x-show="sidebarOpen" class="fixed inset-0 z-40 flex md:hidden" 
                     x-transition:enter="transition-opacity ease-linear duration-300" x-transition:enter-start="opacity-0" x-transition:enter-end="opacity-100" 
                     x-transition:leave="transition-opacity ease-linear duration-300" x-transition:leave-start="opacity-100" x-transition:leave-end="opacity-0" 
                     style="display: none;">
                    <div @click="sidebarOpen = false" class="fixed inset-0 bg-gray-600 bg-opacity-75"></div>
                    <div class="relative flex-1 flex flex-col max-w-xs w-full bg-white">
                        <div class="absolute top-0 right-0 -mr-12 pt-2">
                            <button @click="sidebarOpen = false" type="button" class="ml-1 flex items-center justify-center h-10 w-10 rounded-full focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white">
                                <span class="sr-only">Close sidebar</span>
                                <x-lucide-x class="h-6 w-6 text-white" />
                            </button>
                        </div>
                        @include('layouts.navigation')
                    </div>
                </div>

                <div class="flex-1 flex flex-col overflow-hidden">
                    <header class="relative z-10 flex-shrink-0 flex h-16 bg-white shadow">
                        <button @click.stop="sidebarOpen = true" type="button" class="px-4 border-r border-gray-200 text-gray-500 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-primary-500 md:hidden">
                            <span class="sr-only">Open sidebar</span>
                            <x-lucide-menu class="h-6 w-6" />
                        </button>
                        <div class="flex-1 px-4 flex justify-between">
                            <div class="flex-1 flex items-center">
                                @if (isset($header))
                                    {{ $header }}
                                @endif
                            </div>
                        </div>
                    </header>

                    <main class="flex-1 relative overflow-y-auto focus:outline-none">
                         <div class="py-6">
                            <div class="max-w-7xl mx-auto px-4 sm:px-6 md:px-8">
                                {{-- Le contenu de chaque page sera inject√© ici --}}
                                {{ $slot }}
                            </div>
                        </div>
                    </main>
                </div>
            </div>
        </div>
        
        {{-- Composant de notification global (Toast) --}}
        <x-toast />

        {{-- Emplacement pour les scripts sp√©cifiques √† une page --}}
        @stack('scripts')

        <script>
            document.addEventListener('DOMContentLoaded', function () {
                @if (session('success'))
                    window.dispatchEvent(new CustomEvent('toast', { detail: { type: 'success', message: {{ Illuminate\Support\Js::from(session('success')) }} } }));
                @endif

                @if (session('error'))
                    window.dispatchEvent(new CustomEvent('toast', { detail: { type: 'error', message: {{ Illuminate\Support\Js::from(session('error')) }} } }));
                @endif

                @if (session('warning'))
                    window.dispatchEvent(new CustomEvent('toast', { detail: { type: 'warning', message: {{ Illuminate\Support\Js::from(session('warning')) }} } }));
                @endif

                @if (session('info'))
                    window.dispatchEvent(new CustomEvent('toast', { detail: { type: 'info', message: {{ Illuminate\Support\Js::from(session('info')) }} } }));
                @endif
            });
        </script>
    </body>
</html>
--- FIN DU FICHIER : ./resources/views/layouts/app.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/layouts/guest.blade.php
////////////////////////////////////////////////////////////////

<!DOCTYPE html>
<html lang="{{ str_replace('_', '-', app()->getLocale()) }}">
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <meta name="csrf-token" content="{{ csrf_token() }}">

        <title>{{ config('app.name', 'Laravel') }}</title>

        <!-- Fonts -->
        <link rel="preconnect" href="https://fonts.bunny.net">
        <link href="https://fonts.bunny.net/css?family=figtree:400,500,600&display=swap" rel="stylesheet" />

        <!-- Scripts -->
        @vite(['resources/css/app.css', 'resources/js/app.js'])
    </head>
    <body class="font-sans text-gray-900 antialiased">
        <div class="min-h-screen flex flex-col sm:justify-center items-center pt-6 sm:pt-0 bg-gray-100">
            <div>
                <a href="/">
                    <x-application-logo class="w-20 h-20 fill-current text-gray-500" />
                </a>
            </div>

            <div class="w-full sm:max-w-md mt-6 px-6 py-4 bg-white shadow-md overflow-hidden sm:rounded-lg">
                {{ $slot }}
            </div>
        </div>
    </body>
</html>

--- FIN DU FICHIER : ./resources/views/layouts/guest.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/layouts/navigation.blade.php
////////////////////////////////////////////////////////////////

<nav x-data="{ open: true }" class="flex flex-col h-full bg-white shadow-md font-sans">
    {{-- Logo --}}
    <div class="flex items-center justify-center h-20 border-b border-gray-200 shrink-0 px-6">
        <a href="{{ route('dashboard') }}">
            <x-application-logo class="block h-10 w-auto" />
        </a>
    </div>

    {{-- Liens de navigation --}}
    <div class="flex-1 px-4 py-4 overflow-y-auto space-y-1 text-sm">

        <x-sidebar.sidebar-link :href="route('dashboard')" :active="request()->routeIs('dashboard')">
            <x-slot name="icon">
                <x-lucide-layout-grid class="h-5 w-5" stroke-width="1.5" />
            </x-slot>
            {{ __('Tableau de bord') }}
        </x-sidebar.sidebar-link>

        {{-- Section Gestion de la Flotte --}}
        @canany(['view vehicles', 'view assignments'])
            <x-sidebar.sidebar-group title="Flotte" :active="request()->routeIs('admin.vehicles.*') || request()->routeIs('admin.assignments.*')">
                <x-slot name="icon">
                    <x-lucide-truck stroke-width="1.5" />
                </x-slot>
                @can('view vehicles')
                    <x-sidebar.sidebar-sub-link :href="route('admin.vehicles.index')" :active="request()->routeIs('admin.vehicles.*')">
                        <x-slot name="icon"><x-lucide-truck stroke-width="1.5" /></x-slot>
                        {{ __('V√©hicules') }}
                    </x-sidebar.sidebar-sub-link>
                @endcan
                @can('view assignments')
                    <x-sidebar.sidebar-sub-link :href="route('admin.assignments.index')" :active="request()->routeIs('admin.assignments.*')">
                        <x-slot name="icon"><x-lucide-clipboard-list stroke-width="1.5" /></x-slot>
                        {{ __('Affectations') }}
                    </x-sidebar.sidebar-sub-link>
                @endcan
                @can('view assignments') {{-- Reuse same permission for now --}}
                    <x-sidebar.sidebar-sub-link :href="route('admin.planning.index')" :active="request()->routeIs('admin.planning.*')">
                        <x-slot name="icon"><x-lucide-calendar-days stroke-width="1.5" /></x-slot>
                        {{ __('Planning') }}
                    </x-sidebar.sidebar-sub-link>
                @endcan
            </x-sidebar.sidebar-group>
        @endcanany

        {{-- Section Chauffeurs --}}
        @can('view drivers')
             <x-sidebar.sidebar-group title="Chauffeurs" :active="request()->routeIs('admin.drivers.*')">
                <x-slot name="icon">
                    <x-lucide-users stroke-width="1.5" />
                </x-slot>
                <x-sidebar.sidebar-sub-link :href="route('admin.drivers.index')" :active="request()->routeIs('admin.drivers.index')">
                    <x-slot name="icon"><x-lucide-list stroke-width="1.5" /></x-slot>
                    {{ __('Liste des chauffeurs') }}
                </x-sidebar.sidebar-sub-link>
                 <x-sidebar.sidebar-sub-link :href="route('admin.drivers.import.show')" :active="request()->routeIs('admin.drivers.import.*')">
                    <x-slot name="icon"><x-lucide-file-up stroke-width="1.5" /></x-slot>
                    {{ __('Importer des chauffeurs') }}
                </x-sidebar.sidebar-sub-link>
            </x-sidebar.sidebar-group>
        @endcan

        {{-- Section Maintenance --}}
        @canany(['view maintenance', 'manage maintenance plans'])
            <x-sidebar.sidebar-group title="Maintenance" :active="request()->routeIs('admin.maintenance.*')">
                <x-slot name="icon">
                    <x-lucide-wrench stroke-width="1.5" />
                </x-slot>
                <x-sidebar.sidebar-sub-link :href="route('admin.maintenance.dashboard')" :active="request()->routeIs('admin.maintenance.dashboard')">
                    <x-slot name="icon"><x-lucide-bar-chart-2 stroke-width="1.5" /></x-slot>
                    Tableau de Bord
                </x-sidebar.sidebar-sub-link>
                <x-sidebar.sidebar-sub-link :href="route('admin.maintenance.plans.index')" :active="request()->routeIs('admin.maintenance.plans.*')">
                    <x-slot name="icon"><x-lucide-calendar-check stroke-width="1.5" /></x-slot>
                    Plans de Maintenance
                </x-sidebar.sidebar-sub-link>
            </x-sidebar.sidebar-group>
        @endcanany

        {{-- Section Documents --}}
        @canany(['view documents', 'manage document_categories'])
            <x-sidebar.sidebar-group title="Documents" :active="request()->routeIs('admin.documents.*') || request()->routeIs('admin.document-categories.*')">
                <x-slot name="icon">
                    <x-lucide-folder-open stroke-width="1.5" />
                </x-slot>
                @can('view documents')
                    <x-sidebar.sidebar-sub-link :href="route('admin.documents.index')" :active="request()->routeIs('admin.documents.*')">
                        <x-slot name="icon"><x-lucide-file-text stroke-width="1.5" /></x-slot>
                        {{ __('Liste des Documents') }}
                    </x-sidebar.sidebar-sub-link>
                @endcan
                @can('manage document_categories')
                    <x-sidebar.sidebar-sub-link :href="route('admin.document-categories.index')" :active="request()->routeIs('admin.document-categories.*')">
                        <x-slot name="icon"><x-lucide-folder-cog stroke-width="1.5" /></x-slot>
                        {{ __('Cat√©gories de document') }}
                    </x-sidebar.sidebar-sub-link>
                @endcan
            </x-sidebar.sidebar-group>
        @endcanany

        {{-- Section Supplier --}}
        @can('view suppliers')
            <x-sidebar.sidebar-link :href="route('admin.suppliers.index')" :active="request()->routeIs('admin.suppliers.*')">
                <x-slot name="icon">
                    <x-lucide-building-2 class="h-5 w-5" stroke-width="1.5" />
                </x-slot>
                {{ __('Fournisseurs') }}
            </x-sidebar.sidebar-link>
        @endcan


        {{-- Section Administration --}}
        @hasanyrole('Super Admin|Admin')
            <x-sidebar.sidebar-group title="Administration" :active="request()->routeIs('admin.organizations.*') || request()->routeIs('admin.users.*') || request()->routeIs('admin.roles.*')">
                <x-slot name="icon">
                    <x-lucide-settings stroke-width="1.5" />
                </x-slot>
                @role('Super Admin')
                <x-sidebar.sidebar-sub-link :href="route('admin.organizations.index')" :active="request()->routeIs('admin.organizations.*')">
                    <x-slot name="icon"><x-lucide-building-2 stroke-width="1.5" /></x-slot>
                    {{ __('Organisations') }}
                </x-sidebar.sidebar-sub-link>
                @endrole
                <x-sidebar.sidebar-sub-link :href="route('admin.users.index')" :active="request()->routeIs('admin.users.*')">
                    <x-slot name="icon"><x-lucide-user-cog stroke-width="1.5" /></x-slot>
                    {{ __('Utilisateurs') }}
                </x-sidebar.sidebar-sub-link>
                <x-sidebar.sidebar-sub-link :href="route('admin.roles.index')" :active="request()->routeIs('admin.roles.*')">
                    <x-slot name="icon"><x-lucide-key-round stroke-width="1.5" /></x-slot>
                    {{ __('R√¥les') }}
                </x-sidebar.sidebar-sub-link>
            </x-sidebar.sidebar-group>
        @endhasanyrole
    </div>

    {{-- Section Utilisateur / D√©connexion --}}
    <div class="mt-auto shrink-0 p-4 border-t border-gray-200">
        <div x-data="{ open: false }" @keydown.escape.window="open = false" @click.away="open = false" class="relative">
            <button @click="open = !open" class="w-full flex-1 flex items-center space-x-3 group p-2 rounded-lg hover:bg-gray-100">
                <span class="inline-block h-10 w-10 rounded-full bg-gray-200 flex items-center justify-center">
                     <x-lucide-user-round class="h-8 w-8 text-gray-500" stroke-width="1.5"/>
                </span>
                <div class="flex-1 text-left">
                    <p class="text-sm font-medium text-gray-700 group-hover:text-gray-900 truncate">{{ Auth::user()->name }}</p>
                    <p class="text-xs text-gray-500">Options</p>
                </div>
                <x-lucide-chevron-up class="h-5 w-5 text-gray-400 shrink-0" stroke-width="1.5"/>
            </button>

            <div x-show="open"
                 x-transition:enter="transition ease-out duration-100"
                 x-transition:enter-start="transform opacity-0 scale-95"
                 x-transition:enter-end="transform opacity-100 scale-100"
                 x-transition:leave="transition ease-in duration-75"
                 x-transition:leave-start="transform opacity-100 scale-100"
                 x-transition:leave-end="transform opacity-0 scale-95"
                 class="absolute bottom-full left-0 right-0 mb-2 w-full origin-bottom z-10"
                 style="display: none;">
                <div class="bg-white rounded-md shadow-lg ring-1 ring-black ring-opacity-5 p-1">
                    <a href="{{ route('profile.edit') }}" class="flex items-center w-full px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 rounded-md">
                        <x-lucide-user class="mr-3 h-5 w-5" stroke-width="1.5"/>
                        Mon Profil
                    </a>
                    <form method="POST" action="{{ route('logout') }}">
                        @csrf
                        <a href="{{ route('logout') }}" onclick="event.preventDefault(); this.closest('form').submit();" class="flex items-center w-full px-3 py-2 text-sm text-red-600 hover:bg-red-50 rounded-md">
                            <x-lucide-log-out class="mr-3 h-5 w-5" stroke-width="1.5"/>
                            D√©connexion
                        </a>
                    </form>
                </div>
            </div>
        </div>
    </div>
</nav>
--- FIN DU FICHIER : ./resources/views/layouts/navigation.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/profile/edit.blade.php
////////////////////////////////////////////////////////////////

<x-app-layout>
    <x-slot name="header">
        <h2 class="font-semibold text-xl text-gray-800 leading-tight">
            {{ __('Profile') }}
        </h2>
    </x-slot>

    <div class="py-12">
        <div class="max-w-7xl mx-auto sm:px-6 lg:px-8 space-y-6">
            <div class="p-4 sm:p-8 bg-white shadow sm:rounded-lg">
                <div class="max-w-xl">
                    @include('profile.partials.update-profile-information-form')
                </div>
            </div>

            <div class="p-4 sm:p-8 bg-white shadow sm:rounded-lg">
                <div class="max-w-xl">
                    @include('profile.partials.update-password-form')
                </div>
            </div>

            <div class="p-4 sm:p-8 bg-white shadow sm:rounded-lg">
                <div class="max-w-xl">
                    @include('profile.partials.delete-user-form')
                </div>
            </div>
        </div>
    </div>
</x-app-layout>

--- FIN DU FICHIER : ./resources/views/profile/edit.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/profile/partials/delete-user-form.blade.php
////////////////////////////////////////////////////////////////

<section class="space-y-6">
    <header>
        <h2 class="text-lg font-medium text-gray-900">
            {{ __('Delete Account') }}
        </h2>

        <p class="mt-1 text-sm text-gray-600">
            {{ __('Once your account is deleted, all of its resources and data will be permanently deleted. Before deleting your account, please download any data or information that you wish to retain.') }}
        </p>
    </header>

    <x-danger-button
        x-data=""
        x-on:click.prevent="$dispatch('open-modal', 'confirm-user-deletion')"
    >{{ __('Delete Account') }}</x-danger-button>

    <x-modal name="confirm-user-deletion" :show="$errors->userDeletion->isNotEmpty()" focusable>
        <form method="post" action="{{ route('profile.destroy') }}" class="p-6">
            @csrf
            @method('delete')

            <h2 class="text-lg font-medium text-gray-900">
                {{ __('Are you sure you want to delete your account?') }}
            </h2>

            <p class="mt-1 text-sm text-gray-600">
                {{ __('Once your account is deleted, all of its resources and data will be permanently deleted. Please enter your password to confirm you would like to permanently delete your account.') }}
            </p>

            <div class="mt-6">
                <x-input-label for="password" value="{{ __('Password') }}" class="sr-only" />

                <x-text-input
                    id="password"
                    name="password"
                    type="password"
                    class="mt-1 block w-3/4"
                    placeholder="{{ __('Password') }}"
                />

                <x-input-error :messages="$errors->userDeletion->get('password')" class="mt-2" />
            </div>

            <div class="mt-6 flex justify-end">
                <x-secondary-button x-on:click="$dispatch('close')">
                    {{ __('Cancel') }}
                </x-secondary-button>

                <x-danger-button class="ms-3">
                    {{ __('Delete Account') }}
                </x-danger-button>
            </div>
        </form>
    </x-modal>
</section>

--- FIN DU FICHIER : ./resources/views/profile/partials/delete-user-form.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/profile/partials/update-password-form.blade.php
////////////////////////////////////////////////////////////////

<section>
    <header>
        <h2 class="text-lg font-medium text-gray-900">
            {{ __('Update Password') }}
        </h2>

        <p class="mt-1 text-sm text-gray-600">
            {{ __('Ensure your account is using a long, random password to stay secure.') }}
        </p>
    </header>

    <form method="post" action="{{ route('password.update') }}" class="mt-6 space-y-6">
        @csrf
        @method('put')

        <div>
            <x-input-label for="update_password_current_password" :value="__('Current Password')" />
            <x-text-input id="update_password_current_password" name="current_password" type="password" class="mt-1 block w-full" autocomplete="current-password" />
            <x-input-error :messages="$errors->updatePassword->get('current_password')" class="mt-2" />
        </div>

        <div>
            <x-input-label for="update_password_password" :value="__('New Password')" />
            <x-text-input id="update_password_password" name="password" type="password" class="mt-1 block w-full" autocomplete="new-password" />
            <x-input-error :messages="$errors->updatePassword->get('password')" class="mt-2" />
        </div>

        <div>
            <x-input-label for="update_password_password_confirmation" :value="__('Confirm Password')" />
            <x-text-input id="update_password_password_confirmation" name="password_confirmation" type="password" class="mt-1 block w-full" autocomplete="new-password" />
            <x-input-error :messages="$errors->updatePassword->get('password_confirmation')" class="mt-2" />
        </div>

        <div class="flex items-center gap-4">
            <x-primary-button>{{ __('Save') }}</x-primary-button>

            @if (session('status') === 'password-updated')
                <p
                    x-data="{ show: true }"
                    x-show="show"
                    x-transition
                    x-init="setTimeout(() => show = false, 2000)"
                    class="text-sm text-gray-600"
                >{{ __('Saved.') }}</p>
            @endif
        </div>
    </form>
</section>

--- FIN DU FICHIER : ./resources/views/profile/partials/update-password-form.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/profile/partials/update-profile-information-form.blade.php
////////////////////////////////////////////////////////////////

{{-- resources/views/profile/partials/update-profile-information-form.blade.php --}}
<section>
    <header>
        <h2 class="text-lg font-medium text-gray-900 dark:text-gray-100">
            {{ __('Informations du Profil') }}
        </h2>

        <p class="mt-1 text-sm text-gray-600 dark:text-gray-400">
            {{ __("Mettez √† jour les informations de profil et l'adresse e-mail de votre compte.") }}
        </p>
    </header>

    <form id="send-verification" method="post" action="{{ route('verification.send') }}">
        @csrf
    </form>

    <form method="post" action="{{ route('profile.update') }}" class="mt-6 space-y-6">
        @csrf
        @method('patch')

        {{-- First Name --}}
        <div>
            <x-input-label for="first_name" :value="__('Pr√©nom')" />
            <x-text-input id="first_name" name="first_name" type="text" class="mt-1 block w-full" :value="old('first_name', $user->first_name)" required autofocus autocomplete="given-name" />
            <x-input-error class="mt-2" :messages="$errors->get('first_name')" />
        </div>

        {{-- Last Name --}}
        <div>
            <x-input-label for="last_name" :value="__('Nom de famille')" />
            <x-text-input id="last_name" name="last_name" type="text" class="mt-1 block w-full" :value="old('last_name', $user->last_name)" required autocomplete="family-name" />
            <x-input-error class="mt-2" :messages="$errors->get('last_name')" />
        </div>

        {{-- Email Address --}}
        <div>
            <x-input-label for="email" :value="__('Email')" />
            <x-text-input id="email" name="email" type="email" class="mt-1 block w-full" :value="old('email', $user->email)" required autocomplete="username" /> {{-- Breeze utilise 'username' pour l'autocomplete de l'email dans ce contexte --}}
            <x-input-error class="mt-2" :messages="$errors->get('email')" />

            @if ($user instanceof \Illuminate\Contracts\Auth\MustVerifyEmail && ! $user->hasVerifiedEmail())
                <div>
                    <p class="text-sm mt-2 text-gray-800 dark:text-gray-200">
                        {{ __('Votre adresse e-mail n\'est pas v√©rifi√©e.') }}

                        <button form="send-verification" class="underline text-sm text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-100 rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 dark:focus:ring-offset-gray-800">
                            {{ __('Cliquez ici pour renvoyer l\'e-mail de v√©rification.') }}
                        </button>
                    </p>

                    @if (session('status') === 'verification-link-sent')
                        <p class="mt-2 font-medium text-sm text-green-600 dark:text-green-400">
                            {{ __('Un nouveau lien de v√©rification a √©t√© envoy√© √† votre adresse e-mail.') }}
                        </p>
                    @endif
                </div>
            @endif
        </div>

        {{-- Phone Number --}}
        <div>
            <x-input-label for="phone" :value="__('T√©l√©phone (optionnel)')" />
            <x-text-input id="phone" name="phone" type="text" class="mt-1 block w-full" :value="old('phone', $user->phone)" autocomplete="tel" />
            <x-input-error class="mt-2" :messages="$errors->get('phone')" />
        </div>

        <div class="flex items-center gap-4">
            <x-primary-button>{{ __('Enregistrer') }}</x-primary-button>

            @if (session('status') === 'profile-updated')
                <p
                    x-data="{ show: true }"
                    x-show="show"
                    x-transition
                    x-init="setTimeout(() => show = false, 2000)"
                    class="text-sm text-gray-600 dark:text-gray-400"
                >{{ __('Enregistr√©.') }}</p>
            @endif
        </div>
    </form>
</section>

--- FIN DU FICHIER : ./resources/views/profile/partials/update-profile-information-form.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/vendor/pagination/bootstrap-4.blade.php
////////////////////////////////////////////////////////////////

@if ($paginator->hasPages())
    <nav>
        <ul class="pagination">
            {{-- Previous Page Link --}}
            @if ($paginator->onFirstPage())
                <li class="page-item disabled" aria-disabled="true" aria-label="@lang('pagination.previous')">
                    <span class="page-link" aria-hidden="true">&lsaquo;</span>
                </li>
            @else
                <li class="page-item">
                    <a class="page-link" href="{{ $paginator->previousPageUrl() }}" rel="prev" aria-label="@lang('pagination.previous')">&lsaquo;</a>
                </li>
            @endif

            {{-- Pagination Elements --}}
            @foreach ($elements as $element)
                {{-- "Three Dots" Separator --}}
                @if (is_string($element))
                    <li class="page-item disabled" aria-disabled="true"><span class="page-link">{{ $element }}</span></li>
                @endif

                {{-- Array Of Links --}}
                @if (is_array($element))
                    @foreach ($element as $page => $url)
                        @if ($page == $paginator->currentPage())
                            <li class="page-item active" aria-current="page"><span class="page-link">{{ $page }}</span></li>
                        @else
                            <li class="page-item"><a class="page-link" href="{{ $url }}">{{ $page }}</a></li>
                        @endif
                    @endforeach
                @endif
            @endforeach

            {{-- Next Page Link --}}
            @if ($paginator->hasMorePages())
                <li class="page-item">
                    <a class="page-link" href="{{ $paginator->nextPageUrl() }}" rel="next" aria-label="@lang('pagination.next')">&rsaquo;</a>
                </li>
            @else
                <li class="page-item disabled" aria-disabled="true" aria-label="@lang('pagination.next')">
                    <span class="page-link" aria-hidden="true">&rsaquo;</span>
                </li>
            @endif
        </ul>
    </nav>
@endif

--- FIN DU FICHIER : ./resources/views/vendor/pagination/bootstrap-4.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/vendor/pagination/bootstrap-5.blade.php
////////////////////////////////////////////////////////////////

@if ($paginator->hasPages())
    <nav class="d-flex justify-items-center justify-content-between">
        <div class="d-flex justify-content-between flex-fill d-sm-none">
            <ul class="pagination">
                {{-- Previous Page Link --}}
                @if ($paginator->onFirstPage())
                    <li class="page-item disabled" aria-disabled="true">
                        <span class="page-link">@lang('pagination.previous')</span>
                    </li>
                @else
                    <li class="page-item">
                        <a class="page-link" href="{{ $paginator->previousPageUrl() }}" rel="prev">@lang('pagination.previous')</a>
                    </li>
                @endif

                {{-- Next Page Link --}}
                @if ($paginator->hasMorePages())
                    <li class="page-item">
                        <a class="page-link" href="{{ $paginator->nextPageUrl() }}" rel="next">@lang('pagination.next')</a>
                    </li>
                @else
                    <li class="page-item disabled" aria-disabled="true">
                        <span class="page-link">@lang('pagination.next')</span>
                    </li>
                @endif
            </ul>
        </div>

        <div class="d-none flex-sm-fill d-sm-flex align-items-sm-center justify-content-sm-between">
            <div>
                <p class="small text-muted">
                    {!! __('Showing') !!}
                    <span class="fw-semibold">{{ $paginator->firstItem() }}</span>
                    {!! __('to') !!}
                    <span class="fw-semibold">{{ $paginator->lastItem() }}</span>
                    {!! __('of') !!}
                    <span class="fw-semibold">{{ $paginator->total() }}</span>
                    {!! __('results') !!}
                </p>
            </div>

            <div>
                <ul class="pagination">
                    {{-- Previous Page Link --}}
                    @if ($paginator->onFirstPage())
                        <li class="page-item disabled" aria-disabled="true" aria-label="@lang('pagination.previous')">
                            <span class="page-link" aria-hidden="true">&lsaquo;</span>
                        </li>
                    @else
                        <li class="page-item">
                            <a class="page-link" href="{{ $paginator->previousPageUrl() }}" rel="prev" aria-label="@lang('pagination.previous')">&lsaquo;</a>
                        </li>
                    @endif

                    {{-- Pagination Elements --}}
                    @foreach ($elements as $element)
                        {{-- "Three Dots" Separator --}}
                        @if (is_string($element))
                            <li class="page-item disabled" aria-disabled="true"><span class="page-link">{{ $element }}</span></li>
                        @endif

                        {{-- Array Of Links --}}
                        @if (is_array($element))
                            @foreach ($element as $page => $url)
                                @if ($page == $paginator->currentPage())
                                    <li class="page-item active" aria-current="page"><span class="page-link">{{ $page }}</span></li>
                                @else
                                    <li class="page-item"><a class="page-link" href="{{ $url }}">{{ $page }}</a></li>
                                @endif
                            @endforeach
                        @endif
                    @endforeach

                    {{-- Next Page Link --}}
                    @if ($paginator->hasMorePages())
                        <li class="page-item">
                            <a class="page-link" href="{{ $paginator->nextPageUrl() }}" rel="next" aria-label="@lang('pagination.next')">&rsaquo;</a>
                        </li>
                    @else
                        <li class="page-item disabled" aria-disabled="true" aria-label="@lang('pagination.next')">
                            <span class="page-link" aria-hidden="true">&rsaquo;</span>
                        </li>
                    @endif
                </ul>
            </div>
        </div>
    </nav>
@endif

--- FIN DU FICHIER : ./resources/views/vendor/pagination/bootstrap-5.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/vendor/pagination/default.blade.php
////////////////////////////////////////////////////////////////

@if ($paginator->hasPages())
    <nav>
        <ul class="pagination">
            {{-- Previous Page Link --}}
            @if ($paginator->onFirstPage())
                <li class="disabled" aria-disabled="true" aria-label="@lang('pagination.previous')">
                    <span aria-hidden="true">&lsaquo;</span>
                </li>
            @else
                <li>
                    <a href="{{ $paginator->previousPageUrl() }}" rel="prev" aria-label="@lang('pagination.previous')">&lsaquo;</a>
                </li>
            @endif

            {{-- Pagination Elements --}}
            @foreach ($elements as $element)
                {{-- "Three Dots" Separator --}}
                @if (is_string($element))
                    <li class="disabled" aria-disabled="true"><span>{{ $element }}</span></li>
                @endif

                {{-- Array Of Links --}}
                @if (is_array($element))
                    @foreach ($element as $page => $url)
                        @if ($page == $paginator->currentPage())
                            <li class="active" aria-current="page"><span>{{ $page }}</span></li>
                        @else
                            <li><a href="{{ $url }}">{{ $page }}</a></li>
                        @endif
                    @endforeach
                @endif
            @endforeach

            {{-- Next Page Link --}}
            @if ($paginator->hasMorePages())
                <li>
                    <a href="{{ $paginator->nextPageUrl() }}" rel="next" aria-label="@lang('pagination.next')">&rsaquo;</a>
                </li>
            @else
                <li class="disabled" aria-disabled="true" aria-label="@lang('pagination.next')">
                    <span aria-hidden="true">&rsaquo;</span>
                </li>
            @endif
        </ul>
    </nav>
@endif

--- FIN DU FICHIER : ./resources/views/vendor/pagination/default.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/vendor/pagination/semantic-ui.blade.php
////////////////////////////////////////////////////////////////

@if ($paginator->hasPages())
    <div class="ui pagination menu" role="navigation">
        {{-- Previous Page Link --}}
        @if ($paginator->onFirstPage())
            <a class="icon item disabled" aria-disabled="true" aria-label="@lang('pagination.previous')"> <i class="left chevron icon"></i> </a>
        @else
            <a class="icon item" href="{{ $paginator->previousPageUrl() }}" rel="prev" aria-label="@lang('pagination.previous')"> <i class="left chevron icon"></i> </a>
        @endif

        {{-- Pagination Elements --}}
        @foreach ($elements as $element)
            {{-- "Three Dots" Separator --}}
            @if (is_string($element))
                <a class="icon item disabled" aria-disabled="true">{{ $element }}</a>
            @endif

            {{-- Array Of Links --}}
            @if (is_array($element))
                @foreach ($element as $page => $url)
                    @if ($page == $paginator->currentPage())
                        <a class="item active" href="{{ $url }}" aria-current="page">{{ $page }}</a>
                    @else
                        <a class="item" href="{{ $url }}">{{ $page }}</a>
                    @endif
                @endforeach
            @endif
        @endforeach

        {{-- Next Page Link --}}
        @if ($paginator->hasMorePages())
            <a class="icon item" href="{{ $paginator->nextPageUrl() }}" rel="next" aria-label="@lang('pagination.next')"> <i class="right chevron icon"></i> </a>
        @else
            <a class="icon item disabled" aria-disabled="true" aria-label="@lang('pagination.next')"> <i class="right chevron icon"></i> </a>
        @endif
    </div>
@endif

--- FIN DU FICHIER : ./resources/views/vendor/pagination/semantic-ui.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/vendor/pagination/simple-bootstrap-4.blade.php
////////////////////////////////////////////////////////////////

@if ($paginator->hasPages())
    <nav>
        <ul class="pagination">
            {{-- Previous Page Link --}}
            @if ($paginator->onFirstPage())
                <li class="page-item disabled" aria-disabled="true">
                    <span class="page-link">@lang('pagination.previous')</span>
                </li>
            @else
                <li class="page-item">
                    <a class="page-link" href="{{ $paginator->previousPageUrl() }}" rel="prev">@lang('pagination.previous')</a>
                </li>
            @endif

            {{-- Next Page Link --}}
            @if ($paginator->hasMorePages())
                <li class="page-item">
                    <a class="page-link" href="{{ $paginator->nextPageUrl() }}" rel="next">@lang('pagination.next')</a>
                </li>
            @else
                <li class="page-item disabled" aria-disabled="true">
                    <span class="page-link">@lang('pagination.next')</span>
                </li>
            @endif
        </ul>
    </nav>
@endif

--- FIN DU FICHIER : ./resources/views/vendor/pagination/simple-bootstrap-4.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/vendor/pagination/simple-bootstrap-5.blade.php
////////////////////////////////////////////////////////////////

@if ($paginator->hasPages())
    <nav role="navigation" aria-label="Pagination Navigation">
        <ul class="pagination">
            {{-- Previous Page Link --}}
            @if ($paginator->onFirstPage())
                <li class="page-item disabled" aria-disabled="true">
                    <span class="page-link">{!! __('pagination.previous') !!}</span>
                </li>
            @else
                <li class="page-item">
                    <a class="page-link" href="{{ $paginator->previousPageUrl() }}" rel="prev">
                        {!! __('pagination.previous') !!}
                    </a>
                </li>
            @endif

            {{-- Next Page Link --}}
            @if ($paginator->hasMorePages())
                <li class="page-item">
                    <a class="page-link" href="{{ $paginator->nextPageUrl() }}" rel="next">{!! __('pagination.next') !!}</a>
                </li>
            @else
                <li class="page-item disabled" aria-disabled="true">
                    <span class="page-link">{!! __('pagination.next') !!}</span>
                </li>
            @endif
        </ul>
    </nav>
@endif

--- FIN DU FICHIER : ./resources/views/vendor/pagination/simple-bootstrap-5.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/vendor/pagination/simple-default.blade.php
////////////////////////////////////////////////////////////////

@if ($paginator->hasPages())
    <nav>
        <ul class="pagination">
            {{-- Previous Page Link --}}
            @if ($paginator->onFirstPage())
                <li class="disabled" aria-disabled="true"><span>@lang('pagination.previous')</span></li>
            @else
                <li><a href="{{ $paginator->previousPageUrl() }}" rel="prev">@lang('pagination.previous')</a></li>
            @endif

            {{-- Next Page Link --}}
            @if ($paginator->hasMorePages())
                <li><a href="{{ $paginator->nextPageUrl() }}" rel="next">@lang('pagination.next')</a></li>
            @else
                <li class="disabled" aria-disabled="true"><span>@lang('pagination.next')</span></li>
            @endif
        </ul>
    </nav>
@endif

--- FIN DU FICHIER : ./resources/views/vendor/pagination/simple-default.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/vendor/pagination/simple-tailwind.blade.php
////////////////////////////////////////////////////////////////

@if ($paginator->hasPages())
    <nav role="navigation" aria-label="Pagination Navigation" class="flex justify-between">
        {{-- Previous Page Link --}}
        @if ($paginator->onFirstPage())
            <span class="relative inline-flex items-center px-4 py-2 text-sm font-medium text-gray-500 bg-white border border-gray-300 cursor-default leading-5 rounded-md dark:text-gray-600 dark:bg-gray-800 dark:border-gray-600">
                {!! __('pagination.previous') !!}
            </span>
        @else
            <a href="{{ $paginator->previousPageUrl() }}" rel="prev" class="relative inline-flex items-center px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 leading-5 rounded-md hover:text-gray-500 focus:outline-none focus:ring ring-gray-300 focus:border-blue-300 active:bg-gray-100 active:text-gray-700 transition ease-in-out duration-150 dark:bg-gray-800 dark:border-gray-600 dark:text-gray-300 dark:focus:border-blue-700 dark:active:bg-gray-700 dark:active:text-gray-300">
                {!! __('pagination.previous') !!}
            </a>
        @endif

        {{-- Next Page Link --}}
        @if ($paginator->hasMorePages())
            <a href="{{ $paginator->nextPageUrl() }}" rel="next" class="relative inline-flex items-center px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 leading-5 rounded-md hover:text-gray-500 focus:outline-none focus:ring ring-gray-300 focus:border-blue-300 active:bg-gray-100 active:text-gray-700 transition ease-in-out duration-150 dark:bg-gray-800 dark:border-gray-600 dark:text-gray-300 dark:focus:border-blue-700 dark:active:bg-gray-700 dark:active:text-gray-300">
                {!! __('pagination.next') !!}
            </a>
        @else
            <span class="relative inline-flex items-center px-4 py-2 text-sm font-medium text-gray-500 bg-white border border-gray-300 cursor-default leading-5 rounded-md dark:text-gray-600 dark:bg-gray-800 dark:border-gray-600">
                {!! __('pagination.next') !!}
            </span>
        @endif
    </nav>
@endif

--- FIN DU FICHIER : ./resources/views/vendor/pagination/simple-tailwind.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/vendor/pagination/tailwind.blade.php
////////////////////////////////////////////////////////////////

@if ($paginator->hasPages())
    <nav role="navigation" aria-label="{{ __('Pagination Navigation') }}" class="flex items-center justify-between">
        <div class="flex justify-between flex-1 sm:hidden">
            @if ($paginator->onFirstPage())
                <span class="relative inline-flex items-center px-4 py-2 text-sm font-medium text-gray-500 bg-white border border-gray-300 cursor-default leading-5 rounded-md">
                    {!! __('pagination.previous') !!}
                </span>
            @else
                <a href="{{ $paginator->previousPageUrl() }}" class="relative inline-flex items-center px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 leading-5 rounded-md hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-violet-500">
                    {!! __('pagination.previous') !!}
                </a>
            @endif

            @if ($paginator->hasMorePages())
                <a href="{{ $paginator->nextPageUrl() }}" class="relative inline-flex items-center px-4 py-2 ml-3 text-sm font-medium text-gray-700 bg-white border border-gray-300 leading-5 rounded-md hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-violet-500">
                    {!! __('pagination.next') !!}
                </a>
            @else
                <span class="relative inline-flex items-center px-4 py-2 ml-3 text-sm font-medium text-gray-500 bg-white border border-gray-300 cursor-default leading-5 rounded-md">
                    {!! __('pagination.next') !!}
                </span>
            @endif
        </div>

        <div class="hidden sm:flex-1 sm:flex sm:items-center sm:justify-between">
            <div>
                <p class="text-sm text-gray-700">
                    Affiche de
                    <span class="font-medium">{{ $paginator->firstItem() }}</span>
                    √†
                    <span class="font-medium">{{ $paginator->lastItem() }}</span>
                    sur
                    <span class="font-medium">{{ $paginator->total() }}</span>
                    r√©sultats
                </p>
            </div>

            <div>
                <span class="relative z-0 inline-flex shadow-sm rounded-md">
                    {{-- Previous Page Link --}}
                    @if ($paginator->onFirstPage())
                        <span aria-disabled="true" aria-label="{{ __('pagination.previous') }}">
                            <span class="relative inline-flex items-center px-2 py-2 text-sm font-medium text-gray-400 bg-white border border-gray-300 cursor-default rounded-l-md leading-5" aria-hidden="true">
                                <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd" /></svg>
                            </span>
                        </span>
                    @else
                        <a href="{{ $paginator->previousPageUrl() }}" rel="prev" class="relative inline-flex items-center px-2 py-2 text-sm font-medium text-gray-500 bg-white border border-gray-300 rounded-l-md leading-5 hover:bg-gray-50 focus:z-10 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-violet-500" aria-label="{{ __('pagination.previous') }}">
                            <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd" /></svg>
                        </a>
                    @endif

                    {{-- Pagination Elements --}}
                    @foreach ($elements as $element)
                        @if (is_string($element))
                            <span aria-disabled="true"><span class="relative inline-flex items-center px-4 py-2 -ml-px text-sm font-medium text-gray-500 bg-white border border-gray-300 cursor-default leading-5">{{ $element }}</span></span>
                        @endif

                        @if (is_array($element))
                            @foreach ($element as $page => $url)
                                @if ($page == $paginator->currentPage())
                                    <span aria-current="page"><span class="relative inline-flex items-center px-4 py-2 -ml-px text-sm font-medium text-white bg-violet-600 border border-violet-600 cursor-default leading-5">{{ $page }}</span></span>
                                @else
                                    <a href="{{ $url }}" class="relative inline-flex items-center px-4 py-2 -ml-px text-sm font-medium text-gray-700 bg-white border border-gray-300 leading-5 hover:bg-gray-50 focus:z-10 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-violet-500" aria-label="{{ __('Go to page :page', ['page' => $page]) }}">{{ $page }}</a>
                                @endif
                            @endforeach
                        @endif
                    @endforeach

                    {{-- Next Page Link --}}
                    @if ($paginator->hasMorePages())
                        <a href="{{ $paginator->nextPageUrl() }}" rel="next" class="relative inline-flex items-center px-2 py-2 -ml-px text-sm font-medium text-gray-500 bg-white border border-gray-300 rounded-r-md leading-5 hover:bg-gray-50 focus:z-10 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-violet-500" aria-label="{{ __('pagination.next') }}">
                            <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" /></svg>
                        </a>
                    @else
                        <span aria-disabled="true" aria-label="{{ __('pagination.next') }}">
                            <span class="relative inline-flex items-center px-2 py-2 -ml-px text-sm font-medium text-gray-400 bg-white border border-gray-300 cursor-default rounded-r-md leading-5" aria-hidden="true">
                                <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" /></svg>
                            </span>
                        </span>
                    @endif
                </span>
            </div>
        </div>
    </nav>
@endif

--- FIN DU FICHIER : ./resources/views/vendor/pagination/tailwind.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./resources/views/welcome.blade.php
////////////////////////////////////////////////////////////////

<!DOCTYPE html>
<html lang="{{ str_replace('_', '-', app()->getLocale()) }}">
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">

        <title>Laravel</title>

        <!-- Fonts -->
        <link rel="preconnect" href="https://fonts.bunny.net">
        <link href="https://fonts.bunny.net/css?family=figtree:400,600&display=swap" rel="stylesheet" />

        <!-- Styles -->
        <style>
            /* ! tailwindcss v3.2.4 | MIT License | https://tailwindcss.com */*,::after,::before{box-sizing:border-box;border-width:0;border-style:solid;border-color:#e5e7eb}::after,::before{--tw-content:''}html{line-height:1.5;-webkit-text-size-adjust:100%;-moz-tab-size:4;tab-size:4;font-family:Figtree, sans-serif;font-feature-settings:normal}body{margin:0;line-height:inherit}hr{height:0;color:inherit;border-top-width:1px}abbr:where([title]){-webkit-text-decoration:underline dotted;text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,pre,samp{font-family:ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{text-indent:0;border-color:inherit;border-collapse:collapse}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;font-weight:inherit;line-height:inherit;color:inherit;margin:0;padding:0}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button;background-color:transparent;background-image:none}:-moz-focusring{outline:auto}:-moz-ui-invalid{box-shadow:none}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dd,dl,figure,h1,h2,h3,h4,h5,h6,hr,p,pre{margin:0}fieldset{margin:0;padding:0}legend{padding:0}menu,ol,ul{list-style:none;margin:0;padding:0}textarea{resize:vertical}input::placeholder,textarea::placeholder{opacity:1;color:#9ca3af}[role=button],button{cursor:pointer}:disabled{cursor:default}audio,canvas,embed,iframe,img,object,svg,video{display:block;vertical-align:middle}img,video{max-width:100%;height:auto}[hidden]{display:none}*, ::before, ::after{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(59 130 246 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }::-webkit-backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(59 130 246 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }::backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(59 130 246 / 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }.relative{position:relative}.mx-auto{margin-left:auto;margin-right:auto}.mx-6{margin-left:1.5rem;margin-right:1.5rem}.ml-4{margin-left:1rem}.mt-16{margin-top:4rem}.mt-6{margin-top:1.5rem}.mt-4{margin-top:1rem}.-mt-px{margin-top:-1px}.mr-1{margin-right:0.25rem}.flex{display:flex}.inline-flex{display:inline-flex}.grid{display:grid}.h-16{height:4rem}.h-7{height:1.75rem}.h-6{height:1.5rem}.h-5{height:1.25rem}.min-h-screen{min-height:100vh}.w-auto{width:auto}.w-16{width:4rem}.w-7{width:1.75rem}.w-6{width:1.5rem}.w-5{width:1.25rem}.max-w-7xl{max-width:80rem}.shrink-0{flex-shrink:0}.scale-100{--tw-scale-x:1;--tw-scale-y:1;transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.grid-cols-1{grid-template-columns:repeat(1, minmax(0, 1fr))}.items-center{align-items:center}.justify-center{justify-content:center}.gap-6{gap:1.5rem}.gap-4{gap:1rem}.self-center{align-self:center}.rounded-lg{border-radius:0.5rem}.rounded-full{border-radius:9999px}.bg-gray-100{--tw-bg-opacity:1;background-color:rgb(243 244 246 / var(--tw-bg-opacity))}.bg-white{--tw-bg-opacity:1;background-color:rgb(255 255 255 / var(--tw-bg-opacity))}.bg-red-50{--tw-bg-opacity:1;background-color:rgb(254 242 242 / var(--tw-bg-opacity))}.bg-dots-darker{background-image:url("data:image/svg+xml,%3Csvg width='30' height='30' viewBox='0 0 30 30' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M1.22676 0C1.91374 0 2.45351 0.539773 2.45351 1.22676C2.45351 1.91374 1.91374 2.45351 1.22676 2.45351C0.539773 2.45351 0 1.91374 0 1.22676C0 0.539773 0.539773 0 1.22676 0Z' fill='rgba(0,0,0,0.07)'/%3E%3C/svg%3E")}.from-gray-700\/50{--tw-gradient-from:rgb(55 65 81 / 0.5);--tw-gradient-to:rgb(55 65 81 / 0);--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to)}.via-transparent{--tw-gradient-to:rgb(0 0 0 / 0);--tw-gradient-stops:var(--tw-gradient-from), transparent, var(--tw-gradient-to)}.bg-center{background-position:center}.stroke-red-500{stroke:#ef4444}.stroke-gray-400{stroke:#9ca3af}.p-6{padding:1.5rem}.px-6{padding-left:1.5rem;padding-right:1.5rem}.text-center{text-align:center}.text-right{text-align:right}.text-xl{font-size:1.25rem;line-height:1.75rem}.text-sm{font-size:0.875rem;line-height:1.25rem}.font-semibold{font-weight:600}.leading-relaxed{line-height:1.625}.text-gray-600{--tw-text-opacity:1;color:rgb(75 85 99 / var(--tw-text-opacity))}.text-gray-900{--tw-text-opacity:1;color:rgb(17 24 39 / var(--tw-text-opacity))}.text-gray-500{--tw-text-opacity:1;color:rgb(107 114 128 / var(--tw-text-opacity))}.underline{-webkit-text-decoration-line:underline;text-decoration-line:underline}.antialiased{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.shadow-2xl{--tw-shadow:0 25px 50px -12px rgb(0 0 0 / 0.25);--tw-shadow-colored:0 25px 50px -12px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}.shadow-gray-500\/20{--tw-shadow-color:rgb(107 114 128 / 0.2);--tw-shadow:var(--tw-shadow-colored)}.transition-all{transition-property:all;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-duration:150ms}.selection\:bg-red-500 *::selection{--tw-bg-opacity:1;background-color:rgb(239 68 68 / var(--tw-bg-opacity))}.selection\:text-white *::selection{--tw-text-opacity:1;color:rgb(255 255 255 / var(--tw-text-opacity))}.selection\:bg-red-500::selection{--tw-bg-opacity:1;background-color:rgb(239 68 68 / var(--tw-bg-opacity))}.selection\:text-white::selection{--tw-text-opacity:1;color:rgb(255 255 255 / var(--tw-text-opacity))}.hover\:text-gray-900:hover{--tw-text-opacity:1;color:rgb(17 24 39 / var(--tw-text-opacity))}.hover\:text-gray-700:hover{--tw-text-opacity:1;color:rgb(55 65 81 / var(--tw-text-opacity))}.focus\:rounded-sm:focus{border-radius:0.125rem}.focus\:outline:focus{outline-style:solid}.focus\:outline-2:focus{outline-width:2px}.focus\:outline-red-500:focus{outline-color:#ef4444}.group:hover .group-hover\:stroke-gray-600{stroke:#4b5563}.z-10{z-index: 10}@media (prefers-reduced-motion: no-preference){.motion-safe\:hover\:scale-\[1\.01\]:hover{--tw-scale-x:1.01;--tw-scale-y:1.01;transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}}@media (prefers-color-scheme: dark){.dark\:bg-gray-900{--tw-bg-opacity:1;background-color:rgb(17 24 39 / var(--tw-bg-opacity))}.dark\:bg-gray-800\/50{background-color:rgb(31 41 55 / 0.5)}.dark\:bg-red-800\/20{background-color:rgb(153 27 27 / 0.2)}.dark\:bg-dots-lighter{background-image:url("data:image/svg+xml,%3Csvg width='30' height='30' viewBox='0 0 30 30' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M1.22676 0C1.91374 0 2.45351 0.539773 2.45351 1.22676C2.45351 1.91374 1.91374 2.45351 1.22676 2.45351C0.539773 2.45351 0 1.91374 0 1.22676C0 0.539773 0.539773 0 1.22676 0Z' fill='rgba(255,255,255,0.07)'/%3E%3C/svg%3E")}.dark\:bg-gradient-to-bl{background-image:linear-gradient(to bottom left, var(--tw-gradient-stops))}.dark\:stroke-gray-600{stroke:#4b5563}.dark\:text-gray-400{--tw-text-opacity:1;color:rgb(156 163 175 / var(--tw-text-opacity))}.dark\:text-white{--tw-text-opacity:1;color:rgb(255 255 255 / var(--tw-text-opacity))}.dark\:shadow-none{--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}.dark\:ring-1{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000)}.dark\:ring-inset{--tw-ring-inset:inset}.dark\:ring-white\/5{--tw-ring-color:rgb(255 255 255 / 0.05)}.dark\:hover\:text-white:hover{--tw-text-opacity:1;color:rgb(255 255 255 / var(--tw-text-opacity))}.group:hover .dark\:group-hover\:stroke-gray-400{stroke:#9ca3af}}@media (min-width: 640px){.sm\:fixed{position:fixed}.sm\:top-0{top:0px}.sm\:right-0{right:0px}.sm\:ml-0{margin-left:0px}.sm\:flex{display:flex}.sm\:items-center{align-items:center}.sm\:justify-center{justify-content:center}.sm\:justify-between{justify-content:space-between}.sm\:text-left{text-align:left}.sm\:text-right{text-align:right}}@media (min-width: 768px){.md\:grid-cols-2{grid-template-columns:repeat(2, minmax(0, 1fr))}}@media (min-width: 1024px){.lg\:gap-8{gap:2rem}.lg\:p-8{padding:2rem}}
        </style>
    </head>
    <body class="antialiased">
        <div class="relative sm:flex sm:justify-center sm:items-center min-h-screen bg-dots-darker bg-center bg-gray-100 dark:bg-dots-lighter dark:bg-gray-900 selection:bg-red-500 selection:text-white">
            @if (Route::has('login'))
                <div class="sm:fixed sm:top-0 sm:right-0 p-6 text-right z-10">
                    @auth
                        <a href="{{ url('/dashboard') }}" class="font-semibold text-gray-600 hover:text-gray-900 dark:text-gray-400 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500">Dashboard</a>
                    @else
                        <a href="{{ route('login') }}" class="font-semibold text-gray-600 hover:text-gray-900 dark:text-gray-400 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500">Log in</a>

                        @if (Route::has('register'))
                            <a href="{{ route('register') }}" class="ml-4 font-semibold text-gray-600 hover:text-gray-900 dark:text-gray-400 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500">Register</a>
                        @endif
                    @endauth
                </div>
            @endif

            <div class="max-w-7xl mx-auto p-6 lg:p-8">
                <div class="flex justify-center">
                    <svg viewBox="0 0 62 65" fill="none" xmlns="http://www.w3.org/2000/svg" class="h-16 w-auto bg-gray-100 dark:bg-gray-900">
                        <path d="M61.8548 14.6253C61.8778 14.7102 61.8895 14.7978 61.8897 14.8858V28.5615C61.8898 28.737 61.8434 28.9095 61.7554 29.0614C61.6675 29.2132 61.5409 29.3392 61.3887 29.4265L49.9104 36.0351V49.1337C49.9104 49.4902 49.7209 49.8192 49.4118 49.9987L25.4519 63.7916C25.3971 63.8227 25.3372 63.8427 25.2774 63.8639C25.255 63.8714 25.2338 63.8851 25.2101 63.8913C25.0426 63.9354 24.8666 63.9354 24.6991 63.8913C24.6716 63.8838 24.6467 63.8689 24.6205 63.8589C24.5657 63.8389 24.5084 63.8215 24.456 63.7916L0.501061 49.9987C0.348882 49.9113 0.222437 49.7853 0.134469 49.6334C0.0465019 49.4816 0.000120578 49.3092 0 49.1337L0 8.10652C0 8.01678 0.0124642 7.92953 0.0348998 7.84477C0.0423783 7.8161 0.0598282 7.78993 0.0697995 7.76126C0.0884958 7.70891 0.105946 7.65531 0.133367 7.6067C0.152063 7.5743 0.179485 7.54812 0.20192 7.51821C0.230588 7.47832 0.256763 7.43719 0.290416 7.40229C0.319084 7.37362 0.356476 7.35243 0.388883 7.32751C0.425029 7.29759 0.457436 7.26518 0.498568 7.2415L12.4779 0.345059C12.6296 0.257786 12.8015 0.211853 12.9765 0.211853C13.1515 0.211853 13.3234 0.257786 13.475 0.345059L25.4531 7.2415H25.4556C25.4955 7.26643 25.5292 7.29759 25.5653 7.32626C25.5977 7.35119 25.6339 7.37362 25.6625 7.40104C25.6974 7.43719 25.7224 7.47832 25.7523 7.51821C25.7735 7.54812 25.8021 7.5743 25.8196 7.6067C25.8483 7.65656 25.8645 7.70891 25.8844 7.76126C25.8944 7.78993 25.9118 7.8161 25.9193 7.84602C25.9423 7.93096 25.954 8.01853 25.9542 8.10652V33.7317L35.9355 27.9844V14.8846C35.9355 14.7973 35.948 14.7088 35.9704 14.6253C35.9792 14.5954 35.9954 14.5692 36.0053 14.5405C36.0253 14.4882 36.0427 14.4346 36.0702 14.386C36.0888 14.3536 36.1163 14.3274 36.1375 14.2975C36.1674 14.2576 36.1923 14.2165 36.2272 14.1816C36.2559 14.1529 36.292 14.1317 36.3244 14.1068C36.3618 14.0769 36.3942 14.0445 36.4341 14.0208L48.4147 7.12434C48.5663 7.03694 48.7383 6.99094 48.9133 6.99094C49.0883 6.99094 49.2602 7.03694 49.4118 7.12434L61.3899 14.0208C61.4323 14.0457 61.4647 14.0769 61.5021 14.1055C61.5333 14.1305 61.5694 14.1529 61.5981 14.1803C61.633 14.2165 61.6579 14.2576 61.6878 14.2975C61.7103 14.3274 61.7377 14.3536 61.7551 14.386C61.7838 14.4346 61.8 14.4882 61.8199 14.5405C61.8312 14.5692 61.8474 14.5954 61.8548 14.6253ZM59.893 27.9844V16.6121L55.7013 19.0252L49.9104 22.3593V33.7317L59.8942 27.9844H59.893ZM47.9149 48.5566V37.1768L42.2187 40.4299L25.953 49.7133V61.2003L47.9149 48.5566ZM1.99677 9.83281V48.5566L23.9562 61.199V49.7145L12.4841 43.2219L12.4804 43.2194L12.4754 43.2169C12.4368 43.1945 12.4044 43.1621 12.3682 43.1347C12.3371 43.1097 12.3009 43.0898 12.2735 43.0624L12.271 43.0586C12.2386 43.0275 12.2162 42.9888 12.1887 42.9539C12.1638 42.9203 12.1339 42.8916 12.114 42.8567L12.1127 42.853C12.0903 42.8156 12.0766 42.7707 12.0604 42.7283C12.0442 42.6909 12.023 42.656 12.013 42.6161C12.0005 42.5688 11.998 42.5177 11.9931 42.4691C11.9881 42.4317 11.9781 42.3943 11.9781 42.3569V15.5801L6.18848 12.2446L1.99677 9.83281ZM12.9777 2.36177L2.99764 8.10652L12.9752 13.8513L22.9541 8.10527L12.9752 2.36177H12.9777ZM18.1678 38.2138L23.9574 34.8809V9.83281L19.7657 12.2459L13.9749 15.5801V40.6281L18.1678 38.2138ZM48.9133 9.14105L38.9344 14.8858L48.9133 20.6305L58.8909 14.8846L48.9133 9.14105ZM47.9149 22.3593L42.124 19.0252L37.9323 16.6121V27.9844L43.7219 31.3174L47.9149 33.7317V22.3593ZM24.9533 47.987L39.59 39.631L46.9065 35.4555L36.9352 29.7145L25.4544 36.3242L14.9907 42.3482L24.9533 47.987Z" fill="#FF2D20"/>
                    </svg>
                </div>

                <div class="mt-16">
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6 lg:gap-8">
                        <a href="https://laravel.com/docs" class="scale-100 p-6 bg-white dark:bg-gray-800/50 dark:bg-gradient-to-bl from-gray-700/50 via-transparent dark:ring-1 dark:ring-inset dark:ring-white/5 rounded-lg shadow-2xl shadow-gray-500/20 dark:shadow-none flex motion-safe:hover:scale-[1.01] transition-all duration-250 focus:outline focus:outline-2 focus:outline-red-500">
                            <div>
                                <div class="h-16 w-16 bg-red-50 dark:bg-red-800/20 flex items-center justify-center rounded-full">
                                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" class="w-7 h-7 stroke-red-500">
                                        <path stroke-linecap="round" stroke-linejoin="round" d="M12 6.042A8.967 8.967 0 006 3.75c-1.052 0-2.062.18-3 .512v14.25A8.987 8.987 0 016 18c2.305 0 4.408.867 6 2.292m0-14.25a8.966 8.966 0 016-2.292c1.052 0 2.062.18 3 .512v14.25A8.987 8.987 0 0018 18a8.967 8.967 0 00-6 2.292m0-14.25v14.25" />
                                    </svg>
                                </div>

                                <h2 class="mt-6 text-xl font-semibold text-gray-900 dark:text-white">Documentation</h2>

                                <p class="mt-4 text-gray-500 dark:text-gray-400 text-sm leading-relaxed">
                                    Laravel has wonderful documentation covering every aspect of the framework. Whether you are a newcomer or have prior experience with Laravel, we recommend reading our documentation from beginning to end.
                                </p>
                            </div>

                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" class="self-center shrink-0 stroke-red-500 w-6 h-6 mx-6">
                                <path stroke-linecap="round" stroke-linejoin="round" d="M4.5 12h15m0 0l-6.75-6.75M19.5 12l-6.75 6.75" />
                            </svg>
                        </a>

                        <a href="https://laracasts.com" class="scale-100 p-6 bg-white dark:bg-gray-800/50 dark:bg-gradient-to-bl from-gray-700/50 via-transparent dark:ring-1 dark:ring-inset dark:ring-white/5 rounded-lg shadow-2xl shadow-gray-500/20 dark:shadow-none flex motion-safe:hover:scale-[1.01] transition-all duration-250 focus:outline focus:outline-2 focus:outline-red-500">
                            <div>
                                <div class="h-16 w-16 bg-red-50 dark:bg-red-800/20 flex items-center justify-center rounded-full">
                                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" class="w-7 h-7 stroke-red-500">
                                        <path stroke-linecap="round" d="M15.75 10.5l4.72-4.72a.75.75 0 011.28.53v11.38a.75.75 0 01-1.28.53l-4.72-4.72M4.5 18.75h9a2.25 2.25 0 002.25-2.25v-9a2.25 2.25 0 00-2.25-2.25h-9A2.25 2.25 0 002.25 7.5v9a2.25 2.25 0 002.25 2.25z" />
                                    </svg>
                                </div>

                                <h2 class="mt-6 text-xl font-semibold text-gray-900 dark:text-white">Laracasts</h2>

                                <p class="mt-4 text-gray-500 dark:text-gray-400 text-sm leading-relaxed">
                                    Laracasts offers thousands of video tutorials on Laravel, PHP, and JavaScript development. Check them out, see for yourself, and massively level up your development skills in the process.
                                </p>
                            </div>

                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" class="self-center shrink-0 stroke-red-500 w-6 h-6 mx-6">
                                <path stroke-linecap="round" stroke-linejoin="round" d="M4.5 12h15m0 0l-6.75-6.75M19.5 12l-6.75 6.75" />
                            </svg>
                        </a>

                        <a href="https://laravel-news.com" class="scale-100 p-6 bg-white dark:bg-gray-800/50 dark:bg-gradient-to-bl from-gray-700/50 via-transparent dark:ring-1 dark:ring-inset dark:ring-white/5 rounded-lg shadow-2xl shadow-gray-500/20 dark:shadow-none flex motion-safe:hover:scale-[1.01] transition-all duration-250 focus:outline focus:outline-2 focus:outline-red-500">
                            <div>
                                <div class="h-16 w-16 bg-red-50 dark:bg-red-800/20 flex items-center justify-center rounded-full">
                                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" class="w-7 h-7 stroke-red-500">
                                        <path stroke-linecap="round" stroke-linejoin="round" d="M12 7.5h1.5m-1.5 3h1.5m-7.5 3h7.5m-7.5 3h7.5m3-9h3.375c.621 0 1.125.504 1.125 1.125V18a2.25 2.25 0 01-2.25 2.25M16.5 7.5V18a2.25 2.25 0 002.25 2.25M16.5 7.5V4.875c0-.621-.504-1.125-1.125-1.125H4.125C3.504 3.75 3 4.254 3 4.875V18a2.25 2.25 0 002.25 2.25h13.5M6 7.5h3v3H6v-3z" />
                                    </svg>
                                </div>

                                <h2 class="mt-6 text-xl font-semibold text-gray-900 dark:text-white">Laravel News</h2>

                                <p class="mt-4 text-gray-500 dark:text-gray-400 text-sm leading-relaxed">
                                    Laravel News is a community driven portal and newsletter aggregating all of the latest and most important news in the Laravel ecosystem, including new package releases and tutorials.
                                </p>
                            </div>

                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" class="self-center shrink-0 stroke-red-500 w-6 h-6 mx-6">
                                <path stroke-linecap="round" stroke-linejoin="round" d="M4.5 12h15m0 0l-6.75-6.75M19.5 12l-6.75 6.75" />
                            </svg>
                        </a>

                        <div class="scale-100 p-6 bg-white dark:bg-gray-800/50 dark:bg-gradient-to-bl from-gray-700/50 via-transparent dark:ring-1 dark:ring-inset dark:ring-white/5 rounded-lg shadow-2xl shadow-gray-500/20 dark:shadow-none flex motion-safe:hover:scale-[1.01] transition-all duration-250 focus:outline focus:outline-2 focus:outline-red-500">
                            <div>
                                <div class="h-16 w-16 bg-red-50 dark:bg-red-800/20 flex items-center justify-center rounded-full">
                                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" class="w-7 h-7 stroke-red-500">
                                        <path stroke-linecap="round" stroke-linejoin="round" d="M6.115 5.19l.319 1.913A6 6 0 008.11 10.36L9.75 12l-.387.775c-.217.433-.132.956.21 1.298l1.348 1.348c.21.21.329.497.329.795v1.089c0 .426.24.815.622 1.006l.153.076c.433.217.956.132 1.298-.21l.723-.723a8.7 8.7 0 002.288-4.042 1.087 1.087 0 00-.358-1.099l-1.33-1.108c-.251-.21-.582-.299-.905-.245l-1.17.195a1.125 1.125 0 01-.98-.314l-.295-.295a1.125 1.125 0 010-1.591l.13-.132a1.125 1.125 0 011.3-.21l.603.302a.809.809 0 001.086-1.086L14.25 7.5l1.256-.837a4.5 4.5 0 001.528-1.732l.146-.292M6.115 5.19A9 9 0 1017.18 4.64M6.115 5.19A8.965 8.965 0 0112 3c1.929 0 3.716.607 5.18 1.64" />
                                    </svg>
                                </div>

                                <h2 class="mt-6 text-xl font-semibold text-gray-900 dark:text-white">Vibrant Ecosystem</h2>

                                <p class="mt-4 text-gray-500 dark:text-gray-400 text-sm leading-relaxed">
                                    Laravel's robust library of first-party tools and libraries, such as <a href="https://forge.laravel.com" class="underline hover:text-gray-700 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500">Forge</a>, <a href="https://vapor.laravel.com" class="underline hover:text-gray-700 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500">Vapor</a>, <a href="https://nova.laravel.com" class="underline hover:text-gray-700 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500">Nova</a>, and <a href="https://envoyer.io" class="underline hover:text-gray-700 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500">Envoyer</a> help you take your projects to the next level. Pair them with powerful open source libraries like <a href="https://laravel.com/docs/billing" class="underline hover:text-gray-700 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500">Cashier</a>, <a href="https://laravel.com/docs/dusk" class="underline hover:text-gray-700 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500">Dusk</a>, <a href="https://laravel.com/docs/broadcasting" class="underline hover:text-gray-700 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500">Echo</a>, <a href="https://laravel.com/docs/horizon" class="underline hover:text-gray-700 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500">Horizon</a>, <a href="https://laravel.com/docs/sanctum" class="underline hover:text-gray-700 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500">Sanctum</a>, <a href="https://laravel.com/docs/telescope" class="underline hover:text-gray-700 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500">Telescope</a>, and more.
                                </p>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="flex justify-center mt-16 px-0 sm:items-center sm:justify-between">
                    <div class="text-center text-sm sm:text-left">
                        &nbsp;
                    </div>

                    <div class="text-center text-sm text-gray-500 dark:text-gray-400 sm:text-right sm:ml-0">
                        Laravel v{{ Illuminate\Foundation\Application::VERSION }} (PHP v{{ PHP_VERSION }})
                    </div>
                </div>
            </div>
        </div>
    </body>
</html>

--- FIN DU FICHIER : ./resources/views/welcome.blade.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./routes/api.php
////////////////////////////////////////////////////////////////

<?php

use Illuminate\Http\Request;
use Illuminate\Support\Facades\Route;

/*
|--------------------------------------------------------------------------
| API Routes
|--------------------------------------------------------------------------
|
| Here is where you can register API routes for your application. These
| routes are loaded by the RouteServiceProvider and all of them will
| be assigned to the "api" middleware group. Make something great!
|
*/

Route::middleware('auth:sanctum')->get('/user', function (Request $request) {
    return $request->user();
});

    Route::middleware(['auth:sanctum', 'can:view assignments'])->prefix('admin')->name('api.admin.')->group(function () {
    Route::patch('assignments/{assignment}/move', [\App\Http\Controllers\Api\AssignmentController::class, 'move'])->name('assignments.move');
    Route::apiResource('assignments', \App\Http\Controllers\Api\AssignmentController::class)->only(['show', 'update', 'store', 'destroy']);
});
--- FIN DU FICHIER : ./routes/api.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./routes/auth.php
////////////////////////////////////////////////////////////////

<?php

use App\Http\Controllers\Auth\AuthenticatedSessionController;
use App\Http\Controllers\Auth\ConfirmablePasswordController;
use App\Http\Controllers\Auth\EmailVerificationNotificationController;
use App\Http\Controllers\Auth\EmailVerificationPromptController;
use App\Http\Controllers\Auth\NewPasswordController;
use App\Http\Controllers\Auth\PasswordController;
use App\Http\Controllers\Auth\PasswordResetLinkController;
use App\Http\Controllers\Auth\RegisteredUserController;
use App\Http\Controllers\Auth\VerifyEmailController;
use Illuminate\Support\Facades\Route;

Route::middleware('guest')->group(function () {
    Route::get('register', [RegisteredUserController::class, 'create'])
                ->name('register');

    Route::post('register', [RegisteredUserController::class, 'store']);

    Route::get('login', [AuthenticatedSessionController::class, 'create'])
                ->name('login');

    Route::post('login', [AuthenticatedSessionController::class, 'store']);

    Route::get('forgot-password', [PasswordResetLinkController::class, 'create'])
                ->name('password.request');

    Route::post('forgot-password', [PasswordResetLinkController::class, 'store'])
                ->name('password.email');

    Route::get('reset-password/{token}', [NewPasswordController::class, 'create'])
                ->name('password.reset');

    Route::post('reset-password', [NewPasswordController::class, 'store'])
                ->name('password.store');
});

Route::middleware('auth')->group(function () {
    Route::get('verify-email', EmailVerificationPromptController::class)
                ->name('verification.notice');

    Route::get('verify-email/{id}/{hash}', VerifyEmailController::class)
                ->middleware(['signed', 'throttle:6,1'])
                ->name('verification.verify');

    Route::post('email/verification-notification', [EmailVerificationNotificationController::class, 'store'])
                ->middleware('throttle:6,1')
                ->name('verification.send');

    Route::get('confirm-password', [ConfirmablePasswordController::class, 'show'])
                ->name('password.confirm');

    Route::post('confirm-password', [ConfirmablePasswordController::class, 'store']);

    Route::put('password', [PasswordController::class, 'update'])->name('password.update');

    Route::post('logout', [AuthenticatedSessionController::class, 'destroy'])
                ->name('logout');
});

--- FIN DU FICHIER : ./routes/auth.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./routes/channels.php
////////////////////////////////////////////////////////////////

<?php

use Illuminate\Support\Facades\Broadcast;

/*
|--------------------------------------------------------------------------
| Broadcast Channels
|--------------------------------------------------------------------------
|
| Here you may register all of the event broadcasting channels that your
| application supports. The given channel authorization callbacks are
| used to check if an authenticated user can listen to the channel.
|
*/

Broadcast::channel('App.Models.User.{id}', function ($user, $id) {
    return (int) $user->id === (int) $id;
});

--- FIN DU FICHIER : ./routes/channels.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./routes/console.php
////////////////////////////////////////////////////////////////

<?php

use Illuminate\Foundation\Inspiring;
use Illuminate\Support\Facades\Artisan;

/*
|--------------------------------------------------------------------------
| Console Routes
|--------------------------------------------------------------------------
|
| This file is where you may define all of your Closure based console
| commands. Each Closure is bound to a command instance allowing a
| simple approach to interacting with each command's IO methods.
|
*/

Artisan::command('inspire', function () {
    $this->comment(Inspiring::quote());
})->purpose('Display an inspiring quote');

--- FIN DU FICHIER : ./routes/console.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./routes/web.php
////////////////////////////////////////////////////////////////

<?php

use Illuminate\Support\Facades\Route;
use App\Http\Controllers\Admin\DashboardController;
use App\Http\Controllers\Admin\ProfileController;
use App\Http\Controllers\Admin\OrganizationController;
use App\Http\Controllers\Admin\UserController;
use App\Http\Controllers\Admin\RoleController;
use App\Http\Controllers\Admin\VehicleController;
use App\Http\Controllers\Admin\DriverController;
use App\Http\Controllers\Admin\AssignmentController;
use App\Http\Controllers\Admin\SupplierController;
use App\Http\Controllers\Admin\SupplierCategoryController;
use App\Http\Controllers\Admin\DocumentController;
use App\Http\Controllers\Admin\DocumentCategoryController;
use App\Http\Controllers\Admin\Maintenance\DashboardController as MaintenanceDashboardController;
use App\Http\Controllers\Admin\Maintenance\MaintenancePlanController;
use App\Http\Controllers\Admin\Maintenance\MaintenanceLogController;
use App\Http\Controllers\Admin\Handover\VehicleHandoverController;
use App\Http\Controllers\Admin\PlanningController;

/*
|--------------------------------------------------------------------------
| Routes publiques avec auth & v√©rification email
|--------------------------------------------------------------------------
*/

/************** D√©sactiv√©e √† r√©activer si besoin 
Route::middleware(['auth', 'verified'])->group(function () {

    Route::get('/dashboard', [DashboardController::class, 'index'])->name('dashboard');

    Route::get('/profile', [ProfileController::class, 'edit'])->name('profile.edit');
    Route::patch('/profile', [ProfileController::class, 'update'])->name('profile.update');
    Route::delete('/profile', [ProfileController::class, 'destroy'])->name('profile.destroy');
});


Fin de la d√©sactivation */

/*
|--------------------------------------------------------------------------
| ZONE ADMINISTRATION - Groupe admin avec middleware auth & r√¥le RBAC
|--------------------------------------------------------------------------
*/
Route::middleware(['auth', 'verified'])
    ->prefix('admin')
    ->name('admin.')
    ->group(function () {

     Route::get('/dashboard', [DashboardController::class, 'index'])->name('dashboard');

    /*
    |--------------------------------------------------------------------------
    | NIVEAU SUPER ADMIN - GESTION SYST√àME GLOBAL
    |--------------------------------------------------------------------------
    */
    Route::middleware('role:Super Admin')->group(function () {

        // Organisations CRUD + export
        Route::resource('organizations', OrganizationController::class);
        Route::get('organizations/export', [OrganizationController::class, 'export'])->name('organizations.export');

        // Monitoring & Syst√®me
        Route::prefix('system')->group(function () {
        Route::get('metrics', [DashboardController::class, 'systemMetrics'])->name('system.metrics');
        Route::get('logs', [DashboardController::class, 'systemLogs'])->name('system.logs');
        Route::get('health', [DashboardController::class, 'systemHealth'])->name('system.health');
        Route::get('performance', [DashboardController::class, 'systemPerformance'])->name('system.performance');
        });
    });

    /*
    |--------------------------------------------------------------------------
    | NIVEAU ADMIN / SUPER ADMIN - GESTION UTILISATEURS ET R√îLES
    |--------------------------------------------------------------------------
    */
    Route::middleware('role:Super Admin|Admin')->group(function () {

        // Utilisateurs
        Route::resource('users', UserController::class);
        Route::post('users/{user}/assign-role', [UserController::class, 'assignRole'])->name('users.assign-role');
        Route::post('users/{user}/toggle-status', [UserController::class, 'toggleStatus'])->name('users.toggle-status');
        Route::post('users/{user}/reset-password', [UserController::class, 'resetPassword'])->name('users.reset-password');

        // R√¥les et Permissions
        Route::resource('roles', RoleController::class)->only(['index', 'show', 'edit', 'update']);
        Route::get('permissions', [RoleController::class, 'permissions'])->name('permissions.index');
    });

    /*
    |--------------------------------------------------------------------------
    | GESTION OP√âRATIONNELLE - FLOTTE, V√âHICULES, CHAUFFEURS, AFFECTATIONS...
    |--------------------------------------------------------------------------
    */
    Route::middleware('role:Super Admin|Admin|Gestionnaire Flotte')->group(function () {

        // V√©hicules
        Route::prefix('vehicles')->name('vehicles.')->group(function () {
            Route::get('import', [VehicleController::class, 'showImportForm'])->name('import.show');
            Route::post('import', [VehicleController::class, 'handleImport'])->name('import.handle');
            Route::get('import-template', [VehicleController::class, 'downloadTemplate'])->name('import.template');
            Route::get('import/export-errors/{import_id}', [VehicleController::class, 'exportErrors'])->name('import.export-errors');
            Route::get('import/results', [VehicleController::class, 'showImportResults'])->name('import.results');
            Route::patch('{vehicle}/restore', [VehicleController::class, 'restore'])->name('restore')->withTrashed();
            Route::delete('{vehicle}/force-delete', [VehicleController::class, 'forceDelete'])->name('force-delete')->withTrashed();
            Route::get('{vehicle}/history', [VehicleController::class, 'history'])->name('history');
            Route::get('{vehicle}/maintenance', [VehicleController::class, 'maintenance'])->name('maintenance');
        });
        Route::resource('vehicles', VehicleController::class);

        // Chauffeurs
        Route::prefix('drivers')->name('drivers.')->group(function () {
            Route::get('import', [DriverController::class, 'showImportForm'])->name('import.show');
            Route::post('import', [DriverController::class, 'handleImport'])->name('import.handle');
            Route::get('import-template', [DriverController::class, 'downloadTemplate'])->name('import.template');
            Route::get('import/results', [DriverController::class, 'showImportResults'])->name('import.results');
            Route::patch('{driver}/restore', [DriverController::class, 'restore'])->name('restore')->withTrashed();
            Route::delete('{driver}/force-delete', [DriverController::class, 'forceDelete'])->name('force-delete')->withTrashed();
            Route::get('{driver}/history', [DriverController::class, 'history'])->name('history');
        });
        Route::resource('drivers', DriverController::class);

        // Affectations
        Route::patch('assignments/{assignment}/end', [AssignmentController::class, 'end'])->name('assignments.end');
        Route::get('assignments/{assignment}/details', [AssignmentController::class, 'details'])->name('assignments.details');
        Route::post('assignments/{assignment}/extend', [AssignmentController::class, 'extend'])->name('assignments.extend');
        Route::resource('assignments', AssignmentController::class);

        // Fournisseurs
        Route::get('suppliers/export', [SupplierController::class, 'export'])->name('suppliers.export');
        Route::resource('suppliers', SupplierController::class);
        Route::resource('supplier-categories', SupplierCategoryController::class);

        // Documents
        Route::get('documents/search', [DocumentController::class, 'search'])->name('documents.search');
        Route::post('documents/{document}/download', [DocumentController::class, 'download'])->name('documents.download');
        Route::resource('documents', DocumentController::class);
        Route::resource('document-categories', DocumentCategoryController::class);
    });

    /*
    |--------------------------------------------------------------------------
    | MAINTENANCE - ADMIN, FLEET MANAGER, SUPERVISOR
    |--------------------------------------------------------------------------
    */
    Route::middleware('role:Super Admin|Admin|Gestionnaire Flotte|supervisor')->group(function () {

        // Dashboard Maintenance
        Route::get('maintenance', [MaintenanceDashboardController::class, 'index'])->name('maintenance.dashboard');
        Route::get('maintenance/calendar', [MaintenanceDashboardController::class, 'calendar'])->name('maintenance.calendar');
        Route::get('maintenance/alerts', [MaintenanceDashboardController::class, 'alerts'])->name('maintenance.alerts');

        // Plans maintenance
        Route::resource('maintenance/plans', MaintenancePlanController::class)->names('maintenance.plans');
        Route::post('maintenance/plans/{plan}/duplicate', [MaintenancePlanController::class, 'duplicate'])->name('maintenance.plans.duplicate');

        // Logs maintenance
        Route::resource('maintenance/logs', MaintenanceLogController::class)->names('maintenance.logs');
        Route::get('maintenance/logs/{log}/pdf', [MaintenanceLogController::class, 'exportPdf'])->name('maintenance.logs.pdf');
    });

    /*
    |--------------------------------------------------------------------------
    | FICHES DE REMISE - HANDOVERS
    |--------------------------------------------------------------------------
    */
    Route::middleware('role:Super Admin|Admin|Gestionnaire Flotte|supervisor')->group(function () {

        Route::get('handovers', [VehicleHandoverController::class, 'index'])->name('handovers.index');
        Route::get('assignments/{assignment}/handovers/create', [VehicleHandoverController::class, 'create'])->name('handovers.vehicles.create');
        Route::post('handovers/{handover}/upload-signed', [VehicleHandoverController::class, 'uploadSigned'])->name('handovers.vehicles.uploadSigned');
        Route::get('handovers/{handover}/download', [VehicleHandoverController::class, 'downloadPdf'])->name('handovers.vehicles.downloadPdf');
        Route::get('handovers/{handover}/preview', [VehicleHandoverController::class, 'preview'])->name('handovers.vehicles.preview');
        Route::resource('handovers', VehicleHandoverController::class)->names('handovers.vehicles');
    });

    /*
    |--------------------------------------------------------------------------
    | PLANNING ET GESTION DU TEMPS
    |--------------------------------------------------------------------------
    */
    Route::middleware('role:Super Admin|Admin|Gestionnaire Flotte|supervisor')->group(function () {

        Route::get('planning', [PlanningController::class, 'index'])->name('planning.index');
        Route::get('planning/gantt', [PlanningController::class, 'gantt'])->name('planning.gantt');
        Route::get('planning/calendar', [PlanningController::class, 'calendar'])->name('planning.calendar');
        Route::post('planning/optimize', [PlanningController::class, 'optimize'])->name('planning.optimize');
        Route::get('planning/export', [PlanningController::class, 'export'])->name('planning.export');
    });

    /*
    |--------------------------------------------------------------------------
    | RAPPORTS ET ANALYTICS
    |--------------------------------------------------------------------------
    */
    Route::middleware('role:Super Admin|Admin|Gestionnaire Flotte')->group(function () {

        Route::get('reports', [DashboardController::class, 'reports'])->name('reports.index');
        Route::get('reports/vehicles', [DashboardController::class, 'vehicleReports'])->name('reports.vehicles');
        Route::get('reports/drivers', [DashboardController::class, 'driverReports'])->name('reports.drivers');
        Route::get('reports/maintenance', [DashboardController::class, 'maintenanceReports'])->name('reports.maintenance');
        Route::get('reports/costs', [DashboardController::class, 'costReports'])->name('reports.costs');
        Route::post('reports/generate', [DashboardController::class, 'generateReport'])->name('reports.generate');
        Route::get('reports/export/{type}', [DashboardController::class, 'exportReport'])->name('reports.export');

        Route::get('analytics', [DashboardController::class, 'analytics'])->name('analytics.index');
        Route::get('analytics/performance', [DashboardController::class, 'performanceAnalytics'])->name('analytics.performance');
        Route::get('analytics/usage', [DashboardController::class, 'usageAnalytics'])->name('analytics.usage');
    });

    /*
    |--------------------------------------------------------------------------
    | PARAM√àTRES ET CONFIGURATION
    |--------------------------------------------------------------------------
    */
    Route::middleware('role:Super Admin|Admin')->group(function () {

        Route::get('settings', [DashboardController::class, 'settings'])->name('settings.index');
        Route::post('settings', [DashboardController::class, 'updateSettings'])->name('settings.update');
        Route::get('settings/security', [DashboardController::class, 'securitySettings'])->name('settings.security');
        Route::get('settings/notifications', [DashboardController::class, 'notificationSettings'])->name('settings.notifications');
        Route::get('settings/integrations', [DashboardController::class, 'integrationSettings'])->name('settings.integrations');

        // API Keys Management
        Route::get('api-keys', [DashboardController::class, 'apiKeys'])->name('api.keys');
        Route::post('api-keys', [DashboardController::class, 'createApiKey'])->name('api.keys.create');
        Route::delete('api-keys/{key}', [DashboardController::class, 'deleteApiKey'])->name('api.keys.delete');
    });

    /*
    |--------------------------------------------------------------------------
    | AUDIT ET S√âCURIT√â
    |--------------------------------------------------------------------------
    */
    Route::middleware('role:Super Admin|Admin')->group(function () {

        // Audit Trails
        Route::get('audit', [DashboardController::class, 'auditLogs'])->name('audit.index');
        Route::get('audit/security', [DashboardController::class, 'securityAudit'])->name('audit.security');
        Route::get('audit/users', [DashboardController::class, 'userAudit'])->name('audit.users');
        Route::get('audit/export', [DashboardController::class, 'exportAudit'])->name('audit.export');

        // S√©curit√© sessions
        Route::get('security/sessions', [DashboardController::class, 'activeSessions'])->name('security.sessions');
        Route::get('security/login-attempts', [DashboardController::class, 'loginAttempts'])->name('security.login-attempts');
        Route::post('security/revoke-session/{session}', [DashboardController::class, 'revokeSession'])->name('security.revoke-session');
    });
});

require __DIR__.'/auth.php';

--- FIN DU FICHIER : ./routes/web.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./tests/CreatesApplication.php
////////////////////////////////////////////////////////////////

<?php

namespace Tests;

use Illuminate\Contracts\Console\Kernel;
use Illuminate\Foundation\Application;

trait CreatesApplication
{
    /**
     * Creates the application.
     */
    public function createApplication(): Application
    {
        $app = require __DIR__.'/../bootstrap/app.php';

        $app->make(Kernel::class)->bootstrap();

        return $app;
    }
}

--- FIN DU FICHIER : ./tests/CreatesApplication.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./tests/Feature/Admin/DocumentManagementTest.php
////////////////////////////////////////////////////////////////

<?php

namespace Tests\Feature\Admin;

use App\Models\Document;
use App\Models\DocumentCategory;
use App\Models\Organization;
use App\Models\Supplier;
use App\Models\User;
use App\Models\Vehicle;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Http\UploadedFile;
use Illuminate\Support\Facades\Storage;
use Tests\TestCase;

class DocumentManagementTest extends TestCase
{
    use RefreshDatabase;

    private User $adminUser;
    private Organization $organization;

    protected function setUp(): void
    {
        parent::setUp();
        $this->organization = Organization::factory()->create();
        $this->adminUser = User::factory()->create([
            'organization_id' => $this->organization->id,
        ]);
        // In a real app, we'd assign a role like 'Admin' and check permissions.
        // For this test, acting as the user is sufficient to bypass auth middleware.
        $this->actingAs($this->adminUser);
    }

    public function test_admin_can_create_document_with_metadata_and_polymorphic_links()
    {
        // 1. Arrange
        Storage::fake('s3');

        $category = DocumentCategory::factory()->create([
            'organization_id' => $this->organization->id,
            'name' => 'Facture Test',
            'meta_schema' => [
                'fields' => [
                    ['name' => 'numero_facture', 'label' => 'Num√©ro de Facture', 'type' => 'string', 'required' => true],
                    ['name' => 'montant_ht', 'label' => 'Montant HT', 'type' => 'number', 'required' => true],
                ]
            ]
        ]);

        $vehicle = Vehicle::factory()->create(['organization_id' => $this->organization->id]);
        $driver = User::factory()->create(['organization_id' => $this->organization->id]);
        $supplier = Supplier::factory()->create(['organization_id' => $this->organization->id]);

        $postData = [
            'document_category_id' => $category->id,
            'description' => 'Test facture description',
            'document_file' => UploadedFile::fake()->create('facture.pdf', 100, 'application/pdf'),
            'extra_metadata' => [
                'numero_facture' => 'INV-2025-123',
                'montant_ht' => 99.99,
            ],
            'linked_vehicles' => [$vehicle->id],
            'linked_drivers' => [$driver->id],
            'linked_suppliers' => [$supplier->id],
        ];

        // 2. Act
        $response = $this->post(route('admin.documents.store'), $postData);

        // 3. Assert
        $response->assertRedirect(route('admin.documents.index'));
        $response->assertSessionHas('success');

        $this->assertDatabaseHas('documents', [
            'document_category_id' => $category->id,
            'description' => 'Test facture description',
            'original_filename' => 'facture.pdf',
        ]);

        $document = Document::latest()->first();
        $this->assertNotNull($document);

        // Assert metadata was saved correctly
        $this->assertEquals('INV-2025-123', $document->extra_metadata['numero_facture']);
        $this->assertEquals(99.99, $document->extra_metadata['montant_ht']);

        // Assert file was stored
        Storage::disk('s3')->assertExists($document->file_path);

        // Assert polymorphic relationships were created
        $this->assertCount(1, $document->vehicles);
        $this->assertEquals($vehicle->id, $document->vehicles->first()->id);

        $this->assertCount(1, $document->users);
        $this->assertEquals($driver->id, $document->users->first()->id);

        $this->assertCount(1, $document->suppliers);
        $this->assertEquals($supplier->id, $document->suppliers->first()->id);
        
        $this->assertDatabaseHas('documentables', [
            'document_id' => $document->id,
            'documentable_id' => $vehicle->id,
            'documentable_type' => Vehicle::class,
        ]);
        $this->assertDatabaseHas('documentables', [
            'document_id' => $document->id,
            'documentable_id' => $driver->id,
            'documentable_type' => User::class,
        ]);
        $this->assertDatabaseHas('documentables', [
            'document_id' => $document->id,
            'documentable_id' => $supplier->id,
            'documentable_type' => Supplier::class,
        ]);
    }
}

--- FIN DU FICHIER : ./tests/Feature/Admin/DocumentManagementTest.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./tests/Feature/Admin/DocumentManagementTest.php:Zone.Identifier
////////////////////////////////////////////////////////////////


--- FIN DU FICHIER : ./tests/Feature/Admin/DocumentManagementTest.php:Zone.Identifier ---


////////////////////////////////////////////////////////////////
CHEMIN : ./tests/Feature/Auth/AuthenticationTest.php
////////////////////////////////////////////////////////////////

<?php

namespace Tests\Feature\Auth;

use App\Models\User;
use App\Providers\RouteServiceProvider;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

class AuthenticationTest extends TestCase
{
    use RefreshDatabase;

    public function test_login_screen_can_be_rendered(): void
    {
        $response = $this->get('/login');

        $response->assertStatus(200);
    }

    public function test_users_can_authenticate_using_the_login_screen(): void
    {
        $user = User::factory()->create();

        $response = $this->post('/login', [
            'email' => $user->email,
            'password' => 'password',
        ]);

        $this->assertAuthenticated();
        $response->assertRedirect(RouteServiceProvider::HOME);
    }

    public function test_users_can_not_authenticate_with_invalid_password(): void
    {
        $user = User::factory()->create();

        $this->post('/login', [
            'email' => $user->email,
            'password' => 'wrong-password',
        ]);

        $this->assertGuest();
    }

    public function test_users_can_logout(): void
    {
        $user = User::factory()->create();

        $response = $this->actingAs($user)->post('/logout');

        $this->assertGuest();
        $response->assertRedirect('/');
    }
}

--- FIN DU FICHIER : ./tests/Feature/Auth/AuthenticationTest.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./tests/Feature/Auth/EmailVerificationTest.php
////////////////////////////////////////////////////////////////

<?php

namespace Tests\Feature\Auth;

use App\Models\User;
use App\Providers\RouteServiceProvider;
use Illuminate\Auth\Events\Verified;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Support\Facades\Event;
use Illuminate\Support\Facades\URL;
use Tests\TestCase;

class EmailVerificationTest extends TestCase
{
    use RefreshDatabase;

    public function test_email_verification_screen_can_be_rendered(): void
    {
        $user = User::factory()->create([
            'email_verified_at' => null,
        ]);

        $response = $this->actingAs($user)->get('/verify-email');

        $response->assertStatus(200);
    }

    public function test_email_can_be_verified(): void
    {
        $user = User::factory()->create([
            'email_verified_at' => null,
        ]);

        Event::fake();

        $verificationUrl = URL::temporarySignedRoute(
            'verification.verify',
            now()->addMinutes(60),
            ['id' => $user->id, 'hash' => sha1($user->email)]
        );

        $response = $this->actingAs($user)->get($verificationUrl);

        Event::assertDispatched(Verified::class);
        $this->assertTrue($user->fresh()->hasVerifiedEmail());
        $response->assertRedirect(RouteServiceProvider::HOME.'?verified=1');
    }

    public function test_email_is_not_verified_with_invalid_hash(): void
    {
        $user = User::factory()->create([
            'email_verified_at' => null,
        ]);

        $verificationUrl = URL::temporarySignedRoute(
            'verification.verify',
            now()->addMinutes(60),
            ['id' => $user->id, 'hash' => sha1('wrong-email')]
        );

        $this->actingAs($user)->get($verificationUrl);

        $this->assertFalse($user->fresh()->hasVerifiedEmail());
    }
}

--- FIN DU FICHIER : ./tests/Feature/Auth/EmailVerificationTest.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./tests/Feature/Auth/PasswordConfirmationTest.php
////////////////////////////////////////////////////////////////

<?php

namespace Tests\Feature\Auth;

use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

class PasswordConfirmationTest extends TestCase
{
    use RefreshDatabase;

    public function test_confirm_password_screen_can_be_rendered(): void
    {
        $user = User::factory()->create();

        $response = $this->actingAs($user)->get('/confirm-password');

        $response->assertStatus(200);
    }

    public function test_password_can_be_confirmed(): void
    {
        $user = User::factory()->create();

        $response = $this->actingAs($user)->post('/confirm-password', [
            'password' => 'password',
        ]);

        $response->assertRedirect();
        $response->assertSessionHasNoErrors();
    }

    public function test_password_is_not_confirmed_with_invalid_password(): void
    {
        $user = User::factory()->create();

        $response = $this->actingAs($user)->post('/confirm-password', [
            'password' => 'wrong-password',
        ]);

        $response->assertSessionHasErrors();
    }
}

--- FIN DU FICHIER : ./tests/Feature/Auth/PasswordConfirmationTest.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./tests/Feature/Auth/PasswordResetTest.php
////////////////////////////////////////////////////////////////

<?php

namespace Tests\Feature\Auth;

use App\Models\User;
use Illuminate\Auth\Notifications\ResetPassword;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Support\Facades\Notification;
use Tests\TestCase;

class PasswordResetTest extends TestCase
{
    use RefreshDatabase;

    public function test_reset_password_link_screen_can_be_rendered(): void
    {
        $response = $this->get('/forgot-password');

        $response->assertStatus(200);
    }

    public function test_reset_password_link_can_be_requested(): void
    {
        Notification::fake();

        $user = User::factory()->create();

        $this->post('/forgot-password', ['email' => $user->email]);

        Notification::assertSentTo($user, ResetPassword::class);
    }

    public function test_reset_password_screen_can_be_rendered(): void
    {
        Notification::fake();

        $user = User::factory()->create();

        $this->post('/forgot-password', ['email' => $user->email]);

        Notification::assertSentTo($user, ResetPassword::class, function ($notification) {
            $response = $this->get('/reset-password/'.$notification->token);

            $response->assertStatus(200);

            return true;
        });
    }

    public function test_password_can_be_reset_with_valid_token(): void
    {
        Notification::fake();

        $user = User::factory()->create();

        $this->post('/forgot-password', ['email' => $user->email]);

        Notification::assertSentTo($user, ResetPassword::class, function ($notification) use ($user) {
            $response = $this->post('/reset-password', [
                'token' => $notification->token,
                'email' => $user->email,
                'password' => 'password',
                'password_confirmation' => 'password',
            ]);

            $response
                ->assertSessionHasNoErrors()
                ->assertRedirect(route('login'));

            return true;
        });
    }
}

--- FIN DU FICHIER : ./tests/Feature/Auth/PasswordResetTest.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./tests/Feature/Auth/PasswordUpdateTest.php
////////////////////////////////////////////////////////////////

<?php

namespace Tests\Feature\Auth;

use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Support\Facades\Hash;
use Tests\TestCase;

class PasswordUpdateTest extends TestCase
{
    use RefreshDatabase;

    public function test_password_can_be_updated(): void
    {
        $user = User::factory()->create();

        $response = $this
            ->actingAs($user)
            ->from('/profile')
            ->put('/password', [
                'current_password' => 'password',
                'password' => 'new-password',
                'password_confirmation' => 'new-password',
            ]);

        $response
            ->assertSessionHasNoErrors()
            ->assertRedirect('/profile');

        $this->assertTrue(Hash::check('new-password', $user->refresh()->password));
    }

    public function test_correct_password_must_be_provided_to_update_password(): void
    {
        $user = User::factory()->create();

        $response = $this
            ->actingAs($user)
            ->from('/profile')
            ->put('/password', [
                'current_password' => 'wrong-password',
                'password' => 'new-password',
                'password_confirmation' => 'new-password',
            ]);

        $response
            ->assertSessionHasErrorsIn('updatePassword', 'current_password')
            ->assertRedirect('/profile');
    }
}

--- FIN DU FICHIER : ./tests/Feature/Auth/PasswordUpdateTest.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./tests/Feature/Auth/RegistrationTest.php
////////////////////////////////////////////////////////////////

<?php

namespace Tests\Feature\Auth;

use App\Providers\RouteServiceProvider;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

class RegistrationTest extends TestCase
{
    use RefreshDatabase;

    public function test_registration_screen_can_be_rendered(): void
    {
        $response = $this->get('/register');

        $response->assertStatus(200);
    }

    public function test_new_users_can_register(): void
    {
        $response = $this->post('/register', [
            'name' => 'Test User',
            'email' => 'test@example.com',
            'password' => 'password',
            'password_confirmation' => 'password',
        ]);

        $this->assertAuthenticated();
        $response->assertRedirect(RouteServiceProvider::HOME);
    }
}

--- FIN DU FICHIER : ./tests/Feature/Auth/RegistrationTest.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./tests/Feature/ExampleTest.php
////////////////////////////////////////////////////////////////

<?php

namespace Tests\Feature;

// use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

class ExampleTest extends TestCase
{
    /**
     * A basic test example.
     */
    public function test_the_application_returns_a_successful_response(): void
    {
        $response = $this->get('/');

        $response->assertStatus(200);
    }
}

--- FIN DU FICHIER : ./tests/Feature/ExampleTest.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./tests/Feature/ProfileTest.php
////////////////////////////////////////////////////////////////

<?php

namespace Tests\Feature;

use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

class ProfileTest extends TestCase
{
    use RefreshDatabase;

    public function test_profile_page_is_displayed(): void
    {
        $user = User::factory()->create();

        $response = $this
            ->actingAs($user)
            ->get('/profile');

        $response->assertOk();
    }

    public function test_profile_information_can_be_updated(): void
    {
        $user = User::factory()->create();

        $response = $this
            ->actingAs($user)
            ->patch('/profile', [
                'name' => 'Test User',
                'email' => 'test@example.com',
            ]);

        $response
            ->assertSessionHasNoErrors()
            ->assertRedirect('/profile');

        $user->refresh();

        $this->assertSame('Test User', $user->name);
        $this->assertSame('test@example.com', $user->email);
        $this->assertNull($user->email_verified_at);
    }

    public function test_email_verification_status_is_unchanged_when_the_email_address_is_unchanged(): void
    {
        $user = User::factory()->create();

        $response = $this
            ->actingAs($user)
            ->patch('/profile', [
                'name' => 'Test User',
                'email' => $user->email,
            ]);

        $response
            ->assertSessionHasNoErrors()
            ->assertRedirect('/profile');

        $this->assertNotNull($user->refresh()->email_verified_at);
    }

    public function test_user_can_delete_their_account(): void
    {
        $user = User::factory()->create();

        $response = $this
            ->actingAs($user)
            ->delete('/profile', [
                'password' => 'password',
            ]);

        $response
            ->assertSessionHasNoErrors()
            ->assertRedirect('/');

        $this->assertGuest();
        $this->assertNull($user->fresh());
    }

    public function test_correct_password_must_be_provided_to_delete_account(): void
    {
        $user = User::factory()->create();

        $response = $this
            ->actingAs($user)
            ->from('/profile')
            ->delete('/profile', [
                'password' => 'wrong-password',
            ]);

        $response
            ->assertSessionHasErrorsIn('userDeletion', 'password')
            ->assertRedirect('/profile');

        $this->assertNotNull($user->fresh());
    }
}

--- FIN DU FICHIER : ./tests/Feature/ProfileTest.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./tests/TestCase.php
////////////////////////////////////////////////////////////////

<?php

namespace Tests;

use Illuminate\Foundation\Testing\TestCase as BaseTestCase;

abstract class TestCase extends BaseTestCase
{
    use CreatesApplication;
}

--- FIN DU FICHIER : ./tests/TestCase.php ---


////////////////////////////////////////////////////////////////
CHEMIN : ./tests/Unit/ExampleTest.php
////////////////////////////////////////////////////////////////

<?php

namespace Tests\Unit;

use PHPUnit\Framework\TestCase;

class ExampleTest extends TestCase
{
    /**
     * A basic test example.
     */
    public function test_that_true_is_true(): void
    {
        $this->assertTrue(true);
    }
}

--- FIN DU FICHIER : ./tests/Unit/ExampleTest.php ---


