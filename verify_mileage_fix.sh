#!/bin/bash

echo "========================================"
echo "üîç V√âRIFICATION FINALE CORRECTIONS V14.0"
echo "========================================"
echo ""

# Couleurs
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# 1. V√©rifier que le fichier blade contient vehicleData
echo "1. V√©rification du fichier blade Livewire..."
if grep -q "vehicleData" resources/views/livewire/admin/update-vehicle-mileage.blade.php; then
    COUNT=$(grep -o "vehicleData" resources/views/livewire/admin/update-vehicle-mileage.blade.php | wc -l)
    echo -e "   ${GREEN}‚úÖ vehicleData trouv√© ($COUNT occurrences)${NC}"
else
    echo -e "   ${RED}‚ùå vehicleData NON trouv√©${NC}"
fi

# V√©rifier selectedVehicle mais exclure les commentaires
if grep -v "{{--" resources/views/livewire/admin/update-vehicle-mileage.blade.php | grep -v "--}}" | grep -q "selectedVehicle"; then
    echo -e "   ${RED}‚ùå selectedVehicle encore pr√©sent dans le code (devrait √™tre supprim√©)${NC}"
else
    echo -e "   ${GREEN}‚úÖ selectedVehicle supprim√© (sauf commentaires)${NC}"
fi

if grep -q "Version 14.0" resources/views/livewire/admin/update-vehicle-mileage.blade.php; then
    echo -e "   ${GREEN}‚úÖ Marqueur Version 14.0 pr√©sent${NC}"
else
    echo -e "   ${RED}‚ùå Marqueur Version 14.0 absent${NC}"
fi

echo ""

# 2. V√©rifier que le controller contient vehicleData
echo "2. V√©rification du controller Livewire..."
if grep -q "public ?array \$vehicleData" app/Livewire/Admin/UpdateVehicleMileage.php; then
    echo -e "   ${GREEN}‚úÖ Propri√©t√© vehicleData array pr√©sente${NC}"
else
    echo -e "   ${RED}‚ùå Propri√©t√© vehicleData array absente${NC}"
fi

if grep -q "public ?Vehicle \$selectedVehicle" app/Livewire/Admin/UpdateVehicleMileage.php; then
    echo -e "   ${RED}‚ùå selectedVehicle encore pr√©sent (devrait √™tre supprim√©)${NC}"
else
    echo -e "   ${GREEN}‚úÖ selectedVehicle supprim√©${NC}"
fi

echo ""

# 3. V√©rifier l'import DB
echo "3. V√©rification import DB..."
if grep -q "use Illuminate\\\Support\\\Facades\\\DB;" app/Livewire/Admin/MileageReadingsIndex.php; then
    echo -e "   ${GREEN}‚úÖ Import DB pr√©sent dans MileageReadingsIndex${NC}"
else
    echo -e "   ${RED}‚ùå Import DB absent${NC}"
fi

echo ""

# 4. V√©rifier le cache
echo "4. V√©rification du cache..."
VIEW_CACHE_COUNT=$(ls -1 storage/framework/views/*.php 2>/dev/null | wc -l)
if [ $VIEW_CACHE_COUNT -eq 0 ]; then
    echo -e "   ${GREEN}‚úÖ Cache de vues vide ($VIEW_CACHE_COUNT fichiers)${NC}"
else
    echo -e "   ${YELLOW}‚ö†Ô∏è  Cache de vues contient $VIEW_CACHE_COUNT fichiers${NC}"
    echo -e "   ${YELLOW}   Ex√©cutez: docker compose exec php php artisan view:clear${NC}"
fi

echo ""

# 5. Derni√®re modification
echo "5. Dates de derni√®re modification..."
BLADE_DATE=$(stat -c %y "resources/views/livewire/admin/update-vehicle-mileage.blade.php" 2>/dev/null)
PHP_DATE=$(stat -c %y "app/Livewire/Admin/UpdateVehicleMileage.php" 2>/dev/null)

echo -e "   Blade:      $BLADE_DATE"
echo -e "   Controller: $PHP_DATE"

echo ""

# 6. R√©sum√©
echo "========================================"
echo "üìä R√âSUM√â"
echo "========================================"

CHECKS=0
PASSED=0

# Check 1: vehicleData in blade
if grep -q "vehicleData" resources/views/livewire/admin/update-vehicle-mileage.blade.php; then
    ((PASSED++))
fi
((CHECKS++))

# Check 2: no selectedVehicle in blade (exclude comments)
if ! grep -v "{{--" resources/views/livewire/admin/update-vehicle-mileage.blade.php | grep -v "--}}" | grep -q "selectedVehicle"; then
    ((PASSED++))
fi
((CHECKS++))

# Check 3: vehicleData in controller
if grep -q "public ?array \$vehicleData" app/Livewire/Admin/UpdateVehicleMileage.php; then
    ((PASSED++))
fi
((CHECKS++))

# Check 4: no selectedVehicle in controller
if ! grep -q "public ?Vehicle \$selectedVehicle" app/Livewire/Admin/UpdateVehicleMileage.php; then
    ((PASSED++))
fi
((CHECKS++))

# Check 5: DB import
if grep -q "use Illuminate\\\Support\\\Facades\\\DB;" app/Livewire/Admin/MileageReadingsIndex.php; then
    ((PASSED++))
fi
((CHECKS++))

echo ""
echo "   Tests r√©ussis: $PASSED/$CHECKS"
echo ""

if [ $PASSED -eq $CHECKS ]; then
    echo -e "${GREEN}‚úÖ TOUTES LES CORRECTIONS SONT APPLIQU√âES${NC}"
    echo -e "${GREEN}‚úÖ LES FICHIERS SONT CORRECTS${NC}"
    echo ""
    echo -e "${YELLOW}üéØ PROCHAINE √âTAPE:${NC}"
    echo "   1. Vider le cache du navigateur (Ctrl + Shift + Delete)"
    echo "   2. Acc√©der √† http://localhost/admin/mileage-readings/update"
    echo "   3. V√©rifier le badge vert 'Version 14.0 charg√©e'"
    echo "   4. Tester la s√©lection d'un v√©hicule"
else
    echo -e "${RED}‚ùå CERTAINES CORRECTIONS MANQUENT${NC}"
    echo "   V√©rifiez les erreurs ci-dessus"
fi

echo ""
echo "========================================"
