<?php

namespace Database\Seeders;

use Illuminate\Database\Seeder;
use App\Models\User;
use App\Models\Organization;
use Spatie\Permission\Models\Permission;
use Spatie\Permission\Models\Role;
use Spatie\Permission\PermissionRegistrar;
use Illuminate\Support\Facades\Hash;
use Illuminate\Support\Str;
use Illuminate\Support\Facades\DB;

class EnterpriseRbacSeeder extends Seeder
{
    /**
     * üöÄ SEEDER RBAC ENTERPRISE ZENFLEET - STANDARD INTERNATIONAL
     * Version: 2.0 - Ultra-Professionnel
     * Compatible: Laravel 9+ & Spatie Permission v5+
     */
    public function run(): void
    {
        $this->command->info('üöÄ ZENFLEET ENTERPRISE RBAC SYSTEM - INITIALISATION');
        $this->command->info('=========================================================');
        
        // Reset du cache des permissions
        app()[PermissionRegistrar::class]->forgetCachedPermissions();
        
        // 1. Cr√©er toutes les permissions
        $this->createEnterprisePermissions();
        
        // 2. Cr√©er les r√¥les hi√©rarchiques 
        $this->createEnterpriseRoles();
        
        // 3. Cr√©er les utilisateurs de test
        $this->createTestUsers();
        
        // 4. Affichage final
        $this->displayFinalSummary();
        
        $this->command->info('‚úÖ SYST√àME RBAC ENTERPRISE INITIALIS√â AVEC SUCC√àS !');
    }

    /**
     * üõ°Ô∏è CR√âATION DES PERMISSIONS ENTERPRISE - COMPL√àTES
     */
    private function createEnterprisePermissions(): void
    {
        $this->command->info('üõ°Ô∏è Cr√©ation des permissions enterprise...');
        
        $permissions = [
            // üåê PERMISSIONS SYST√àME (Super Admin uniquement)
            'manage system',
            'view system dashboard',
            'view all organizations',
            'create organizations',
            'edit organizations', 
            'delete organizations',
            'suspend organizations',
            'activate organizations',
            'manage global settings',
            'view system logs',
            'create global admins',
            'manage global roles',
            'view system metrics',
            'manage system backups',
            
            // üè¢ PERMISSIONS ORGANISATION
            'view organizations',
            'edit organizations',
            'manage organization settings',
            'manage organization billing',
            'view organization analytics',
            'export organization data',
            
            // üë• PERMISSIONS UTILISATEURS ET R√îLES
            'view users',
            'create users',
            'edit users',
            'delete users',
            'restore users',
            'assign user roles',
            'view user profiles',
            'manage roles',
            'view roles',
            'edit roles',
            'assign permissions',
            
            // üöó PERMISSIONS V√âHICULES
            'view vehicles',
            'create vehicles',
            'edit vehicles',
            'delete vehicles',
            'restore vehicles',
            'force delete vehicles',
            'assign vehicles',
            'track vehicles',
            'import vehicles',
            'export vehicles',
            'view vehicle history',
            'manage vehicle status',
            
            // üë®‚Äçüíº PERMISSIONS CHAUFFEURS
            'view drivers',
            'create drivers',
            'edit drivers', 
            'delete drivers',
            'restore drivers',
            'force delete drivers',
            'assign drivers',
            'view driver profiles',
            'manage driver licenses',
            'import drivers',
            'export drivers',
            'view driver history',
            
            // üìã PERMISSIONS AFFECTATIONS
            'view assignments',
            'create assignments',
            'edit assignments',
            'end assignments',
            'extend assignments',
            'view assignment history',
            'manage assignment status',
            
            // üîß PERMISSIONS MAINTENANCE
            'view maintenance',
            'manage maintenance plans',
            'log maintenance',
            'schedule maintenance',
            'view maintenance history',
            'manage maintenance alerts',
            'approve maintenance',
            'view maintenance costs',
            
            // üìã PERMISSIONS FICHES DE REMISE
            'create handovers',
            'view handovers',
            'edit handovers',
            'delete handovers',
            'upload signed handovers',
            'download handovers',
            'approve handovers',
            
            // üè≠ PERMISSIONS FOURNISSEURS
            'view suppliers',
            'create suppliers',
            'edit suppliers',
            'delete suppliers',
            'manage supplier contracts',
            'view supplier performance',
            
            // üìÑ PERMISSIONS DOCUMENTS
            'view documents',
            'create documents',
            'edit documents',
            'delete documents',
            'manage document categories',
            'upload documents',
            'download documents',
            'archive documents',
            
            // üìä PERMISSIONS RAPPORTS ET ANALYTICS
            'view reports',
            'create reports',
            'edit reports',
            'delete reports',
            'export reports',
            'schedule reports',
            'view basic analytics',
            'view advanced analytics',
            'export analytics',
            'manage dashboards',
            
            // üîç PERMISSIONS AUDIT ET S√âCURIT√â
            'view audit logs',
            'export audit logs',
            'manage security settings',
            'view login attempts',
            'manage user sessions',
            'view system security',
            
            // üîë PERMISSIONS API ET INT√âGRATIONS
            'view api settings',
            'manage api keys',
            'view api logs',
            'manage webhooks',
            'test integrations',
            
            // üí∞ PERMISSIONS FINANCI√àRES
            'view costs',
            'manage budgets',
            'view financial reports',
            'export financial data',
            'manage invoicing',
            
            // üéõÔ∏è PERMISSIONS CONFIGURATION
            'manage settings',
            'view system configuration',
            'manage notifications',
            'configure alerts',
            'manage email templates',
            
            // üì± PERMISSIONS SP√âCIALES CHAUFFEURS
            'view own vehicles',
            'view own assignments',
            'update assignment status',
            'view own handovers',
            'sign handovers',
            'view own maintenance',
            'report vehicle issues',
            'log trip data',
            'view own profile',
        ];

        foreach ($permissions as $permission) {
            Permission::firstOrCreate([
                'name' => $permission,
                'guard_name' => 'web'
            ]);
        }

        $this->command->info("   ‚úÖ " . count($permissions) . " permissions cr√©√©es/v√©rifi√©es");
    }

    /**
     * üëë CR√âATION DES R√îLES HI√âRARCHIQUES ENTERPRISE
     */
    private function createEnterpriseRoles(): void
    {
        $this->command->info('üëë Cr√©ation des r√¥les hi√©rarchiques enterprise...');
        
        // üåê SUPER ADMIN - Niveau Syst√®me Global
        $superAdminRole = Role::firstOrCreate([
            'name' => 'Super Admin',
            'guard_name' => 'web'
        ]);
        
        $superAdminPermissions = Permission::all()->pluck('name')->toArray();
        $superAdminRole->syncPermissions($superAdminPermissions);
        $this->command->info("   ‚úÖ Super Admin: " . count($superAdminPermissions) . " permissions (TOUTES)");
        
        // üè¢ ADMIN - Niveau Organisation
        $adminRole = Role::firstOrCreate([
            'name' => 'Admin', 
            'guard_name' => 'web'
        ]);
        
        $adminPermissions = [
            // Organisation (sans cr√©ation)
            'view organizations', 'edit organizations', 'manage organization settings',
            'manage organization billing', 'view organization analytics', 'export organization data',
            
            // Utilisateurs complets
            'view users', 'create users', 'edit users', 'delete users', 'restore users',
            'assign user roles', 'view user profiles', 'manage roles', 'view roles', 'edit roles',
            
            // V√©hicules complets
            'view vehicles', 'create vehicles', 'edit vehicles', 'delete vehicles', 'restore vehicles',
            'assign vehicles', 'track vehicles', 'import vehicles', 'export vehicles', 'view vehicle history',
            
            // Chauffeurs complets  
            'view drivers', 'create drivers', 'edit drivers', 'delete drivers', 'restore drivers',
            'assign drivers', 'view driver profiles', 'manage driver licenses', 'import drivers', 'export drivers',
            
            // Op√©rations
            'view assignments', 'create assignments', 'edit assignments', 'end assignments',
            'view maintenance', 'manage maintenance plans', 'log maintenance', 'schedule maintenance',
            'create handovers', 'view handovers', 'edit handovers', 'delete handovers', 'upload signed handovers',
            'view suppliers', 'create suppliers', 'edit suppliers', 'delete suppliers',
            'view documents', 'create documents', 'edit documents', 'delete documents', 'manage document categories',
            
            // Rapports et Analytics
            'view reports', 'create reports', 'export reports', 'view basic analytics', 'view advanced analytics',
            'export analytics', 'view audit logs', 'export audit logs',
        ];
        $adminRole->syncPermissions($adminPermissions);
        $this->command->info("   ‚úÖ Admin: " . count($adminPermissions) . " permissions");
        
        // üöó GESTIONNAIRE FLOTTE - Niveau Op√©rationnel
        $fleetManagerRole = Role::firstOrCreate([
            'name' => 'Gestionnaire Flotte',
            'guard_name' => 'web'
        ]);
        
        $fleetManagerPermissions = [
            // V√©hicules (gestion compl√®te)
            'view vehicles', 'create vehicles', 'edit vehicles', 'assign vehicles', 'track vehicles',
            'import vehicles', 'export vehicles', 'view vehicle history', 'manage vehicle status',
            
            // Chauffeurs (gestion compl√®te)
            'view drivers', 'create drivers', 'edit drivers', 'assign drivers', 'view driver profiles',
            'manage driver licenses', 'import drivers', 'export drivers', 'view driver history',
            
            // Affectations
            'view assignments', 'create assignments', 'edit assignments', 'end assignments', 'extend assignments',
            
            // Maintenance
            'view maintenance', 'manage maintenance plans', 'log maintenance', 'schedule maintenance',
            'view maintenance history', 'manage maintenance alerts',
            
            // Handovers
            'create handovers', 'view handovers', 'edit handovers', 'upload signed handovers', 'approve handovers',
            
            // Fournisseurs
            'view suppliers', 'create suppliers', 'edit suppliers', 'manage supplier contracts',
            
            // Documents
            'view documents', 'create documents', 'edit documents', 'manage document categories',
            
            // Rapports
            'view reports', 'create reports', 'export reports', 'view basic analytics', 'view advanced analytics',
        ];
        $fleetManagerRole->syncPermissions($fleetManagerPermissions);
        $this->command->info("   ‚úÖ Gestionnaire Flotte: " . count($fleetManagerPermissions) . " permissions");
        
        // üë• SUPERVISOR - Niveau Supervision
        $supervisorRole = Role::firstOrCreate([
            'name' => 'supervisor',
            'guard_name' => 'web'
        ]);
        
        $supervisorPermissions = [
            // Consultation
            'view vehicles', 'view vehicle history', 'track vehicles',
            'view drivers', 'view driver profiles', 'view driver history',
            'view assignments', 'view assignment history',
            'view maintenance', 'view maintenance history',
            'view handovers', 'view suppliers',
            'view documents', 'view reports', 'view basic analytics',
            
            // Actions limit√©es
            'create assignments', 'edit assignments', 'log maintenance',
            'create handovers', 'edit handovers', 'create reports',
        ];
        $supervisorRole->syncPermissions($supervisorPermissions);
        $this->command->info("   ‚úÖ supervisor: " . count($supervisorPermissions) . " permissions");
        
        // üöô CHAUFFEUR - Niveau Utilisateur Final
        $chauffeurRole = Role::firstOrCreate([
            'name' => 'Chauffeur',
            'guard_name' => 'web'
        ]);
        
        $chauffeurPermissions = [
            'view own vehicles',
            'view own assignments', 
            'update assignment status',
            'view own handovers',
            'sign handovers',
            'view own maintenance',
            'report vehicle issues',
            'log trip data',
            'view own profile',
        ];
        $chauffeurRole->syncPermissions($chauffeurPermissions);
        $this->command->info("   ‚úÖ Chauffeur: " . count($chauffeurPermissions) . " permissions");
    }

    /**
     * üë§ CR√âATION DES UTILISATEURS DE TEST
     */
    private function createTestUsers(): void
    {
        $this->command->info('üë§ Cr√©ation des utilisateurs de test...');
        
        // R√©cup√©rer une organisation active ou cr√©er une organisation de test
        $organization = Organization::where('status', 'active')->first();
        if (!$organization) {
            $organization = Organization::create([
                'name' => 'Organisation de Test',
                'slug' => 'organisation-test',
                'legal_name' => 'Test Organization SAS',
                'organization_type' => 'enterprise',
                'email' => 'contact@test-org.com',
                'address' => '123 Rue de Test',
                'city' => 'Paris',
                'postal_code' => '75001',
                'country' => 'FR',
                'timezone' => 'Europe/Paris',
                'currency' => 'EUR',
                'language' => 'fr',
                'status' => 'active',
                'subscription_plan' => 'enterprise',
                'subscription_expires_at' => now()->addYear(),
                'max_vehicles' => 1000,
                'max_drivers' => 500,
                'max_users' => 100,
            ]);
            $this->command->info("   üìã Organisation de test cr√©√©e: {$organization->name}");
        }

        $testUsers = [
            [
                'email' => 'superadmin@zenfleet.app',
                'name' => 'Super Administrateur',
                'first_name' => 'Super',
                'last_name' => 'Admin',
                'role' => 'Super Admin',
                'password' => 'SuperAdmin2025!',
                'organization_id' => null, // Global
                'job_title' => 'Super Administrateur Syst√®me',
                'department' => 'IT Syst√®me'
            ],
            [
                'email' => 'admin@zenfleet.app',
                'name' => 'Administrateur',
                'first_name' => 'Admin',
                'last_name' => 'Organisation',
                'role' => 'Admin',
                'password' => 'AdminZen2025!',
                'organization_id' => $organization->id,
                'job_title' => 'Administrateur',
                'department' => 'Direction'
            ],
            [
                'email' => 'fleet@zenfleet.app',
                'name' => 'Gestionnaire de Flotte',
                'first_name' => 'Gestionnaire',
                'last_name' => 'Flotte',
                'role' => 'Gestionnaire Flotte',
                'password' => 'FleetManager2025!',
                'organization_id' => $organization->id,
                'job_title' => 'Gestionnaire de Flotte',
                'department' => 'Op√©rations'
            ],
            [
                'email' => 'supervisor@zenfleet.app',
                'name' => 'Superviseur √âquipe',
                'first_name' => 'Superviseur',
                'last_name' => '√âquipe',
                'role' => 'supervisor',
                'password' => 'Supervisor2025!',
                'organization_id' => $organization->id,
                'job_title' => 'Superviseur',
                'department' => 'Op√©rations'
            ],
            [
                'email' => 'driver@zenfleet.app',
                'name' => 'Chauffeur Professionnel',
                'first_name' => 'Chauffeur',
                'last_name' => 'Pro',
                'role' => 'Chauffeur',
                'password' => 'Driver2025!',
                'organization_id' => $organization->id,
                'job_title' => 'Chauffeur Professionnel',
                'department' => 'Transport'
            ]
        ];

        foreach ($testUsers as $userData) {
            $user = User::updateOrCreate(
                ['email' => $userData['email']],
                [
                    'name' => $userData['name'],
                    'first_name' => $userData['first_name'],
                    'last_name' => $userData['last_name'],
                    'job_title' => $userData['job_title'],
                    'department' => $userData['department'],
                    'organization_id' => $userData['organization_id'],
                    'is_super_admin' => $userData['role'] === 'Super Admin',
                    'is_active' => true,
                    'user_status' => 'active',
                    'email_verified_at' => now(),
                    'password' => Hash::make($userData['password']),
                    'remember_token' => Str::random(10),
                    'timezone' => 'Europe/Paris',
                    'language' => 'fr',
                ]
            );

            // Assigner le r√¥le
            $user->syncRoles([$userData['role']]);
            
            $this->command->info("   ‚úÖ {$userData['role']}: {$userData['email']}");
        }
    }

    /**
     * üìä AFFICHAGE DU R√âSUM√â FINAL
     */
    private function displayFinalSummary(): void
    {
        $this->command->info('');
        $this->command->info('üèÜ R√âSUM√â FINAL - SYST√àME RBAC ENTERPRISE ZENFLEET');
        $this->command->info('=========================================================');
        
        // Statistiques
        $permissionsCount = Permission::count();
        $rolesCount = Role::count();
        $usersCount = User::count();
        
        $this->command->info("üìä STATISTIQUES:");
        $this->command->info("   üõ°Ô∏è Permissions cr√©√©es: {$permissionsCount}");
        $this->command->info("   üëë R√¥les configur√©s: {$rolesCount}");
        $this->command->info("   üë§ Utilisateurs de test: {$usersCount}");
        $this->command->info('');
        
        // Hi√©rarchie des r√¥les
        $this->command->info("üèóÔ∏è HI√âRARCHIE DES R√îLES:");
        $this->command->info("   1Ô∏è‚É£ Super Admin (superadmin@zenfleet.app) - Syst√®me Global");
        $this->command->info("   2Ô∏è‚É£ Admin (admin@zenfleet.app) - Organisation");
        $this->command->info("   3Ô∏è‚É£ Gestionnaire Flotte (fleet@zenfleet.app) - Op√©rationnel");
        $this->command->info("   4Ô∏è‚É£ supervisor (supervisor@zenfleet.app) - Supervision");
        $this->command->info("   5Ô∏è‚É£ Chauffeur (driver@zenfleet.app) - Utilisateur Final");
        $this->command->info('');
        
        // Comptes de test
        $this->command->info("üîê COMPTES DE TEST:");
        $this->command->info("   üåê superadmin@zenfleet.app / SuperAdmin2025!");
        $this->command->info("   üè¢ admin@zenfleet.app / AdminZen2025!");
        $this->command->info("   üöó fleet@zenfleet.app / FleetManager2025!");
        $this->command->info("   üë• supervisor@zenfleet.app / Supervisor2025!");
        $this->command->info("   üöô driver@zenfleet.app / Driver2025!");
        $this->command->info('');
        
        // Instructions finales
        $this->command->info("üéØ PROCHAINES √âTAPES:");
        $this->command->info("   1. Testez la connexion avec les comptes ci-dessus");
        $this->command->info("   2. V√©rifiez les permissions pour chaque r√¥le");
        $this->command->info("   3. Configurez les organisations selon vos besoins");
        $this->command->info("   4. Personnalisez les r√¥les si n√©cessaire");
        $this->command->info('');
    }
}
